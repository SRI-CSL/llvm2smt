; ModuleID = 'minigzip-3.5.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.config_s = type { i16, i16, i16, i16, i32 (%struct.internal_state.11*, i32)* }
%struct.internal_state.11 = type { %struct.z_stream_s.10*, i32, i8*, i64, i8*, i32, i32, %struct.gz_header_s*, i32, i8, i32, i32, i32, i32, i8*, i64, i16*, i16*, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [573 x %struct.ct_data_s], [61 x %struct.ct_data_s], [39 x %struct.ct_data_s], %struct.tree_desc_s, %struct.tree_desc_s, %struct.tree_desc_s, [16 x i16], [573 x i32], i32, i32, [573 x i8], i8*, i32, i32, i16*, i64, i64, i32, i32, i16, i32, i64 }
%struct.z_stream_s.10 = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state.11*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.gz_header_s = type { i32, i64, i32, i32, i8*, i32, i32, i8*, i32, i8*, i32, i32, i32 }
%struct.ct_data_s = type { %union.anon, %union.anon.0 }
%union.anon = type { i16 }
%union.anon.0 = type { i16 }
%struct.tree_desc_s = type { %struct.ct_data_s*, i32, %struct.static_tree_desc_s* }
%struct.static_tree_desc_s = type { i32 }
%struct.code = type { i8, i8, i16 }
%struct.gzFile_s = type { i32, i8*, i64 }
%struct.gz_state = type { %struct.gzFile_s, i32, i32, i8*, i32, i32, i8*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32, i32, i8*, %struct.z_stream_s }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.inflate_state = type { i32, i32, i32, i32, i32, i32, i64, i64, %struct.gz_header_s*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, %struct.code*, %struct.code*, i32, i32, i32, i32, i32, i32, %struct.code*, [320 x i16], [288 x i16], [1444 x %struct.code], i32, i32, i32 }
%struct.internal_state.23 = type { %struct.z_stream_s.19*, i32, i8*, i64, i8*, i32, i32, %struct.gz_header_s*, i32, i8, i32, i32, i32, i32, i8*, i64, i16*, i16*, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [573 x %struct.ct_data_s], [61 x %struct.ct_data_s], [39 x %struct.ct_data_s], %struct.tree_desc_s.22, %struct.tree_desc_s.22, %struct.tree_desc_s.22, [16 x i16], [573 x i32], i32, i32, [573 x i8], i8*, i32, i32, i16*, i64, i64, i32, i32, i16, i32, i64 }
%struct.z_stream_s.19 = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state.23*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.tree_desc_s.22 = type { %struct.ct_data_s*, i32, %struct.static_tree_desc_s.21* }
%struct.static_tree_desc_s.21 = type { %struct.ct_data_s*, i32*, i32, i32, i32 }

@stderr = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@prog = common global i8* null, align 8
@.str1 = private unnamed_addr constant [6 x i8] c"fread\00", align 1
@.str2 = private unnamed_addr constant [15 x i8] c"failed gzclose\00", align 1
@.str3 = private unnamed_addr constant [14 x i8] c"failed fwrite\00", align 1
@.str4 = private unnamed_addr constant [14 x i8] c"failed fclose\00", align 1
@.str5 = private unnamed_addr constant [23 x i8] c"%s: filename too long\0A\00", align 1
@.str6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str7 = private unnamed_addr constant [4 x i8] c".gz\00", align 1
@.str8 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str9 = private unnamed_addr constant [21 x i8] c"%s: can't gzopen %s\0A\00", align 1
@.str10 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str11 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str12 = private unnamed_addr constant [5 x i8] c"wb6 \00", align 1
@.str13 = private unnamed_addr constant [7 x i8] c"gunzip\00", align 1
@.str14 = private unnamed_addr constant [5 x i8] c"zcat\00", align 1
@stdin = external global %struct._IO_FILE*
@.str20 = private unnamed_addr constant [20 x i8] c"can't gzdopen stdin\00", align 1
@stdout = external global %struct._IO_FILE*
@.str21 = private unnamed_addr constant [21 x i8] c"can't gzdopen stdout\00", align 1
@.str15 = private unnamed_addr constant [8 x i8] c"<fd:%d>\00", align 1
@.str116 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str217 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str318 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str419 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str520 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str27 = private unnamed_addr constant [37 x i8] c"requested length does not fit in int\00", align 1
@.str128 = private unnamed_addr constant [31 x i8] c"out of room to push characters\00", align 1
@.str229 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str330 = private unnamed_addr constant [6 x i8] c"1.2.8\00", align 1
@.str431 = private unnamed_addr constant [23 x i8] c"unexpected end of file\00", align 1
@.str532 = private unnamed_addr constant [39 x i8] c"internal error: inflate stream corrupt\00", align 1
@.str633 = private unnamed_addr constant [22 x i8] c"compressed data error\00", align 1
@.str38 = private unnamed_addr constant [37 x i8] c"requested length does not fit in int\00", align 1
@.str139 = private unnamed_addr constant [39 x i8] c"internal error: deflate stream corrupt\00", align 1
@.str240 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str341 = private unnamed_addr constant [6 x i8] c"1.2.8\00", align 1
@deflate_copyright = constant [68 x i8] c" deflate 1.2.8 Copyright 1995-2013 Jean-loup Gailly and Mark Adler \00", align 16
@configuration_table = internal unnamed_addr constant [10 x %struct.config_s] [%struct.config_s { i16 0, i16 0, i16 0, i16 0, i32 (%struct.internal_state.11*, i32)* @deflate_stored }, %struct.config_s { i16 4, i16 4, i16 8, i16 4, i32 (%struct.internal_state.11*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 5, i16 16, i16 8, i32 (%struct.internal_state.11*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 6, i16 32, i16 32, i32 (%struct.internal_state.11*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 4, i16 16, i16 16, i32 (%struct.internal_state.11*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 16, i16 32, i16 32, i32 (%struct.internal_state.11*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 16, i16 128, i16 128, i32 (%struct.internal_state.11*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 32, i16 128, i16 256, i32 (%struct.internal_state.11*, i32)* @deflate_slow }, %struct.config_s { i16 32, i16 128, i16 258, i16 1024, i32 (%struct.internal_state.11*, i32)* @deflate_slow }, %struct.config_s { i16 32, i16 258, i16 258, i16 4096, i32 (%struct.internal_state.11*, i32)* @deflate_slow }], align 16
@inflate.order = internal unnamed_addr constant [19 x i16] [i16 16, i16 17, i16 18, i16 0, i16 8, i16 7, i16 9, i16 6, i16 10, i16 5, i16 11, i16 4, i16 12, i16 3, i16 13, i16 2, i16 14, i16 1, i16 15], align 16
@.str156 = private unnamed_addr constant [23 x i8] c"incorrect header check\00", align 1
@.str257 = private unnamed_addr constant [27 x i8] c"unknown compression method\00", align 1
@.str358 = private unnamed_addr constant [20 x i8] c"invalid window size\00", align 1
@.str459 = private unnamed_addr constant [25 x i8] c"unknown header flags set\00", align 1
@.str560 = private unnamed_addr constant [20 x i8] c"header crc mismatch\00", align 1
@.str661 = private unnamed_addr constant [19 x i8] c"invalid block type\00", align 1
@.str762 = private unnamed_addr constant [29 x i8] c"invalid stored block lengths\00", align 1
@.str863 = private unnamed_addr constant [36 x i8] c"too many length or distance symbols\00", align 1
@.str964 = private unnamed_addr constant [25 x i8] c"invalid code lengths set\00", align 1
@.str1065 = private unnamed_addr constant [26 x i8] c"invalid bit length repeat\00", align 1
@.str1166 = private unnamed_addr constant [37 x i8] c"invalid code -- missing end-of-block\00", align 1
@.str1267 = private unnamed_addr constant [28 x i8] c"invalid literal/lengths set\00", align 1
@.str1368 = private unnamed_addr constant [22 x i8] c"invalid distances set\00", align 1
@.str1469 = private unnamed_addr constant [28 x i8] c"invalid literal/length code\00", align 1
@.str1570 = private unnamed_addr constant [22 x i8] c"invalid distance code\00", align 1
@.str16 = private unnamed_addr constant [30 x i8] c"invalid distance too far back\00", align 1
@.str17 = private unnamed_addr constant [21 x i8] c"incorrect data check\00", align 1
@.str18 = private unnamed_addr constant [23 x i8] c"incorrect length check\00", align 1
@fixedtables.lenfix = internal constant [512 x %struct.code] [%struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 80 }, %struct.code { i8 0, i8 8, i16 16 }, %struct.code { i8 20, i8 8, i16 115 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 112 }, %struct.code { i8 0, i8 8, i16 48 }, %struct.code { i8 0, i8 9, i16 192 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 96 }, %struct.code { i8 0, i8 8, i16 32 }, %struct.code { i8 0, i8 9, i16 160 }, %struct.code { i8 0, i8 8, i16 0 }, %struct.code { i8 0, i8 8, i16 128 }, %struct.code { i8 0, i8 8, i16 64 }, %struct.code { i8 0, i8 9, i16 224 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 88 }, %struct.code { i8 0, i8 8, i16 24 }, %struct.code { i8 0, i8 9, i16 144 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 120 }, %struct.code { i8 0, i8 8, i16 56 }, %struct.code { i8 0, i8 9, i16 208 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 104 }, %struct.code { i8 0, i8 8, i16 40 }, %struct.code { i8 0, i8 9, i16 176 }, %struct.code { i8 0, i8 8, i16 8 }, %struct.code { i8 0, i8 8, i16 136 }, %struct.code { i8 0, i8 8, i16 72 }, %struct.code { i8 0, i8 9, i16 240 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 84 }, %struct.code { i8 0, i8 8, i16 20 }, %struct.code { i8 21, i8 8, i16 227 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 116 }, %struct.code { i8 0, i8 8, i16 52 }, %struct.code { i8 0, i8 9, i16 200 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 100 }, %struct.code { i8 0, i8 8, i16 36 }, %struct.code { i8 0, i8 9, i16 168 }, %struct.code { i8 0, i8 8, i16 4 }, %struct.code { i8 0, i8 8, i16 132 }, %struct.code { i8 0, i8 8, i16 68 }, %struct.code { i8 0, i8 9, i16 232 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 92 }, %struct.code { i8 0, i8 8, i16 28 }, %struct.code { i8 0, i8 9, i16 152 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 124 }, %struct.code { i8 0, i8 8, i16 60 }, %struct.code { i8 0, i8 9, i16 216 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 108 }, %struct.code { i8 0, i8 8, i16 44 }, %struct.code { i8 0, i8 9, i16 184 }, %struct.code { i8 0, i8 8, i16 12 }, %struct.code { i8 0, i8 8, i16 140 }, %struct.code { i8 0, i8 8, i16 76 }, %struct.code { i8 0, i8 9, i16 248 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 82 }, %struct.code { i8 0, i8 8, i16 18 }, %struct.code { i8 21, i8 8, i16 163 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 114 }, %struct.code { i8 0, i8 8, i16 50 }, %struct.code { i8 0, i8 9, i16 196 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 98 }, %struct.code { i8 0, i8 8, i16 34 }, %struct.code { i8 0, i8 9, i16 164 }, %struct.code { i8 0, i8 8, i16 2 }, %struct.code { i8 0, i8 8, i16 130 }, %struct.code { i8 0, i8 8, i16 66 }, %struct.code { i8 0, i8 9, i16 228 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 90 }, %struct.code { i8 0, i8 8, i16 26 }, %struct.code { i8 0, i8 9, i16 148 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 122 }, %struct.code { i8 0, i8 8, i16 58 }, %struct.code { i8 0, i8 9, i16 212 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 106 }, %struct.code { i8 0, i8 8, i16 42 }, %struct.code { i8 0, i8 9, i16 180 }, %struct.code { i8 0, i8 8, i16 10 }, %struct.code { i8 0, i8 8, i16 138 }, %struct.code { i8 0, i8 8, i16 74 }, %struct.code { i8 0, i8 9, i16 244 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 86 }, %struct.code { i8 0, i8 8, i16 22 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 118 }, %struct.code { i8 0, i8 8, i16 54 }, %struct.code { i8 0, i8 9, i16 204 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 102 }, %struct.code { i8 0, i8 8, i16 38 }, %struct.code { i8 0, i8 9, i16 172 }, %struct.code { i8 0, i8 8, i16 6 }, %struct.code { i8 0, i8 8, i16 134 }, %struct.code { i8 0, i8 8, i16 70 }, %struct.code { i8 0, i8 9, i16 236 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 94 }, %struct.code { i8 0, i8 8, i16 30 }, %struct.code { i8 0, i8 9, i16 156 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 126 }, %struct.code { i8 0, i8 8, i16 62 }, %struct.code { i8 0, i8 9, i16 220 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 110 }, %struct.code { i8 0, i8 8, i16 46 }, %struct.code { i8 0, i8 9, i16 188 }, %struct.code { i8 0, i8 8, i16 14 }, %struct.code { i8 0, i8 8, i16 142 }, %struct.code { i8 0, i8 8, i16 78 }, %struct.code { i8 0, i8 9, i16 252 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 81 }, %struct.code { i8 0, i8 8, i16 17 }, %struct.code { i8 21, i8 8, i16 131 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 113 }, %struct.code { i8 0, i8 8, i16 49 }, %struct.code { i8 0, i8 9, i16 194 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 97 }, %struct.code { i8 0, i8 8, i16 33 }, %struct.code { i8 0, i8 9, i16 162 }, %struct.code { i8 0, i8 8, i16 1 }, %struct.code { i8 0, i8 8, i16 129 }, %struct.code { i8 0, i8 8, i16 65 }, %struct.code { i8 0, i8 9, i16 226 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 89 }, %struct.code { i8 0, i8 8, i16 25 }, %struct.code { i8 0, i8 9, i16 146 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 121 }, %struct.code { i8 0, i8 8, i16 57 }, %struct.code { i8 0, i8 9, i16 210 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 105 }, %struct.code { i8 0, i8 8, i16 41 }, %struct.code { i8 0, i8 9, i16 178 }, %struct.code { i8 0, i8 8, i16 9 }, %struct.code { i8 0, i8 8, i16 137 }, %struct.code { i8 0, i8 8, i16 73 }, %struct.code { i8 0, i8 9, i16 242 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 85 }, %struct.code { i8 0, i8 8, i16 21 }, %struct.code { i8 16, i8 8, i16 258 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 117 }, %struct.code { i8 0, i8 8, i16 53 }, %struct.code { i8 0, i8 9, i16 202 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 101 }, %struct.code { i8 0, i8 8, i16 37 }, %struct.code { i8 0, i8 9, i16 170 }, %struct.code { i8 0, i8 8, i16 5 }, %struct.code { i8 0, i8 8, i16 133 }, %struct.code { i8 0, i8 8, i16 69 }, %struct.code { i8 0, i8 9, i16 234 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 93 }, %struct.code { i8 0, i8 8, i16 29 }, %struct.code { i8 0, i8 9, i16 154 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 125 }, %struct.code { i8 0, i8 8, i16 61 }, %struct.code { i8 0, i8 9, i16 218 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 109 }, %struct.code { i8 0, i8 8, i16 45 }, %struct.code { i8 0, i8 9, i16 186 }, %struct.code { i8 0, i8 8, i16 13 }, %struct.code { i8 0, i8 8, i16 141 }, %struct.code { i8 0, i8 8, i16 77 }, %struct.code { i8 0, i8 9, i16 250 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 83 }, %struct.code { i8 0, i8 8, i16 19 }, %struct.code { i8 21, i8 8, i16 195 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 115 }, %struct.code { i8 0, i8 8, i16 51 }, %struct.code { i8 0, i8 9, i16 198 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 99 }, %struct.code { i8 0, i8 8, i16 35 }, %struct.code { i8 0, i8 9, i16 166 }, %struct.code { i8 0, i8 8, i16 3 }, %struct.code { i8 0, i8 8, i16 131 }, %struct.code { i8 0, i8 8, i16 67 }, %struct.code { i8 0, i8 9, i16 230 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 91 }, %struct.code { i8 0, i8 8, i16 27 }, %struct.code { i8 0, i8 9, i16 150 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 123 }, %struct.code { i8 0, i8 8, i16 59 }, %struct.code { i8 0, i8 9, i16 214 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 107 }, %struct.code { i8 0, i8 8, i16 43 }, %struct.code { i8 0, i8 9, i16 182 }, %struct.code { i8 0, i8 8, i16 11 }, %struct.code { i8 0, i8 8, i16 139 }, %struct.code { i8 0, i8 8, i16 75 }, %struct.code { i8 0, i8 9, i16 246 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 87 }, %struct.code { i8 0, i8 8, i16 23 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 119 }, %struct.code { i8 0, i8 8, i16 55 }, %struct.code { i8 0, i8 9, i16 206 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 103 }, %struct.code { i8 0, i8 8, i16 39 }, %struct.code { i8 0, i8 9, i16 174 }, %struct.code { i8 0, i8 8, i16 7 }, %struct.code { i8 0, i8 8, i16 135 }, %struct.code { i8 0, i8 8, i16 71 }, %struct.code { i8 0, i8 9, i16 238 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 95 }, %struct.code { i8 0, i8 8, i16 31 }, %struct.code { i8 0, i8 9, i16 158 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 127 }, %struct.code { i8 0, i8 8, i16 63 }, %struct.code { i8 0, i8 9, i16 222 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 111 }, %struct.code { i8 0, i8 8, i16 47 }, %struct.code { i8 0, i8 9, i16 190 }, %struct.code { i8 0, i8 8, i16 15 }, %struct.code { i8 0, i8 8, i16 143 }, %struct.code { i8 0, i8 8, i16 79 }, %struct.code { i8 0, i8 9, i16 254 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 80 }, %struct.code { i8 0, i8 8, i16 16 }, %struct.code { i8 20, i8 8, i16 115 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 112 }, %struct.code { i8 0, i8 8, i16 48 }, %struct.code { i8 0, i8 9, i16 193 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 96 }, %struct.code { i8 0, i8 8, i16 32 }, %struct.code { i8 0, i8 9, i16 161 }, %struct.code { i8 0, i8 8, i16 0 }, %struct.code { i8 0, i8 8, i16 128 }, %struct.code { i8 0, i8 8, i16 64 }, %struct.code { i8 0, i8 9, i16 225 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 88 }, %struct.code { i8 0, i8 8, i16 24 }, %struct.code { i8 0, i8 9, i16 145 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 120 }, %struct.code { i8 0, i8 8, i16 56 }, %struct.code { i8 0, i8 9, i16 209 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 104 }, %struct.code { i8 0, i8 8, i16 40 }, %struct.code { i8 0, i8 9, i16 177 }, %struct.code { i8 0, i8 8, i16 8 }, %struct.code { i8 0, i8 8, i16 136 }, %struct.code { i8 0, i8 8, i16 72 }, %struct.code { i8 0, i8 9, i16 241 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 84 }, %struct.code { i8 0, i8 8, i16 20 }, %struct.code { i8 21, i8 8, i16 227 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 116 }, %struct.code { i8 0, i8 8, i16 52 }, %struct.code { i8 0, i8 9, i16 201 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 100 }, %struct.code { i8 0, i8 8, i16 36 }, %struct.code { i8 0, i8 9, i16 169 }, %struct.code { i8 0, i8 8, i16 4 }, %struct.code { i8 0, i8 8, i16 132 }, %struct.code { i8 0, i8 8, i16 68 }, %struct.code { i8 0, i8 9, i16 233 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 92 }, %struct.code { i8 0, i8 8, i16 28 }, %struct.code { i8 0, i8 9, i16 153 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 124 }, %struct.code { i8 0, i8 8, i16 60 }, %struct.code { i8 0, i8 9, i16 217 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 108 }, %struct.code { i8 0, i8 8, i16 44 }, %struct.code { i8 0, i8 9, i16 185 }, %struct.code { i8 0, i8 8, i16 12 }, %struct.code { i8 0, i8 8, i16 140 }, %struct.code { i8 0, i8 8, i16 76 }, %struct.code { i8 0, i8 9, i16 249 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 82 }, %struct.code { i8 0, i8 8, i16 18 }, %struct.code { i8 21, i8 8, i16 163 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 114 }, %struct.code { i8 0, i8 8, i16 50 }, %struct.code { i8 0, i8 9, i16 197 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 98 }, %struct.code { i8 0, i8 8, i16 34 }, %struct.code { i8 0, i8 9, i16 165 }, %struct.code { i8 0, i8 8, i16 2 }, %struct.code { i8 0, i8 8, i16 130 }, %struct.code { i8 0, i8 8, i16 66 }, %struct.code { i8 0, i8 9, i16 229 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 90 }, %struct.code { i8 0, i8 8, i16 26 }, %struct.code { i8 0, i8 9, i16 149 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 122 }, %struct.code { i8 0, i8 8, i16 58 }, %struct.code { i8 0, i8 9, i16 213 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 106 }, %struct.code { i8 0, i8 8, i16 42 }, %struct.code { i8 0, i8 9, i16 181 }, %struct.code { i8 0, i8 8, i16 10 }, %struct.code { i8 0, i8 8, i16 138 }, %struct.code { i8 0, i8 8, i16 74 }, %struct.code { i8 0, i8 9, i16 245 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 86 }, %struct.code { i8 0, i8 8, i16 22 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 118 }, %struct.code { i8 0, i8 8, i16 54 }, %struct.code { i8 0, i8 9, i16 205 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 102 }, %struct.code { i8 0, i8 8, i16 38 }, %struct.code { i8 0, i8 9, i16 173 }, %struct.code { i8 0, i8 8, i16 6 }, %struct.code { i8 0, i8 8, i16 134 }, %struct.code { i8 0, i8 8, i16 70 }, %struct.code { i8 0, i8 9, i16 237 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 94 }, %struct.code { i8 0, i8 8, i16 30 }, %struct.code { i8 0, i8 9, i16 157 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 126 }, %struct.code { i8 0, i8 8, i16 62 }, %struct.code { i8 0, i8 9, i16 221 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 110 }, %struct.code { i8 0, i8 8, i16 46 }, %struct.code { i8 0, i8 9, i16 189 }, %struct.code { i8 0, i8 8, i16 14 }, %struct.code { i8 0, i8 8, i16 142 }, %struct.code { i8 0, i8 8, i16 78 }, %struct.code { i8 0, i8 9, i16 253 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 81 }, %struct.code { i8 0, i8 8, i16 17 }, %struct.code { i8 21, i8 8, i16 131 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 113 }, %struct.code { i8 0, i8 8, i16 49 }, %struct.code { i8 0, i8 9, i16 195 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 97 }, %struct.code { i8 0, i8 8, i16 33 }, %struct.code { i8 0, i8 9, i16 163 }, %struct.code { i8 0, i8 8, i16 1 }, %struct.code { i8 0, i8 8, i16 129 }, %struct.code { i8 0, i8 8, i16 65 }, %struct.code { i8 0, i8 9, i16 227 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 89 }, %struct.code { i8 0, i8 8, i16 25 }, %struct.code { i8 0, i8 9, i16 147 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 121 }, %struct.code { i8 0, i8 8, i16 57 }, %struct.code { i8 0, i8 9, i16 211 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 105 }, %struct.code { i8 0, i8 8, i16 41 }, %struct.code { i8 0, i8 9, i16 179 }, %struct.code { i8 0, i8 8, i16 9 }, %struct.code { i8 0, i8 8, i16 137 }, %struct.code { i8 0, i8 8, i16 73 }, %struct.code { i8 0, i8 9, i16 243 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 85 }, %struct.code { i8 0, i8 8, i16 21 }, %struct.code { i8 16, i8 8, i16 258 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 117 }, %struct.code { i8 0, i8 8, i16 53 }, %struct.code { i8 0, i8 9, i16 203 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 101 }, %struct.code { i8 0, i8 8, i16 37 }, %struct.code { i8 0, i8 9, i16 171 }, %struct.code { i8 0, i8 8, i16 5 }, %struct.code { i8 0, i8 8, i16 133 }, %struct.code { i8 0, i8 8, i16 69 }, %struct.code { i8 0, i8 9, i16 235 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 93 }, %struct.code { i8 0, i8 8, i16 29 }, %struct.code { i8 0, i8 9, i16 155 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 125 }, %struct.code { i8 0, i8 8, i16 61 }, %struct.code { i8 0, i8 9, i16 219 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 109 }, %struct.code { i8 0, i8 8, i16 45 }, %struct.code { i8 0, i8 9, i16 187 }, %struct.code { i8 0, i8 8, i16 13 }, %struct.code { i8 0, i8 8, i16 141 }, %struct.code { i8 0, i8 8, i16 77 }, %struct.code { i8 0, i8 9, i16 251 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 83 }, %struct.code { i8 0, i8 8, i16 19 }, %struct.code { i8 21, i8 8, i16 195 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 115 }, %struct.code { i8 0, i8 8, i16 51 }, %struct.code { i8 0, i8 9, i16 199 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 99 }, %struct.code { i8 0, i8 8, i16 35 }, %struct.code { i8 0, i8 9, i16 167 }, %struct.code { i8 0, i8 8, i16 3 }, %struct.code { i8 0, i8 8, i16 131 }, %struct.code { i8 0, i8 8, i16 67 }, %struct.code { i8 0, i8 9, i16 231 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 91 }, %struct.code { i8 0, i8 8, i16 27 }, %struct.code { i8 0, i8 9, i16 151 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 123 }, %struct.code { i8 0, i8 8, i16 59 }, %struct.code { i8 0, i8 9, i16 215 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 107 }, %struct.code { i8 0, i8 8, i16 43 }, %struct.code { i8 0, i8 9, i16 183 }, %struct.code { i8 0, i8 8, i16 11 }, %struct.code { i8 0, i8 8, i16 139 }, %struct.code { i8 0, i8 8, i16 75 }, %struct.code { i8 0, i8 9, i16 247 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 87 }, %struct.code { i8 0, i8 8, i16 23 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 119 }, %struct.code { i8 0, i8 8, i16 55 }, %struct.code { i8 0, i8 9, i16 207 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 103 }, %struct.code { i8 0, i8 8, i16 39 }, %struct.code { i8 0, i8 9, i16 175 }, %struct.code { i8 0, i8 8, i16 7 }, %struct.code { i8 0, i8 8, i16 135 }, %struct.code { i8 0, i8 8, i16 71 }, %struct.code { i8 0, i8 9, i16 239 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 95 }, %struct.code { i8 0, i8 8, i16 31 }, %struct.code { i8 0, i8 9, i16 159 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 127 }, %struct.code { i8 0, i8 8, i16 63 }, %struct.code { i8 0, i8 9, i16 223 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 111 }, %struct.code { i8 0, i8 8, i16 47 }, %struct.code { i8 0, i8 9, i16 191 }, %struct.code { i8 0, i8 8, i16 15 }, %struct.code { i8 0, i8 8, i16 143 }, %struct.code { i8 0, i8 8, i16 79 }, %struct.code { i8 0, i8 9, i16 255 }], align 16
@fixedtables.distfix = internal constant [32 x %struct.code] [%struct.code { i8 16, i8 5, i16 1 }, %struct.code { i8 23, i8 5, i16 257 }, %struct.code { i8 19, i8 5, i16 17 }, %struct.code { i8 27, i8 5, i16 4097 }, %struct.code { i8 17, i8 5, i16 5 }, %struct.code { i8 25, i8 5, i16 1025 }, %struct.code { i8 21, i8 5, i16 65 }, %struct.code { i8 29, i8 5, i16 16385 }, %struct.code { i8 16, i8 5, i16 3 }, %struct.code { i8 24, i8 5, i16 513 }, %struct.code { i8 20, i8 5, i16 33 }, %struct.code { i8 28, i8 5, i16 8193 }, %struct.code { i8 18, i8 5, i16 9 }, %struct.code { i8 26, i8 5, i16 2049 }, %struct.code { i8 22, i8 5, i16 129 }, %struct.code { i8 64, i8 5, i16 0 }, %struct.code { i8 16, i8 5, i16 2 }, %struct.code { i8 23, i8 5, i16 385 }, %struct.code { i8 19, i8 5, i16 25 }, %struct.code { i8 27, i8 5, i16 6145 }, %struct.code { i8 17, i8 5, i16 7 }, %struct.code { i8 25, i8 5, i16 1537 }, %struct.code { i8 21, i8 5, i16 97 }, %struct.code { i8 29, i8 5, i16 24577 }, %struct.code { i8 16, i8 5, i16 4 }, %struct.code { i8 24, i8 5, i16 769 }, %struct.code { i8 20, i8 5, i16 49 }, %struct.code { i8 28, i8 5, i16 12289 }, %struct.code { i8 18, i8 5, i16 13 }, %struct.code { i8 26, i8 5, i16 3073 }, %struct.code { i8 22, i8 5, i16 193 }, %struct.code { i8 64, i8 5, i16 0 }], align 16
@inflate_copyright = constant [47 x i8] c" inflate 1.2.8 Copyright 1995-2013 Mark Adler \00", align 16
@inflate_table.lbase = internal unnamed_addr constant [31 x i16] [i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 13, i16 15, i16 17, i16 19, i16 23, i16 27, i16 31, i16 35, i16 43, i16 51, i16 59, i16 67, i16 83, i16 99, i16 115, i16 131, i16 163, i16 195, i16 227, i16 258, i16 0, i16 0], align 16
@inflate_table.lext = internal unnamed_addr constant [31 x i16] [i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 17, i16 17, i16 17, i16 17, i16 18, i16 18, i16 18, i16 18, i16 19, i16 19, i16 19, i16 19, i16 20, i16 20, i16 20, i16 20, i16 21, i16 21, i16 21, i16 21, i16 16, i16 72, i16 78], align 16
@inflate_table.dbase = internal unnamed_addr constant [32 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 7, i16 9, i16 13, i16 17, i16 25, i16 33, i16 49, i16 65, i16 97, i16 129, i16 193, i16 257, i16 385, i16 513, i16 769, i16 1025, i16 1537, i16 2049, i16 3073, i16 4097, i16 6145, i16 8193, i16 12289, i16 16385, i16 24577, i16 0, i16 0], align 16
@inflate_table.dext = internal unnamed_addr constant [32 x i16] [i16 16, i16 16, i16 16, i16 16, i16 17, i16 17, i16 18, i16 18, i16 19, i16 19, i16 20, i16 20, i16 21, i16 21, i16 22, i16 22, i16 23, i16 23, i16 24, i16 24, i16 25, i16 25, i16 26, i16 26, i16 27, i16 27, i16 28, i16 28, i16 29, i16 29, i16 64, i16 64], align 16
@_dist_code = hidden constant [512 x i8] calign 16
@_length_code = hidden constant [256 x i8] calign 16
@static_ltree = internal constant [288 x %struct.ct_data_s] [%struct.ct_data_s { %union.anon { i16 12 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 140 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 76 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 204 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 44 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 172 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 108 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 236 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 28 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 156 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 92 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 220 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 60 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 188 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 124 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 252 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 2 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 130 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 66 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 194 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 34 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 162 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 98 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 226 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 18 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 146 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 82 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 210 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 50 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 178 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 114 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 242 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 10 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 138 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 74 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 202 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 42 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 170 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 106 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 234 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 26 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 154 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 90 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 218 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 58 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 186 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 122 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 250 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 6 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 134 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 70 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 198 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 38 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 166 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 102 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 230 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 22 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 150 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 86 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 214 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 54 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 182 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 118 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 246 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 14 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 142 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 78 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 206 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 46 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 174 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 110 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 238 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 30 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 158 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 94 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 222 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 62 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 190 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 126 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 254 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 1 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 129 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 65 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 193 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 33 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 161 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 97 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 225 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 17 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 145 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 81 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 209 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 49 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 177 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 113 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 241 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 9 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 137 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 73 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 201 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 41 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 169 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 105 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 233 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 25 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 153 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 89 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 217 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 57 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 185 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 121 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 249 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 5 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 133 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 69 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 197 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 37 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 165 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 101 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 229 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 21 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 149 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 85 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 213 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 53 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 181 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 117 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 245 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 13 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 141 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 77 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 205 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 45 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 173 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 109 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 237 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 29 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 157 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 93 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 221 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 61 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 189 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 125 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 253 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 19 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 275 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 147 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 403 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 83 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 339 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 211 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 467 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 51 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 307 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 179 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 435 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 115 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 371 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 243 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 499 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 11 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 267 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 139 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 395 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 75 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 331 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 203 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 459 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 43 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 299 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 171 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 427 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 107 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 363 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 235 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 491 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 27 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 283 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 155 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 411 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 91 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 347 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 219 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 475 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 59 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 315 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 187 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 443 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 123 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 379 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 251 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 507 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 7 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 263 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 135 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 391 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 71 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 327 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 199 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 455 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 39 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 295 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 167 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 423 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 103 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 359 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 231 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 487 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 23 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 279 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 151 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 407 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 87 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 343 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 215 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 471 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 55 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 311 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 183 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 439 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 119 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 375 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 247 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 503 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 15 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 271 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 143 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 399 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 79 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 335 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 207 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 463 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 47 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 303 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 175 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 431 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 111 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 367 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 239 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 495 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 31 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 287 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 159 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 415 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 95 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 351 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 223 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 479 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 63 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 319 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 191 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 447 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 127 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 383 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 255 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 511 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon zeroinitializer, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 64 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 32 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 96 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 16 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 80 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 48 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 112 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 8 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 72 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 40 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 104 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 24 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 88 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 56 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 120 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 4 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 68 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 36 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 100 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 20 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 84 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 52 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 116 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 3 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 131 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 67 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 195 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 35 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 163 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 99 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 227 }, %union.anon.0 { i16 8 } }], align 16
@static_dtree = internal constant [30 x %struct.ct_data_s] [%struct.ct_data_s { %union.anon zeroinitializer, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 16 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 8 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 24 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 4 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 20 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 12 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 28 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 2 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 18 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 10 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 26 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 6 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 22 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 14 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 30 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 1 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 17 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 9 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 25 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 5 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 21 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 13 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 29 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 3 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 19 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 11 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 27 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 7 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 23 }, %union.anon.0 { i16 5 } }], align 16
@extra_lbits = internal constant [29 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 0], align 16
@base_length = internal unnamed_addr constant [29 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 10, i32 12, i32 14, i32 16, i32 20, i32 24, i32 28, i32 32, i32 40, i32 48, i32 56, i32 64, i32 80, i32 96, i32 112, i32 128, i32 160, i32 192, i32 224, i32 0], align 16
@extra_dbits = internal constant [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 10, i32 10, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13], align 16
@base_dist = internal unnamed_addr constant [30 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 12, i32 16, i32 24, i32 32, i32 48, i32 64, i32 96, i32 128, i32 192, i32 256, i32 384, i32 512, i32 768, i32 1024, i32 1536, i32 2048, i32 3072, i32 4096, i32 6144, i32 8192, i32 12288, i32 16384, i32 24576], align 16
@bl_order = internal unnamed_addr constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@extra_blbits = internal constant [19 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 3, i32 7], align 16
@static_bl_desc = internal global { %struct.ct_data_s*, i32*, i32, i32, i32, [4 x i8] } { %struct.ct_data_s* null, i32* getelementptr inbounds ([19 x i32]* @extra_blbits, i32 0, i32 0), i32 0, i32 19, i32 7, [4 x i8] undef }, align 8
@static_d_desc = internal global { %struct.ct_data_s*, i32*, i32, i32, i32, [4 x i8] } { %struct.ct_data_s* getelementptr inbounds ([30 x %struct.ct_data_s]* @static_dtree, i32 0, i32 0), i32* getelementptr inbounds ([30 x i32]* @extra_dbits, i32 0, i32 0), i32 0, i32 30, i32 15, [4 x i8] undef }, align 8
@static_l_desc = internal global { %struct.ct_data_s*, i32*, i32, i32, i32, [4 x i8] } { %struct.ct_data_s* getelementptr inbounds ([288 x %struct.ct_data_s]* @static_ltree, i32 0, i32 0), i32* getelementptr inbounds ([29 x i32]* @extra_lbits, i32 0, i32 0), i32 257, i32 286, i32 15, [4 x i8] undef }, align 8
@.str95 = private unnamed_addr constant [16 x i8] c"need dictionary\00", align 1
@.str196 = private unnamed_addr constant [11 x i8] c"stream end\00", align 1
@.str297 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str398 = private unnamed_addr constant [11 x i8] c"file error\00", align 1
@.str499 = private unnamed_addr constant [13 x i8] c"stream error\00", align 1
@.str5100 = private unnamed_addr constant [11 x i8] c"data error\00", align 1
@.str6101 = private unnamed_addr constant [20 x i8] c"insufficient memory\00", align 1
@.str7102 = private unnamed_addr constant [13 x i8] c"buffer error\00", align 1
@.str8103 = private unnamed_addr constant [21 x i8] c"incompatible version\00", align 1
@z_errmsg = constant [10 x i8*] [i8* getelementptr inbounds ([16 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str196, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str297, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str398, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str499, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str5100, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str6101, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str7102, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str8103, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str297, i32 0, i32 0)], align 16
@.str9106 = private unnamed_addr constant [6 x i8] c"1.2.8\00", align 1
@crc_table = internal constant [8 x [256 x i32]] [[256 x i32] [i32 0, i32 1996959894, i32 -301047508, i32 -1727442502, i32 124634137, i32 1886057615, i32 -379345611, i32 -1637575261, i32 249268274, i32 2044508324, i32 -522852066, i32 -1747789432, i32 162941995, i32 2125561021, i32 -407360249, i32 -1866523247, i32 498536548, i32 1789927666, i32 -205950648, i32 -2067906082, i32 450548861, i32 1843258603, i32 -187386543, i32 -2083289657, i32 325883990, i32 1684777152, i32 -43845254, i32 -1973040660, i32 335633487, i32 1661365465, i32 -99664541, i32 -1928851979, i32 997073096, i32 1281953886, i32 -715111964, i32 -1570279054, i32 1006888145, i32 1258607687, i32 -770865667, i32 -1526024853, i32 901097722, i32 1119000684, i32 -608450090, i32 -1396901568, i32 853044451, i32 1172266101, i32 -589951537, i32 -1412350631, i32 651767980, i32 1373503546, i32 -925412992, i32 -1076862698, i32 565507253, i32 1454621731, i32 -809855591, i32 -1195530993, i32 671266974, i32 1594198024, i32 -972236366, i32 -1324619484, i32 795835527, i32 1483230225, i32 -1050600021, i32 -1234817731, i32 1994146192, i32 31158534, i32 -1731059524, i32 -271249366, i32 1907459465, i32 112637215, i32 -1614814043, i32 -390540237, i32 2013776290, i32 251722036, i32 -1777751922, i32 -519137256, i32 2137656763, i32 141376813, i32 -1855689577, i32 -429695999, i32 1802195444, i32 476864866, i32 -2056965928, i32 -228458418, i32 1812370925, i32 453092731, i32 -2113342271, i32 -183516073, i32 1706088902, i32 314042704, i32 -1950435094, i32 -54949764, i32 1658658271, i32 366619977, i32 -1932296973, i32 -69972891, i32 1303535960, i32 984961486, i32 -1547960204, i32 -725929758, i32 1256170817, i32 1037604311, i32 -1529756563, i32 -740887301, i32 1131014506, i32 879679996, i32 -1385723834, i32 -631195440, i32 1141124467, i32 855842277, i32 -1442165665, i32 -586318647, i32 1342533948, i32 654459306, i32 -1106571248, i32 -921952122, i32 1466479909, i32 544179635, i32 -1184443383, i32 -832445281, i32 1591671054, i32 702138776, i32 -1328506846, i32 -942167884, i32 1504918807, i32 783551873, i32 -1212326853, i32 -1061524307, i32 -306674912, i32 -1698712650, i32 62317068, i32 1957810842, i32 -355121351, i32 -1647151185, i32 81470997, i32 1943803523, i32 -480048366, i32 -1805370492, i32 225274430, i32 2053790376, i32 -468791541, i32 -1828061283, i32 167816743, i32 2097651377, i32 -267414716, i32 -2029476910, i32 503444072, i32 1762050814, i32 -144550051, i32 -2140837941, i32 426522225, i32 1852507879, i32 -19653770, i32 -1982649376, i32 282753626, i32 1742555852, i32 -105259153, i32 -1900089351, i32 397917763, i32 1622183637, i32 -690576408, i32 -1580100738, i32 953729732, i32 1340076626, i32 -776247311, i32 -1497606297, i32 1068828381, i32 1219638859, i32 -670225446, i32 -1358292148, i32 906185462, i32 1090812512, i32 -547295293, i32 -1469587627, i32 829329135, i32 1181335161, i32 -882789492, i32 -1134132454, i32 628085408, i32 1382605366, i32 -871598187, i32 -1156888829, i32 570562233, i32 1426400815, i32 -977650754, i32 -1296233688, i32 733239954, i32 1555261956, i32 -1026031705, i32 -1244606671, i32 752459403, i32 1541320221, i32 -1687895376, i32 -328994266, i32 1969922972, i32 40735498, i32 -1677130071, i32 -351390145, i32 1913087877, i32 83908371, i32 -1782625662, i32 -491226604, i32 2075208622, i32 213261112, i32 -1831694693, i32 -438977011, i32 2094854071, i32 198958881, i32 -2032938284, i32 -237706686, i32 1759359992, i32 534414190, i32 -2118248755, i32 -155638181, i32 1873836001, i32 414664567, i32 -2012718362, i32 -15766928, i32 1711684554, i32 285281116, i32 -1889165569, i32 -127750551, i32 1634467795, i32 376229701, i32 -1609899400, i32 -686959890, i32 1308918612, i32 956543938, i32 -1486412191, i32 -799009033, i32 1231636301, i32 1047427035, i32 -1362007478, i32 -640263460, i32 1088359270, i32 936918000, i32 -1447252397, i32 -558129467, i32 1202900863, i32 817233897, i32 -1111625188, i32 -893730166, i32 1404277552, i32 615818150, i32 -1160759803, i32 -841546093, i32 1423857449, i32 601450431, i32 -1285129682, i32 -1000256840, i32 1567103746, i32 711928724, i32 -1274298825, i32 -1022587231, i32 1510334235, i32 755167117], [256 x i32] [i32 0, i32 421212481, i32 842424962, i32 724390851, i32 1684849924, i32 2105013317, i32 1448781702, i32 1329698503, i32 -925267448, i32 -775767223, i32 -84940662, i32 -470492725, i32 -1397403892, i32 -1246855603, i32 -1635570290, i32 -2020074289, i32 1254232657, i32 1406739216, i32 2029285587, i32 1643069842, i32 783210325, i32 934667796, i32 479770071, i32 92505238, i32 -2112120743, i32 -1694455528, i32 -1339163941, i32 -1456026726, i32 -428384931, i32 -9671652, i32 -733921313, i32 -849736034, i32 -1786501982, i32 -1935731229, i32 -1481488864, i32 -1096190111, i32 -236396122, i32 -386674457, i32 -1008827612, i32 -624577947, i32 1566420650, i32 1145479147, i32 1869335592, i32 1987116393, i32 959540142, i32 539646703, i32 185010476, i32 303839341, i32 -549046541, i32 -966981710, i32 -311405455, i32 -194288336, i32 -1154812937, i32 -1573797194, i32 -1994616459, i32 -1878548428, i32 396344571, i32 243568058, i32 631889529, i32 1018359608, i32 1945336319, i32 1793607870, i32 1103436669, i32 1490954812, i32 -260485371, i32 -379421116, i32 -1034998393, i32 -615244602, i32 -1810527743, i32 -1928414400, i32 -1507596157, i32 -1086793278, i32 950060301, i32 565965900, i32 177645455, i32 328046286, i32 1556873225, i32 1171730760, i32 1861902987, i32 2011255754, i32 -1162125996, i32 -1549767659, i32 -2004009002, i32 -1852436841, i32 -556296112, i32 -942888687, i32 -320734510, i32 -168113261, i32 1919080284, i32 1803150877, i32 1079293406, i32 1498383519, i32 370020952, i32 253043481, i32 607678682, i32 1025720731, i32 1711106983, i32 2095471334, i32 1472923941, i32 1322268772, i32 26324643, i32 411738082, i32 866634785, i32 717028704, i32 -1390091857, i32 -1270886162, i32 -1626176723, i32 -2046184852, i32 -918018901, i32 -799861270, i32 -75610583, i32 -496666776, i32 792689142, i32 908347575, i32 487136116, i32 68299317, i32 1263779058, i32 1380486579, i32 2036719216, i32 1618931505, i32 -404294658, i32 -16923969, i32 -707751556, i32 -859070403, i32 -2088093958, i32 -1701771333, i32 -1313057672, i32 -1465424583, i32 998479947, i32 580430090, i32 162921161, i32 279890824, i32 1609522511, i32 1190423566, i32 1842954189, i32 1958874764, i32 -212200893, i32 -364829950, i32 -1049857855, i32 -663273088, i32 -1758013625, i32 -1909594618, i32 -1526680123, i32 -1139047292, i32 1900120602, i32 1750776667, i32 1131931800, i32 1517083097, i32 355290910, i32 204897887, i32 656092572, i32 1040194781, i32 -1181220846, i32 -1602014893, i32 -1951505776, i32 -1833610287, i32 -571161322, i32 -990907305, i32 -272455788, i32 -153512235, i32 -1375224599, i32 -1222865496, i32 -1674453397, i32 -2060783830, i32 -898926099, i32 -747616084, i32 -128115857, i32 -515495378, i32 1725839073, i32 2143618976, i32 1424512099, i32 1307796770, i32 45282277, i32 464110244, i32 813994343, i32 698327078, i32 -456806728, i32 -35741703, i32 -688665542, i32 -806814341, i32 -2136380484, i32 -1716364547, i32 -1298200258, i32 -1417398145, i32 740041904, i32 889656817, i32 506086962, i32 120682355, i32 1215357364, i32 1366020341, i32 2051441462, i32 1667084919, i32 -872753330, i32 -756947441, i32 -104024628, i32 -522746739, i32 -1349119414, i32 -1232264437, i32 -1650429752, i32 -2068102775, i32 52649286, i32 439905287, i32 823476164, i32 672009861, i32 1733269570, i32 2119477507, i32 1434057408, i32 1281543041, i32 -2126985953, i32 -1742474146, i32 -1290885219, i32 -1441425700, i32 -447479781, i32 -61918886, i32 -681418087, i32 -830909480, i32 1239502615, i32 1358593622, i32 2077699477, i32 1657543892, i32 764250643, i32 882293586, i32 532408465, i32 111204816, i32 1585378284, i32 1197851309, i32 1816695150, i32 1968414767, i32 974272232, i32 587794345, i32 136598634, i32 289367339, i32 -1767409180, i32 -1883486043, i32 -1533994138, i32 -1115018713, i32 -221528864, i32 -338653791, i32 -1057104286, i32 -639176925, i32 347922877, i32 229101820, i32 646611775, i32 1066513022, i32 1892689081, i32 1774917112, i32 1122387515, i32 1543337850, i32 -597333067, i32 -981574924, i32 -296548041, i32 -146261898, i32 -1207325007, i32 -1592614928, i32 -1975530445, i32 -1826292366], [256 x i32] [i32 0, i32 29518391, i32 59036782, i32 38190681, i32 118073564, i32 114017003, i32 76381362, i32 89069189, i32 236147128, i32 265370511, i32 228034006, i32 206958561, i32 152762724, i32 148411219, i32 178138378, i32 190596925, i32 472294256, i32 501532999, i32 530741022, i32 509615401, i32 456068012, i32 451764635, i32 413917122, i32 426358261, i32 305525448, i32 334993663, i32 296822438, i32 275991697, i32 356276756, i32 352202787, i32 381193850, i32 393929805, i32 944588512, i32 965684439, i32 1003065998, i32 973863097, i32 1061482044, i32 1049003019, i32 1019230802, i32 1023561829, i32 912136024, i32 933002607, i32 903529270, i32 874031361, i32 827834244, i32 815125939, i32 852716522, i32 856752605, i32 611050896, i32 631869351, i32 669987326, i32 640506825, i32 593644876, i32 580921211, i32 551983394, i32 556069653, i32 712553512, i32 733666847, i32 704405574, i32 675154545, i32 762387700, i32 749958851, i32 787859610, i32 792175277, i32 1889177024, i32 1901651959, i32 1931368878, i32 1927033753, i32 2006131996, i32 1985040171, i32 1947726194, i32 1976933189, i32 2122964088, i32 2135668303, i32 2098006038, i32 2093965857, i32 2038461604, i32 2017599123, i32 2047123658, i32 2076625661, i32 1824272048, i32 1836991623, i32 1866005214, i32 1861914857, i32 1807058540, i32 1786244187, i32 1748062722, i32 1777547317, i32 1655668488, i32 1668093247, i32 1630251878, i32 1625932113, i32 1705433044, i32 1684323811, i32 1713505210, i32 1742760333, i32 1222101792, i32 1226154263, i32 1263738702, i32 1251046777, i32 1339974652, i32 1310460363, i32 1281013650, i32 1301863845, i32 1187289752, i32 1191637167, i32 1161842422, i32 1149379777, i32 1103966788, i32 1074747507, i32 1112139306, i32 1133218845, i32 1425107024, i32 1429406311, i32 1467333694, i32 1454888457, i32 1408811148, i32 1379576507, i32 1350309090, i32 1371438805, i32 1524775400, i32 1528845279, i32 1499917702, i32 1487177649, i32 1575719220, i32 1546255107, i32 1584350554, i32 1605185389, i32 -516613248, i32 -520654409, i32 -491663378, i32 -478960167, i32 -432229540, i32 -402728597, i32 -440899790, i32 -461763323, i32 -282703304, i32 -287039473, i32 -324886954, i32 -312413087, i32 -399514908, i32 -370308909, i32 -341100918, i32 -362193731, i32 -49039120, i32 -53357881, i32 -23630690, i32 -11204951, i32 -98955220, i32 -69699045, i32 -107035582, i32 -128143755, i32 -218044088, i32 -222133377, i32 -259769050, i32 -247048431, i32 -200719980, i32 -171234397, i32 -141715974, i32 -162529331, i32 -646423200, i32 -658884777, i32 -620984050, i32 -616635591, i32 -562956868, i32 -541876341, i32 -571137582, i32 -600355867, i32 -680850216, i32 -693541137, i32 -722478922, i32 -718425471, i32 -798841852, i32 -777990605, i32 -739872662, i32 -769385891, i32 -983630320, i32 -996371417, i32 -958780802, i32 -954711991, i32 -1034463540, i32 -1013629701, i32 -1043103070, i32 -1072568171, i32 -884101208, i32 -896547425, i32 -926319674, i32 -922021391, i32 -867956876, i32 -846828221, i32 -809446630, i32 -838682323, i32 -1850763712, i32 -1871840137, i32 -1842658770, i32 -1813436391, i32 -1767489892, i32 -1755032405, i32 -1792873742, i32 -1797226299, i32 -1615017992, i32 -1635865137, i32 -1674046570, i32 -1644529247, i32 -1732939996, i32 -1720253165, i32 -1691239606, i32 -1695297155, i32 -1920387792, i32 -1941217529, i32 -1911692962, i32 -1882223767, i32 -1971282452, i32 -1958545445, i32 -1996207742, i32 -2000280651, i32 -2087033720, i32 -2108158273, i32 -2145472282, i32 -2116232495, i32 -2070688684, i32 -2058246557, i32 -2028529606, i32 -2032831987, i32 -1444753248, i32 -1474250089, i32 -1436154674, i32 -1415287047, i32 -1360299908, i32 -1356262837, i32 -1385190382, i32 -1397897691, i32 -1477345000, i32 -1506546897, i32 -1535814282, i32 -1514717375, i32 -1594349116, i32 -1590017037, i32 -1552089686, i32 -1564567651, i32 -1245416496, i32 -1274668569, i32 -1237276738, i32 -1216164471, i32 -1295131892, i32 -1290817221, i32 -1320611998, i32 -1333041835, i32 -1143528856, i32 -1173010337, i32 -1202457082, i32 -1181639631, i32 -1126266188, i32 -1122180989, i32 -1084596518, i32 -1097321235], [256 x i32] [i32 0, i32 -1195612315, i32 -1442199413, i32 313896942, i32 -1889364137, i32 937357362, i32 627793884, i32 -1646839623, i32 -978048785, i32 2097696650, i32 1874714724, i32 -687765759, i32 1255587768, i32 -227878691, i32 -522225869, i32 1482887254, i32 1343838111, i32 -391827206, i32 -99573996, i32 1118632049, i32 -545537848, i32 1741137837, i32 1970407491, i32 -842109146, i32 -1783791760, i32 756094997, i32 1067759611, i32 -2028416866, i32 449832999, i32 -1569484990, i32 -1329192788, i32 142231497, i32 -1607291074, i32 412010587, i32 171665333, i32 -1299775280, i32 793786473, i32 -1746116852, i32 -2057703198, i32 1038456711, i32 1703315409, i32 -583343948, i32 -812691622, i32 1999841343, i32 -354152314, i32 1381529571, i32 1089329165, i32 -128860312, i32 -265553759, i32 1217896388, i32 1512189994, i32 -492939441, i32 2135519222, i32 -940242797, i32 -717183107, i32 1845280792, i32 899665998, i32 -1927039189, i32 -1617553211, i32 657096608, i32 -1157806311, i32 37822588, i32 284462994, i32 -1471616777, i32 -1693165507, i32 598228824, i32 824021174, i32 -1985873965, i32 343330666, i32 -1396004849, i32 -1098971167, i32 113467524, i32 1587572946, i32 -434366537, i32 -190203815, i32 1276501820, i32 -775755899, i32 1769898208, i32 2076913422, i32 -1015592853, i32 -888336478, i32 1941006535, i32 1627703081, i32 -642211764, i32 1148164341, i32 -53215344, i32 -295284610, i32 1457141531, i32 247015245, i32 -1241169880, i32 -1531908154, i32 470583459, i32 -2116308966, i32 963106687, i32 735213713, i32 -1821499404, i32 992409347, i32 -2087022490, i32 -1859174520, i32 697522413, i32 -1270587308, i32 217581361, i32 508405983, i32 -1494102086, i32 -23928852, i32 1177467017, i32 1419450215, i32 -332959742, i32 1911572667, i32 -917753890, i32 -604405712, i32 1665525589, i32 1799331996, i32 -746338311, i32 -1053399017, i32 2039091058, i32 -463652917, i32 1558270126, i32 1314193216, i32 -152528859, i32 -1366587277, i32 372764438, i32 75645176, i32 -1136777315, i32 568925988, i32 -1722451903, i32 -1948198993, i32 861712586, i32 -312887749, i32 1441124702, i32 1196457648, i32 -1304107, i32 1648042348, i32 -628668919, i32 -936187417, i32 1888390786, i32 686661332, i32 -1873675855, i32 -2098964897, i32 978858298, i32 -1483798141, i32 523464422, i32 226935048, i32 -1254447507, i32 -1119821404, i32 100435649, i32 390670639, i32 -1342878134, i32 841119475, i32 -1969352298, i32 -1741963656, i32 546822429, i32 2029308235, i32 -1068978642, i32 -755170880, i32 1782671013, i32 -141140452, i32 1328167289, i32 1570739863, i32 -450629134, i32 1298864389, i32 -170426784, i32 -412954226, i32 1608431339, i32 -1039561134, i32 2058742071, i32 1744848601, i32 -792976964, i32 -1998638614, i32 811816591, i32 584513889, i32 -1704288764, i32 129869501, i32 -1090403880, i32 -1380684234, i32 352848211, i32 494030490, i32 -1513215489, i32 -1216641519, i32 264757620, i32 -1844389427, i32 715964072, i32 941166918, i32 -2136639965, i32 -658086283, i32 1618608400, i32 1926213374, i32 -898381413, i32 1470427426, i32 -283601337, i32 -38979159, i32 1158766284, i32 1984818694, i32 -823031453, i32 -599513459, i32 1693991400, i32 -114329263, i32 1100160564, i32 1395044826, i32 -342174017, i32 -1275476247, i32 189112716, i32 435162722, i32 -1588827897, i32 1016811966, i32 -2077804837, i32 -1768777419, i32 774831696, i32 643086745, i32 -1628905732, i32 -1940033262, i32 887166583, i32 -1456066866, i32 294275499, i32 54519365, i32 -1149009632, i32 -471821962, i32 1532818963, i32 1240029693, i32 -246071656, i32 1820460577, i32 -734109372, i32 -963916118, i32 2117577167, i32 -696303304, i32 1858283101, i32 2088143283, i32 -993333546, i32 1495127663, i32 -509497078, i32 -216785180, i32 1269332353, i32 332098007, i32 -1418260814, i32 -1178427044, i32 25085497, i32 -1666580864, i32 605395429, i32 916469259, i32 -1910746770, i32 -2040129881, i32 1054503362, i32 745528876, i32 -1798063799, i32 151290352, i32 -1313282411, i32 -1559410309, i32 464596510, i32 1137851976, i32 -76654291, i32 -371460413, i32 1365741990, i32 -860837601, i32 1946996346, i32 1723425172, i32 -570095887], [256 x i32] [i32 0, i32 -1775237257, i32 744558318, i32 -1169094247, i32 432303367, i32 -1879807376, i32 900031465, i32 -1550490466, i32 847829774, i32 -1531388807, i32 518641120, i32 -1998990697, i32 726447625, i32 -1115901570, i32 120436967, i32 -1860321392, i32 1678817053, i32 -232738710, i32 1215412723, i32 -566116732, i32 2111101466, i32 -337322643, i32 1370871028, i32 -947530877, i32 1452829715, i32 -1062704284, i32 2063164157, i32 -322345590, i32 1331429652, i32 -647231901, i32 1664946170, i32 -183695219, i32 -937398725, i32 1578133836, i32 -465477419, i32 1920034722, i32 -773586116, i32 1205077067, i32 -41611822, i32 1807026853, i32 -89606859, i32 1821946434, i32 -691422245, i32 1090108588, i32 -479406030, i32 1969020741, i32 -821176612, i32 1497223595, i32 -1406084826, i32 973135441, i32 -2142119992, i32 375509183, i32 -1242254303, i32 600093526, i32 -1718240561, i32 262520248, i32 -1632107992, i32 143131999, i32 -1294398266, i32 619252657, i32 -2021888209, i32 290220120, i32 -1424137791, i32 1026385590, i32 -1874731914, i32 108124929, i32 -1138699624, i32 705746415, i32 -1987726991, i32 532002310, i32 -1511735393, i32 869578984, i32 -1563883656, i32 888733711, i32 -1901590122, i32 412618465, i32 -1156748673, i32 759000328, i32 -1754504047, i32 22832102, i32 -195990677, i32 1650551836, i32 -667916923, i32 1308648178, i32 -309000596, i32 2074411291, i32 -1040971646, i32 1472466933, i32 -958812059, i32 1357494034, i32 -356991349, i32 2089335292, i32 -551690910, i32 1227741717, i32 -209923188, i32 1699534075, i32 1482797645, i32 -833505990, i32 1946205347, i32 -500122668, i32 1101389642, i32 -678045635, i32 1841615268, i32 -67840301, i32 1793681731, i32 -52859340, i32 1183344557, i32 -793222950, i32 1932330052, i32 -451083469, i32 1598818986, i32 -914616867, i32 1014039888, i32 -1438580185, i32 269487038, i32 -2044719927, i32 632645719, i32 -1283100896, i32 164914873, i32 -1612422706, i32 251256414, i32 -1731602135, i32 580440240, i32 -1264003129, i32 389919577, i32 -2129808338, i32 995933623, i32 -1385383232, i32 545503469, i32 -1229733990, i32 216184323, i32 -1697468044, i32 961009130, i32 -1351101795, i32 354867972, i32 -2095653773, i32 302736355, i32 -2076482412, i32 1047162125, i32 -1470469510, i32 198119140, i32 -1644230253, i32 665714698, i32 -1315043459, i32 1150488560, i32 -761067385, i32 1760690462, i32 -20838807, i32 1566008055, i32 -882416256, i32 1899392025, i32 -419009682, i32 1981535486, i32 -533998711, i32 1518000656, i32 -867508889, i32 1876933113, i32 -101728626, i32 1136572183, i32 -712069024, i32 -391915818, i32 2123616673, i32 -993863624, i32 1391648591, i32 -244859951, i32 1733803174, i32 -586762945, i32 1261875784, i32 -634712616, i32 1276840623, i32 -162921674, i32 1618609217, i32 -1007722273, i32 1440704424, i32 -275878351, i32 2042521926, i32 -1934401077, i32 444819132, i32 -1596821723, i32 920807506, i32 -1787360052, i32 54987707, i32 -1189739998, i32 791020885, i32 -1103381819, i32 671858098, i32 -1839549397, i32 74101596, i32 -1476405310, i32 835702965, i32 -1952523988, i32 497999451, i32 -1329437541, i32 653419500, i32 -1667011979, i32 177433858, i32 -1459222116, i32 1060507371, i32 -2056845454, i32 324468741, i32 -2109030507, i32 343587042, i32 -1372868229, i32 941340172, i32 -1685138798, i32 230610405, i32 -1209017220, i32 568318731, i32 -724380794, i32 1122161905, i32 -122430104, i32 1854134815, i32 -854147455, i32 1529264630, i32 -512249745, i32 2001188632, i32 -430307192, i32 1885999103, i32 -902101402, i32 1544225041, i32 -6396529, i32 1773036280, i32 -738235551, i32 1171221526, i32 2028079776, i32 -288223785, i32 1417872462, i32 -1028455623, i32 1629906855, i32 -149528368, i32 1296525641, i32 -612929986, i32 1248514478, i32 -598026535, i32 1712054080, i32 -264513481, i32 1403960489, i32 -979452962, i32 2144318023, i32 -369117904, i32 485670333, i32 -1966949686, i32 814986067, i32 -1499220956, i32 87478458, i32 -1828268083, i32 693624404, i32 -1083713245, i32 779773619, i32 -1203084860, i32 35350621, i32 -1809092822, i32 935201716, i32 -1584526141, i32 467600730, i32 -1913716179], [256 x i32] [i32 0, i32 1093737241, i32 -2107492814, i32 -1017959125, i32 80047204, i32 1173649277, i32 -2035852714, i32 -946454193, i32 143317448, i32 1237041873, i32 -1964445702, i32 -874908445, i32 206550444, i32 1300147893, i32 -1909619810, i32 -820209529, i32 1360183882, i32 270784851, i32 -747572104, i32 -1841172639, i32 1440198190, i32 350663991, i32 -675964900, i32 -1769700603, i32 1503140738, i32 413728923, i32 -604361296, i32 -1697958231, i32 1566406630, i32 476867839, i32 -549502508, i32 -1643226419, i32 -1574665067, i32 -485122164, i32 541504167, i32 1635232190, i32 -1495144207, i32 -405736472, i32 612622019, i32 1706214874, i32 -1431413411, i32 -341883324, i32 684485487, i32 1778217078, i32 -1368706759, i32 -279303648, i32 738789131, i32 1832393746, i32 -214546721, i32 -1308140090, i32 1901359341, i32 811953140, i32 -135058757, i32 -1228787294, i32 1972444297, i32 882902928, i32 -71524585, i32 -1165130738, i32 2044635429, i32 955232828, i32 -8785037, i32 -1102518166, i32 2098971969, i32 1009442392, i32 89094640, i32 1149133545, i32 -2027073598, i32 -971221797, i32 25826708, i32 1086000781, i32 -2081938522, i32 -1025951553, i32 231055416, i32 1291107105, i32 -1884842486, i32 -828994285, i32 151047260, i32 1211225925, i32 -1956447634, i32 -900472457, i32 1415429050, i32 359440547, i32 -700478072, i32 -1760651631, i32 1352194014, i32 296340679, i32 -755310100, i32 -1815348491, i32 1557619314, i32 501643627, i32 -558541760, i32 -1618718887, i32 1477578262, i32 421729551, i32 -630179804, i32 -1690229955, i32 -1486095003, i32 -430250372, i32 621398871, i32 1681444942, i32 -1548840703, i32 -492860904, i32 567060275, i32 1627241514, i32 -1344199507, i32 -288342092, i32 763564703, i32 1823607174, i32 -1423685431, i32 -367701040, i32 692485883, i32 1752655330, i32 -159826129, i32 -1220008906, i32 1947928861, i32 891949572, i32 -222538933, i32 -1282586542, i32 1893623161, i32 837779040, i32 -17570073, i32 -1077740034, i32 2089930965, i32 1033948108, i32 -97088893, i32 -1157131878, i32 2018819249, i32 962963368, i32 1268286267, i32 178886690, i32 -906316535, i32 -1999917552, i32 1331556191, i32 242021446, i32 -851453587, i32 -1945189772, i32 1125276403, i32 35865066, i32 -1049596735, i32 -2143193128, i32 1205286551, i32 115748238, i32 -977993563, i32 -2071716932, i32 445268337, i32 1539005032, i32 -1729595581, i32 -640062374, i32 508505365, i32 1602106892, i32 -1674765529, i32 -585367490, i32 302028985, i32 1395753888, i32 -1872580981, i32 -783043182, i32 382072029, i32 1475669956, i32 -1800944913, i32 -711534090, i32 -373553234, i32 -1467147081, i32 1809723804, i32 720317061, i32 -310809654, i32 -1404538669, i32 1864064504, i32 774522593, i32 -516497818, i32 -1610103425, i32 1666508884, i32 577106765, i32 -437014014, i32 -1530746597, i32 1737589808, i32 648060713, i32 -1196505628, i32 -106963203, i32 986510294, i32 2080237775, i32 -1133794944, i32 -44387687, i32 1040818098, i32 2134410411, i32 -1339810772, i32 -250280139, i32 843459102, i32 1937191175, i32 -1260294072, i32 -170890415, i32 914572922, i32 2008178019, i32 1322777291, i32 266789330, i32 -860500743, i32 -1920673824, i32 1242732207, i32 186879414, i32 -932142947, i32 -1992180860, i32 1180508931, i32 124532762, i32 -1002498767, i32 -2062676440, i32 1117278055, i32 61428862, i32 -1057326763, i32 -2117377460, i32 533018753, i32 1593058200, i32 -1649996109, i32 -594143830, i32 453006565, i32 1513181180, i32 -1721605417, i32 -665617970, i32 391110985, i32 1451162192, i32 -1792157829, i32 -736310174, i32 327847213, i32 1388025396, i32 -1847018721, i32 -791044090, i32 -319586722, i32 -1379769017, i32 1855015020, i32 799036277, i32 -399109574, i32 -1459156701, i32 1783899144, i32 728055569, i32 -461789290, i32 -1521959793, i32 1713082788, i32 657099453, i32 -524497934, i32 -1584541461, i32 1658781120, i32 602924761, i32 -1109279724, i32 -53434611, i32 1065585190, i32 2125631807, i32 -1188769680, i32 -132789399, i32 994502210, i32 2054683995, i32 -1251252772, i32 -195395899, i32 923358190, i32 1983400183, i32 -1313994312, i32 -258010463, i32 869023626, i32 1929192595], [256 x i32] [i32 0, i32 929743361, i32 1859421187, i32 1505641986, i32 -592967417, i32 -339555578, i32 -1300460284, i32 -2062135547, i32 -1202646258, i32 -1891905265, i32 -695888115, i32 -504408820, i32 1694046729, i32 1402198024, i32 170761738, i32 1028086795, i32 1889740316, i32 1204413469, i32 511156767, i32 689791006, i32 -1408553189, i32 -1688081126, i32 -1025529064, i32 -172660455, i32 -923650798, i32 -6752493, i32 -1507413743, i32 -1857260784, i32 341457941, i32 590413332, i32 2056173590, i32 1306819095, i32 -532263624, i32 -684945607, i32 -1902982853, i32 -1174926534, i32 1022247999, i32 193234494, i32 1379582012, i32 1699742269, i32 1477926454, i32 1870502967, i32 918805045, i32 27858996, i32 -2067835087, i32 -1277848272, i32 -362032334, i32 -587132621, i32 -1864013020, i32 -1483757275, i32 -30281945, i32 -916771546, i32 1280139811, i32 2066194466, i32 580511264, i32 368256033, i32 682915882, i32 534690347, i32 1180761129, i32 1896496680, i32 -199462611, i32 -1015631060, i32 -1698106066, i32 -1381877969, i32 -1064461712, i32 -135833487, i32 -1369891213, i32 -1724654478, i32 472224631, i32 726618486, i32 1928402804, i32 1167840629, i32 2027719038, i32 1337346943, i32 369626493, i32 560123772, i32 -1535868807, i32 -1826733448, i32 -895482758, i32 -37042565, i32 -1339114388, i32 -2025554323, i32 -554026897, i32 -376374674, i32 1820767595, i32 1542223722, i32 38941032, i32 892924777, i32 142585698, i32 1058368867, i32 1722493793, i32 1371662688, i32 -724064667, i32 -474127260, i32 -1174199706, i32 -1922441113, i32 550229832, i32 396432713, i32 1310675787, i32 2037748042, i32 -60563889, i32 -888595378, i32 -1833477556, i32 -1512204211, i32 -1734687674, i32 -1343224249, i32 -162643899, i32 -1054571964, i32 1144180033, i32 1935150912, i32 719735106, i32 495749955, i32 1349054804, i32 1728197461, i32 1052538199, i32 165066582, i32 -1933510573, i32 -1146471854, i32 -501973936, i32 -713114031, i32 -398859686, i32 -548200357, i32 -2031262119, i32 -1316510632, i32 881978205, i32 66791772, i32 1514499934, i32 1831841119, i32 -2145700383, i32 -1217267744, i32 -288378398, i32 -643468317, i32 1555250406, i32 1809448679, i32 845658341, i32 84769508, i32 944383727, i32 253813998, i32 1453236972, i32 1643405549, i32 -454938648, i32 -746000919, i32 -1976128533, i32 -1118017046, i32 -256371715, i32 -942484996, i32 -1637050370, i32 -1459202561, i32 739252986, i32 461035771, i32 1120182009, i32 1974361336, i32 1223229683, i32 2139341554, i32 641565936, i32 290932465, i32 -1807676940, i32 -1557410827, i32 -90862089, i32 -838905866, i32 1616738521, i32 1463270104, i32 243924186, i32 971194075, i32 -1124765218, i32 -1952468001, i32 -769526307, i32 -448055332, i32 -670274601, i32 -278484522, i32 -1227296812, i32 -2119029291, i32 77882064, i32 869179601, i32 1785784019, i32 1561994450, i32 285105861, i32 664050884, i32 2116737734, i32 1228937415, i32 -866756670, i32 -79915581, i32 -1568484415, i32 -1779953216, i32 -1464906293, i32 -1614442550, i32 -964965944, i32 -250541111, i32 1946633420, i32 1131251405, i32 450085071, i32 767099598, i32 1083617169, i32 2013031824, i32 776088466, i32 422111635, i32 -1673615722, i32 -1420532585, i32 -219536747, i32 -981409644, i32 -121127777, i32 -810713442, i32 -1777125220, i32 -1585841507, i32 611300760, i32 319125401, i32 1253781915, i32 2110911386, i32 808814989, i32 123685772, i32 1591807374, i32 1770770319, i32 -325222262, i32 -604552565, i32 -2109143927, i32 -1255946616, i32 -2006672765, i32 -1089578878, i32 -424665472, i32 -774185855, i32 1422693252, i32 1671844229, i32 974657415, i32 225629574, i32 -1596923223, i32 -1749409624, i32 -838572374, i32 -110189397, i32 2088299438, i32 1259481519, i32 313290669, i32 633777580, i32 411169191, i32 803943334, i32 1985312164, i32 1094694821, i32 -1003882336, i32 -213697887, i32 -1426228061, i32 -1650999646, i32 -797719371, i32 -417790284, i32 -1096335178, i32 -1983020361, i32 215731634, i32 1001459635, i32 1645169073, i32 1432718256, i32 1747113915, i32 1598559674, i32 116806584, i32 832344505, i32 -1265967428, i32 -2082464579, i32 -631350593, i32 -315320130], [256 x i32] [i32 0, i32 1701297336, i32 -1949824598, i32 -290474734, i32 1469538959, i32 854646327, i32 -597726427, i32 -1187457123, i32 -282544955, i32 -1974531971, i32 1692450159, i32 25625047, i32 -1195387318, i32 -573019406, i32 863494112, i32 1443914584, i32 -1621681840, i32 -97475096, i32 345968890, i32 1912122434, i32 -926909473, i32 -1381513369, i32 1124627061, i32 644861645, i32 1887415701, i32 353898797, i32 -71850945, i32 -1630529401, i32 669568794, i32 1116697506, i32 -1407138128, i32 -918062584, i32 1051669152, i32 1539870232, i32 -1251525878, i32 -805271630, i32 1765298223, i32 207613079, i32 -487564923, i32 -2020088515, i32 -779647387, i32 -1260373283, i32 1515163599, i32 1059599223, i32 -2045713174, i32 -478717870, i32 232320320, i32 1757368824, i32 -1577571344, i32 -996174008, i32 707797594, i32 1331142370, i32 -160478849, i32 -1828129337, i32 2108113109, i32 415300717, i32 1322295093, i32 733422477, i32 -988244321, i32 -1602278873, i32 424148410, i32 2082488578, i32 -1836059632, i32 -135771992, i32 1029182619, i32 1480566819, i32 -1232069327, i32 -738745975, i32 1791981076, i32 262720172, i32 -519602242, i32 -2074033402, i32 -764370850, i32 -1223222042, i32 1505274356, i32 1021252940, i32 -2048408879, i32 -528449943, i32 238013307, i32 1799911363, i32 -1576071733, i32 -949440141, i32 700908641, i32 1285601497, i32 -174559420, i32 -1862282244, i32 2119198446, i32 456645206, i32 1294448910, i32 675284406, i32 -957370204, i32 -1551365092, i32 447798145, i32 2144823097, i32 -1854352853, i32 -199266669, i32 66528827, i32 1720752771, i32 -2009124975, i32 -312962263, i32 1415595188, i32 822605836, i32 -542618338, i32 -1160777306, i32 -320892162, i32 -1984418234, i32 1729600340, i32 40904684, i32 -1152847759, i32 -567325495, i32 813758939, i32 1441219939, i32 -1667219605, i32 -104365101, i32 392705729, i32 1913621113, i32 -885563932, i32 -1370431140, i32 1090475086, i32 630778102, i32 1938328494, i32 384775958, i32 -129990140, i32 -1658372420, i32 606071073, i32 1098405273, i32 -1344806773, i32 -894411725, i32 1001806317, i32 1590814037, i32 -1333899193, i32 -719721217, i32 1814117218, i32 155617242, i32 -404147512, i32 -2104586640, i32 -727782104, i32 -1309060720, i32 1599530114, i32 976312378, i32 -2096525401, i32 -428985569, i32 146900493, i32 1839610549, i32 -1528741699, i32 -1048118267, i32 791234839, i32 1246688687, i32 -210361806, i32 -1777230198, i32 2025728920, i32 500799264, i32 1271526520, i32 783173824, i32 -1073611310, i32 -1520025238, i32 475961079, i32 2033789519, i32 -1751736483, i32 -219077659, i32 85551949, i32 1618925557, i32 -1898880281, i32 -340337057, i32 1385040322, i32 938063226, i32 -649723800, i32 -1138639664, i32 -365830264, i32 -1890163920, i32 1643763234, i32 77490842, i32 -1113146105, i32 -658439745, i32 913224877, i32 1393100821, i32 -1706135011, i32 -14037339, i32 294026167, i32 1960953615, i32 -841412462, i32 -1463899094, i32 1175525688, i32 594978176, i32 1969669848, i32 268532320, i32 -22098062, i32 -1681296438, i32 586261591, i32 1201019119, i32 -1455837699, i32 -866250427, i32 116280694, i32 1669984718, i32 -1926871844, i32 -398329756, i32 1366896633, i32 874419009, i32 -625924525, i32 -1076454677, i32 -372835917, i32 -1935588085, i32 1645146137, i32 124341409, i32 -1101948100, i32 -617207932, i32 899256982, i32 1358835246, i32 -1715907546, i32 -52500322, i32 309419404, i32 1997988148, i32 -835832151, i32 -1421243887, i32 1172717315, i32 545358779, i32 1989271779, i32 334912603, i32 -44439223, i32 -1740745231, i32 554074732, i32 1147223764, i32 -1429304378, i32 -810993794, i32 943816662, i32 1562821486, i32 -1282836868, i32 -688993596, i32 1876303193, i32 179413473, i32 -467790605, i32 -2122733493, i32 -680932589, i32 -1307674709, i32 1554105017, i32 969309697, i32 -2130794084, i32 -442952412, i32 188129334, i32 1850809486, i32 -1491704186, i32 -1032725954, i32 752774956, i32 1236915092, i32 -259980279, i32 -1780041551, i32 2068385187, i32 506376475, i32 1212076611, i32 760835835, i32 -1007232023, i32 -1500420271, i32 531214540, i32 2060323956, i32 -1805534874, i32 -251263522]], align 16
@.str115 = private unnamed_addr constant [30 x i8] c"invalid distance too far back\00", align 1
@.str1116 = private unnamed_addr constant [22 x i8] c"invalid distance code\00", align 1
@.str2117 = private unnamed_addr constant [28 x i8] c"invalid literal/length code\00", align 1

; Function Attrs: noreturn nounwind uwtable
define void @error(i8* %msg) #0 {
entry:
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !1
  %1 = load i8** @prog, align 8, !tbaa !1
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i8* %1, i8* %msg) #10
  tail call void @exit(i32 1) #11
  unreachable
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #2

; Function Attrs: nounwind uwtable
define void @gz_compress(%struct._IO_FILE* nocapture %in, %struct.gzFile_s* %out) #3 {
entry:
  %buf = alloca [16384 x i8], align 16
  %err = alloca i32, align 4
  %0 = getelementptr inbounds [16384 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 16384, i8* %0) #4
  br label %for.cond

for.cond:                                         ; preds = %if.end4, %entry
  %call = call i64 @fread(i8* %0, i64 1, i64 16384, %struct._IO_FILE* %in) #4
  %conv = trunc i64 %call to i32
  %call1 = call i32 @ferror(%struct._IO_FILE* %in) #4
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.cond
  call void @perror(i8* getelementptr inbounds ([6 x i8]* @.str1, i64 0, i64 0)) #10
  call void @exit(i32 1) #11
  unreachable

if.end:                                           ; preds = %for.cond
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %for.end, label %if.end4

if.end4:                                          ; preds = %if.end
  %call6 = call i32 @gzwrite(%struct.gzFile_s* %out, i8* %0, i32 %conv) #4
  %cmp7 = icmp eq i32 %call6, %conv
  br i1 %cmp7, label %for.cond, label %if.then9

if.then9:                                         ; preds = %if.end4
  %call10 = call i8* @gzerror(%struct.gzFile_s* %out, i32* %err) #4
  call void @error(i8* %call10)
  unreachable

for.end:                                          ; preds = %if.end
  %call12 = call i32 @fclose(%struct._IO_FILE* %in) #4
  %call13 = call i32 @gzclose(%struct.gzFile_s* %out) #4
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.end17, label %if.then16

if.then16:                                        ; preds = %for.end
  call void @error(i8* getelementptr inbounds ([15 x i8]* @.str2, i64 0, i64 0))
  unreachable

if.end17:                                         ; preds = %for.end
  call void @llvm.lifetime.end(i64 16384, i8* %0) #4
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare void @perror(i8* nocapture readonly) #1

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

; Function Attrs: nounwind uwtable
define void @gz_uncompress(%struct.gzFile_s* %in, %struct._IO_FILE* nocapture %out) #3 {
entry:
  %buf = alloca [16384 x i8], align 16
  %err = alloca i32, align 4
  %0 = getelementptr inbounds [16384 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 16384, i8* %0) #4
  br label %for.cond

for.cond:                                         ; preds = %if.end4, %entry
  %call = call i32 @gzread(%struct.gzFile_s* %in, i8* %0, i32 16384) #4
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  %call1 = call i8* @gzerror(%struct.gzFile_s* %in, i32* %err) #4
  call void @error(i8* %call1)
  unreachable

if.end:                                           ; preds = %for.cond
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %for.end, label %if.end4

if.end4:                                          ; preds = %if.end
  %conv = zext i32 %call to i64
  %call6 = call i64 @fwrite(i8* %0, i64 1, i64 %conv, %struct._IO_FILE* %out) #4
  %conv7 = trunc i64 %call6 to i32
  %cmp8 = icmp eq i32 %conv7, %call
  br i1 %cmp8, label %for.cond, label %if.then10

if.then10:                                        ; preds = %if.end4
  call void @error(i8* getelementptr inbounds ([14 x i8]* @.str3, i64 0, i64 0))
  unreachable

for.end:                                          ; preds = %if.end
  %call12 = call i32 @fclose(%struct._IO_FILE* %out) #4
  %tobool = icmp eq i32 %call12, 0
  br i1 %tobool, label %if.end14, label %if.then13

if.then13:                                        ; preds = %for.end
  call void @error(i8* getelementptr inbounds ([14 x i8]* @.str4, i64 0, i64 0))
  unreachable

if.end14:                                         ; preds = %for.end
  %call15 = call i32 @gzclose(%struct.gzFile_s* %in) #4
  %cmp16 = icmp eq i32 %call15, 0
  br i1 %cmp16, label %if.end19, label %if.then18

if.then18:                                        ; preds = %if.end14
  call void @error(i8* getelementptr inbounds ([15 x i8]* @.str2, i64 0, i64 0))
  unreachable

if.end19:                                         ; preds = %if.end14
  call void @llvm.lifetime.end(i64 16384, i8* %0) #4
  ret void
}

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind uwtable
define void @file_compress(i8* %file, i8* %mode) #3 {
entry:
  %outfile = alloca [1024 x i8], align 16
  %0 = getelementptr inbounds [1024 x i8]* %outfile, i64 0, i64 0
  call void @llvm.lifetime.start(i64 1024, i8* %0) #4
  %call = tail call i64 @strlen(i8* %file) #12
  %add = add i64 %call, 3
  %cmp = icmp ugt i64 %add, 1023
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !1
  %2 = load i8** @prog, align 8, !tbaa !1
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([23 x i8]* @.str5, i64 0, i64 0), i8* %2) #10
  tail call void @exit(i32 1) #11
  unreachable

if.end:                                           ; preds = %entry
  %call2 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %0, i64 1024, i8* getelementptr inbounds ([5 x i8]* @.str6, i64 0, i64 0), i8* %file, i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0)) #4
  %call3 = tail call %struct._IO_FILE* @fopen(i8* %file, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #4
  %cmp4 = icmp eq %struct._IO_FILE* %call3, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  tail call void @perror(i8* %file) #10
  tail call void @exit(i32 1) #11
  unreachable

if.end6:                                          ; preds = %if.end
  %call8 = call %struct.gzFile_s* @gzopen(i8* %0, i8* %mode) #4
  %cmp9 = icmp eq %struct.gzFile_s* %call8, null
  br i1 %cmp9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.end6
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !1
  %4 = load i8** @prog, align 8, !tbaa !1
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([21 x i8]* @.str9, i64 0, i64 0), i8* %4, i8* %0) #10
  call void @exit(i32 1) #11
  unreachable

if.end13:                                         ; preds = %if.end6
  call void @gz_compress(%struct._IO_FILE* %call3, %struct.gzFile_s* %call8)
  %call14 = call i32 @unlink(i8* %file) #4
  call void @llvm.lifetime.end(i64 1024, i8* %0) #4
  ret void
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #5

; Function Attrs: nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) #1

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #1

; Function Attrs: nounwind
declare i32 @unlink(i8* nocapture readonly) #1

; Function Attrs: nounwind uwtable
define void @file_uncompress(i8* %file) #3 {
entry:
  %buf = alloca [1024 x i8], align 16
  %0 = getelementptr inbounds [1024 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 1024, i8* %0) #4
  %call = tail call i64 @strlen(i8* %file) #12
  %add = add i64 %call, 3
  %cmp = icmp ugt i64 %add, 1023
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !1
  %2 = load i8** @prog, align 8, !tbaa !1
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([23 x i8]* @.str5, i64 0, i64 0), i8* %2) #10
  tail call void @exit(i32 1) #11
  unreachable

if.end:                                           ; preds = %entry
  %call2 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %0, i64 1024, i8* getelementptr inbounds ([3 x i8]* @.str10, i64 0, i64 0), i8* %file) #4
  %cmp3 = icmp ugt i64 %call, 3
  br i1 %cmp3, label %cond.true, label %if.else

cond.true:                                        ; preds = %if.end
  %add.ptr.sum = add i64 %call, -3
  %add.ptr7 = getelementptr inbounds i8* %file, i64 %add.ptr.sum
  %3 = load i8* %add.ptr7, align 1, !tbaa !5
  %conv9 = zext i8 %3 to i32
  %sub = sub nsw i32 46, %conv9
  %cmp13 = icmp eq i8 %3, 46
  br i1 %cmp13, label %if.then15, label %if.end42

if.then15:                                        ; preds = %cond.true
  %add.ptr7.sum = add i64 %call, -2
  %arrayidx17 = getelementptr inbounds i8* %file, i64 %add.ptr7.sum
  %4 = load i8* %arrayidx17, align 1, !tbaa !5
  %conv18 = zext i8 %4 to i32
  %sub19 = sub nsw i32 103, %conv18
  %cmp23 = icmp eq i8 %4, 103
  br i1 %cmp23, label %if.then25, label %if.end42

if.then25:                                        ; preds = %if.then15
  %add.ptr7.sum100 = add i64 %call, -1
  %arrayidx27 = getelementptr inbounds i8* %file, i64 %add.ptr7.sum100
  %5 = load i8* %arrayidx27, align 1, !tbaa !5
  %conv28 = zext i8 %5 to i32
  %sub29 = sub nsw i32 122, %conv28
  %cmp33 = icmp eq i8 %5, 122
  br i1 %cmp33, label %if.then35, label %if.end42

if.then35:                                        ; preds = %if.then25
  %arrayidx37 = getelementptr inbounds i8* %file, i64 %call
  %6 = load i8* %arrayidx37, align 1, !tbaa !5
  %conv38 = zext i8 %6 to i32
  %sub39 = sub nsw i32 0, %conv38
  br label %if.end42

if.end42:                                         ; preds = %if.then35, %if.then25, %if.then15, %cond.true
  %__result.0 = phi i32 [ %sub39, %if.then35 ], [ %sub29, %if.then25 ], [ %sub19, %if.then15 ], [ %sub, %cond.true ]
  %phitmp = icmp eq i32 %__result.0, 0
  br i1 %phitmp, label %if.then50, label %if.else

if.then50:                                        ; preds = %if.end42
  %arrayidx53 = getelementptr inbounds [1024 x i8]* %buf, i64 0, i64 %add.ptr.sum
  store i8 0, i8* %arrayidx53, align 1, !tbaa !5
  br label %if.end59

if.else:                                          ; preds = %if.end42, %if.end
  %add.ptr56 = getelementptr inbounds [1024 x i8]* %buf, i64 0, i64 %call
  %sub57 = sub i64 1024, %call
  %call58 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %add.ptr56, i64 %sub57, i8* getelementptr inbounds ([3 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0)) #4
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.then50
  %outfile.0 = phi i8* [ %0, %if.then50 ], [ %file, %if.else ]
  %infile.0 = phi i8* [ %file, %if.then50 ], [ %0, %if.else ]
  %call60 = call %struct.gzFile_s* @gzopen(i8* %infile.0, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #4
  %cmp61 = icmp eq %struct.gzFile_s* %call60, null
  br i1 %cmp61, label %if.then63, label %if.end65

if.then63:                                        ; preds = %if.end59
  %7 = load %struct._IO_FILE** @stderr, align 8, !tbaa !1
  %8 = load i8** @prog, align 8, !tbaa !1
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([21 x i8]* @.str9, i64 0, i64 0), i8* %8, i8* %infile.0) #10
  call void @exit(i32 1) #11
  unreachable

if.end65:                                         ; preds = %if.end59
  %call66 = call %struct._IO_FILE* @fopen(i8* %outfile.0, i8* getelementptr inbounds ([3 x i8]* @.str11, i64 0, i64 0)) #4
  %cmp67 = icmp eq %struct._IO_FILE* %call66, null
  br i1 %cmp67, label %if.then69, label %if.end70

if.then69:                                        ; preds = %if.end65
  call void @perror(i8* %file) #10
  call void @exit(i32 1) #11
  unreachable

if.end70:                                         ; preds = %if.end65
  call void @gz_uncompress(%struct.gzFile_s* %call60, %struct._IO_FILE* %call66)
  %call71 = call i32 @unlink(i8* %infile.0) #4
  call void @llvm.lifetime.end(i64 1024, i8* %0) #4
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) #3 {
entry:
  %outmode = alloca [20 x i8], align 16
  %arraydecay = getelementptr inbounds [20 x i8]* %outmode, i64 0, i64 0
  %call = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 20, i8* getelementptr inbounds ([3 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str12, i64 0, i64 0)) #4
  %0 = load i8** %argv, align 8, !tbaa !1
  store i8* %0, i8** @prog, align 8, !tbaa !1
  %1 = load i8** %argv, align 8, !tbaa !1
  %call2 = tail call i8* @strrchr(i8* %1, i32 47) #12
  %tobool = icmp eq i8* %call2, null
  %incdec.ptr = getelementptr inbounds i8* %call2, i64 1
  %bname.0 = select i1 %tobool, i8* %1, i8* %incdec.ptr
  %dec = add nsw i32 %argc, -1
  %incdec.ptr4 = getelementptr inbounds i8** %argv, i64 1
  %call44 = tail call i32 @strcmp(i8* %bname.0, i8* getelementptr inbounds ([7 x i8]* @.str13, i64 0, i64 0)) #4
  %tobool45 = icmp eq i32 %call44, 0
  br i1 %tobool45, label %while.cond.preheader, label %cond.false100

cond.false100:                                    ; preds = %entry
  %call101 = tail call i32 @strcmp(i8* %bname.0, i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0)) #4
  %tobool104 = icmp eq i32 %call101, 0
  %. = zext i1 %tobool104 to i32
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %cond.false100, %entry
  %uncompr.0.ph = phi i32 [ %., %cond.false100 ], [ 1, %entry ]
  %copyout.0.ph = phi i32 [ %., %cond.false100 ], [ 0, %entry ]
  %cmp108643 = icmp sgt i32 %dec, 0
  %arrayidx289 = getelementptr inbounds [20 x i8]* %outmode, i64 0, i64 3
  br i1 %cmp108643, label %cond.true118.lr.ph, label %while.end

cond.true118.lr.ph:                               ; preds = %while.cond.preheader
  %arrayidx434 = getelementptr inbounds [20 x i8]* %outmode, i64 0, i64 2
  br label %cond.true118

cond.true118:                                     ; preds = %if.end441, %cond.true118.lr.ph
  %argc.addr.0648 = phi i32 [ %dec, %cond.true118.lr.ph ], [ %dec442, %if.end441 ]
  %argv.addr.0646 = phi i8** [ %incdec.ptr4, %cond.true118.lr.ph ], [ %incdec.ptr443, %if.end441 ]
  %2 = phi i8** [ %argv, %cond.true118.lr.ph ], [ %argv.addr.0646, %if.end441 ]
  %copyout.0645 = phi i32 [ %copyout.0.ph, %cond.true118.lr.ph ], [ %copyout.1, %if.end441 ]
  %uncompr.0644 = phi i32 [ %uncompr.0.ph, %cond.true118.lr.ph ], [ %uncompr.1, %if.end441 ]
  %3 = load i8** %argv.addr.0646, align 8, !tbaa !1
  %4 = load i8* %3, align 1, !tbaa !5
  %conv125 = zext i8 %4 to i32
  %sub126 = sub nsw i32 45, %conv125
  %cmp130 = icmp eq i8 %4, 45
  br i1 %cmp130, label %if.then132, label %if.end159

if.then132:                                       ; preds = %cond.true118
  %arrayidx134 = getelementptr inbounds i8* %3, i64 1
  %5 = load i8* %arrayidx134, align 1, !tbaa !5
  %conv135 = zext i8 %5 to i32
  %sub136 = sub nsw i32 99, %conv135
  %cmp140 = icmp eq i8 %5, 99
  br i1 %cmp140, label %if.then142, label %if.end159

if.then142:                                       ; preds = %if.then132
  %arrayidx144 = getelementptr inbounds i8* %3, i64 2
  %6 = load i8* %arrayidx144, align 1, !tbaa !5
  %conv145 = zext i8 %6 to i32
  %sub146 = sub nsw i32 0, %conv145
  br label %if.end159

if.end159:                                        ; preds = %if.then142, %if.then132, %cond.true118
  %__result122.0 = phi i32 [ %sub146, %if.then142 ], [ %sub136, %if.then132 ], [ %sub126, %cond.true118 ]
  %phitmp = icmp eq i32 %__result122.0, 0
  br i1 %phitmp, label %if.end441, label %cond.true178

cond.true178:                                     ; preds = %if.end159
  br i1 %cmp130, label %if.then192, label %if.end219

if.then192:                                       ; preds = %cond.true178
  %arrayidx194 = getelementptr inbounds i8* %3, i64 1
  %7 = load i8* %arrayidx194, align 1, !tbaa !5
  %conv195 = zext i8 %7 to i32
  %sub196 = sub nsw i32 100, %conv195
  %cmp200 = icmp eq i8 %7, 100
  br i1 %cmp200, label %if.then202, label %if.end219

if.then202:                                       ; preds = %if.then192
  %arrayidx204 = getelementptr inbounds i8* %3, i64 2
  %8 = load i8* %arrayidx204, align 1, !tbaa !5
  %conv205 = zext i8 %8 to i32
  %sub206 = sub nsw i32 0, %conv205
  br label %if.end219

if.end219:                                        ; preds = %if.then202, %if.then192, %cond.true178
  %__result182.0 = phi i32 [ %sub206, %if.then202 ], [ %sub196, %if.then192 ], [ %sub126, %cond.true178 ]
  %phitmp638 = icmp eq i32 %__result182.0, 0
  br i1 %phitmp638, label %if.end441, label %cond.true238

cond.true238:                                     ; preds = %if.end219
  br i1 %cmp130, label %if.then252, label %if.end279

if.then252:                                       ; preds = %cond.true238
  %arrayidx254 = getelementptr inbounds i8* %3, i64 1
  %9 = load i8* %arrayidx254, align 1, !tbaa !5
  %conv255 = zext i8 %9 to i32
  %sub256 = sub nsw i32 102, %conv255
  %cmp260 = icmp eq i8 %9, 102
  br i1 %cmp260, label %if.then262, label %if.end279

if.then262:                                       ; preds = %if.then252
  %arrayidx264 = getelementptr inbounds i8* %3, i64 2
  %10 = load i8* %arrayidx264, align 1, !tbaa !5
  %conv265 = zext i8 %10 to i32
  %sub266 = sub nsw i32 0, %conv265
  br label %if.end279

if.end279:                                        ; preds = %if.then262, %if.then252, %cond.true238
  %__result242.0 = phi i32 [ %sub266, %if.then262 ], [ %sub256, %if.then252 ], [ %sub126, %cond.true238 ]
  %phitmp639 = icmp eq i32 %__result242.0, 0
  br i1 %phitmp639, label %if.then288, label %cond.true299

if.then288:                                       ; preds = %if.end279
  store i8 102, i8* %arrayidx289, align 1, !tbaa !5
  br label %if.end441

cond.true299:                                     ; preds = %if.end279
  br i1 %cmp130, label %if.then313, label %if.end340

if.then313:                                       ; preds = %cond.true299
  %arrayidx315 = getelementptr inbounds i8* %3, i64 1
  %11 = load i8* %arrayidx315, align 1, !tbaa !5
  %conv316 = zext i8 %11 to i32
  %sub317 = sub nsw i32 104, %conv316
  %cmp321 = icmp eq i8 %11, 104
  br i1 %cmp321, label %if.then323, label %if.end340

if.then323:                                       ; preds = %if.then313
  %arrayidx325 = getelementptr inbounds i8* %3, i64 2
  %12 = load i8* %arrayidx325, align 1, !tbaa !5
  %conv326 = zext i8 %12 to i32
  %sub327 = sub nsw i32 0, %conv326
  br label %if.end340

if.end340:                                        ; preds = %if.then323, %if.then313, %cond.true299
  %__result303.0 = phi i32 [ %sub327, %if.then323 ], [ %sub317, %if.then313 ], [ %sub126, %cond.true299 ]
  %phitmp640 = icmp eq i32 %__result303.0, 0
  br i1 %phitmp640, label %if.then349, label %cond.true360

if.then349:                                       ; preds = %if.end340
  store i8 104, i8* %arrayidx289, align 1, !tbaa !5
  br label %if.end441

cond.true360:                                     ; preds = %if.end340
  br i1 %cmp130, label %if.then374, label %if.end401

if.then374:                                       ; preds = %cond.true360
  %arrayidx376 = getelementptr inbounds i8* %3, i64 1
  %13 = load i8* %arrayidx376, align 1, !tbaa !5
  %conv377 = zext i8 %13 to i32
  %sub378 = sub nsw i32 114, %conv377
  %cmp382 = icmp eq i8 %13, 114
  br i1 %cmp382, label %if.then384, label %if.end401

if.then384:                                       ; preds = %if.then374
  %arrayidx386 = getelementptr inbounds i8* %3, i64 2
  %14 = load i8* %arrayidx386, align 1, !tbaa !5
  %conv387 = zext i8 %14 to i32
  %sub388 = sub nsw i32 0, %conv387
  br label %if.end401

if.end401:                                        ; preds = %if.then384, %if.then374, %cond.true360
  %__result364.0 = phi i32 [ %sub388, %if.then384 ], [ %sub378, %if.then374 ], [ %sub126, %cond.true360 ]
  %phitmp641 = icmp eq i32 %__result364.0, 0
  br i1 %phitmp641, label %if.then410, label %if.else412

if.then410:                                       ; preds = %if.end401
  store i8 82, i8* %arrayidx289, align 1, !tbaa !5
  br label %if.end441

if.else412:                                       ; preds = %if.end401
  br i1 %cmp130, label %land.lhs.true417, label %while.end.loopexit

land.lhs.true417:                                 ; preds = %if.else412
  %arrayidx418 = getelementptr inbounds i8* %3, i64 1
  %15 = load i8* %arrayidx418, align 1, !tbaa !5
  %.off = add i8 %15, -49
  %16 = icmp ult i8 %.off, 9
  br i1 %16, label %land.lhs.true427, label %while.end.loopexit

land.lhs.true427:                                 ; preds = %land.lhs.true417
  %arrayidx428 = getelementptr inbounds i8* %3, i64 2
  %17 = load i8* %arrayidx428, align 1, !tbaa !5
  %cmp430 = icmp eq i8 %17, 0
  br i1 %cmp430, label %if.then432, label %while.end.loopexit

if.then432:                                       ; preds = %land.lhs.true427
  store i8 %15, i8* %arrayidx434, align 2, !tbaa !5
  br label %if.end441

if.end441:                                        ; preds = %if.then432, %if.then410, %if.then349, %if.then288, %if.end219, %if.end159
  %uncompr.1 = phi i32 [ %uncompr.0644, %if.then288 ], [ %uncompr.0644, %if.then349 ], [ %uncompr.0644, %if.then410 ], [ %uncompr.0644, %if.then432 ], [ %uncompr.0644, %if.end159 ], [ 1, %if.end219 ]
  %copyout.1 = phi i32 [ %copyout.0645, %if.then288 ], [ %copyout.0645, %if.then349 ], [ %copyout.0645, %if.then410 ], [ %copyout.0645, %if.then432 ], [ 1, %if.end159 ], [ %copyout.0645, %if.end219 ]
  %dec442 = add nsw i32 %argc.addr.0648, -1
  %incdec.ptr443 = getelementptr inbounds i8** %2, i64 2
  %cmp108 = icmp sgt i32 %dec442, 0
  br i1 %cmp108, label %cond.true118, label %while.end.loopexit

while.end.loopexit:                               ; preds = %if.end441, %land.lhs.true427, %land.lhs.true417, %if.else412
  %argc.addr.0.lcssa.ph = phi i32 [ %argc.addr.0648, %if.else412 ], [ %argc.addr.0648, %land.lhs.true417 ], [ %argc.addr.0648, %land.lhs.true427 ], [ %dec442, %if.end441 ]
  %argv.addr.0.lcssa.ph = phi i8** [ %argv.addr.0646, %if.else412 ], [ %argv.addr.0646, %land.lhs.true417 ], [ %argv.addr.0646, %land.lhs.true427 ], [ %incdec.ptr443, %if.end441 ]
  %copyout.0.lcssa.ph = phi i32 [ %copyout.0645, %if.else412 ], [ %copyout.0645, %land.lhs.true417 ], [ %copyout.0645, %land.lhs.true427 ], [ %copyout.1, %if.end441 ]
  %uncompr.0.lcssa.ph = phi i32 [ %uncompr.0644, %if.else412 ], [ %uncompr.0644, %land.lhs.true417 ], [ %uncompr.0644, %land.lhs.true427 ], [ %uncompr.1, %if.end441 ]
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %while.cond.preheader
  %argc.addr.0.lcssa = phi i32 [ %dec, %while.cond.preheader ], [ %argc.addr.0.lcssa.ph, %while.end.loopexit ]
  %argv.addr.0.lcssa = phi i8** [ %incdec.ptr4, %while.cond.preheader ], [ %argv.addr.0.lcssa.ph, %while.end.loopexit ]
  %copyout.0.lcssa = phi i32 [ %copyout.0.ph, %while.cond.preheader ], [ %copyout.0.lcssa.ph, %while.end.loopexit ]
  %uncompr.0.lcssa = phi i32 [ %uncompr.0.ph, %while.cond.preheader ], [ %uncompr.0.lcssa.ph, %while.end.loopexit ]
  %18 = load i8* %arrayidx289, align 1, !tbaa !5
  %cmp446 = icmp eq i8 %18, 32
  br i1 %cmp446, label %if.then448, label %if.end450

if.then448:                                       ; preds = %while.end
  store i8 0, i8* %arrayidx289, align 1, !tbaa !5
  br label %if.end450

if.end450:                                        ; preds = %if.then448, %while.end
  %cmp451 = icmp eq i32 %argc.addr.0.lcssa, 0
  %tobool454 = icmp eq i32 %uncompr.0.lcssa, 0
  br i1 %cmp451, label %if.then453, label %do.body.preheader

do.body.preheader:                                ; preds = %if.end450
  %tobool477 = icmp ne i32 %copyout.0.lcssa, 0
  br i1 %tobool454, label %if.else488.us.preheader, label %if.then476.preheader

if.then476.preheader:                             ; preds = %do.body.preheader
  br label %if.then476

if.else488.us.preheader:                          ; preds = %do.body.preheader
  br label %if.else488.us

if.else488.us:                                    ; preds = %do.cond.us, %if.else488.us.preheader
  %argv.addr.1.us = phi i8** [ %incdec.ptr509.us, %do.cond.us ], [ %argv.addr.0.lcssa, %if.else488.us.preheader ]
  %argc.addr.1.us = phi i32 [ %dec510.us, %do.cond.us ], [ %argc.addr.0.lcssa, %if.else488.us.preheader ]
  %19 = load i8** %argv.addr.1.us, align 8, !tbaa !1
  br i1 %tobool477, label %if.then490.us, label %if.else505.us

if.else505.us:                                    ; preds = %if.else488.us
  call void @file_compress(i8* %19, i8* %arraydecay)
  br label %do.cond.us

if.then490.us:                                    ; preds = %if.else488.us
  %call492.us = call %struct._IO_FILE* @fopen(i8* %19, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #4
  %cmp493.us = icmp eq %struct._IO_FILE* %call492.us, null
  br i1 %cmp493.us, label %if.then495.us, label %if.else496.us

if.else496.us:                                    ; preds = %if.then490.us
  %20 = load %struct._IO_FILE** @stdout, align 8, !tbaa !1
  %call497.us = call i32 @fileno(%struct._IO_FILE* %20) #4
  %call499.us = call %struct.gzFile_s* @gzdopen(i32 %call497.us, i8* %arraydecay) #4
  %cmp500.us = icmp eq %struct.gzFile_s* %call499.us, null
  br i1 %cmp500.us, label %if.then502, label %if.end503.us

if.end503.us:                                     ; preds = %if.else496.us
  call void @gz_compress(%struct._IO_FILE* %call492.us, %struct.gzFile_s* %call499.us)
  br label %do.cond.us

if.then495.us:                                    ; preds = %if.then490.us
  %21 = load i8** %argv.addr.1.us, align 8, !tbaa !1
  call void @perror(i8* %21) #10
  br label %do.cond.us

do.cond.us:                                       ; preds = %if.then495.us, %if.end503.us, %if.else505.us
  %incdec.ptr509.us = getelementptr inbounds i8** %argv.addr.1.us, i64 1
  %dec510.us = add nsw i32 %argc.addr.1.us, -1
  %tobool511.us = icmp eq i32 %dec510.us, 0
  br i1 %tobool511.us, label %if.end512.loopexit, label %if.else488.us

if.then453:                                       ; preds = %if.end450
  br i1 %tobool454, label %if.else462, label %if.then455

if.then455:                                       ; preds = %if.then453
  %22 = load %struct._IO_FILE** @stdin, align 8, !tbaa !1
  %call456 = tail call i32 @fileno(%struct._IO_FILE* %22) #4
  %call457 = tail call %struct.gzFile_s* @gzdopen(i32 %call456, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #4
  %cmp458 = icmp eq %struct.gzFile_s* %call457, null
  br i1 %cmp458, label %if.then460, label %if.end461

if.then460:                                       ; preds = %if.then455
  tail call void @error(i8* getelementptr inbounds ([20 x i8]* @.str20, i64 0, i64 0))
  unreachable

if.end461:                                        ; preds = %if.then455
  %23 = load %struct._IO_FILE** @stdout, align 8, !tbaa !1
  tail call void @gz_uncompress(%struct.gzFile_s* %call457, %struct._IO_FILE* %23)
  br label %if.end512

if.else462:                                       ; preds = %if.then453
  %24 = load %struct._IO_FILE** @stdout, align 8, !tbaa !1
  %call463 = tail call i32 @fileno(%struct._IO_FILE* %24) #4
  %call465 = call %struct.gzFile_s* @gzdopen(i32 %call463, i8* %arraydecay) #4
  %cmp466 = icmp eq %struct.gzFile_s* %call465, null
  br i1 %cmp466, label %if.then468, label %if.end469

if.then468:                                       ; preds = %if.else462
  call void @error(i8* getelementptr inbounds ([21 x i8]* @.str21, i64 0, i64 0))
  unreachable

if.end469:                                        ; preds = %if.else462
  %25 = load %struct._IO_FILE** @stdin, align 8, !tbaa !1
  call void @gz_compress(%struct._IO_FILE* %25, %struct.gzFile_s* %call465)
  br label %if.end512

if.then476:                                       ; preds = %do.cond, %if.then476.preheader
  %argv.addr.1 = phi i8** [ %incdec.ptr509, %do.cond ], [ %argv.addr.0.lcssa, %if.then476.preheader ]
  %argc.addr.1 = phi i32 [ %dec510, %do.cond ], [ %argc.addr.0.lcssa, %if.then476.preheader ]
  %26 = load i8** %argv.addr.1, align 8, !tbaa !1
  br i1 %tobool477, label %if.then478, label %if.else486

if.then478:                                       ; preds = %if.then476
  %call479 = call %struct.gzFile_s* @gzopen(i8* %26, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #4
  %cmp480 = icmp eq %struct.gzFile_s* %call479, null
  br i1 %cmp480, label %if.then482, label %if.else484

if.then482:                                       ; preds = %if.then478
  %27 = load %struct._IO_FILE** @stderr, align 8, !tbaa !1
  %28 = load i8** @prog, align 8, !tbaa !1
  %29 = load i8** %argv.addr.1, align 8, !tbaa !1
  %call483 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([21 x i8]* @.str9, i64 0, i64 0), i8* %28, i8* %29) #10
  br label %do.cond

if.else484:                                       ; preds = %if.then478
  %30 = load %struct._IO_FILE** @stdout, align 8, !tbaa !1
  call void @gz_uncompress(%struct.gzFile_s* %call479, %struct._IO_FILE* %30)
  br label %do.cond

if.else486:                                       ; preds = %if.then476
  call void @file_uncompress(i8* %26)
  br label %do.cond

if.then502:                                       ; preds = %if.else496.us
  call void @error(i8* getelementptr inbounds ([21 x i8]* @.str21, i64 0, i64 0))
  unreachable

do.cond:                                          ; preds = %if.else486, %if.else484, %if.then482
  %incdec.ptr509 = getelementptr inbounds i8** %argv.addr.1, i64 1
  %dec510 = add nsw i32 %argc.addr.1, -1
  %tobool511 = icmp eq i32 %dec510, 0
  br i1 %tobool511, label %if.end512.loopexit678, label %if.then476

if.end512.loopexit:                               ; preds = %do.cond.us
  br label %if.end512

if.end512.loopexit678:                            ; preds = %do.cond
  br label %if.end512

if.end512:                                        ; preds = %if.end512.loopexit678, %if.end512.loopexit, %if.end469, %if.end461
  ret i32 0
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #5

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind uwtable
define i32 @gzclose(%struct.gzFile_s* %file) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %1 = load i32* %0, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %1, 7247
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %call = tail call i32 @gzclose_r(%struct.gzFile_s* %file) #4
  br label %return

cond.false:                                       ; preds = %if.end
  %call2 = tail call i32 @gzclose_w(%struct.gzFile_s* %file) #4
  br label %return

return:                                           ; preds = %cond.false, %cond.true, %entry
  %retval.0 = phi i32 [ -2, %entry ], [ %call, %cond.true ], [ %call2, %cond.false ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define noalias %struct.gzFile_s* @gzopen(i8* %path, i8* nocapture readonly %mode) #3 {
entry:
  %call = tail call fastcc %struct.gzFile_s* @gz_open(i8* %path, i32 -1, i8* %mode)
  ret %struct.gzFile_s* %call
}

; Function Attrs: nounwind uwtable
define noalias %struct.gzFile_s* @gzopen64(i8* %path, i8* nocapture readonly %mode) #3 {
entry:
  %call = tail call fastcc %struct.gzFile_s* @gz_open(i8* %path, i32 -1, i8* %mode)
  ret %struct.gzFile_s* %call
}

; Function Attrs: nounwind uwtable
define noalias %struct.gzFile_s* @gzdopen(i32 %fd, i8* nocapture readonly %mode) #3 {
entry:
  %cmp = icmp eq i32 %fd, -1
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call = tail call noalias i8* @malloc(i64 19) #4
  %cmp1 = icmp eq i8* %call, null
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %call, i64 19, i8* getelementptr inbounds ([8 x i8]* @.str15, i64 0, i64 0), i32 %fd) #4
  %call3 = tail call fastcc %struct.gzFile_s* @gz_open(i8* %call, i32 %fd, i8* %mode)
  tail call void @free(i8* %call) #4
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false, %entry
  %retval.0 = phi %struct.gzFile_s* [ %call3, %if.end ], [ null, %lor.lhs.false ], [ null, %entry ]
  ret %struct.gzFile_s* %retval.0
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define i32 @gzbuffer(%struct.gzFile_s* %file, i32 %size) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  switch i32 %2, label %return [
    i32 7247, label %if.end5
    i32 31153, label %if.end5
  ]

if.end5:                                          ; preds = %if.end, %if.end
  %size6 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %3 = bitcast i64* %size6 to i32*
  %4 = load i32* %3, align 4, !tbaa !12
  %cmp7 = icmp eq i32 %4, 0
  br i1 %cmp7, label %if.end9, label %return

if.end9:                                          ; preds = %if.end5
  %cmp10 = icmp ult i32 %size, 2
  %.size = select i1 %cmp10, i32 2, i32 %size
  %want = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 5
  store i32 %.size, i32* %want, align 4, !tbaa !13
  br label %return

return:                                           ; preds = %if.end9, %if.end5, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end9 ], [ -1, %entry ], [ -1, %if.end ], [ -1, %if.end5 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzrewind(%struct.gzFile_s* %file) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %2, 7247
  br i1 %cmp1, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  switch i32 %3, label %return [
    i32 0, label %if.end6
    i32 -5, label %if.end6
  ]

if.end6:                                          ; preds = %lor.lhs.false, %lor.lhs.false
  %fd = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 2
  %4 = load i32* %fd, align 4, !tbaa !15
  %start = getelementptr inbounds %struct.gzFile_s* %file, i64 3
  %5 = bitcast %struct.gzFile_s* %start to i64*
  %6 = load i64* %5, align 8, !tbaa !16
  %call = tail call i64 @lseek64(i32 %4, i64 %6, i32 0) #4
  %cmp7 = icmp eq i64 %call, -1
  br i1 %cmp7, label %return, label %if.end9

if.end9:                                          ; preds = %if.end6
  %have.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  store i32 0, i32* %have.i, align 4, !tbaa !17
  %7 = load i32* %1, align 4, !tbaa !6
  %cmp.i = icmp eq i32 %7, 7247
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end9
  %eof.i = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 1
  %8 = bitcast i8** %eof.i to i32*
  store i32 0, i32* %8, align 4, !tbaa !18
  %past.i = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 12
  store i32 0, i32* %past.i, align 4, !tbaa !19
  %how.i = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 9
  store i32 0, i32* %how.i, align 4, !tbaa !20
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end9
  %seek.i = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %9 = bitcast i8** %seek.i to i32*
  store i32 0, i32* %9, align 4, !tbaa !21
  %msg1.i.i = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 2
  %10 = bitcast i64* %msg1.i.i to i8**
  %11 = load i8** %10, align 8, !tbaa !22
  %cmp.i.i = icmp eq i8* %11, null
  br i1 %cmp.i.i, label %gz_reset.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i
  %12 = load i32* %err, align 4, !tbaa !14
  %cmp3.i.i = icmp eq i32 %12, -4
  br i1 %cmp3.i.i, label %if.end.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(i8* %11) #4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then4.i.i, %if.then.i.i
  store i64 0, i64* %msg1.i.i, align 8, !tbaa !22
  br label %gz_reset.exit

gz_reset.exit:                                    ; preds = %if.end.i.i, %if.end.i
  store i32 0, i32* %err, align 4, !tbaa !14
  %13 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  store i64 0, i64* %13, align 8, !tbaa !23
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %14 = bitcast i8** %avail_in.i to i32*
  store i32 0, i32* %14, align 4, !tbaa !24
  br label %return

return:                                           ; preds = %gz_reset.exit, %if.end6, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ 0, %gz_reset.exit ], [ -1, %entry ], [ -1, %lor.lhs.false ], [ -1, %if.end ], [ -1, %if.end6 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare i64 @lseek64(i32, i64, i32) #1

; Function Attrs: nounwind uwtable
define i64 @gzseek64(%struct.gzFile_s* %file, i64 %offset, i32 %whence) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  switch i32 %2, label %return [
    i32 7247, label %if.end5
    i32 31153, label %if.end5
  ]

if.end5:                                          ; preds = %if.end, %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  switch i32 %3, label %return [
    i32 0, label %if.end11
    i32 -5, label %if.end11
  ]

if.end11:                                         ; preds = %if.end5, %if.end5
  %whence.cmp = icmp ugt i32 %whence, 1
  br i1 %whence.cmp, label %return, label %if.end16

if.end16:                                         ; preds = %if.end11
  %cmp17 = icmp eq i32 %whence, 0
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.end16
  %pos = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %4 = load i64* %pos, align 8, !tbaa !23
  %sub = sub nsw i64 %offset, %4
  %seek22.pre = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %.pre156 = bitcast i8** %seek22.pre to i32*
  br label %if.end21

if.else:                                          ; preds = %if.end16
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %5 = bitcast i8** %seek to i32*
  %6 = load i32* %5, align 4, !tbaa !21
  %tobool = icmp eq i32 %6, 0
  br i1 %tobool, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.else
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %7 = bitcast %struct.gzFile_s* %skip to i64*
  %8 = load i64* %7, align 8, !tbaa !25
  %add = add nsw i64 %8, %offset
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.else, %if.then18
  %.pre-phi = phi i32* [ %5, %if.else ], [ %5, %if.then19 ], [ %.pre156, %if.then18 ]
  %offset.addr.0 = phi i64 [ %offset, %if.else ], [ %add, %if.then19 ], [ %sub, %if.then18 ]
  store i32 0, i32* %.pre-phi, align 4, !tbaa !21
  %cmp24 = icmp eq i32 %2, 7247
  br i1 %cmp24, label %land.lhs.true25, label %if.end47

land.lhs.true25:                                  ; preds = %if.end21
  %how = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 9
  %9 = load i32* %how, align 4, !tbaa !20
  %cmp26 = icmp eq i32 %9, 1
  br i1 %cmp26, label %land.lhs.true27, label %if.end47

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %pos29 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %10 = load i64* %pos29, align 8, !tbaa !23
  %add30 = add nsw i64 %10, %offset.addr.0
  %cmp31 = icmp sgt i64 %add30, -1
  br i1 %cmp31, label %if.then32, label %if.end47

if.then32:                                        ; preds = %land.lhs.true27
  %fd = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 2
  %11 = load i32* %fd, align 4, !tbaa !15
  %have = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %12 = load i32* %have, align 4, !tbaa !17
  %conv = zext i32 %12 to i64
  %sub34 = sub nsw i64 %offset.addr.0, %conv
  %call = tail call i64 @lseek64(i32 %11, i64 %sub34, i32 1) #4
  %cmp35 = icmp eq i64 %call, -1
  br i1 %cmp35, label %return, label %if.end38

if.end38:                                         ; preds = %if.then32
  store i32 0, i32* %have, align 4, !tbaa !17
  %eof = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 1
  %13 = bitcast i8** %eof to i32*
  store i32 0, i32* %13, align 4, !tbaa !18
  %past = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 12
  store i32 0, i32* %past, align 4, !tbaa !19
  store i32 0, i32* %.pre-phi, align 4, !tbaa !21
  %msg1.i = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 2
  %14 = bitcast i64* %msg1.i to i8**
  %15 = load i8** %14, align 8, !tbaa !22
  %cmp.i = icmp eq i8* %15, null
  br i1 %cmp.i, label %gz_error.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end38
  %16 = load i32* %err, align 4, !tbaa !14
  %cmp3.i = icmp eq i32 %16, -4
  br i1 %cmp3.i, label %if.end.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  tail call void @free(i8* %15) #4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i
  store i64 0, i64* %msg1.i, align 8, !tbaa !22
  br label %gz_error.exit

gz_error.exit:                                    ; preds = %if.end.i, %if.end38
  store i32 0, i32* %err, align 4, !tbaa !14
  %avail_in = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %17 = bitcast i8** %avail_in to i32*
  store i32 0, i32* %17, align 4, !tbaa !24
  %18 = load i64* %pos29, align 8, !tbaa !23
  %add44 = add nsw i64 %18, %offset.addr.0
  store i64 %add44, i64* %pos29, align 8, !tbaa !23
  br label %return

if.end47:                                         ; preds = %land.lhs.true27, %land.lhs.true25, %if.end21
  %cmp48 = icmp slt i64 %offset.addr.0, 0
  br i1 %cmp48, label %if.then50, label %if.end68

if.then50:                                        ; preds = %if.end47
  br i1 %cmp24, label %if.end55, label %return

if.end55:                                         ; preds = %if.then50
  %pos57 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %19 = load i64* %pos57, align 8, !tbaa !23
  %add58 = add nsw i64 %19, %offset.addr.0
  %cmp59 = icmp slt i64 %add58, 0
  br i1 %cmp59, label %return, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end55
  switch i32 %3, label %return [
    i32 0, label %if.end6.i
    i32 -5, label %if.end6.i
  ]

if.end6.i:                                        ; preds = %lor.lhs.false.i, %lor.lhs.false.i
  %fd.i = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 2
  %20 = load i32* %fd.i, align 4, !tbaa !15
  %start.i = getelementptr inbounds %struct.gzFile_s* %file, i64 3
  %21 = bitcast %struct.gzFile_s* %start.i to i64*
  %22 = load i64* %21, align 8, !tbaa !16
  %call.i = tail call i64 @lseek64(i32 %20, i64 %22, i32 0) #4
  %cmp7.i = icmp eq i64 %call.i, -1
  br i1 %cmp7.i, label %return, label %if.end9.i

if.end9.i:                                        ; preds = %if.end6.i
  %have.i.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  store i32 0, i32* %have.i.i, align 4, !tbaa !17
  %23 = load i32* %1, align 4, !tbaa !6
  %cmp.i.i = icmp eq i32 %23, 7247
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.end9.i
  %eof.i.i = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 1
  %24 = bitcast i8** %eof.i.i to i32*
  store i32 0, i32* %24, align 4, !tbaa !18
  %past.i.i = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 12
  store i32 0, i32* %past.i.i, align 4, !tbaa !19
  %how.i.i = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 9
  store i32 0, i32* %how.i.i, align 4, !tbaa !20
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.end9.i
  store i32 0, i32* %.pre-phi, align 4, !tbaa !21
  %msg1.i.i.i = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 2
  %25 = bitcast i64* %msg1.i.i.i to i8**
  %26 = load i8** %25, align 8, !tbaa !22
  %cmp.i.i.i = icmp eq i8* %26, null
  br i1 %cmp.i.i.i, label %gzrewind.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %27 = load i32* %err, align 4, !tbaa !14
  %cmp3.i.i.i = icmp eq i32 %27, -4
  br i1 %cmp3.i.i.i, label %if.end.i.i.i, label %if.then4.i.i.i

if.then4.i.i.i:                                   ; preds = %if.then.i.i.i
  tail call void @free(i8* %26) #4
  %.pre.pre.pre = load i32* %1, align 4, !tbaa !6
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then4.i.i.i, %if.then.i.i.i
  %.pre.pre = phi i32 [ %.pre.pre.pre, %if.then4.i.i.i ], [ %23, %if.then.i.i.i ]
  store i64 0, i64* %msg1.i.i.i, align 8, !tbaa !22
  br label %gzrewind.exit

gzrewind.exit:                                    ; preds = %if.end.i.i.i, %if.end.i.i
  %.pre = phi i32 [ %23, %if.end.i.i ], [ %.pre.pre, %if.end.i.i.i ]
  store i32 0, i32* %err, align 4, !tbaa !14
  store i64 0, i64* %pos57, align 8, !tbaa !23
  %avail_in.i.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %28 = bitcast i8** %avail_in.i.i to i32*
  store i32 0, i32* %28, align 4, !tbaa !24
  br label %if.end68

if.end68:                                         ; preds = %gzrewind.exit, %if.end47
  %29 = phi i32 [ %.pre, %gzrewind.exit ], [ %2, %if.end47 ]
  %offset.addr.1 = phi i64 [ %add58, %gzrewind.exit ], [ %offset.addr.0, %if.end47 ]
  %cmp70 = icmp eq i32 %29, 7247
  br i1 %cmp70, label %if.then72, label %if.end91

if.then72:                                        ; preds = %if.end68
  %have74 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %30 = load i32* %have74, align 4, !tbaa !17
  %conv75 = zext i32 %30 to i64
  %cmp76 = icmp sgt i64 %conv75, %offset.addr.1
  %conv78 = trunc i64 %offset.addr.1 to i32
  %cond = select i1 %cmp76, i32 %conv78, i32 %30
  %sub83 = sub i32 %30, %cond
  store i32 %sub83, i32* %have74, align 4, !tbaa !17
  %next = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  %31 = load i8** %next, align 8, !tbaa !26
  %idx.ext = zext i32 %cond to i64
  %add.ptr = getelementptr inbounds i8* %31, i64 %idx.ext
  store i8* %add.ptr, i8** %next, align 8, !tbaa !26
  %pos87 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %32 = load i64* %pos87, align 8, !tbaa !23
  %add88 = add nsw i64 %idx.ext, %32
  store i64 %add88, i64* %pos87, align 8, !tbaa !23
  %sub90 = sub nsw i64 %offset.addr.1, %idx.ext
  br label %if.end91

if.end91:                                         ; preds = %if.then72, %if.end68
  %offset.addr.2 = phi i64 [ %sub90, %if.then72 ], [ %offset.addr.1, %if.end68 ]
  %tobool92 = icmp eq i64 %offset.addr.2, 0
  br i1 %tobool92, label %if.end96, label %if.then93

if.then93:                                        ; preds = %if.end91
  store i32 1, i32* %.pre-phi, align 4, !tbaa !21
  %skip95 = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %33 = bitcast %struct.gzFile_s* %skip95 to i64*
  store i64 %offset.addr.2, i64* %33, align 8, !tbaa !25
  br label %if.end96

if.end96:                                         ; preds = %if.then93, %if.end91
  %pos98 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %34 = load i64* %pos98, align 8, !tbaa !23
  %add99 = add nsw i64 %34, %offset.addr.2
  br label %return

return:                                           ; preds = %if.end96, %if.end6.i, %lor.lhs.false.i, %if.end55, %if.then50, %gz_error.exit, %if.then32, %if.end11, %if.end5, %if.end, %entry
  %retval.0 = phi i64 [ %add44, %gz_error.exit ], [ %add99, %if.end96 ], [ -1, %entry ], [ -1, %if.end ], [ -1, %if.end5 ], [ -1, %if.end11 ], [ -1, %if.then32 ], [ -1, %if.then50 ], [ -1, %if.end55 ], [ -1, %lor.lhs.false.i ], [ -1, %if.end6.i ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define hidden void @gz_error(%struct.gz_state* nocapture %state, i32 %err, i8* %msg) #3 {
entry:
  %msg1 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 18
  %0 = load i8** %msg1, align 8, !tbaa !22
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.end7, label %if.then

if.then:                                          ; preds = %entry
  %err2 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 17
  %1 = load i32* %err2, align 4, !tbaa !14
  %cmp3 = icmp eq i32 %1, -4
  br i1 %cmp3, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  tail call void @free(i8* %0) #4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  store i8* null, i8** %msg1, align 8, !tbaa !22
  br label %if.end7

if.end7:                                          ; preds = %if.end, %entry
  switch i32 %err, label %if.then10 [
    i32 -5, label %if.end11
    i32 0, label %if.end11
  ]

if.then10:                                        ; preds = %if.end7
  %have = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 0
  store i32 0, i32* %have, align 4, !tbaa !17
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7, %if.end7
  %err12 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 17
  store i32 %err, i32* %err12, align 4, !tbaa !14
  %cmp13 = icmp eq i8* %msg, null
  %cmp16 = icmp eq i32 %err, -4
  %or.cond35 = or i1 %cmp13, %cmp16
  br i1 %or.cond35, label %return, label %if.end18

if.end18:                                         ; preds = %if.end11
  %path = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 3
  %2 = load i8** %path, align 8, !tbaa !27
  %call = tail call i64 @strlen(i8* %2) #12
  %call19 = tail call i64 @strlen(i8* %msg) #12
  %add = add i64 %call, 3
  %add20 = add i64 %add, %call19
  %call21 = tail call noalias i8* @malloc(i64 %add20) #4
  store i8* %call21, i8** %msg1, align 8, !tbaa !22
  %cmp23 = icmp eq i8* %call21, null
  br i1 %cmp23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end18
  store i32 -4, i32* %err12, align 4, !tbaa !14
  br label %return

if.end26:                                         ; preds = %if.end18
  %call29 = tail call i64 @strlen(i8* %2) #12
  %call30 = tail call i64 @strlen(i8* %msg) #12
  %add31 = add i64 %call29, 3
  %add32 = add i64 %add31, %call30
  %call34 = tail call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %call21, i64 %add32, i8* getelementptr inbounds ([7 x i8]* @.str318, i64 0, i64 0), i8* %2, i8* getelementptr inbounds ([3 x i8]* @.str419, i64 0, i64 0), i8* %msg) #4
  br label %return

return:                                           ; preds = %if.end26, %if.then24, %if.end11
  ret void
}

; Function Attrs: nounwind uwtable
define i64 @gzseek(%struct.gzFile_s* %file, i64 %offset, i32 %whence) #3 {
entry:
  %call = tail call i64 @gzseek64(%struct.gzFile_s* %file, i64 %offset, i32 %whence)
  ret i64 %call
}

; Function Attrs: nounwind readonly uwtable
define i64 @gztell64(%struct.gzFile_s* readonly %file) #6 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %1 = load i32* %0, align 4, !tbaa !6
  switch i32 %1, label %return [
    i32 7247, label %if.end5
    i32 31153, label %if.end5
  ]

if.end5:                                          ; preds = %if.end, %if.end
  %pos = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %2 = load i64* %pos, align 8, !tbaa !23
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %3 = bitcast i8** %seek to i32*
  %4 = load i32* %3, align 4, !tbaa !21
  %tobool = icmp eq i32 %4, 0
  br i1 %tobool, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end5
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %5 = bitcast %struct.gzFile_s* %skip to i64*
  %6 = load i64* %5, align 8, !tbaa !25
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5
  %cond = phi i64 [ %6, %cond.true ], [ 0, %if.end5 ]
  %add = add nsw i64 %cond, %2
  br label %return

return:                                           ; preds = %cond.end, %if.end, %entry
  %retval.0 = phi i64 [ %add, %cond.end ], [ -1, %entry ], [ -1, %if.end ]
  ret i64 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i64 @gztell(%struct.gzFile_s* readonly %file) #6 {
entry:
  %cmp.i = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp.i, label %gztell64.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %0 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %1 = load i32* %0, align 4, !tbaa !6
  switch i32 %1, label %gztell64.exit [
    i32 7247, label %if.end5.i
    i32 31153, label %if.end5.i
  ]

if.end5.i:                                        ; preds = %if.end.i, %if.end.i
  %pos.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %2 = load i64* %pos.i, align 8, !tbaa !23
  %seek.i = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %3 = bitcast i8** %seek.i to i32*
  %4 = load i32* %3, align 4, !tbaa !21
  %tobool.i = icmp eq i32 %4, 0
  br i1 %tobool.i, label %cond.end.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.end5.i
  %skip.i = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %5 = bitcast %struct.gzFile_s* %skip.i to i64*
  %6 = load i64* %5, align 8, !tbaa !25
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.end5.i
  %cond.i = phi i64 [ %6, %cond.true.i ], [ 0, %if.end5.i ]
  %add.i = add nsw i64 %cond.i, %2
  br label %gztell64.exit

gztell64.exit:                                    ; preds = %cond.end.i, %if.end.i, %entry
  %retval.0.i = phi i64 [ %add.i, %cond.end.i ], [ -1, %entry ], [ -1, %if.end.i ]
  ret i64 %retval.0.i
}

; Function Attrs: nounwind uwtable
define i64 @gzoffset64(%struct.gzFile_s* readonly %file) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  switch i32 %2, label %return [
    i32 7247, label %if.end5
    i32 31153, label %if.end5
  ]

if.end5:                                          ; preds = %if.end, %if.end
  %fd = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 2
  %3 = load i32* %fd, align 4, !tbaa !15
  %call = tail call i64 @lseek64(i32 %3, i64 0, i32 1) #4
  %cmp6 = icmp eq i64 %call, -1
  br i1 %cmp6, label %return, label %if.end8

if.end8:                                          ; preds = %if.end5
  %4 = load i32* %1, align 4, !tbaa !6
  %cmp10 = icmp eq i32 %4, 7247
  br i1 %cmp10, label %if.then11, label %return

if.then11:                                        ; preds = %if.end8
  %avail_in = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %5 = bitcast i8** %avail_in to i32*
  %6 = load i32* %5, align 4, !tbaa !24
  %conv = zext i32 %6 to i64
  %sub = sub nsw i64 %call, %conv
  br label %return

return:                                           ; preds = %if.then11, %if.end8, %if.end5, %if.end, %entry
  %retval.0 = phi i64 [ -1, %entry ], [ -1, %if.end ], [ -1, %if.end5 ], [ %sub, %if.then11 ], [ %call, %if.end8 ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define i64 @gzoffset(%struct.gzFile_s* readonly %file) #3 {
entry:
  %cmp.i = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp.i, label %gzoffset64.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  switch i32 %2, label %gzoffset64.exit [
    i32 7247, label %if.end5.i
    i32 31153, label %if.end5.i
  ]

if.end5.i:                                        ; preds = %if.end.i, %if.end.i
  %fd.i = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 2
  %3 = load i32* %fd.i, align 4, !tbaa !15
  %call.i = tail call i64 @lseek64(i32 %3, i64 0, i32 1) #4
  %cmp6.i = icmp eq i64 %call.i, -1
  br i1 %cmp6.i, label %gzoffset64.exit, label %if.end8.i

if.end8.i:                                        ; preds = %if.end5.i
  %4 = load i32* %1, align 4, !tbaa !6
  %cmp10.i = icmp eq i32 %4, 7247
  br i1 %cmp10.i, label %if.then11.i, label %gzoffset64.exit

if.then11.i:                                      ; preds = %if.end8.i
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %5 = bitcast i8** %avail_in.i to i32*
  %6 = load i32* %5, align 4, !tbaa !24
  %conv.i = zext i32 %6 to i64
  %sub.i = sub nsw i64 %call.i, %conv.i
  br label %gzoffset64.exit

gzoffset64.exit:                                  ; preds = %if.then11.i, %if.end8.i, %if.end5.i, %if.end.i, %entry
  %retval.0.i = phi i64 [ -1, %entry ], [ -1, %if.end.i ], [ -1, %if.end5.i ], [ %sub.i, %if.then11.i ], [ %call.i, %if.end8.i ]
  ret i64 %retval.0.i
}

; Function Attrs: nounwind readonly uwtable
define i32 @gzeof(%struct.gzFile_s* readonly %file) #6 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %1 = load i32* %0, align 4, !tbaa !6
  %cond = icmp eq i32 %1, 7247
  br i1 %cond, label %cond.true, label %return

cond.true:                                        ; preds = %if.end
  %2 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %past = getelementptr inbounds %struct.gz_state* %2, i64 0, i32 12
  %3 = load i32* %past, align 4, !tbaa !19
  br label %return

return:                                           ; preds = %cond.true, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %3, %cond.true ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i8* @gzerror(%struct.gzFile_s* readonly %file, i32* %errnum) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  switch i32 %2, label %return [
    i32 7247, label %if.end5
    i32 31153, label %if.end5
  ]

if.end5:                                          ; preds = %if.end, %if.end
  %cmp6 = icmp eq i32* %errnum, null
  %err9.pre = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  br i1 %cmp6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end5
  %3 = load i32* %err9.pre, align 4, !tbaa !14
  store i32 %3, i32* %errnum, align 4, !tbaa !28
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end5
  %4 = load i32* %err9.pre, align 4, !tbaa !14
  %cmp10 = icmp eq i32 %4, -4
  br i1 %cmp10, label %return, label %cond.false

cond.false:                                       ; preds = %if.end8
  %msg = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 2
  %5 = bitcast i64* %msg to i8**
  %6 = load i8** %5, align 8, !tbaa !22
  %cmp11 = icmp eq i8* %6, null
  %. = select i1 %cmp11, i8* getelementptr inbounds ([1 x i8]* @.str217, i64 0, i64 0), i8* %6
  ret i8* %.

return:                                           ; preds = %if.end8, %if.end, %entry
  %retval.0 = phi i8* [ null, %entry ], [ null, %if.end ], [ getelementptr inbounds ([14 x i8]* @.str116, i64 0, i64 0), %if.end8 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind uwtable
define void @gzclearerr(%struct.gzFile_s* %file) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  switch i32 %2, label %return [
    i32 7247, label %if.then8
    i32 31153, label %if.end9
  ]

if.then8:                                         ; preds = %if.end
  %eof = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 1
  %3 = bitcast i8** %eof to i32*
  store i32 0, i32* %3, align 4, !tbaa !18
  %past = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 12
  store i32 0, i32* %past, align 4, !tbaa !19
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %msg1.i = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 2
  %4 = bitcast i64* %msg1.i to i8**
  %5 = load i8** %4, align 8, !tbaa !22
  %cmp.i = icmp eq i8* %5, null
  %err12.i.pre = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  br i1 %cmp.i, label %gz_error.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end9
  %6 = load i32* %err12.i.pre, align 4, !tbaa !14
  %cmp3.i = icmp eq i32 %6, -4
  br i1 %cmp3.i, label %if.end.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  tail call void @free(i8* %5) #4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i
  store i64 0, i64* %msg1.i, align 8, !tbaa !22
  br label %gz_error.exit

gz_error.exit:                                    ; preds = %if.end.i, %if.end9
  store i32 0, i32* %err12.i.pre, align 4, !tbaa !14
  br label %return

return:                                           ; preds = %gz_error.exit, %if.end, %entry
  ret void
}

declare i32 @open(i8* nocapture readonly, i32, ...) #7

; Function Attrs: nounwind uwtable
define internal fastcc noalias %struct.gzFile_s* @gz_open(i8* %path, i32 %fd, i8* nocapture readonly %mode) #3 {
entry:
  %cmp = icmp eq i8* %path, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call noalias i8* @malloc(i64 232) #4
  %cmp1 = icmp eq i8* %call, null
  br i1 %cmp1, label %return, label %if.end3

if.end3:                                          ; preds = %if.end
  %size = getelementptr inbounds i8* %call, i64 40
  %0 = bitcast i8* %size to i32*
  store i32 0, i32* %0, align 4, !tbaa !12
  %want = getelementptr inbounds i8* %call, i64 44
  %1 = bitcast i8* %want to i32*
  store i32 8192, i32* %1, align 4, !tbaa !13
  %msg = getelementptr inbounds i8* %call, i64 112
  %2 = bitcast i8* %msg to i8**
  store i8* null, i8** %2, align 8, !tbaa !22
  %mode4 = getelementptr inbounds i8* %call, i64 24
  %3 = bitcast i8* %mode4 to i32*
  store i32 0, i32* %3, align 4, !tbaa !6
  %level = getelementptr inbounds i8* %call, i64 88
  %4 = bitcast i8* %level to i32*
  store i32 -1, i32* %4, align 4, !tbaa !29
  %strategy = getelementptr inbounds i8* %call, i64 92
  %5 = bitcast i8* %strategy to i32*
  store i32 0, i32* %5, align 4, !tbaa !30
  %direct = getelementptr inbounds i8* %call, i64 64
  %6 = bitcast i8* %direct to i32*
  store i32 0, i32* %6, align 4, !tbaa !31
  %7 = load i8* %mode, align 1, !tbaa !5
  %tobool159 = icmp eq i8 %7, 0
  br i1 %tobool159, label %if.then36, label %while.body.preheader

while.body.preheader:                             ; preds = %if.end3
  br label %while.body

while.body:                                       ; preds = %if.end32, %while.body.preheader
  %8 = phi i32 [ %12, %if.end32 ], [ 0, %while.body.preheader ]
  %9 = phi i32 [ %13, %if.end32 ], [ 0, %while.body.preheader ]
  %10 = phi i8 [ %14, %if.end32 ], [ %7, %while.body.preheader ]
  %exclusive.0162 = phi i32 [ %exclusive.1, %if.end32 ], [ 0, %while.body.preheader ]
  %cloexec.0161 = phi i32 [ %cloexec.1, %if.end32 ], [ 0, %while.body.preheader ]
  %mode.addr.0160 = phi i8* [ %incdec.ptr, %if.end32 ], [ %mode, %while.body.preheader ]
  %conv = sext i8 %10 to i32
  %.off = add i8 %10, -48
  %11 = icmp ult i8 %.off, 10
  br i1 %11, label %if.then10, label %if.else

if.then10:                                        ; preds = %while.body
  %sub = add nsw i32 %conv, -48
  store i32 %sub, i32* %4, align 4, !tbaa !29
  br label %if.end32

if.else:                                          ; preds = %while.body
  switch i32 %conv, label %if.end32 [
    i32 114, label %sw.bb
    i32 119, label %sw.bb15
    i32 97, label %sw.bb17
    i32 43, label %sw.bb19
    i32 84, label %sw.bb30
    i32 101, label %sw.bb20
    i32 120, label %sw.bb21
    i32 102, label %sw.bb22
    i32 104, label %sw.bb24
    i32 82, label %sw.bb26
    i32 70, label %sw.bb28
  ]

sw.bb:                                            ; preds = %if.else
  store i32 7247, i32* %3, align 4, !tbaa !6
  br label %if.end32

sw.bb15:                                          ; preds = %if.else
  store i32 31153, i32* %3, align 4, !tbaa !6
  br label %if.end32

sw.bb17:                                          ; preds = %if.else
  store i32 1, i32* %3, align 4, !tbaa !6
  br label %if.end32

sw.bb19:                                          ; preds = %if.else
  tail call void @free(i8* %call) #4
  br label %return

sw.bb20:                                          ; preds = %if.else
  br label %if.end32

sw.bb21:                                          ; preds = %if.else
  br label %if.end32

sw.bb22:                                          ; preds = %if.else
  store i32 1, i32* %5, align 4, !tbaa !30
  br label %if.end32

sw.bb24:                                          ; preds = %if.else
  store i32 2, i32* %5, align 4, !tbaa !30
  br label %if.end32

sw.bb26:                                          ; preds = %if.else
  store i32 3, i32* %5, align 4, !tbaa !30
  br label %if.end32

sw.bb28:                                          ; preds = %if.else
  store i32 4, i32* %5, align 4, !tbaa !30
  br label %if.end32

sw.bb30:                                          ; preds = %if.else
  store i32 1, i32* %6, align 4, !tbaa !31
  br label %if.end32

if.end32:                                         ; preds = %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb24, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb17, %sw.bb15, %sw.bb, %if.else, %if.then10
  %12 = phi i32 [ %8, %if.then10 ], [ %8, %if.else ], [ %8, %sw.bb28 ], [ %8, %sw.bb26 ], [ %8, %sw.bb24 ], [ %8, %sw.bb22 ], [ %8, %sw.bb21 ], [ %8, %sw.bb20 ], [ 1, %sw.bb30 ], [ %8, %sw.bb17 ], [ %8, %sw.bb15 ], [ %8, %sw.bb ]
  %13 = phi i32 [ %9, %if.then10 ], [ %9, %if.else ], [ %9, %sw.bb28 ], [ %9, %sw.bb26 ], [ %9, %sw.bb24 ], [ %9, %sw.bb22 ], [ %9, %sw.bb21 ], [ %9, %sw.bb20 ], [ %9, %sw.bb30 ], [ 1, %sw.bb17 ], [ 31153, %sw.bb15 ], [ 7247, %sw.bb ]
  %cloexec.1 = phi i32 [ %cloexec.0161, %if.then10 ], [ %cloexec.0161, %if.else ], [ %cloexec.0161, %sw.bb28 ], [ %cloexec.0161, %sw.bb26 ], [ %cloexec.0161, %sw.bb24 ], [ %cloexec.0161, %sw.bb22 ], [ %cloexec.0161, %sw.bb21 ], [ 1, %sw.bb20 ], [ %cloexec.0161, %sw.bb30 ], [ %cloexec.0161, %sw.bb17 ], [ %cloexec.0161, %sw.bb15 ], [ %cloexec.0161, %sw.bb ]
  %exclusive.1 = phi i32 [ %exclusive.0162, %if.then10 ], [ %exclusive.0162, %if.else ], [ %exclusive.0162, %sw.bb28 ], [ %exclusive.0162, %sw.bb26 ], [ %exclusive.0162, %sw.bb24 ], [ %exclusive.0162, %sw.bb22 ], [ 1, %sw.bb21 ], [ %exclusive.0162, %sw.bb20 ], [ %exclusive.0162, %sw.bb30 ], [ %exclusive.0162, %sw.bb17 ], [ %exclusive.0162, %sw.bb15 ], [ %exclusive.0162, %sw.bb ]
  %incdec.ptr = getelementptr inbounds i8* %mode.addr.0160, i64 1
  %14 = load i8* %incdec.ptr, align 1, !tbaa !5
  %tobool = icmp eq i8 %14, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %if.end32
  %exclusive.1.lcssa = phi i32 [ %exclusive.1, %if.end32 ]
  %cloexec.1.lcssa = phi i32 [ %cloexec.1, %if.end32 ]
  %.lcssa168 = phi i32 [ %13, %if.end32 ]
  %.lcssa = phi i32 [ %12, %if.end32 ]
  switch i32 %.lcssa168, label %if.end47 [
    i32 0, label %if.then36
    i32 7247, label %if.then41
  ]

if.then36:                                        ; preds = %while.end, %if.end3
  tail call void @free(i8* %call) #4
  br label %return

if.then41:                                        ; preds = %while.end
  %tobool43 = icmp eq i32 %.lcssa, 0
  br i1 %tobool43, label %if.end45, label %if.then44

if.then44:                                        ; preds = %if.then41
  tail call void @free(i8* %call) #4
  br label %return

if.end45:                                         ; preds = %if.then41
  store i32 1, i32* %6, align 4, !tbaa !31
  br label %if.end47

if.end47:                                         ; preds = %if.end45, %while.end
  %call48 = tail call i64 @strlen(i8* %path) #12
  %add = add i64 %call48, 1
  %call49 = tail call noalias i8* @malloc(i64 %add) #4
  %path50 = getelementptr inbounds i8* %call, i64 32
  %15 = bitcast i8* %path50 to i8**
  store i8* %call49, i8** %15, align 8, !tbaa !27
  %cmp52 = icmp eq i8* %call49, null
  br i1 %cmp52, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end47
  tail call void @free(i8* %call) #4
  br label %return

if.end55:                                         ; preds = %if.end47
  %call58 = tail call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %call49, i64 %add, i8* getelementptr inbounds ([3 x i8]* @.str520, i64 0, i64 0), i8* %path) #4
  %tobool59 = icmp ne i32 %cloexec.1.lcssa, 0
  %cond = select i1 %tobool59, i32 524288, i32 0
  %16 = load i32* %3, align 4, !tbaa !6
  %cmp61 = icmp eq i32 %16, 7247
  br i1 %cmp61, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.end55
  %tobool63 = icmp ne i32 %exclusive.1.lcssa, 0
  %or65 = select i1 %tobool63, i32 193, i32 65
  %cmp67 = icmp eq i32 %16, 31153
  %cond69 = select i1 %cmp67, i32 512, i32 1024
  %or70 = or i32 %cond69, %or65
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end55
  %cond71 = phi i32 [ %or70, %cond.false ], [ 0, %if.end55 ]
  %cmp73 = icmp sgt i32 %fd, -1
  br i1 %cmp73, label %cond.end78.thread, label %cond.end78

cond.end78.thread:                                ; preds = %cond.end
  %fd80154 = getelementptr inbounds i8* %call, i64 28
  %17 = bitcast i8* %fd80154 to i32*
  store i32 %fd, i32* %17, align 4, !tbaa !15
  br label %if.end86

cond.end78:                                       ; preds = %cond.end
  %or72 = or i32 %cond71, %cond
  %call77 = tail call i32 (i8*, i32, ...)* @open(i8* %path, i32 %or72, i32 438) #4
  %fd80 = getelementptr inbounds i8* %call, i64 28
  %18 = bitcast i8* %fd80 to i32*
  store i32 %call77, i32* %18, align 4, !tbaa !15
  %cmp82 = icmp eq i32 %call77, -1
  br i1 %cmp82, label %if.then84, label %cond.end78.if.end86_crit_edge

cond.end78.if.end86_crit_edge:                    ; preds = %cond.end78
  %.pre = load i32* %3, align 4, !tbaa !6
  br label %if.end86

if.then84:                                        ; preds = %cond.end78
  %19 = load i8** %15, align 8, !tbaa !27
  tail call void @free(i8* %19) #4
  tail call void @free(i8* %call) #4
  br label %return

if.end86:                                         ; preds = %cond.end78.if.end86_crit_edge, %cond.end78.thread
  %20 = phi i32 [ %fd, %cond.end78.thread ], [ %call77, %cond.end78.if.end86_crit_edge ]
  %21 = phi i32 [ %16, %cond.end78.thread ], [ %.pre, %cond.end78.if.end86_crit_edge ]
  switch i32 %21, label %if.end105.thread [
    i32 1, label %if.end92.thread
    i32 7247, label %if.end105
  ]

if.end92.thread:                                  ; preds = %if.end86
  store i32 31153, i32* %3, align 4, !tbaa !6
  br label %if.end105.thread

if.end105.thread:                                 ; preds = %if.end92.thread, %if.end86
  %have.i165 = bitcast i8* %call to i32*
  store i32 0, i32* %have.i165, align 4, !tbaa !17
  br label %if.end.i

if.end105:                                        ; preds = %if.end86
  %call98 = tail call i64 @lseek64(i32 %20, i64 0, i32 1) #4
  %start = getelementptr inbounds i8* %call, i64 72
  %22 = bitcast i8* %start to i64*
  %cmp100 = icmp eq i64 %call98, -1
  %.call98 = select i1 %cmp100, i64 0, i64 %call98
  store i64 %.call98, i64* %22, align 8, !tbaa !16
  %.pre164 = load i32* %3, align 4, !tbaa !6
  %have.i = bitcast i8* %call to i32*
  store i32 0, i32* %have.i, align 4, !tbaa !17
  %cmp.i = icmp eq i32 %.pre164, 7247
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end105
  %eof.i = getelementptr inbounds i8* %call, i64 80
  %23 = bitcast i8* %eof.i to i32*
  store i32 0, i32* %23, align 4, !tbaa !18
  %past.i = getelementptr inbounds i8* %call, i64 84
  %24 = bitcast i8* %past.i to i32*
  store i32 0, i32* %24, align 4, !tbaa !19
  %how.i = getelementptr inbounds i8* %call, i64 68
  %25 = bitcast i8* %how.i to i32*
  store i32 0, i32* %25, align 4, !tbaa !20
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end105, %if.end105.thread
  %seek.i = getelementptr inbounds i8* %call, i64 104
  %26 = bitcast i8* %seek.i to i32*
  store i32 0, i32* %26, align 4, !tbaa !21
  %27 = load i8** %2, align 8, !tbaa !22
  %cmp.i.i = icmp eq i8* %27, null
  %err12.i.pre.i = getelementptr inbounds i8* %call, i64 108
  %28 = bitcast i8* %err12.i.pre.i to i32*
  br i1 %cmp.i.i, label %gz_reset.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i
  %29 = load i32* %28, align 4, !tbaa !14
  %cmp3.i.i = icmp eq i32 %29, -4
  br i1 %cmp3.i.i, label %if.end.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(i8* %27) #4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then4.i.i, %if.then.i.i
  store i8* null, i8** %2, align 8, !tbaa !22
  br label %gz_reset.exit

gz_reset.exit:                                    ; preds = %if.end.i.i, %if.end.i
  store i32 0, i32* %28, align 4, !tbaa !14
  %pos.i = getelementptr inbounds i8* %call, i64 16
  %30 = bitcast i8* %pos.i to i64*
  store i64 0, i64* %30, align 8, !tbaa !23
  %avail_in.i = getelementptr inbounds i8* %call, i64 128
  %31 = bitcast i8* %avail_in.i to i32*
  store i32 0, i32* %31, align 4, !tbaa !24
  %32 = bitcast i8* %call to %struct.gzFile_s*
  br label %return

return:                                           ; preds = %gz_reset.exit, %if.then84, %if.then54, %if.then44, %if.then36, %sw.bb19, %if.end, %entry
  %retval.0 = phi %struct.gzFile_s* [ null, %sw.bb19 ], [ null, %if.then36 ], [ null, %if.then44 ], [ null, %if.then54 ], [ null, %if.then84 ], [ %32, %gz_reset.exit ], [ null, %entry ], [ null, %if.end ]
  ret %struct.gzFile_s* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzread(%struct.gzFile_s* %file, i8* %buf, i32 %len) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp2 = icmp eq i32 %2, 7247
  br i1 %cmp2, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  switch i32 %3, label %return [
    i32 0, label %if.end7
    i32 -5, label %if.end7
  ]

if.end7:                                          ; preds = %lor.lhs.false, %lor.lhs.false
  %cmp8 = icmp slt i32 %len, 0
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end7
  tail call void @gz_error(%struct.gz_state* %0, i32 -3, i8* getelementptr inbounds ([37 x i8]* @.str27, i64 0, i64 0)) #4
  br label %return

if.end10:                                         ; preds = %if.end7
  %cmp11 = icmp eq i32 %len, 0
  br i1 %cmp11, label %return, label %if.end13

if.end13:                                         ; preds = %if.end10
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %4 = bitcast i8** %seek to i32*
  %5 = load i32* %4, align 4, !tbaa !21
  %tobool = icmp eq i32 %5, 0
  br i1 %tobool, label %if.end13.do.body.preheader_crit_edge, label %if.then14

if.end13.do.body.preheader_crit_edge:             ; preds = %if.end13
  %have.pre = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %eof.pre = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 1
  %.pre = bitcast i8** %eof.pre to i32*
  %avail_in.pre = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %.pre155 = bitcast i8** %avail_in.pre to i32*
  %pos.pre = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %next.pre = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  br label %do.body.preheader

if.then14:                                        ; preds = %if.end13
  store i32 0, i32* %4, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %6 = bitcast %struct.gzFile_s* %skip to i64*
  %7 = load i64* %6, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %8 = bitcast i8** %avail_in.i to i32*
  %have.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %eof.i = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 1
  %9 = bitcast i8** %eof.i to i32*
  %10 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  %11 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %tobool.i146 = icmp eq i64 %7, 0
  br i1 %tobool.i146, label %do.body.preheader, label %while.body.i.preheader.preheader

while.body.i.preheader.preheader:                 ; preds = %if.then14
  br label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %if.then.i, %while.body.i.preheader.preheader
  %len.addr.0.ph.i147 = phi i64 [ %sub14.i, %if.then.i ], [ %7, %while.body.i.preheader.preheader ]
  br label %while.body.i

while.body.i:                                     ; preds = %if.else19.i, %while.body.i.preheader
  %12 = load i32* %have.i, align 4, !tbaa !17
  %tobool1.i = icmp eq i32 %12, 0
  br i1 %tobool1.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i
  %.lcssa172 = phi i32 [ %12, %while.body.i ]
  %conv.i = zext i32 %.lcssa172 to i64
  %cmp.i = icmp sgt i64 %conv.i, %len.addr.0.ph.i147
  %conv5.i = trunc i64 %len.addr.0.ph.i147 to i32
  %cond.i = select i1 %cmp.i, i32 %conv5.i, i32 %.lcssa172
  %sub.i = sub i32 %.lcssa172, %cond.i
  store i32 %sub.i, i32* %have.i, align 4, !tbaa !17
  %13 = load i8** %10, align 8, !tbaa !26
  %idx.ext.i = zext i32 %cond.i to i64
  %add.ptr.i = getelementptr inbounds i8* %13, i64 %idx.ext.i
  store i8* %add.ptr.i, i8** %10, align 8, !tbaa !26
  %14 = load i64* %11, align 8, !tbaa !23
  %add.i = add nsw i64 %14, %idx.ext.i
  store i64 %add.i, i64* %11, align 8, !tbaa !23
  %sub14.i = sub nsw i64 %len.addr.0.ph.i147, %idx.ext.i
  %tobool.i = icmp eq i64 %len.addr.0.ph.i147, %idx.ext.i
  br i1 %tobool.i, label %do.body.preheader.loopexit167, label %while.body.i.preheader

if.else.i:                                        ; preds = %while.body.i
  %15 = load i32* %9, align 4, !tbaa !18
  %tobool15.i = icmp eq i32 %15, 0
  br i1 %tobool15.i, label %if.else19.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else.i
  %16 = load i32* %8, align 4, !tbaa !24
  %cmp16.i = icmp eq i32 %16, 0
  br i1 %cmp16.i, label %do.body.preheader.loopexit, label %if.else19.i

do.body.preheader.loopexit:                       ; preds = %land.lhs.true.i
  br label %do.body.preheader

do.body.preheader.loopexit167:                    ; preds = %if.then.i
  br label %do.body.preheader

do.body.preheader:                                ; preds = %do.body.preheader.loopexit167, %do.body.preheader.loopexit, %if.then14, %if.end13.do.body.preheader_crit_edge
  %next.pre-phi = phi i8** [ %next.pre, %if.end13.do.body.preheader_crit_edge ], [ %10, %if.then14 ], [ %10, %do.body.preheader.loopexit ], [ %10, %do.body.preheader.loopexit167 ]
  %pos.pre-phi = phi i64* [ %pos.pre, %if.end13.do.body.preheader_crit_edge ], [ %11, %if.then14 ], [ %11, %do.body.preheader.loopexit ], [ %11, %do.body.preheader.loopexit167 ]
  %.pre-phi156 = phi i32* [ %.pre155, %if.end13.do.body.preheader_crit_edge ], [ %8, %if.then14 ], [ %8, %do.body.preheader.loopexit ], [ %8, %do.body.preheader.loopexit167 ]
  %.pre-phi = phi i32* [ %.pre, %if.end13.do.body.preheader_crit_edge ], [ %9, %if.then14 ], [ %9, %do.body.preheader.loopexit ], [ %9, %do.body.preheader.loopexit167 ]
  %have.pre-phi = phi i32* [ %have.pre, %if.end13.do.body.preheader_crit_edge ], [ %have.i, %if.then14 ], [ %have.i, %do.body.preheader.loopexit ], [ %have.i, %do.body.preheader.loopexit167 ]
  %how = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 9
  %size = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %17 = bitcast i64* %size to i32*
  %fd.i = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 2
  %avail_out = getelementptr inbounds %struct.gzFile_s* %file, i64 6, i32 1
  %18 = bitcast i8** %avail_out to i32*
  %next_out = getelementptr inbounds %struct.gzFile_s* %file, i64 6
  %19 = bitcast %struct.gzFile_s* %next_out to i8**
  br label %do.body

if.else19.i:                                      ; preds = %land.lhs.true.i, %if.else.i
  %call.i = tail call fastcc i32 @gz_fetch(%struct.gz_state* %0) #4
  %cmp20.i = icmp eq i32 %call.i, -1
  br i1 %cmp20.i, label %return.loopexit166, label %while.body.i

do.body:                                          ; preds = %do.cond, %do.body.preheader
  %len.addr.0 = phi i32 [ %len.addr.1, %do.cond ], [ %len, %do.body.preheader ]
  %got.0 = phi i32 [ %got.1, %do.cond ], [ 0, %do.body.preheader ]
  %buf.addr.0 = phi i8* [ %buf.addr.1, %do.cond ], [ %buf, %do.body.preheader ]
  %20 = load i32* %have.pre-phi, align 4, !tbaa !17
  %tobool20 = icmp eq i32 %20, 0
  br i1 %tobool20, label %if.else, label %if.then21

if.then21:                                        ; preds = %do.body
  %cmp24 = icmp ugt i32 %20, %len.addr.0
  %len.addr.0. = select i1 %cmp24, i32 %len.addr.0, i32 %20
  %21 = load i8** %next.pre-phi, align 8, !tbaa !26
  %conv = zext i32 %len.addr.0. to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %buf.addr.0, i8* %21, i64 %conv, i32 1, i1 false)
  %22 = load i8** %next.pre-phi, align 8, !tbaa !26
  %add.ptr = getelementptr inbounds i8* %22, i64 %conv
  store i8* %add.ptr, i8** %next.pre-phi, align 8, !tbaa !26
  %23 = load i32* %have.pre-phi, align 4, !tbaa !17
  %sub = sub i32 %23, %len.addr.0.
  store i32 %sub, i32* %have.pre-phi, align 4, !tbaa !17
  br label %if.end72

if.else:                                          ; preds = %do.body
  %24 = load i32* %.pre-phi, align 4, !tbaa !18
  %tobool32 = icmp eq i32 %24, 0
  br i1 %tobool32, label %if.else37, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %if.else
  %25 = load i32* %.pre-phi156, align 4, !tbaa !32
  %cmp34 = icmp eq i32 %25, 0
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %land.lhs.true33
  %got.0.lcssa = phi i32 [ %got.0, %land.lhs.true33 ]
  %past = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 12
  store i32 1, i32* %past, align 4, !tbaa !19
  br label %return

if.else37:                                        ; preds = %land.lhs.true33, %if.else
  %26 = load i32* %how, align 4, !tbaa !20
  %cmp38 = icmp eq i32 %26, 0
  br i1 %cmp38, label %if.then43, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %if.else37
  %27 = load i32* %17, align 4, !tbaa !12
  %shl = shl i32 %27, 1
  %cmp41 = icmp ult i32 %len.addr.0, %shl
  br i1 %cmp41, label %if.then43, label %if.else49

if.then43:                                        ; preds = %lor.lhs.false40, %if.else37
  %call44 = tail call fastcc i32 @gz_fetch(%struct.gz_state* %0)
  %cmp45 = icmp eq i32 %call44, -1
  br i1 %cmp45, label %return.loopexit, label %do.cond

if.else49:                                        ; preds = %lor.lhs.false40
  %cmp51 = icmp eq i32 %26, 1
  br i1 %cmp51, label %do.body.i.preheader, label %if.else59

do.body.i.preheader:                              ; preds = %if.else49
  br label %do.body.i

do.body.i:                                        ; preds = %if.end.i, %do.body.i.preheader
  %28 = phi i32 [ %add.i125, %if.end.i ], [ 0, %do.body.i.preheader ]
  %29 = load i32* %fd.i, align 4, !tbaa !15
  %idx.ext.i119 = zext i32 %28 to i64
  %add.ptr.i120 = getelementptr inbounds i8* %buf.addr.0, i64 %idx.ext.i119
  %sub.i121 = sub i32 %len.addr.0, %28
  %conv.i122 = zext i32 %sub.i121 to i64
  %call.i123 = tail call i64 @read(i32 %29, i8* %add.ptr.i120, i64 %conv.i122) #4
  %conv1.i = trunc i64 %call.i123 to i32
  %cmp.i124 = icmp slt i32 %conv1.i, 1
  br i1 %cmp.i124, label %do.end.i, label %if.end.i

if.end.i:                                         ; preds = %do.body.i
  %add.i125 = add i32 %conv1.i, %28
  %cmp3.i = icmp ult i32 %add.i125, %len.addr.0
  br i1 %cmp3.i, label %do.body.i, label %if.end72.loopexit

do.end.i:                                         ; preds = %do.body.i
  %conv1.i.lcssa = phi i32 [ %conv1.i, %do.body.i ]
  %.lcssa = phi i32 [ %28, %do.body.i ]
  %cmp5.i = icmp slt i32 %conv1.i.lcssa, 0
  br i1 %cmp5.i, label %gz_load.exit, label %if.then13.i

if.then13.i:                                      ; preds = %do.end.i
  store i32 1, i32* %.pre-phi, align 4, !tbaa !18
  br label %if.end72

gz_load.exit:                                     ; preds = %do.end.i
  %call8.i = tail call i32* @__errno_location() #13
  %30 = load i32* %call8.i, align 4, !tbaa !28
  %call9.i = tail call i8* @strerror(i32 %30) #4
  tail call void @gz_error(%struct.gz_state* %0, i32 -1, i8* %call9.i) #4
  br label %return

if.else59:                                        ; preds = %if.else49
  store i32 %len.addr.0, i32* %18, align 4, !tbaa !33
  store i8* %buf.addr.0, i8** %19, align 8, !tbaa !34
  %call60 = tail call fastcc i32 @gz_decomp(%struct.gz_state* %0)
  %cmp61 = icmp eq i32 %call60, -1
  br i1 %cmp61, label %return.loopexit, label %if.end64

if.end64:                                         ; preds = %if.else59
  %31 = load i32* %have.pre-phi, align 4, !tbaa !17
  store i32 0, i32* %have.pre-phi, align 4, !tbaa !17
  br label %if.end72

if.end72.loopexit:                                ; preds = %if.end.i
  %add.i125.lcssa = phi i32 [ %add.i125, %if.end.i ]
  br label %if.end72

if.end72:                                         ; preds = %if.end72.loopexit, %if.end64, %if.then13.i, %if.then21
  %len.addr.0.131 = phi i32 [ %31, %if.end64 ], [ %len.addr.0., %if.then21 ], [ %.lcssa, %if.then13.i ], [ %add.i125.lcssa, %if.end72.loopexit ]
  %sub73 = sub i32 %len.addr.0, %len.addr.0.131
  %idx.ext74 = zext i32 %len.addr.0.131 to i64
  %add.ptr75 = getelementptr inbounds i8* %buf.addr.0, i64 %idx.ext74
  %add = add i32 %len.addr.0.131, %got.0
  %32 = load i64* %pos.pre-phi, align 8, !tbaa !23
  %add78 = add nsw i64 %32, %idx.ext74
  store i64 %add78, i64* %pos.pre-phi, align 8, !tbaa !23
  br label %do.cond

do.cond:                                          ; preds = %if.end72, %if.then43
  %len.addr.1 = phi i32 [ %sub73, %if.end72 ], [ %len.addr.0, %if.then43 ]
  %got.1 = phi i32 [ %add, %if.end72 ], [ %got.0, %if.then43 ]
  %buf.addr.1 = phi i8* [ %add.ptr75, %if.end72 ], [ %buf.addr.0, %if.then43 ]
  %tobool79 = icmp eq i32 %len.addr.1, 0
  br i1 %tobool79, label %return.loopexit, label %do.body

return.loopexit:                                  ; preds = %do.cond, %if.else59, %if.then43
  %retval.0.ph = phi i32 [ %got.1, %do.cond ], [ -1, %if.else59 ], [ -1, %if.then43 ]
  br label %return

return.loopexit166:                               ; preds = %if.else19.i
  br label %return

return:                                           ; preds = %return.loopexit166, %return.loopexit, %gz_load.exit, %if.then36, %if.end10, %if.then9, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ -1, %if.then9 ], [ -1, %entry ], [ -1, %lor.lhs.false ], [ -1, %if.end ], [ 0, %if.end10 ], [ -1, %gz_load.exit ], [ %got.0.lcssa, %if.then36 ], [ %retval.0.ph, %return.loopexit ], [ -1, %return.loopexit166 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define i32 @gzgetc(%struct.gzFile_s* %file) #3 {
entry:
  %buf = alloca [1 x i8], align 1
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %1 = load i32* %0, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %1, 7247
  br i1 %cmp1, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %2 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %err = getelementptr inbounds %struct.gz_state* %2, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  switch i32 %3, label %return [
    i32 0, label %if.end6
    i32 -5, label %if.end6
  ]

if.end6:                                          ; preds = %lor.lhs.false, %lor.lhs.false
  %have = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %4 = load i32* %have, align 4, !tbaa !17
  %tobool = icmp eq i32 %4, 0
  br i1 %tobool, label %if.end12, label %if.then7

if.then7:                                         ; preds = %if.end6
  %dec = add i32 %4, -1
  store i32 %dec, i32* %have, align 4, !tbaa !17
  %pos = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %5 = load i64* %pos, align 8, !tbaa !23
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %pos, align 8, !tbaa !23
  %next = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  %6 = load i8** %next, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i8* %6, i64 1
  store i8* %incdec.ptr, i8** %next, align 8, !tbaa !26
  %7 = load i8* %6, align 1, !tbaa !5
  %conv = zext i8 %7 to i32
  br label %return

if.end12:                                         ; preds = %if.end6
  %arraydecay = getelementptr inbounds [1 x i8]* %buf, i64 0, i64 0
  %call = call i32 @gzread(%struct.gzFile_s* %file, i8* %arraydecay, i32 1)
  %cmp13 = icmp slt i32 %call, 1
  br i1 %cmp13, label %return, label %cond.false

cond.false:                                       ; preds = %if.end12
  %8 = load i8* %arraydecay, align 1, !tbaa !5
  %conv15 = zext i8 %8 to i32
  br label %return

return:                                           ; preds = %cond.false, %if.end12, %if.then7, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ %conv, %if.then7 ], [ -1, %entry ], [ -1, %lor.lhs.false ], [ -1, %if.end ], [ %conv15, %cond.false ], [ -1, %if.end12 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzgetc_(%struct.gzFile_s* %file) #3 {
entry:
  %buf.i = alloca [1 x i8], align 1
  %0 = getelementptr inbounds [1 x i8]* %buf.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 1, i8* %0)
  %cmp.i = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp.i, label %gzgetc.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp1.i = icmp eq i32 %2, 7247
  br i1 %cmp1.i, label %lor.lhs.false.i, label %gzgetc.exit

lor.lhs.false.i:                                  ; preds = %if.end.i
  %3 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %err.i = getelementptr inbounds %struct.gz_state* %3, i64 0, i32 17
  %4 = load i32* %err.i, align 4, !tbaa !14
  switch i32 %4, label %gzgetc.exit [
    i32 0, label %if.end6.i
    i32 -5, label %if.end6.i
  ]

if.end6.i:                                        ; preds = %lor.lhs.false.i, %lor.lhs.false.i
  %have.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %5 = load i32* %have.i, align 4, !tbaa !17
  %tobool.i = icmp eq i32 %5, 0
  br i1 %tobool.i, label %if.end12.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.end6.i
  %dec.i = add i32 %5, -1
  store i32 %dec.i, i32* %have.i, align 4, !tbaa !17
  %pos.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %6 = load i64* %pos.i, align 8, !tbaa !23
  %inc.i = add nsw i64 %6, 1
  store i64 %inc.i, i64* %pos.i, align 8, !tbaa !23
  %next.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  %7 = load i8** %next.i, align 8, !tbaa !26
  %incdec.ptr.i = getelementptr inbounds i8* %7, i64 1
  store i8* %incdec.ptr.i, i8** %next.i, align 8, !tbaa !26
  %8 = load i8* %7, align 1, !tbaa !5
  %conv.i = zext i8 %8 to i32
  br label %gzgetc.exit

if.end12.i:                                       ; preds = %if.end6.i
  %call.i = call i32 @gzread(%struct.gzFile_s* %file, i8* %0, i32 1) #4
  %cmp13.i = icmp slt i32 %call.i, 1
  br i1 %cmp13.i, label %gzgetc.exit, label %cond.false.i

cond.false.i:                                     ; preds = %if.end12.i
  %9 = load i8* %0, align 1, !tbaa !5
  %conv15.i = zext i8 %9 to i32
  br label %gzgetc.exit

gzgetc.exit:                                      ; preds = %cond.false.i, %if.end12.i, %if.then7.i, %lor.lhs.false.i, %if.end.i, %entry
  %retval.0.i = phi i32 [ %conv.i, %if.then7.i ], [ -1, %entry ], [ -1, %lor.lhs.false.i ], [ -1, %if.end.i ], [ %conv15.i, %cond.false.i ], [ -1, %if.end12.i ]
  call void @llvm.lifetime.end(i64 1, i8* %0)
  ret i32 %retval.0.i
}

; Function Attrs: nounwind uwtable
define i32 @gzungetc(i32 %c, %struct.gzFile_s* %file) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %2, 7247
  br i1 %cmp1, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  switch i32 %3, label %return [
    i32 0, label %if.end6
    i32 -5, label %if.end6
  ]

if.end6:                                          ; preds = %lor.lhs.false, %lor.lhs.false
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %4 = bitcast i8** %seek to i32*
  %5 = load i32* %4, align 4, !tbaa !21
  %tobool = icmp eq i32 %5, 0
  br i1 %tobool, label %if.end12, label %if.then7

if.then7:                                         ; preds = %if.end6
  store i32 0, i32* %4, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %6 = bitcast %struct.gzFile_s* %skip to i64*
  %7 = load i64* %6, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %8 = bitcast i8** %avail_in.i to i32*
  %have.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %eof.i = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 1
  %9 = bitcast i8** %eof.i to i32*
  %10 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  %11 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %tobool.i114 = icmp eq i64 %7, 0
  br i1 %tobool.i114, label %gz_skip.exit, label %while.body.i.preheader.preheader

while.body.i.preheader.preheader:                 ; preds = %if.then7
  br label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %if.then.i, %while.body.i.preheader.preheader
  %len.addr.0.ph.i115 = phi i64 [ %sub14.i, %if.then.i ], [ %7, %while.body.i.preheader.preheader ]
  br label %while.body.i

while.body.i:                                     ; preds = %if.else19.i, %while.body.i.preheader
  %12 = load i32* %have.i, align 4, !tbaa !17
  %tobool1.i = icmp eq i32 %12, 0
  br i1 %tobool1.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i
  %.lcssa = phi i32 [ %12, %while.body.i ]
  %conv.i = zext i32 %.lcssa to i64
  %cmp.i = icmp sgt i64 %conv.i, %len.addr.0.ph.i115
  %conv5.i = trunc i64 %len.addr.0.ph.i115 to i32
  %cond.i = select i1 %cmp.i, i32 %conv5.i, i32 %.lcssa
  %sub.i = sub i32 %.lcssa, %cond.i
  store i32 %sub.i, i32* %have.i, align 4, !tbaa !17
  %13 = load i8** %10, align 8, !tbaa !26
  %idx.ext.i = zext i32 %cond.i to i64
  %add.ptr.i = getelementptr inbounds i8* %13, i64 %idx.ext.i
  store i8* %add.ptr.i, i8** %10, align 8, !tbaa !26
  %14 = load i64* %11, align 8, !tbaa !23
  %add.i = add nsw i64 %14, %idx.ext.i
  store i64 %add.i, i64* %11, align 8, !tbaa !23
  %sub14.i = sub nsw i64 %len.addr.0.ph.i115, %idx.ext.i
  %tobool.i = icmp eq i64 %len.addr.0.ph.i115, %idx.ext.i
  br i1 %tobool.i, label %gz_skip.exit.loopexit122, label %while.body.i.preheader

if.else.i:                                        ; preds = %while.body.i
  %15 = load i32* %9, align 4, !tbaa !18
  %tobool15.i = icmp eq i32 %15, 0
  br i1 %tobool15.i, label %if.else19.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else.i
  %16 = load i32* %8, align 4, !tbaa !24
  %cmp16.i = icmp eq i32 %16, 0
  br i1 %cmp16.i, label %gz_skip.exit.loopexit, label %if.else19.i

if.else19.i:                                      ; preds = %land.lhs.true.i, %if.else.i
  %call.i = tail call fastcc i32 @gz_fetch(%struct.gz_state* %0) #4
  %cmp20.i = icmp eq i32 %call.i, -1
  br i1 %cmp20.i, label %return.loopexit, label %while.body.i

gz_skip.exit.loopexit:                            ; preds = %land.lhs.true.i
  br label %gz_skip.exit

gz_skip.exit.loopexit122:                         ; preds = %if.then.i
  br label %gz_skip.exit

gz_skip.exit:                                     ; preds = %gz_skip.exit.loopexit122, %gz_skip.exit.loopexit, %if.then7
  %cmp13 = icmp slt i32 %c, 0
  br i1 %cmp13, label %return, label %if.end15

if.end12:                                         ; preds = %if.end6
  %cmp13.old = icmp slt i32 %c, 0
  br i1 %cmp13.old, label %return, label %if.end12.if.end15_crit_edge

if.end12.if.end15_crit_edge:                      ; preds = %if.end12
  %have.pre = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  br label %if.end15

if.end15:                                         ; preds = %if.end12.if.end15_crit_edge, %gz_skip.exit
  %have.pre-phi = phi i32* [ %have.pre, %if.end12.if.end15_crit_edge ], [ %have.i, %gz_skip.exit ]
  %17 = load i32* %have.pre-phi, align 4, !tbaa !17
  %cmp16 = icmp eq i32 %17, 0
  br i1 %cmp16, label %if.then17, label %if.end25

if.then17:                                        ; preds = %if.end15
  store i32 1, i32* %have.pre-phi, align 4, !tbaa !17
  %18 = getelementptr inbounds %struct.gzFile_s* %file, i64 2, i32 1
  %19 = load i8** %18, align 8, !tbaa !35
  %size = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %20 = bitcast i64* %size to i32*
  %21 = load i32* %20, align 4, !tbaa !12
  %shl = shl i32 %21, 1
  %idx.ext = zext i32 %shl to i64
  %add.ptr.sum = add nsw i64 %idx.ext, -1
  %add.ptr20 = getelementptr inbounds i8* %19, i64 %add.ptr.sum
  %next = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  store i8* %add.ptr20, i8** %next, align 8, !tbaa !26
  %conv = trunc i32 %c to i8
  store i8 %conv, i8* %add.ptr20, align 1, !tbaa !5
  %pos = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %22 = load i64* %pos, align 8, !tbaa !23
  %dec = add nsw i64 %22, -1
  store i64 %dec, i64* %pos, align 8, !tbaa !23
  %past = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 12
  store i32 0, i32* %past, align 4, !tbaa !19
  br label %return

if.end25:                                         ; preds = %if.end15
  %size28 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %23 = bitcast i64* %size28 to i32*
  %24 = load i32* %23, align 4, !tbaa !12
  %shl29 = shl i32 %24, 1
  %cmp30 = icmp eq i32 %17, %shl29
  br i1 %cmp30, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.end25
  tail call void @gz_error(%struct.gz_state* %0, i32 -3, i8* getelementptr inbounds ([31 x i8]* @.str128, i64 0, i64 0)) #4
  br label %return

if.end33:                                         ; preds = %if.end25
  %next35 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  %25 = load i8** %next35, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.gzFile_s* %file, i64 2, i32 1
  %27 = load i8** %26, align 8, !tbaa !35
  %cmp37 = icmp eq i8* %25, %27
  br i1 %cmp37, label %if.then39, label %if.end56

if.then39:                                        ; preds = %if.end33
  %idx.ext48 = zext i32 %shl29 to i64
  %add.ptr49 = getelementptr inbounds i8* %25, i64 %idx.ext48
  %cmp51111 = icmp eq i32 %17, 0
  br i1 %cmp51111, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.then39
  %idx.ext43 = zext i32 %17 to i64
  %add.ptr44 = getelementptr inbounds i8* %25, i64 %idx.ext43
  br label %while.body

while.body:                                       ; preds = %while.body, %while.body.lr.ph
  %dest.0113 = phi i8* [ %add.ptr49, %while.body.lr.ph ], [ %incdec.ptr53, %while.body ]
  %src.0112 = phi i8* [ %add.ptr44, %while.body.lr.ph ], [ %incdec.ptr, %while.body ]
  %incdec.ptr = getelementptr inbounds i8* %src.0112, i64 -1
  %28 = load i8* %incdec.ptr, align 1, !tbaa !5
  %incdec.ptr53 = getelementptr inbounds i8* %dest.0113, i64 -1
  store i8 %28, i8* %incdec.ptr53, align 1, !tbaa !5
  %29 = load i8** %26, align 8, !tbaa !35
  %cmp51 = icmp ugt i8* %incdec.ptr, %29
  br i1 %cmp51, label %while.body, label %while.cond.while.end_crit_edge

while.cond.while.end_crit_edge:                   ; preds = %while.body
  %incdec.ptr53.lcssa = phi i8* [ %incdec.ptr53, %while.body ]
  %.pre.pre = load i32* %have.pre-phi, align 4, !tbaa !17
  br label %while.end

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %if.then39
  %.pre = phi i32 [ %.pre.pre, %while.cond.while.end_crit_edge ], [ 0, %if.then39 ]
  %dest.0.lcssa = phi i8* [ %incdec.ptr53.lcssa, %while.cond.while.end_crit_edge ], [ %add.ptr49, %if.then39 ]
  store i8* %dest.0.lcssa, i8** %next35, align 8, !tbaa !26
  br label %if.end56

if.end56:                                         ; preds = %while.end, %if.end33
  %30 = phi i8* [ %dest.0.lcssa, %while.end ], [ %25, %if.end33 ]
  %31 = phi i32 [ %.pre, %while.end ], [ %17, %if.end33 ]
  %inc = add i32 %31, 1
  store i32 %inc, i32* %have.pre-phi, align 4, !tbaa !17
  %incdec.ptr61 = getelementptr inbounds i8* %30, i64 -1
  store i8* %incdec.ptr61, i8** %next35, align 8, !tbaa !26
  %conv62 = trunc i32 %c to i8
  store i8 %conv62, i8* %incdec.ptr61, align 1, !tbaa !5
  %pos67 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %32 = load i64* %pos67, align 8, !tbaa !23
  %dec68 = add nsw i64 %32, -1
  store i64 %dec68, i64* %pos67, align 8, !tbaa !23
  %past69 = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 12
  store i32 0, i32* %past69, align 4, !tbaa !19
  br label %return

return.loopexit:                                  ; preds = %if.else19.i
  br label %return

return:                                           ; preds = %return.loopexit, %if.end56, %if.then32, %if.then17, %if.end12, %gz_skip.exit, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ %c, %if.then17 ], [ -1, %if.then32 ], [ %c, %if.end56 ], [ -1, %entry ], [ -1, %lor.lhs.false ], [ -1, %if.end ], [ -1, %gz_skip.exit ], [ -1, %if.end12 ], [ -1, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i8* @gzgets(%struct.gzFile_s* %file, i8* %buf, i32 %len) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  %cmp1 = icmp eq i8* %buf, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %len, 1
  %or.cond66 = or i1 %or.cond, %cmp3
  br i1 %or.cond66, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp4 = icmp eq i32 %2, 7247
  br i1 %cmp4, label %lor.lhs.false5, label %return

lor.lhs.false5:                                   ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  switch i32 %3, label %return [
    i32 0, label %if.end10
    i32 -5, label %if.end10
  ]

if.end10:                                         ; preds = %lor.lhs.false5, %lor.lhs.false5
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %4 = bitcast i8** %seek to i32*
  %5 = load i32* %4, align 4, !tbaa !21
  %tobool = icmp eq i32 %5, 0
  br i1 %tobool, label %if.end16, label %if.then11

if.then11:                                        ; preds = %if.end10
  store i32 0, i32* %4, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %6 = bitcast %struct.gzFile_s* %skip to i64*
  %7 = load i64* %6, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %8 = bitcast i8** %avail_in.i to i32*
  %have.i = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %eof.i = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 1
  %9 = bitcast i8** %eof.i to i32*
  %10 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  %11 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %tobool.i116 = icmp eq i64 %7, 0
  br i1 %tobool.i116, label %if.end16, label %while.body.i.preheader.preheader

while.body.i.preheader.preheader:                 ; preds = %if.then11
  br label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %if.then.i, %while.body.i.preheader.preheader
  %len.addr.0.ph.i117 = phi i64 [ %sub14.i, %if.then.i ], [ %7, %while.body.i.preheader.preheader ]
  br label %while.body.i

while.body.i:                                     ; preds = %if.else19.i, %while.body.i.preheader
  %12 = load i32* %have.i, align 4, !tbaa !17
  %tobool1.i = icmp eq i32 %12, 0
  br i1 %tobool1.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i
  %.lcssa = phi i32 [ %12, %while.body.i ]
  %conv.i = zext i32 %.lcssa to i64
  %cmp.i = icmp sgt i64 %conv.i, %len.addr.0.ph.i117
  %conv5.i = trunc i64 %len.addr.0.ph.i117 to i32
  %cond.i = select i1 %cmp.i, i32 %conv5.i, i32 %.lcssa
  %sub.i = sub i32 %.lcssa, %cond.i
  store i32 %sub.i, i32* %have.i, align 4, !tbaa !17
  %13 = load i8** %10, align 8, !tbaa !26
  %idx.ext.i = zext i32 %cond.i to i64
  %add.ptr.i = getelementptr inbounds i8* %13, i64 %idx.ext.i
  store i8* %add.ptr.i, i8** %10, align 8, !tbaa !26
  %14 = load i64* %11, align 8, !tbaa !23
  %add.i = add nsw i64 %14, %idx.ext.i
  store i64 %add.i, i64* %11, align 8, !tbaa !23
  %sub14.i = sub nsw i64 %len.addr.0.ph.i117, %idx.ext.i
  %tobool.i = icmp eq i64 %len.addr.0.ph.i117, %idx.ext.i
  br i1 %tobool.i, label %if.end16.loopexit129, label %while.body.i.preheader

if.else.i:                                        ; preds = %while.body.i
  %15 = load i32* %9, align 4, !tbaa !18
  %tobool15.i = icmp eq i32 %15, 0
  br i1 %tobool15.i, label %if.else19.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else.i
  %16 = load i32* %8, align 4, !tbaa !24
  %cmp16.i = icmp eq i32 %16, 0
  br i1 %cmp16.i, label %if.end16.loopexit, label %if.else19.i

if.else19.i:                                      ; preds = %land.lhs.true.i, %if.else.i
  %call.i = tail call fastcc i32 @gz_fetch(%struct.gz_state* %0) #4
  %cmp20.i = icmp eq i32 %call.i, -1
  br i1 %cmp20.i, label %return.loopexit128, label %while.body.i

if.end16.loopexit:                                ; preds = %land.lhs.true.i
  br label %if.end16

if.end16.loopexit129:                             ; preds = %if.then.i
  br label %if.end16

if.end16:                                         ; preds = %if.end16.loopexit129, %if.end16.loopexit, %if.then11, %if.end10
  %sub = add i32 %len, -1
  %tobool17 = icmp eq i32 %sub, 0
  br i1 %tobool17, label %return, label %do.body.preheader

do.body.preheader:                                ; preds = %if.end16
  %have = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %next = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 1
  %pos = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %.pre = load i32* %have, align 4, !tbaa !17
  br label %do.body

do.body:                                          ; preds = %if.end43, %do.body.preheader
  %17 = phi i32 [ %sub49, %if.end43 ], [ %.pre, %do.body.preheader ]
  %left.0 = phi i32 [ %sub55, %if.end43 ], [ %sub, %do.body.preheader ]
  %buf.addr.0 = phi i8* [ %add.ptr57, %if.end43 ], [ %buf, %do.body.preheader ]
  %cmp19 = icmp eq i32 %17, 0
  br i1 %cmp19, label %land.lhs.true20, label %if.end29

land.lhs.true20:                                  ; preds = %do.body
  %call21 = tail call fastcc i32 @gz_fetch(%struct.gz_state* %0)
  %cmp22 = icmp eq i32 %call21, -1
  br i1 %cmp22, label %return.loopexit, label %if.end24

if.end24:                                         ; preds = %land.lhs.true20
  %.pr = load i32* %have, align 4, !tbaa !17
  %cmp27 = icmp eq i32 %.pr, 0
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end24
  %buf.addr.0.lcssa130 = phi i8* [ %buf.addr.0, %if.end24 ]
  %past = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 12
  store i32 1, i32* %past, align 4, !tbaa !19
  br label %if.end61

if.end29:                                         ; preds = %if.end24, %do.body
  %18 = phi i32 [ %.pr, %if.end24 ], [ %17, %do.body ]
  %cmp32 = icmp ugt i32 %18, %left.0
  %left.0. = select i1 %cmp32, i32 %left.0, i32 %18
  %19 = load i8** %next, align 8, !tbaa !26
  %conv = zext i32 %left.0. to i64
  %call36 = tail call i8* @memchr(i8* %19, i32 10, i64 %conv) #12
  %cmp37 = icmp eq i8* %call36, null
  br i1 %cmp37, label %if.end43, label %if.then39

if.then39:                                        ; preds = %if.end29
  %sub.ptr.lhs.cast = ptrtoint i8* %call36 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv42 = trunc i64 %sub.ptr.sub to i32
  %add = add i32 %conv42, 1
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %if.end29
  %n.0 = phi i32 [ %add, %if.then39 ], [ %left.0., %if.end29 ]
  %conv46 = zext i32 %n.0 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %buf.addr.0, i8* %19, i64 %conv46, i32 1, i1 false)
  %20 = load i32* %have, align 4, !tbaa !17
  %sub49 = sub i32 %20, %n.0
  store i32 %sub49, i32* %have, align 4, !tbaa !17
  %21 = load i8** %next, align 8, !tbaa !26
  %add.ptr = getelementptr inbounds i8* %21, i64 %conv46
  store i8* %add.ptr, i8** %next, align 8, !tbaa !26
  %22 = load i64* %pos, align 8, !tbaa !23
  %add54 = add nsw i64 %22, %conv46
  store i64 %add54, i64* %pos, align 8, !tbaa !23
  %sub55 = sub i32 %left.0, %n.0
  %add.ptr57 = getelementptr inbounds i8* %buf.addr.0, i64 %conv46
  %tobool58 = icmp ne i32 %left.0, %n.0
  %or.cond67 = and i1 %tobool58, %cmp37
  br i1 %or.cond67, label %do.body, label %if.end61.loopexit

if.end61.loopexit:                                ; preds = %if.end43
  %add.ptr57.lcssa = phi i8* [ %add.ptr57, %if.end43 ]
  br label %if.end61

if.end61:                                         ; preds = %if.end61.loopexit, %if.then28
  %buf.addr.1 = phi i8* [ %buf.addr.0.lcssa130, %if.then28 ], [ %add.ptr57.lcssa, %if.end61.loopexit ]
  %cmp62 = icmp eq i8* %buf.addr.1, %buf
  br i1 %cmp62, label %return, label %if.end65

if.end65:                                         ; preds = %if.end61
  store i8 0, i8* %buf.addr.1, align 1, !tbaa !5
  br label %return

return.loopexit:                                  ; preds = %land.lhs.true20
  br label %return

return.loopexit128:                               ; preds = %if.else19.i
  br label %return

return:                                           ; preds = %return.loopexit128, %return.loopexit, %if.end65, %if.end61, %if.end16, %lor.lhs.false5, %if.end, %entry
  %retval.0 = phi i8* [ %buf, %if.end65 ], [ null, %entry ], [ null, %lor.lhs.false5 ], [ null, %if.end ], [ null, %if.end61 ], [ null, %if.end16 ], [ null, %return.loopexit ], [ null, %return.loopexit128 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #5

; Function Attrs: nounwind uwtable
define i32 @gzdirect(%struct.gzFile_s* %file) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %2, 7247
  br i1 %cmp1, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end
  %how = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 9
  %3 = load i32* %how, align 4, !tbaa !20
  %cmp2 = icmp eq i32 %3, 0
  br i1 %cmp2, label %land.lhs.true3, label %if.end6

land.lhs.true3:                                   ; preds = %land.lhs.true
  %have = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 0
  %4 = load i32* %have, align 4, !tbaa !17
  %cmp4 = icmp eq i32 %4, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %land.lhs.true3
  %call = tail call fastcc i32 @gz_look(%struct.gz_state* %0)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %land.lhs.true3, %land.lhs.true, %if.end
  %direct = getelementptr inbounds %struct.gzFile_s* %file, i64 2, i32 2
  %5 = bitcast i64* %direct to i32*
  %6 = load i32* %5, align 4, !tbaa !31
  br label %return

return:                                           ; preds = %if.end6, %entry
  %retval.0 = phi i32 [ %6, %if.end6 ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzclose_r(%struct.gzFile_s* %file) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %2, 7247
  br i1 %cmp1, label %if.end3, label %return

if.end3:                                          ; preds = %if.end
  %size = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %3 = bitcast i64* %size to i32*
  %4 = load i32* %3, align 4, !tbaa !12
  %tobool = icmp eq i32 %4, 0
  br i1 %tobool, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end3
  %strm = getelementptr inbounds %struct.gzFile_s* %file, i64 5
  %5 = bitcast %struct.gzFile_s* %strm to %struct.z_stream_s*
  %call = tail call i32 @inflateEnd(%struct.z_stream_s* %5) #4
  %6 = getelementptr inbounds %struct.gzFile_s* %file, i64 2, i32 1
  %7 = load i8** %6, align 8, !tbaa !35
  tail call void @free(i8* %7) #4
  %in = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %8 = bitcast %struct.gzFile_s* %in to i8**
  %9 = load i8** %8, align 8, !tbaa !36
  tail call void @free(i8* %9) #4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end3
  %err6 = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %10 = load i32* %err6, align 4, !tbaa !14
  %cmp7 = icmp eq i32 %10, -5
  %cond = select i1 %cmp7, i32 -5, i32 0
  tail call void @gz_error(%struct.gz_state* %0, i32 0, i8* null) #4
  %11 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 1
  %12 = load i8** %11, align 8, !tbaa !27
  tail call void @free(i8* %12) #4
  %fd = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 2
  %13 = load i32* %fd, align 4, !tbaa !15
  %call8 = tail call i32 @close(i32 %13) #4
  %14 = bitcast %struct.gzFile_s* %file to i8*
  tail call void @free(i8* %14) #4
  %tobool9 = icmp ne i32 %call8, 0
  %cond10 = select i1 %tobool9, i32 -1, i32 %cond
  br label %return

return:                                           ; preds = %if.end5, %if.end, %entry
  %retval.0 = phi i32 [ %cond10, %if.end5 ], [ -2, %entry ], [ -2, %if.end ]
  ret i32 %retval.0
}

declare i32 @close(i32) #7

declare i64 @read(i32, i8* nocapture, i64) #7

; Function Attrs: nounwind
declare i8* @strerror(i32) #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #8

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_fetch(%struct.gz_state* %state) #3 {
entry:
  %how = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 9
  %have22 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 0
  %eof = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 11
  %avail_in = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 1
  %size14 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 4
  %avail_out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 4
  %out16 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 7
  %next_out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 3
  br label %do.body

do.body:                                          ; preds = %do.body.backedge, %entry
  %0 = load i32* %how, align 4, !tbaa !20
  switch i32 %0, label %do.cond [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb13
  ]

sw.bb:                                            ; preds = %do.body
  %call = tail call fastcc i32 @gz_look(%struct.gz_state* %state)
  %cmp = icmp eq i32 %call, -1
  br i1 %cmp, label %return.loopexit, label %if.end

if.end:                                           ; preds = %sw.bb
  %1 = load i32* %how, align 4, !tbaa !20
  %cmp3 = icmp eq i32 %1, 0
  br i1 %cmp3, label %return.loopexit, label %do.cond

sw.bb6:                                           ; preds = %do.body
  %2 = load i8** %out16, align 8, !tbaa !35
  %3 = load i32* %size14, align 4, !tbaa !12
  %shl = shl i32 %3, 1
  store i32 0, i32* %have22, align 4, !tbaa !28
  %fd.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 2
  br label %do.body.i

do.body.i:                                        ; preds = %if.end.i, %sw.bb6
  %4 = phi i32 [ %add.i, %if.end.i ], [ 0, %sw.bb6 ]
  %5 = load i32* %fd.i, align 4, !tbaa !15
  %idx.ext.i = zext i32 %4 to i64
  %add.ptr.i = getelementptr inbounds i8* %2, i64 %idx.ext.i
  %sub.i = sub i32 %shl, %4
  %conv.i = zext i32 %sub.i to i64
  %call.i = tail call i64 @read(i32 %5, i8* %add.ptr.i, i64 %conv.i) #4
  %conv1.i = trunc i64 %call.i to i32
  %cmp.i = icmp slt i32 %conv1.i, 1
  br i1 %cmp.i, label %do.end.i, label %if.end.i

if.end.i:                                         ; preds = %do.body.i
  %6 = load i32* %have22, align 4, !tbaa !28
  %add.i = add i32 %6, %conv1.i
  store i32 %add.i, i32* %have22, align 4, !tbaa !28
  %cmp3.i = icmp ult i32 %add.i, %shl
  br i1 %cmp3.i, label %do.body.i, label %if.end10.loopexit

do.end.i:                                         ; preds = %do.body.i
  %conv1.i.lcssa = phi i32 [ %conv1.i, %do.body.i ]
  %cmp5.i = icmp slt i32 %conv1.i.lcssa, 0
  br i1 %cmp5.i, label %gz_load.exit, label %if.then13.i

if.then13.i:                                      ; preds = %do.end.i
  store i32 1, i32* %eof, align 4, !tbaa !18
  br label %if.end10

gz_load.exit:                                     ; preds = %do.end.i
  %call8.i = tail call i32* @__errno_location() #13
  %7 = load i32* %call8.i, align 4, !tbaa !28
  %call9.i = tail call i8* @strerror(i32 %7) #4
  tail call void @gz_error(%struct.gz_state* %state, i32 -1, i8* %call9.i) #4
  br label %return

if.end10.loopexit:                                ; preds = %if.end.i
  br label %if.end10

if.end10:                                         ; preds = %if.end10.loopexit, %if.then13.i
  %8 = load i8** %out16, align 8, !tbaa !35
  %next = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 1
  store i8* %8, i8** %next, align 8, !tbaa !26
  br label %return

sw.bb13:                                          ; preds = %do.body
  %9 = load i32* %size14, align 4, !tbaa !12
  %shl15 = shl i32 %9, 1
  store i32 %shl15, i32* %avail_out, align 4, !tbaa !33
  %10 = load i8** %out16, align 8, !tbaa !35
  store i8* %10, i8** %next_out, align 8, !tbaa !34
  %call17 = tail call fastcc i32 @gz_decomp(%struct.gz_state* %state)
  %cmp18 = icmp eq i32 %call17, -1
  br i1 %cmp18, label %return.loopexit, label %do.cond

do.cond:                                          ; preds = %sw.bb13, %if.end, %do.body
  %11 = load i32* %have22, align 4, !tbaa !17
  %cmp23 = icmp eq i32 %11, 0
  br i1 %cmp23, label %land.rhs, label %return.loopexit

land.rhs:                                         ; preds = %do.cond
  %12 = load i32* %eof, align 4, !tbaa !18
  %tobool = icmp eq i32 %12, 0
  br i1 %tobool, label %do.body.backedge, label %lor.rhs

do.body.backedge:                                 ; preds = %lor.rhs, %land.rhs
  br label %do.body

lor.rhs:                                          ; preds = %land.rhs
  %13 = load i32* %avail_in, align 4, !tbaa !32
  %tobool24 = icmp eq i32 %13, 0
  br i1 %tobool24, label %return.loopexit, label %do.body.backedge

return.loopexit:                                  ; preds = %lor.rhs, %do.cond, %sw.bb13, %if.end, %sw.bb
  %retval.0.ph = phi i32 [ 0, %do.cond ], [ 0, %lor.rhs ], [ -1, %sw.bb13 ], [ 0, %if.end ], [ -1, %sw.bb ]
  br label %return

return:                                           ; preds = %return.loopexit, %if.end10, %gz_load.exit
  %retval.0 = phi i32 [ 0, %if.end10 ], [ -1, %gz_load.exit ], [ %retval.0.ph, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_decomp(%struct.gz_state* %state) #3 {
entry:
  %strm1 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19
  %avail_out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 4
  %0 = load i32* %avail_out, align 4, !tbaa !33
  %avail_in = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 1
  %err.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 17
  %eof.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 11
  %in11.pre.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 6
  %size.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 4
  %fd.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 2
  %next_in19.i = getelementptr inbounds %struct.z_stream_s* %strm1, i64 0, i32 0
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %ret.0 = phi i32 [ 0, %entry ], [ %call7, %do.cond ]
  %1 = load i32* %avail_in, align 4, !tbaa !32
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %do.body
  %2 = load i32* %err.i, align 4, !tbaa !14
  switch i32 %2, label %return.loopexit [
    i32 0, label %if.end.i
    i32 -5, label %if.end.i
  ]

if.end.i:                                         ; preds = %land.lhs.true, %land.lhs.true
  %3 = load i32* %eof.i, align 4, !tbaa !18
  %cmp4.i = icmp eq i32 %3, 0
  br i1 %cmp4.i, label %if.end10.i, label %if.then5

if.end10.i:                                       ; preds = %if.end.i
  %.pre = load i8** %in11.pre.i, align 8, !tbaa !36
  %.pre93 = load i32* %size.i, align 4, !tbaa !12
  br label %do.body.i56

do.body.i56:                                      ; preds = %if.end.i58, %if.end10.i
  %4 = phi i32 [ %add.i57, %if.end.i58 ], [ 0, %if.end10.i ]
  %5 = load i32* %fd.i, align 4, !tbaa !15
  %idx.ext.i52 = zext i32 %4 to i64
  %add.ptr.i53 = getelementptr inbounds i8* %.pre, i64 %idx.ext.i52
  %sub.i54 = sub i32 %.pre93, %4
  %conv.i = zext i32 %sub.i54 to i64
  %call.i55 = tail call i64 @read(i32 %5, i8* %add.ptr.i53, i64 %conv.i) #4
  %conv1.i = trunc i64 %call.i55 to i32
  %cmp.i = icmp slt i32 %conv1.i, 1
  br i1 %cmp.i, label %do.end.i, label %if.end.i58

if.end.i58:                                       ; preds = %do.body.i56
  %add.i57 = add i32 %conv1.i, %4
  %cmp3.i = icmp ult i32 %add.i57, %.pre93
  br i1 %cmp3.i, label %do.body.i56, label %if.end.loopexit

do.end.i:                                         ; preds = %do.body.i56
  %conv1.i.lcssa = phi i32 [ %conv1.i, %do.body.i56 ]
  %.lcssa = phi i32 [ %4, %do.body.i56 ]
  %cmp5.i = icmp slt i32 %conv1.i.lcssa, 0
  br i1 %cmp5.i, label %gz_load.exit, label %if.then13.i

if.then13.i:                                      ; preds = %do.end.i
  store i32 1, i32* %eof.i, align 4, !tbaa !18
  br label %if.end

gz_load.exit:                                     ; preds = %do.end.i
  %call8.i = tail call i32* @__errno_location() #13
  %6 = load i32* %call8.i, align 4, !tbaa !28
  %call9.i = tail call i8* @strerror(i32 %6) #4
  tail call void @gz_error(%struct.gz_state* %state, i32 -1, i8* %call9.i) #4
  br label %return

if.end.loopexit:                                  ; preds = %if.end.i58
  %add.i57.lcssa = phi i32 [ %add.i57, %if.end.i58 ]
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %if.then13.i
  %got.i.0.load63.ph = phi i32 [ %.lcssa, %if.then13.i ], [ %add.i57.lcssa, %if.end.loopexit ]
  %7 = load i32* %avail_in, align 4, !tbaa !32
  %add.i = add i32 %7, %got.i.0.load63.ph
  store i32 %add.i, i32* %avail_in, align 4, !tbaa !32
  %8 = load i8** %in11.pre.i, align 8, !tbaa !36
  store i8* %8, i8** %next_in19.i, align 8, !tbaa !37
  %phitmp = icmp eq i32 %add.i, 0
  br i1 %phitmp, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end, %if.end.i
  %ret.0.lcssa110 = phi i32 [ %ret.0, %if.end.i ], [ %ret.0, %if.end ]
  tail call void @gz_error(%struct.gz_state* %state, i32 -5, i8* getelementptr inbounds ([23 x i8]* @.str431, i64 0, i64 0)) #4
  %.pre95 = load i32* %avail_out, align 4, !tbaa !33
  br label %do.end

if.end6:                                          ; preds = %if.end, %do.body
  %call7 = tail call i32 @inflate(%struct.z_stream_s* %strm1, i32 0) #4
  switch i32 %call7, label %do.cond [
    i32 -2, label %if.then10
    i32 2, label %if.then10
    i32 -4, label %if.then13
    i32 -3, label %if.then16
  ]

if.then10:                                        ; preds = %if.end6, %if.end6
  tail call void @gz_error(%struct.gz_state* %state, i32 -2, i8* getelementptr inbounds ([39 x i8]* @.str532, i64 0, i64 0)) #4
  br label %return

if.then13:                                        ; preds = %if.end6
  tail call void @gz_error(%struct.gz_state* %state, i32 -4, i8* getelementptr inbounds ([14 x i8]* @.str229, i64 0, i64 0)) #4
  br label %return

if.then16:                                        ; preds = %if.end6
  %msg = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 6
  %9 = load i8** %msg, align 8, !tbaa !38
  %cmp17 = icmp eq i8* %9, null
  %. = select i1 %cmp17, i8* getelementptr inbounds ([22 x i8]* @.str633, i64 0, i64 0), i8* %9
  tail call void @gz_error(%struct.gz_state* %state, i32 -3, i8* %.) #4
  br label %return

do.cond:                                          ; preds = %if.end6
  %10 = load i32* %avail_out, align 4, !tbaa !33
  %tobool = icmp ne i32 %10, 0
  %cmp21 = icmp ne i32 %call7, 1
  %or.cond29 = and i1 %tobool, %cmp21
  br i1 %or.cond29, label %do.body, label %do.end.loopexit

do.end.loopexit:                                  ; preds = %do.cond
  %.lcssa119 = phi i32 [ %10, %do.cond ]
  %call7.lcssa118 = phi i32 [ %call7, %do.cond ]
  br label %do.end

do.end:                                           ; preds = %do.end.loopexit, %if.then5
  %11 = phi i32 [ %.pre95, %if.then5 ], [ %.lcssa119, %do.end.loopexit ]
  %ret.1 = phi i32 [ %ret.0.lcssa110, %if.then5 ], [ %call7.lcssa118, %do.end.loopexit ]
  %sub = sub i32 %0, %11
  %have = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 0
  store i32 %sub, i32* %have, align 4, !tbaa !17
  %next_out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 3
  %12 = load i8** %next_out, align 8, !tbaa !34
  %idx.ext = zext i32 %sub to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds i8* %12, i64 %idx.neg
  %next = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 1
  store i8* %add.ptr, i8** %next, align 8, !tbaa !26
  %cmp26 = icmp eq i32 %ret.1, 1
  br i1 %cmp26, label %if.then27, label %return

if.then27:                                        ; preds = %do.end
  %how = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 9
  store i32 0, i32* %how, align 4, !tbaa !20
  br label %return

return.loopexit:                                  ; preds = %land.lhs.true
  br label %return

return:                                           ; preds = %return.loopexit, %if.then27, %do.end, %if.then16, %if.then13, %if.then10, %gz_load.exit
  %retval.0 = phi i32 [ -1, %if.then10 ], [ -1, %if.then13 ], [ -1, %if.then16 ], [ 0, %if.then27 ], [ 0, %do.end ], [ -1, %gz_load.exit ], [ -1, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_look(%struct.gz_state* %state) #3 {
entry:
  %strm1 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19
  %size = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 4
  %0 = load i32* %size, align 4, !tbaa !12
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %entry.if.end40_crit_edge

entry.if.end40_crit_edge:                         ; preds = %entry
  %avail_in41.pre = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 1
  br label %if.end40

if.then:                                          ; preds = %entry
  %want = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 5
  %1 = load i32* %want, align 4, !tbaa !13
  %conv = zext i32 %1 to i64
  %call = tail call noalias i8* @malloc(i64 %conv) #4
  %in = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 6
  store i8* %call, i8** %in, align 8, !tbaa !36
  %shl = shl i32 %1, 1
  %conv3 = zext i32 %shl to i64
  %call4 = tail call noalias i8* @malloc(i64 %conv3) #4
  %out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 7
  store i8* %call4, i8** %out, align 8, !tbaa !35
  %cmp6 = icmp eq i8* %call, null
  %cmp9 = icmp eq i8* %call4, null
  %or.cond = or i1 %cmp6, %cmp9
  br i1 %or.cond, label %if.then11, label %if.end23

if.then11:                                        ; preds = %if.then
  br i1 %cmp9, label %if.end, label %if.then15

if.then15:                                        ; preds = %if.then11
  tail call void @free(i8* %call4) #4
  %.pre = load i8** %in, align 8, !tbaa !36
  br label %if.end

if.end:                                           ; preds = %if.then15, %if.then11
  %2 = phi i8* [ %call, %if.then11 ], [ %.pre, %if.then15 ]
  %cmp18 = icmp eq i8* %2, null
  br i1 %cmp18, label %if.end22, label %if.then20

if.then20:                                        ; preds = %if.end
  tail call void @free(i8* %2) #4
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end
  tail call void @gz_error(%struct.gz_state* %state, i32 -4, i8* getelementptr inbounds ([14 x i8]* @.str229, i64 0, i64 0)) #4
  br label %return

if.end23:                                         ; preds = %if.then
  store i32 %1, i32* %size, align 4, !tbaa !12
  %zalloc = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 8
  %avail_in = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 1
  store i32 0, i32* %avail_in, align 4, !tbaa !24
  %next_in = getelementptr inbounds %struct.z_stream_s* %strm1, i64 0, i32 0
  store i8* null, i8** %next_in, align 8, !tbaa !39
  %3 = bitcast i8* (i8*, i32, i32)** %zalloc to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 24, i32 8, i1 false)
  %call32 = tail call i32 @inflateInit2_(%struct.z_stream_s* %strm1, i32 31, i8* getelementptr inbounds ([6 x i8]* @.str330, i64 0, i64 0), i32 112) #4
  %cmp33 = icmp eq i32 %call32, 0
  br i1 %cmp33, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end23
  %4 = load i8** %out, align 8, !tbaa !35
  tail call void @free(i8* %4) #4
  %5 = load i8** %in, align 8, !tbaa !36
  tail call void @free(i8* %5) #4
  store i32 0, i32* %size, align 4, !tbaa !12
  tail call void @gz_error(%struct.gz_state* %state, i32 -4, i8* getelementptr inbounds ([14 x i8]* @.str229, i64 0, i64 0)) #4
  br label %return

if.end40:                                         ; preds = %if.end23, %entry.if.end40_crit_edge
  %avail_in41.pre-phi = phi i32* [ %avail_in41.pre, %entry.if.end40_crit_edge ], [ %avail_in, %if.end23 ]
  %6 = load i32* %avail_in41.pre-phi, align 4, !tbaa !32
  %cmp42 = icmp ult i32 %6, 2
  br i1 %cmp42, label %if.then44, label %land.lhs.true

if.then44:                                        ; preds = %if.end40
  %err.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 17
  %7 = load i32* %err.i, align 4, !tbaa !14
  switch i32 %7, label %return [
    i32 0, label %if.end.i
    i32 -5, label %if.end.i
  ]

if.end.i:                                         ; preds = %if.then44, %if.then44
  %eof.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 11
  %8 = load i32* %eof.i, align 4, !tbaa !18
  %cmp4.i = icmp eq i32 %8, 0
  br i1 %cmp4.i, label %if.then5.i, label %if.end49

if.then5.i:                                       ; preds = %if.end.i
  %tobool.i = icmp eq i32 %6, 0
  %in11.pre.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 6
  br i1 %tobool.i, label %if.end10.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.then5.i
  %9 = load i8** %in11.pre.i, align 8, !tbaa !36
  %next_in.i = getelementptr inbounds %struct.z_stream_s* %strm1, i64 0, i32 0
  %10 = load i8** %next_in.i, align 8, !tbaa !37
  %11 = add i32 %6, -1
  %12 = zext i32 %11 to i64
  %13 = add nuw nsw i64 %12, 1
  %end.idx = add nuw nsw i64 %12, 1
  %n.vec = and i64 %13, 8589934560
  %cmp.zero = icmp eq i64 %n.vec, 0
  %14 = add i32 %6, -1
  %15 = zext i32 %14 to i64
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %if.then6.i
  %scevgep166 = getelementptr i8* %10, i64 %15
  %bound0 = icmp ule i8* %9, %scevgep166
  %scevgep = getelementptr i8* %9, i64 %15
  %bound1 = icmp ule i8* %10, %scevgep
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %9, i64 %n.vec
  %ptr.ind.end169 = getelementptr i8* %10, i64 %n.vec
  %cast.crd = trunc i64 %n.vec to i32
  %rev.ind.end = sub i32 %6, %cast.crd
  br i1 %memcheck.conflict, label %middle.block, label %vector.body.preheader

vector.body.preheader:                            ; preds = %vector.memcheck
  %16 = add i32 %6, -1
  %17 = zext i32 %16 to i64
  %18 = add i64 %17, 1
  %19 = lshr i64 %18, 5
  %20 = mul i64 %19, 32
  %21 = add i64 %20, -32
  %22 = lshr i64 %21, 5
  %23 = add i64 %22, 1
  %xtraiter481 = and i64 %23, 1
  %lcmp.mod482 = icmp ne i64 %xtraiter481, 0
  %lcmp.overflow483 = icmp eq i64 %23, 0
  %lcmp.or484 = or i1 %lcmp.overflow483, %lcmp.mod482
  br i1 %lcmp.or484, label %vector.body.unr, label %vector.body.preheader.split

vector.body.unr:                                  ; preds = %vector.body.preheader
  %next.gep.unr = getelementptr i8* %9, i64 0
  %next.gep267.unr = getelementptr i8* %10, i64 0
  %24 = bitcast i8* %next.gep267.unr to <16 x i8>*
  %wide.load.unr = load <16 x i8>* %24, align 1, !tbaa !5
  %next.gep267.sum443.unr = or i64 0, 16
  %25 = getelementptr i8* %10, i64 %next.gep267.sum443.unr
  %26 = bitcast i8* %25 to <16 x i8>*
  %wide.load364.unr = load <16 x i8>* %26, align 1, !tbaa !5
  %27 = bitcast i8* %next.gep.unr to <16 x i8>*
  store <16 x i8> %wide.load.unr, <16 x i8>* %27, align 1, !tbaa !5
  %next.gep.sum460.unr = or i64 0, 16
  %28 = getelementptr i8* %9, i64 %next.gep.sum460.unr
  %29 = bitcast i8* %28 to <16 x i8>*
  store <16 x i8> %wide.load364.unr, <16 x i8>* %29, align 1, !tbaa !5
  %index.next.unr = add i64 0, 32
  %30 = icmp eq i64 %index.next.unr, %n.vec
  br label %vector.body.preheader.split

vector.body.preheader.split:                      ; preds = %vector.body.unr, %vector.body.preheader
  %index.unr = phi i64 [ 0, %vector.body.preheader ], [ %index.next.unr, %vector.body.unr ]
  %31 = icmp ult i64 %23, 2
  br i1 %31, label %middle.block.loopexit, label %vector.body.preheader.split.split

vector.body.preheader.split.split:                ; preds = %vector.body.preheader.split
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.split.split
  %index = phi i64 [ %index.unr, %vector.body.preheader.split.split ], [ %index.next.1, %vector.body ]
  %next.gep = getelementptr i8* %9, i64 %index
  %next.gep267 = getelementptr i8* %10, i64 %index
  %32 = bitcast i8* %next.gep267 to <16 x i8>*
  %wide.load = load <16 x i8>* %32, align 1, !tbaa !5
  %next.gep267.sum443 = or i64 %index, 16
  %33 = getelementptr i8* %10, i64 %next.gep267.sum443
  %34 = bitcast i8* %33 to <16 x i8>*
  %wide.load364 = load <16 x i8>* %34, align 1, !tbaa !5
  %35 = bitcast i8* %next.gep to <16 x i8>*
  store <16 x i8> %wide.load, <16 x i8>* %35, align 1, !tbaa !5
  %next.gep.sum460 = or i64 %index, 16
  %36 = getelementptr i8* %9, i64 %next.gep.sum460
  %37 = bitcast i8* %36 to <16 x i8>*
  store <16 x i8> %wide.load364, <16 x i8>* %37, align 1, !tbaa !5
  %index.next = add i64 %index, 32
  %next.gep.1 = getelementptr i8* %9, i64 %index.next
  %next.gep267.1 = getelementptr i8* %10, i64 %index.next
  %38 = bitcast i8* %next.gep267.1 to <16 x i8>*
  %wide.load.1 = load <16 x i8>* %38, align 1, !tbaa !5
  %next.gep267.sum443.1 = or i64 %index.next, 16
  %39 = getelementptr i8* %10, i64 %next.gep267.sum443.1
  %40 = bitcast i8* %39 to <16 x i8>*
  %wide.load364.1 = load <16 x i8>* %40, align 1, !tbaa !5
  %41 = bitcast i8* %next.gep.1 to <16 x i8>*
  store <16 x i8> %wide.load.1, <16 x i8>* %41, align 1, !tbaa !5
  %next.gep.sum460.1 = or i64 %index.next, 16
  %42 = getelementptr i8* %9, i64 %next.gep.sum460.1
  %43 = bitcast i8* %42 to <16 x i8>*
  store <16 x i8> %wide.load364.1, <16 x i8>* %43, align 1, !tbaa !5
  %index.next.1 = add i64 %index.next, 32
  %44 = icmp eq i64 %index.next.1, %n.vec
  br i1 %44, label %middle.block.loopexit.unr-lcssa, label %vector.body, !llvm.loop !40

middle.block.loopexit.unr-lcssa:                  ; preds = %vector.body
  br label %middle.block.loopexit

middle.block.loopexit:                            ; preds = %middle.block.loopexit.unr-lcssa, %vector.body.preheader.split
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %vector.memcheck, %if.then6.i
  %resume.val = phi i8* [ %9, %if.then6.i ], [ %9, %vector.memcheck ], [ %ptr.ind.end, %middle.block.loopexit ]
  %resume.val167 = phi i8* [ %10, %if.then6.i ], [ %10, %vector.memcheck ], [ %ptr.ind.end169, %middle.block.loopexit ]
  %resume.val170 = phi i32 [ %6, %if.then6.i ], [ %6, %vector.memcheck ], [ %rev.ind.end, %middle.block.loopexit ]
  %new.indc.resume.val = phi i64 [ 0, %if.then6.i ], [ 0, %vector.memcheck ], [ %n.vec, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %end.idx, %new.indc.resume.val
  br i1 %cmp.n, label %if.end10.loopexit.i, label %do.body.i.preheader

do.body.i.preheader:                              ; preds = %middle.block
  %xtraiter = and i32 %resume.val170, 3
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %resume.val170, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %unr.cmp476, label %do.body.i.preheader.split

unr.cmp476:                                       ; preds = %do.body.i.preheader
  %un.tmp477 = icmp eq i32 %xtraiter, 1
  br i1 %un.tmp477, label %do.body.i.unr468, label %unr.cmp

unr.cmp:                                          ; preds = %unr.cmp476
  %un.tmp = icmp eq i32 %xtraiter, 2
  br i1 %un.tmp, label %do.body.i.unr463, label %do.body.i.unr

do.body.i.unr:                                    ; preds = %unr.cmp
  %incdec.ptr.i.unr = getelementptr inbounds i8* %resume.val167, i64 1
  %45 = load i8* %resume.val167, align 1, !tbaa !5
  %incdec.ptr8.i.unr = getelementptr inbounds i8* %resume.val, i64 1
  store i8 %45, i8* %resume.val, align 1, !tbaa !5
  %dec.i.unr = add i32 %resume.val170, -1
  %tobool9.i.unr = icmp eq i32 %dec.i.unr, 0
  br label %do.body.i.unr463

do.body.i.unr463:                                 ; preds = %do.body.i.unr, %unr.cmp
  %p.0.i.unr = phi i8* [ %incdec.ptr8.i.unr, %do.body.i.unr ], [ %resume.val, %unr.cmp ]
  %q.0.i.unr = phi i8* [ %incdec.ptr.i.unr, %do.body.i.unr ], [ %resume.val167, %unr.cmp ]
  %n.0.i.unr = phi i32 [ %dec.i.unr, %do.body.i.unr ], [ %resume.val170, %unr.cmp ]
  %incdec.ptr.i.unr464 = getelementptr inbounds i8* %q.0.i.unr, i64 1
  %46 = load i8* %q.0.i.unr, align 1, !tbaa !5
  %incdec.ptr8.i.unr465 = getelementptr inbounds i8* %p.0.i.unr, i64 1
  store i8 %46, i8* %p.0.i.unr, align 1, !tbaa !5
  %dec.i.unr466 = add i32 %n.0.i.unr, -1
  %tobool9.i.unr467 = icmp eq i32 %dec.i.unr466, 0
  br label %do.body.i.unr468

do.body.i.unr468:                                 ; preds = %do.body.i.unr463, %unr.cmp476
  %p.0.i.unr469 = phi i8* [ %incdec.ptr8.i.unr465, %do.body.i.unr463 ], [ %resume.val, %unr.cmp476 ]
  %q.0.i.unr470 = phi i8* [ %incdec.ptr.i.unr464, %do.body.i.unr463 ], [ %resume.val167, %unr.cmp476 ]
  %n.0.i.unr471 = phi i32 [ %dec.i.unr466, %do.body.i.unr463 ], [ %resume.val170, %unr.cmp476 ]
  %incdec.ptr.i.unr472 = getelementptr inbounds i8* %q.0.i.unr470, i64 1
  %47 = load i8* %q.0.i.unr470, align 1, !tbaa !5
  %incdec.ptr8.i.unr473 = getelementptr inbounds i8* %p.0.i.unr469, i64 1
  store i8 %47, i8* %p.0.i.unr469, align 1, !tbaa !5
  %dec.i.unr474 = add i32 %n.0.i.unr471, -1
  %tobool9.i.unr475 = icmp eq i32 %dec.i.unr474, 0
  br label %do.body.i.preheader.split

do.body.i.preheader.split:                        ; preds = %do.body.i.unr468, %do.body.i.preheader
  %p.0.i.unr478 = phi i8* [ %resume.val, %do.body.i.preheader ], [ %incdec.ptr8.i.unr473, %do.body.i.unr468 ]
  %q.0.i.unr479 = phi i8* [ %resume.val167, %do.body.i.preheader ], [ %incdec.ptr.i.unr472, %do.body.i.unr468 ]
  %n.0.i.unr480 = phi i32 [ %resume.val170, %do.body.i.preheader ], [ %dec.i.unr474, %do.body.i.unr468 ]
  %48 = icmp ult i32 %resume.val170, 4
  br i1 %48, label %if.end10.loopexit.i.loopexit, label %do.body.i.preheader.split.split

do.body.i.preheader.split.split:                  ; preds = %do.body.i.preheader.split
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %do.body.i.preheader.split.split
  %p.0.i = phi i8* [ %p.0.i.unr478, %do.body.i.preheader.split.split ], [ %incdec.ptr8.i.3, %do.body.i ]
  %q.0.i = phi i8* [ %q.0.i.unr479, %do.body.i.preheader.split.split ], [ %incdec.ptr.i.3, %do.body.i ]
  %n.0.i = phi i32 [ %n.0.i.unr480, %do.body.i.preheader.split.split ], [ %dec.i.3, %do.body.i ]
  %incdec.ptr.i = getelementptr inbounds i8* %q.0.i, i64 1
  %49 = load i8* %q.0.i, align 1, !tbaa !5
  %incdec.ptr8.i = getelementptr inbounds i8* %p.0.i, i64 1
  store i8 %49, i8* %p.0.i, align 1, !tbaa !5
  %dec.i = add i32 %n.0.i, -1
  %incdec.ptr.i.1 = getelementptr inbounds i8* %incdec.ptr.i, i64 1
  %50 = load i8* %incdec.ptr.i, align 1, !tbaa !5
  %incdec.ptr8.i.1 = getelementptr inbounds i8* %incdec.ptr8.i, i64 1
  store i8 %50, i8* %incdec.ptr8.i, align 1, !tbaa !5
  %dec.i.1 = add i32 %dec.i, -1
  %incdec.ptr.i.2 = getelementptr inbounds i8* %incdec.ptr.i.1, i64 1
  %51 = load i8* %incdec.ptr.i.1, align 1, !tbaa !5
  %incdec.ptr8.i.2 = getelementptr inbounds i8* %incdec.ptr8.i.1, i64 1
  store i8 %51, i8* %incdec.ptr8.i.1, align 1, !tbaa !5
  %dec.i.2 = add i32 %dec.i.1, -1
  %incdec.ptr.i.3 = getelementptr inbounds i8* %incdec.ptr.i.2, i64 1
  %52 = load i8* %incdec.ptr.i.2, align 1, !tbaa !5
  %incdec.ptr8.i.3 = getelementptr inbounds i8* %incdec.ptr8.i.2, i64 1
  store i8 %52, i8* %incdec.ptr8.i.2, align 1, !tbaa !5
  %dec.i.3 = add i32 %dec.i.2, -1
  %tobool9.i.3 = icmp eq i32 %dec.i.3, 0
  br i1 %tobool9.i.3, label %if.end10.loopexit.i.loopexit.unr-lcssa, label %do.body.i, !llvm.loop !43

if.end10.loopexit.i.loopexit.unr-lcssa:           ; preds = %do.body.i
  br label %if.end10.loopexit.i.loopexit

if.end10.loopexit.i.loopexit:                     ; preds = %if.end10.loopexit.i.loopexit.unr-lcssa, %do.body.i.preheader.split
  br label %if.end10.loopexit.i

if.end10.loopexit.i:                              ; preds = %if.end10.loopexit.i.loopexit, %middle.block
  %.pre.i = load i32* %avail_in41.pre-phi, align 4, !tbaa !32
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.end10.loopexit.i, %if.then5.i
  %53 = phi i32 [ %.pre.i, %if.end10.loopexit.i ], [ 0, %if.then5.i ]
  %54 = load i8** %in11.pre.i, align 8, !tbaa !36
  %idx.ext.i = zext i32 %53 to i64
  %55 = load i32* %size, align 4, !tbaa !12
  %sub.i = sub i32 %55, %53
  %fd.i = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 2
  br label %do.body.i145

do.body.i145:                                     ; preds = %if.end.i147, %if.end10.i
  %56 = phi i32 [ %add.i146, %if.end.i147 ], [ 0, %if.end10.i ]
  %57 = load i32* %fd.i, align 4, !tbaa !15
  %idx.ext.i141 = zext i32 %56 to i64
  %add.ptr.i.sum = add nuw nsw i64 %idx.ext.i141, %idx.ext.i
  %add.ptr.i142 = getelementptr inbounds i8* %54, i64 %add.ptr.i.sum
  %sub.i143 = sub i32 %sub.i, %56
  %conv.i = zext i32 %sub.i143 to i64
  %call.i144 = tail call i64 @read(i32 %57, i8* %add.ptr.i142, i64 %conv.i) #4
  %conv1.i = trunc i64 %call.i144 to i32
  %cmp.i = icmp slt i32 %conv1.i, 1
  br i1 %cmp.i, label %do.end.i, label %if.end.i147

if.end.i147:                                      ; preds = %do.body.i145
  %add.i146 = add i32 %conv1.i, %56
  %cmp3.i = icmp ult i32 %add.i146, %sub.i
  br i1 %cmp3.i, label %do.body.i145, label %if.end16.i.loopexit

do.end.i:                                         ; preds = %do.body.i145
  %conv1.i.lcssa = phi i32 [ %conv1.i, %do.body.i145 ]
  %.lcssa = phi i32 [ %56, %do.body.i145 ]
  %cmp5.i = icmp slt i32 %conv1.i.lcssa, 0
  br i1 %cmp5.i, label %gz_load.exit, label %if.then13.i

if.then13.i:                                      ; preds = %do.end.i
  store i32 1, i32* %eof.i, align 4, !tbaa !18
  br label %if.end16.i

gz_load.exit:                                     ; preds = %do.end.i
  %call8.i = tail call i32* @__errno_location() #13
  %58 = load i32* %call8.i, align 4, !tbaa !28
  %call9.i = tail call i8* @strerror(i32 %58) #4
  tail call void @gz_error(%struct.gz_state* %state, i32 -1, i8* %call9.i) #4
  br label %return

if.end16.i.loopexit:                              ; preds = %if.end.i147
  %add.i146.lcssa = phi i32 [ %add.i146, %if.end.i147 ]
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.end16.i.loopexit, %if.then13.i
  %got.i.0.load152.ph = phi i32 [ %.lcssa, %if.then13.i ], [ %add.i146.lcssa, %if.end16.i.loopexit ]
  %59 = load i32* %avail_in41.pre-phi, align 4, !tbaa !32
  %add.i = add i32 %59, %got.i.0.load152.ph
  store i32 %add.i, i32* %avail_in41.pre-phi, align 4, !tbaa !32
  %60 = load i8** %in11.pre.i, align 8, !tbaa !36
  %next_in19.i = getelementptr inbounds %struct.z_stream_s* %strm1, i64 0, i32 0
  store i8* %60, i8** %next_in19.i, align 8, !tbaa !37
  br label %if.end49

if.end49:                                         ; preds = %if.end16.i, %if.end.i
  %61 = phi i32 [ %add.i, %if.end16.i ], [ %6, %if.end.i ]
  %cmp51 = icmp eq i32 %61, 0
  br i1 %cmp51, label %return, label %if.end55

if.end55:                                         ; preds = %if.end49
  %cmp57 = icmp ugt i32 %61, 1
  br i1 %cmp57, label %land.lhs.true, label %if.end71

land.lhs.true:                                    ; preds = %if.end55, %if.end40
  %62 = phi i32 [ %6, %if.end40 ], [ %61, %if.end55 ]
  %next_in59 = getelementptr inbounds %struct.z_stream_s* %strm1, i64 0, i32 0
  %63 = load i8** %next_in59, align 8, !tbaa !37
  %64 = load i8* %63, align 1, !tbaa !5
  %cmp61 = icmp eq i8 %64, 31
  br i1 %cmp61, label %land.lhs.true63, label %if.end71

land.lhs.true63:                                  ; preds = %land.lhs.true
  %arrayidx65 = getelementptr inbounds i8* %63, i64 1
  %65 = load i8* %arrayidx65, align 1, !tbaa !5
  %cmp67 = icmp eq i8 %65, -117
  br i1 %cmp67, label %if.then69, label %if.end71

if.then69:                                        ; preds = %land.lhs.true63
  %call70 = tail call i32 @inflateReset(%struct.z_stream_s* %strm1) #4
  %how = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 9
  store i32 2, i32* %how, align 4, !tbaa !20
  %direct = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 8
  store i32 0, i32* %direct, align 4, !tbaa !31
  br label %return

if.end71:                                         ; preds = %land.lhs.true63, %land.lhs.true, %if.end55
  %66 = phi i32 [ %62, %land.lhs.true63 ], [ %62, %land.lhs.true ], [ 1, %if.end55 ]
  %direct72 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 8
  %67 = load i32* %direct72, align 4, !tbaa !31
  %cmp73 = icmp eq i32 %67, 0
  br i1 %cmp73, label %if.then75, label %if.end77

if.then75:                                        ; preds = %if.end71
  store i32 0, i32* %avail_in41.pre-phi, align 4, !tbaa !32
  %eof = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 11
  store i32 1, i32* %eof, align 4, !tbaa !18
  %have = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 0
  store i32 0, i32* %have, align 4, !tbaa !17
  br label %return

if.end77:                                         ; preds = %if.end71
  %out78 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 7
  %68 = load i8** %out78, align 8, !tbaa !35
  %next = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 1
  store i8* %68, i8** %next, align 8, !tbaa !26
  %tobool = icmp eq i32 %66, 0
  br i1 %tobool, label %if.end91, label %if.then81

if.then81:                                        ; preds = %if.end77
  %next_in84 = getelementptr inbounds %struct.z_stream_s* %strm1, i64 0, i32 0
  %69 = load i8** %next_in84, align 8, !tbaa !37
  %conv86 = zext i32 %66 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 %conv86, i32 1, i1 false)
  %70 = load i32* %avail_in41.pre-phi, align 4, !tbaa !32
  %have89 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 0
  store i32 %70, i32* %have89, align 4, !tbaa !17
  store i32 0, i32* %avail_in41.pre-phi, align 4, !tbaa !32
  br label %if.end91

if.end91:                                         ; preds = %if.then81, %if.end77
  %how92 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 9
  store i32 1, i32* %how92, align 4, !tbaa !20
  store i32 1, i32* %direct72, align 4, !tbaa !31
  br label %return

return:                                           ; preds = %if.end91, %if.then75, %if.then69, %if.end49, %gz_load.exit, %if.then44, %if.then35, %if.end22
  %retval.0 = phi i32 [ -1, %if.end22 ], [ -1, %if.then35 ], [ 0, %if.then69 ], [ 0, %if.then75 ], [ 0, %if.end91 ], [ 0, %if.end49 ], [ -1, %if.then44 ], [ -1, %gz_load.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzwrite(%struct.gzFile_s* %file, i8* %buf, i32 %len) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %strm1 = getelementptr inbounds %struct.gzFile_s* %file, i64 5
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp2 = icmp eq i32 %2, 31153
  br i1 %cmp2, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  %cmp3 = icmp eq i32 %3, 0
  br i1 %cmp3, label %if.end5, label %return

if.end5:                                          ; preds = %lor.lhs.false
  %cmp6 = icmp slt i32 %len, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end5
  tail call void @gz_error(%struct.gz_state* %0, i32 -3, i8* getelementptr inbounds ([37 x i8]* @.str38, i64 0, i64 0)) #4
  br label %return

if.end8:                                          ; preds = %if.end5
  %cmp9 = icmp eq i32 %len, 0
  br i1 %cmp9, label %return, label %if.end11

if.end11:                                         ; preds = %if.end8
  %size = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %4 = bitcast i64* %size to i32*
  %5 = load i32* %4, align 4, !tbaa !12
  %cmp12 = icmp eq i32 %5, 0
  br i1 %cmp12, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %if.end11
  %call = tail call fastcc i32 @gz_init(%struct.gz_state* %0)
  %cmp13 = icmp eq i32 %call, -1
  br i1 %cmp13, label %return, label %if.end15

if.end15:                                         ; preds = %land.lhs.true, %if.end11
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %6 = bitcast i8** %seek to i32*
  %7 = load i32* %6, align 4, !tbaa !21
  %tobool = icmp eq i32 %7, 0
  br i1 %tobool, label %if.end22, label %if.then16

if.then16:                                        ; preds = %if.end15
  store i32 0, i32* %6, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %8 = bitcast %struct.gzFile_s* %skip to i64*
  %9 = load i64* %8, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %10 = bitcast i8** %avail_in.i to i32*
  %11 = load i32* %10, align 4, !tbaa !32
  %tobool.i = icmp eq i32 %11, 0
  br i1 %tobool.i, label %while.cond.preheader.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then16
  %call.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %return, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %land.lhs.true.i, %if.then16
  %tobool235.i = icmp eq i64 %9, 0
  br i1 %tobool235.i, label %if.end22, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.preheader.i
  %in12.i = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %12 = bitcast %struct.gzFile_s* %in12.i to i8**
  %13 = bitcast %struct.gzFile_s* %strm1 to i8**
  %14 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  br label %while.body.i

while.cond.i:                                     ; preds = %if.end10.i
  %sub.i = sub nsw i64 %len.addr.037.i, %conv13.pre-phi.i
  %tobool2.i = icmp eq i64 %len.addr.037.i, %conv13.pre-phi.i
  br i1 %tobool2.i, label %if.end22.loopexit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i, %while.body.lr.ph.i
  %len.addr.037.i = phi i64 [ %9, %while.body.lr.ph.i ], [ %sub.i, %while.cond.i ]
  %first.036.i = phi i1 [ false, %while.body.lr.ph.i ], [ true, %while.cond.i ]
  %15 = load i32* %4, align 4, !tbaa !12
  %conv.i = zext i32 %15 to i64
  %cmp3.i = icmp sgt i64 %conv.i, %len.addr.037.i
  %conv5.i = trunc i64 %len.addr.037.i to i32
  %cond.i = select i1 %cmp3.i, i32 %conv5.i, i32 %15
  br i1 %first.036.i, label %while.body.if.end10_crit_edge.i, label %if.then8.i

while.body.if.end10_crit_edge.i:                  ; preds = %while.body.i
  %conv13.pre.i = zext i32 %cond.i to i64
  br label %if.end10.i

if.then8.i:                                       ; preds = %while.body.i
  %16 = load i8** %12, align 8, !tbaa !36
  %conv9.i = zext i32 %cond.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 %conv9.i, i32 1, i1 false) #4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %while.body.if.end10_crit_edge.i
  %conv13.pre-phi.i = phi i64 [ %conv13.pre.i, %while.body.if.end10_crit_edge.i ], [ %conv9.i, %if.then8.i ]
  store i32 %cond.i, i32* %10, align 4, !tbaa !32
  %17 = load i8** %12, align 8, !tbaa !36
  store i8* %17, i8** %13, align 8, !tbaa !37
  %18 = load i64* %14, align 8, !tbaa !23
  %add.i = add nsw i64 %18, %conv13.pre-phi.i
  store i64 %add.i, i64* %14, align 8, !tbaa !23
  %call14.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp15.i = icmp eq i32 %call14.i, -1
  br i1 %cmp15.i, label %return.loopexit127, label %while.cond.i

if.end22.loopexit:                                ; preds = %while.cond.i
  br label %if.end22

if.end22:                                         ; preds = %if.end22.loopexit, %while.cond.preheader.i, %if.end15
  %19 = load i32* %4, align 4, !tbaa !12
  %cmp24 = icmp ugt i32 %19, %len
  %avail_in = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %20 = bitcast i8** %avail_in to i32*
  br i1 %cmp24, label %do.body.preheader, label %if.else

do.body.preheader:                                ; preds = %if.end22
  %in = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %21 = bitcast %struct.gzFile_s* %in to i8**
  %next_in = bitcast %struct.gzFile_s* %strm1 to i8**
  %pos = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  br label %do.body

do.body:                                          ; preds = %land.lhs.true48, %do.body.preheader
  %len.addr.0 = phi i32 [ %sub46, %land.lhs.true48 ], [ %len, %do.body.preheader ]
  %buf.addr.0 = phi i8* [ %add.ptr45, %land.lhs.true48 ], [ %buf, %do.body.preheader ]
  %22 = load i32* %20, align 4, !tbaa !32
  %cmp26 = icmp eq i32 %22, 0
  br i1 %cmp26, label %if.then27, label %do.body.if.end28_crit_edge

do.body.if.end28_crit_edge:                       ; preds = %do.body
  %.pre = load i8** %next_in, align 8, !tbaa !37
  %.pre125 = load i8** %21, align 8, !tbaa !36
  br label %if.end28

if.then27:                                        ; preds = %do.body
  %23 = load i8** %21, align 8, !tbaa !36
  store i8* %23, i8** %next_in, align 8, !tbaa !37
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %do.body.if.end28_crit_edge
  %24 = phi i8* [ %.pre125, %do.body.if.end28_crit_edge ], [ %23, %if.then27 ]
  %25 = phi i8* [ %.pre, %do.body.if.end28_crit_edge ], [ %23, %if.then27 ]
  %idx.ext = zext i32 %22 to i64
  %add.ptr = getelementptr inbounds i8* %25, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %26 = load i32* %4, align 4, !tbaa !12
  %sub = sub i32 %26, %conv
  %cmp33 = icmp ugt i32 %sub, %len.addr.0
  %len.addr.0.sub = select i1 %cmp33, i32 %len.addr.0, i32 %sub
  %idx.ext38 = and i64 %sub.ptr.sub, 4294967295
  %add.ptr39 = getelementptr inbounds i8* %24, i64 %idx.ext38
  %conv40 = zext i32 %len.addr.0.sub to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr39, i8* %buf.addr.0, i64 %conv40, i32 1, i1 false)
  %27 = load i32* %20, align 4, !tbaa !32
  %add = add i32 %len.addr.0.sub, %27
  store i32 %add, i32* %20, align 4, !tbaa !32
  %28 = load i64* %pos, align 8, !tbaa !23
  %add43 = add nsw i64 %conv40, %28
  store i64 %add43, i64* %pos, align 8, !tbaa !23
  %tobool47 = icmp eq i32 %len.addr.0, %len.addr.0.sub
  br i1 %tobool47, label %if.end74.loopexit, label %land.lhs.true48

land.lhs.true48:                                  ; preds = %if.end28
  %sub46 = sub i32 %len.addr.0, %len.addr.0.sub
  %add.ptr45 = getelementptr inbounds i8* %buf.addr.0, i64 %conv40
  %call49 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0)
  %cmp50 = icmp eq i32 %call49, -1
  br i1 %cmp50, label %return.loopexit, label %do.body

if.else:                                          ; preds = %if.end22
  %29 = load i32* %20, align 4, !tbaa !32
  %tobool56 = icmp eq i32 %29, 0
  br i1 %tobool56, label %if.end62, label %land.lhs.true57

land.lhs.true57:                                  ; preds = %if.else
  %call58 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0)
  %cmp59 = icmp eq i32 %call58, -1
  br i1 %cmp59, label %return, label %if.end62

if.end62:                                         ; preds = %land.lhs.true57, %if.else
  store i32 %len, i32* %20, align 4, !tbaa !32
  %next_in64 = bitcast %struct.gzFile_s* %strm1 to i8**
  store i8* %buf, i8** %next_in64, align 8, !tbaa !37
  %conv65 = zext i32 %len to i64
  %pos67 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %30 = load i64* %pos67, align 8, !tbaa !23
  %add68 = add nsw i64 %30, %conv65
  store i64 %add68, i64* %pos67, align 8, !tbaa !23
  %call69 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0)
  %cmp70 = icmp eq i32 %call69, -1
  br i1 %cmp70, label %return, label %if.end74

if.end74.loopexit:                                ; preds = %if.end28
  br label %if.end74

if.end74:                                         ; preds = %if.end74.loopexit, %if.end62
  br label %return

return.loopexit:                                  ; preds = %land.lhs.true48
  br label %return

return.loopexit127:                               ; preds = %if.end10.i
  br label %return

return:                                           ; preds = %return.loopexit127, %return.loopexit, %if.end74, %if.end62, %land.lhs.true57, %land.lhs.true.i, %land.lhs.true, %if.end8, %if.then7, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.then7 ], [ %len, %if.end74 ], [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %if.end8 ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true57 ], [ 0, %if.end62 ], [ 0, %land.lhs.true.i ], [ 0, %return.loopexit ], [ 0, %return.loopexit127 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzputc(%struct.gzFile_s* %file, i32 %c) #3 {
entry:
  %buf = alloca [1 x i8], align 1
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %strm1 = getelementptr inbounds %struct.gzFile_s* %file, i64 5
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp2 = icmp eq i32 %2, 31153
  br i1 %cmp2, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  %cmp3 = icmp eq i32 %3, 0
  br i1 %cmp3, label %if.end5, label %return

if.end5:                                          ; preds = %lor.lhs.false
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %4 = bitcast i8** %seek to i32*
  %5 = load i32* %4, align 4, !tbaa !21
  %tobool = icmp eq i32 %5, 0
  br i1 %tobool, label %if.end11, label %if.then6

if.then6:                                         ; preds = %if.end5
  store i32 0, i32* %4, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %6 = bitcast %struct.gzFile_s* %skip to i64*
  %7 = load i64* %6, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %8 = bitcast i8** %avail_in.i to i32*
  %9 = load i32* %8, align 4, !tbaa !32
  %tobool.i = icmp eq i32 %9, 0
  br i1 %tobool.i, label %while.cond.preheader.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then6
  %call.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %return, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %land.lhs.true.i, %if.then6
  %tobool235.i = icmp eq i64 %7, 0
  br i1 %tobool235.i, label %if.end11, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.preheader.i
  %size.i = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %10 = bitcast i64* %size.i to i32*
  %in12.i = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %11 = bitcast %struct.gzFile_s* %in12.i to i8**
  %12 = bitcast %struct.gzFile_s* %strm1 to i8**
  %13 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  br label %while.body.i

while.cond.i:                                     ; preds = %if.end10.i
  %sub.i = sub nsw i64 %len.addr.037.i, %conv13.pre-phi.i
  %tobool2.i = icmp eq i64 %len.addr.037.i, %conv13.pre-phi.i
  br i1 %tobool2.i, label %if.end11.loopexit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i, %while.body.lr.ph.i
  %len.addr.037.i = phi i64 [ %7, %while.body.lr.ph.i ], [ %sub.i, %while.cond.i ]
  %first.036.i = phi i1 [ false, %while.body.lr.ph.i ], [ true, %while.cond.i ]
  %14 = load i32* %10, align 4, !tbaa !12
  %conv.i = zext i32 %14 to i64
  %cmp3.i = icmp sgt i64 %conv.i, %len.addr.037.i
  %conv5.i = trunc i64 %len.addr.037.i to i32
  %cond.i = select i1 %cmp3.i, i32 %conv5.i, i32 %14
  br i1 %first.036.i, label %while.body.if.end10_crit_edge.i, label %if.then8.i

while.body.if.end10_crit_edge.i:                  ; preds = %while.body.i
  %conv13.pre.i = zext i32 %cond.i to i64
  br label %if.end10.i

if.then8.i:                                       ; preds = %while.body.i
  %15 = load i8** %11, align 8, !tbaa !36
  %conv9.i = zext i32 %cond.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 %conv9.i, i32 1, i1 false) #4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %while.body.if.end10_crit_edge.i
  %conv13.pre-phi.i = phi i64 [ %conv13.pre.i, %while.body.if.end10_crit_edge.i ], [ %conv9.i, %if.then8.i ]
  store i32 %cond.i, i32* %8, align 4, !tbaa !32
  %16 = load i8** %11, align 8, !tbaa !36
  store i8* %16, i8** %12, align 8, !tbaa !37
  %17 = load i64* %13, align 8, !tbaa !23
  %add.i = add nsw i64 %17, %conv13.pre-phi.i
  store i64 %add.i, i64* %13, align 8, !tbaa !23
  %call14.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp15.i = icmp eq i32 %call14.i, -1
  br i1 %cmp15.i, label %return.loopexit, label %while.cond.i

if.end11.loopexit:                                ; preds = %while.cond.i
  br label %if.end11

if.end11:                                         ; preds = %if.end11.loopexit, %while.cond.preheader.i, %if.end5
  %size = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %18 = bitcast i64* %size to i32*
  %19 = load i32* %18, align 4, !tbaa !12
  %tobool12 = icmp eq i32 %19, 0
  br i1 %tobool12, label %if.end29, label %if.then13

if.then13:                                        ; preds = %if.end11
  %avail_in = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %20 = bitcast i8** %avail_in to i32*
  %21 = load i32* %20, align 4, !tbaa !32
  %cmp14 = icmp eq i32 %21, 0
  br i1 %cmp14, label %if.then15, label %if.then13.if.end16_crit_edge

if.then13.if.end16_crit_edge:                     ; preds = %if.then13
  %next_in17.phi.trans.insert = bitcast %struct.gzFile_s* %strm1 to i8**
  %.pre = load i8** %next_in17.phi.trans.insert, align 8, !tbaa !37
  %in19.phi.trans.insert = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %.phi.trans.insert = bitcast %struct.gzFile_s* %in19.phi.trans.insert to i8**
  %.pre64 = load i8** %.phi.trans.insert, align 8, !tbaa !36
  br label %if.end16

if.then15:                                        ; preds = %if.then13
  %in = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %22 = bitcast %struct.gzFile_s* %in to i8**
  %23 = load i8** %22, align 8, !tbaa !36
  %next_in = bitcast %struct.gzFile_s* %strm1 to i8**
  store i8* %23, i8** %next_in, align 8, !tbaa !37
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.then13.if.end16_crit_edge
  %24 = phi i8* [ %.pre64, %if.then13.if.end16_crit_edge ], [ %23, %if.then15 ]
  %25 = phi i8* [ %.pre, %if.then13.if.end16_crit_edge ], [ %23, %if.then15 ]
  %idx.ext = zext i32 %21 to i64
  %add.ptr = getelementptr inbounds i8* %25, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %cmp21 = icmp ult i32 %conv, %19
  br i1 %cmp21, label %if.then23, label %if.end29

if.then23:                                        ; preds = %if.end16
  %conv24 = trunc i32 %c to i8
  %idxprom = and i64 %sub.ptr.sub, 4294967295
  %arrayidx = getelementptr inbounds i8* %24, i64 %idxprom
  store i8 %conv24, i8* %arrayidx, align 1, !tbaa !5
  %26 = load i32* %20, align 4, !tbaa !32
  %inc = add i32 %26, 1
  store i32 %inc, i32* %20, align 4, !tbaa !32
  %pos = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %27 = load i64* %pos, align 8, !tbaa !23
  %inc27 = add nsw i64 %27, 1
  store i64 %inc27, i64* %pos, align 8, !tbaa !23
  %and = and i32 %c, 255
  br label %return

if.end29:                                         ; preds = %if.end16, %if.end11
  %conv30 = trunc i32 %c to i8
  %arrayidx31 = getelementptr inbounds [1 x i8]* %buf, i64 0, i64 0
  store i8 %conv30, i8* %arrayidx31, align 1, !tbaa !5
  %call32 = call i32 @gzwrite(%struct.gzFile_s* %file, i8* %arrayidx31, i32 1)
  %cmp33 = icmp eq i32 %call32, 1
  %and37 = and i32 %c, 255
  %and37. = select i1 %cmp33, i32 %and37, i32 -1
  ret i32 %and37.

return.loopexit:                                  ; preds = %if.end10.i
  br label %return

return:                                           ; preds = %return.loopexit, %if.then23, %land.lhs.true.i, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ %and, %if.then23 ], [ -1, %entry ], [ -1, %lor.lhs.false ], [ -1, %if.end ], [ -1, %land.lhs.true.i ], [ -1, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzputs(%struct.gzFile_s* %file, i8* %str) #3 {
entry:
  %call = tail call i64 @strlen(i8* %str) #12
  %conv = trunc i64 %call to i32
  %call1 = tail call i32 @gzwrite(%struct.gzFile_s* %file, i8* %str, i32 %conv)
  %cmp = icmp eq i32 %call1, 0
  %cmp3 = icmp ne i32 %conv, 0
  %or.cond = and i1 %cmp, %cmp3
  %cond = select i1 %or.cond, i32 -1, i32 %call1
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define i32 @gzvprintf(%struct.gzFile_s* %file, i8* nocapture readonly %format, %struct.__va_list_tag* %va) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %strm1 = getelementptr inbounds %struct.gzFile_s* %file, i64 5
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp2 = icmp eq i32 %2, 31153
  br i1 %cmp2, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  %cmp3 = icmp eq i32 %3, 0
  br i1 %cmp3, label %if.end5, label %return

if.end5:                                          ; preds = %lor.lhs.false
  %size6 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %4 = bitcast i64* %size6 to i32*
  %5 = load i32* %4, align 4, !tbaa !12
  %cmp7 = icmp eq i32 %5, 0
  br i1 %cmp7, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %if.end5
  %call = tail call fastcc i32 @gz_init(%struct.gz_state* %0)
  %cmp8 = icmp eq i32 %call, -1
  br i1 %cmp8, label %return, label %if.end10

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %6 = bitcast i8** %seek to i32*
  %7 = load i32* %6, align 4, !tbaa !21
  %tobool = icmp eq i32 %7, 0
  br i1 %tobool, label %if.end10.if.end17_crit_edge, label %if.then11

if.end10.if.end17_crit_edge:                      ; preds = %if.end10
  %avail_in.pre = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %.pre = bitcast i8** %avail_in.pre to i32*
  br label %if.end17

if.then11:                                        ; preds = %if.end10
  store i32 0, i32* %6, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %8 = bitcast %struct.gzFile_s* %skip to i64*
  %9 = load i64* %8, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %10 = bitcast i8** %avail_in.i to i32*
  %11 = load i32* %10, align 4, !tbaa !32
  %tobool.i = icmp eq i32 %11, 0
  br i1 %tobool.i, label %while.cond.preheader.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then11
  %call.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %return, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %land.lhs.true.i, %if.then11
  %tobool235.i = icmp eq i64 %9, 0
  br i1 %tobool235.i, label %if.end17, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.preheader.i
  %in12.i = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %12 = bitcast %struct.gzFile_s* %in12.i to i8**
  %13 = bitcast %struct.gzFile_s* %strm1 to i8**
  %14 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  br label %while.body.i

while.cond.i:                                     ; preds = %if.end10.i
  %sub.i = sub nsw i64 %len.addr.037.i, %conv13.pre-phi.i
  %tobool2.i = icmp eq i64 %len.addr.037.i, %conv13.pre-phi.i
  br i1 %tobool2.i, label %if.end17.loopexit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i, %while.body.lr.ph.i
  %len.addr.037.i = phi i64 [ %9, %while.body.lr.ph.i ], [ %sub.i, %while.cond.i ]
  %first.036.i = phi i1 [ false, %while.body.lr.ph.i ], [ true, %while.cond.i ]
  %15 = load i32* %4, align 4, !tbaa !12
  %conv.i = zext i32 %15 to i64
  %cmp3.i = icmp sgt i64 %conv.i, %len.addr.037.i
  %conv5.i = trunc i64 %len.addr.037.i to i32
  %cond.i = select i1 %cmp3.i, i32 %conv5.i, i32 %15
  br i1 %first.036.i, label %while.body.if.end10_crit_edge.i, label %if.then8.i

while.body.if.end10_crit_edge.i:                  ; preds = %while.body.i
  %conv13.pre.i = zext i32 %cond.i to i64
  br label %if.end10.i

if.then8.i:                                       ; preds = %while.body.i
  %16 = load i8** %12, align 8, !tbaa !36
  %conv9.i = zext i32 %cond.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 %conv9.i, i32 1, i1 false) #4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %while.body.if.end10_crit_edge.i
  %conv13.pre-phi.i = phi i64 [ %conv13.pre.i, %while.body.if.end10_crit_edge.i ], [ %conv9.i, %if.then8.i ]
  store i32 %cond.i, i32* %10, align 4, !tbaa !32
  %17 = load i8** %12, align 8, !tbaa !36
  store i8* %17, i8** %13, align 8, !tbaa !37
  %18 = load i64* %14, align 8, !tbaa !23
  %add.i = add nsw i64 %18, %conv13.pre-phi.i
  store i64 %add.i, i64* %14, align 8, !tbaa !23
  %call14.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp15.i = icmp eq i32 %call14.i, -1
  br i1 %cmp15.i, label %return.loopexit, label %while.cond.i

if.end17.loopexit:                                ; preds = %while.cond.i
  br label %if.end17

if.end17:                                         ; preds = %if.end17.loopexit, %while.cond.preheader.i, %if.end10.if.end17_crit_edge
  %.pre-phi = phi i32* [ %.pre, %if.end10.if.end17_crit_edge ], [ %10, %while.cond.preheader.i ], [ %10, %if.end17.loopexit ]
  %19 = load i32* %.pre-phi, align 4, !tbaa !32
  %tobool18 = icmp eq i32 %19, 0
  br i1 %tobool18, label %if.end23, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %if.end17
  %call20 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0)
  %cmp21 = icmp eq i32 %call20, -1
  br i1 %cmp21, label %return, label %if.end23

if.end23:                                         ; preds = %land.lhs.true19, %if.end17
  %20 = load i32* %4, align 4, !tbaa !12
  %sub = add nsw i32 %20, -1
  %idxprom = sext i32 %sub to i64
  %in = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %21 = bitcast %struct.gzFile_s* %in to i8**
  %22 = load i8** %21, align 8, !tbaa !36
  %arrayidx = getelementptr inbounds i8* %22, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1, !tbaa !5
  %23 = load i8** %21, align 8, !tbaa !36
  %conv = sext i32 %20 to i64
  %call26 = tail call i32 @vsnprintf(i8* %23, i64 %conv, i8* %format, %struct.__va_list_tag* %va) #4
  %cmp27 = icmp sgt i32 %call26, 0
  %cmp30 = icmp slt i32 %call26, %20
  %or.cond = and i1 %cmp27, %cmp30
  br i1 %or.cond, label %lor.lhs.false32, label %return

lor.lhs.false32:                                  ; preds = %if.end23
  %24 = load i8** %21, align 8, !tbaa !36
  %arrayidx36 = getelementptr inbounds i8* %24, i64 %idxprom
  %25 = load i8* %arrayidx36, align 1, !tbaa !5
  %cmp38 = icmp eq i8 %25, 0
  br i1 %cmp38, label %if.end41, label %return

if.end41:                                         ; preds = %lor.lhs.false32
  store i32 %call26, i32* %.pre-phi, align 4, !tbaa !32
  %next_in = bitcast %struct.gzFile_s* %strm1 to i8**
  store i8* %24, i8** %next_in, align 8, !tbaa !37
  %conv44 = sext i32 %call26 to i64
  %pos = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  %26 = load i64* %pos, align 8, !tbaa !23
  %add = add nsw i64 %26, %conv44
  store i64 %add, i64* %pos, align 8, !tbaa !23
  br label %return

return.loopexit:                                  ; preds = %if.end10.i
  br label %return

return:                                           ; preds = %return.loopexit, %if.end41, %lor.lhs.false32, %if.end23, %land.lhs.true19, %land.lhs.true.i, %land.lhs.true, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ %call26, %if.end41 ], [ -1, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true19 ], [ 0, %if.end23 ], [ 0, %lor.lhs.false32 ], [ 0, %land.lhs.true.i ], [ 0, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) #1

; Function Attrs: nounwind uwtable
define i32 @gzprintf(%struct.gzFile_s* %file, i8* nocapture readonly %format, ...) #3 {
entry:
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %va, i64 0, i64 0
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %va to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  %call = call i32 @gzvprintf(%struct.gzFile_s* %file, i8* %format, %struct.__va_list_tag* %arraydecay)
  call void @llvm.va_end(i8* %arraydecay1)
  ret i32 %call
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: nounwind uwtable
define i32 @gzflush(%struct.gzFile_s* %file, i32 %flush) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %2, 31153
  br i1 %cmp1, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %3 = load i32* %err, align 4, !tbaa !14
  %cmp2 = icmp ne i32 %3, 0
  %4 = icmp ugt i32 %flush, 4
  %or.cond = or i1 %cmp2, %4
  br i1 %or.cond, label %return, label %if.end9

if.end9:                                          ; preds = %lor.lhs.false
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %5 = bitcast i8** %seek to i32*
  %6 = load i32* %5, align 4, !tbaa !21
  %tobool = icmp eq i32 %6, 0
  br i1 %tobool, label %if.end15, label %if.then10

if.then10:                                        ; preds = %if.end9
  store i32 0, i32* %5, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %7 = bitcast %struct.gzFile_s* %skip to i64*
  %8 = load i64* %7, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %9 = bitcast i8** %avail_in.i to i32*
  %10 = load i32* %9, align 4, !tbaa !32
  %tobool.i = icmp eq i32 %10, 0
  br i1 %tobool.i, label %while.cond.preheader.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then10
  %call.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %return, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %land.lhs.true.i, %if.then10
  %tobool235.i = icmp eq i64 %8, 0
  br i1 %tobool235.i, label %if.end15, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.preheader.i
  %size.i = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %11 = bitcast i64* %size.i to i32*
  %in12.i = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %12 = bitcast %struct.gzFile_s* %in12.i to i8**
  %next_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5
  %13 = bitcast %struct.gzFile_s* %next_in.i to i8**
  %14 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  br label %while.body.i

while.cond.i:                                     ; preds = %if.end10.i
  %sub.i = sub nsw i64 %len.addr.037.i, %conv13.pre-phi.i
  %tobool2.i = icmp eq i64 %len.addr.037.i, %conv13.pre-phi.i
  br i1 %tobool2.i, label %if.end15.loopexit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i, %while.body.lr.ph.i
  %len.addr.037.i = phi i64 [ %8, %while.body.lr.ph.i ], [ %sub.i, %while.cond.i ]
  %first.036.i = phi i1 [ false, %while.body.lr.ph.i ], [ true, %while.cond.i ]
  %15 = load i32* %11, align 4, !tbaa !12
  %conv.i = zext i32 %15 to i64
  %cmp3.i = icmp sgt i64 %conv.i, %len.addr.037.i
  %conv5.i = trunc i64 %len.addr.037.i to i32
  %cond.i = select i1 %cmp3.i, i32 %conv5.i, i32 %15
  br i1 %first.036.i, label %while.body.if.end10_crit_edge.i, label %if.then8.i

while.body.if.end10_crit_edge.i:                  ; preds = %while.body.i
  %conv13.pre.i = zext i32 %cond.i to i64
  br label %if.end10.i

if.then8.i:                                       ; preds = %while.body.i
  %16 = load i8** %12, align 8, !tbaa !36
  %conv9.i = zext i32 %cond.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 %conv9.i, i32 1, i1 false) #4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %while.body.if.end10_crit_edge.i
  %conv13.pre-phi.i = phi i64 [ %conv13.pre.i, %while.body.if.end10_crit_edge.i ], [ %conv9.i, %if.then8.i ]
  store i32 %cond.i, i32* %9, align 4, !tbaa !32
  %17 = load i8** %12, align 8, !tbaa !36
  store i8* %17, i8** %13, align 8, !tbaa !37
  %18 = load i64* %14, align 8, !tbaa !23
  %add.i = add nsw i64 %18, %conv13.pre-phi.i
  store i64 %add.i, i64* %14, align 8, !tbaa !23
  %call14.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp15.i = icmp eq i32 %call14.i, -1
  br i1 %cmp15.i, label %return.loopexit, label %while.cond.i

if.end15.loopexit:                                ; preds = %while.cond.i
  br label %if.end15

if.end15:                                         ; preds = %if.end15.loopexit, %while.cond.preheader.i, %if.end9
  %call16 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 %flush)
  %19 = load i32* %err, align 4, !tbaa !14
  br label %return

return.loopexit:                                  ; preds = %if.end10.i
  br label %return

return:                                           ; preds = %return.loopexit, %if.end15, %land.lhs.true.i, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ %19, %if.end15 ], [ -1, %entry ], [ -2, %lor.lhs.false ], [ -2, %if.end ], [ -1, %land.lhs.true.i ], [ -1, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzsetparams(%struct.gzFile_s* %file, i32 %level, i32 %strategy) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %strm1 = getelementptr inbounds %struct.gzFile_s* %file, i64 5
  %1 = bitcast %struct.gzFile_s* %strm1 to %struct.z_stream_s*
  %2 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %3 = load i32* %2, align 4, !tbaa !6
  %cmp2 = icmp eq i32 %3, 31153
  br i1 %cmp2, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %4 = load i32* %err, align 4, !tbaa !14
  %cmp3 = icmp eq i32 %4, 0
  br i1 %cmp3, label %if.end5, label %return

if.end5:                                          ; preds = %lor.lhs.false
  %level6 = getelementptr inbounds %struct.gzFile_s* %file, i64 3, i32 2
  %5 = bitcast i64* %level6 to i32*
  %6 = load i32* %5, align 4, !tbaa !29
  %cmp7 = icmp eq i32 %6, %level
  br i1 %cmp7, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %if.end5
  %strategy8 = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 14
  %7 = load i32* %strategy8, align 4, !tbaa !30
  %cmp9 = icmp eq i32 %7, %strategy
  br i1 %cmp9, label %return, label %if.end11

if.end11:                                         ; preds = %land.lhs.true, %if.end5
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %8 = bitcast i8** %seek to i32*
  %9 = load i32* %8, align 4, !tbaa !21
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %if.end17, label %if.then12

if.then12:                                        ; preds = %if.end11
  store i32 0, i32* %8, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %10 = bitcast %struct.gzFile_s* %skip to i64*
  %11 = load i64* %10, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %12 = bitcast i8** %avail_in.i to i32*
  %13 = load i32* %12, align 4, !tbaa !32
  %tobool.i = icmp eq i32 %13, 0
  br i1 %tobool.i, label %while.cond.preheader.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then12
  %call.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %return, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %land.lhs.true.i, %if.then12
  %tobool235.i = icmp eq i64 %11, 0
  br i1 %tobool235.i, label %if.end17, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.preheader.i
  %size.i = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %14 = bitcast i64* %size.i to i32*
  %in12.i = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %15 = bitcast %struct.gzFile_s* %in12.i to i8**
  %16 = bitcast %struct.gzFile_s* %strm1 to i8**
  %17 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  br label %while.body.i

while.cond.i:                                     ; preds = %if.end10.i
  %sub.i = sub nsw i64 %len.addr.037.i, %conv13.pre-phi.i
  %tobool2.i = icmp eq i64 %len.addr.037.i, %conv13.pre-phi.i
  br i1 %tobool2.i, label %if.end17.loopexit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i, %while.body.lr.ph.i
  %len.addr.037.i = phi i64 [ %11, %while.body.lr.ph.i ], [ %sub.i, %while.cond.i ]
  %first.036.i = phi i1 [ false, %while.body.lr.ph.i ], [ true, %while.cond.i ]
  %18 = load i32* %14, align 4, !tbaa !12
  %conv.i = zext i32 %18 to i64
  %cmp3.i = icmp sgt i64 %conv.i, %len.addr.037.i
  %conv5.i = trunc i64 %len.addr.037.i to i32
  %cond.i = select i1 %cmp3.i, i32 %conv5.i, i32 %18
  br i1 %first.036.i, label %while.body.if.end10_crit_edge.i, label %if.then8.i

while.body.if.end10_crit_edge.i:                  ; preds = %while.body.i
  %conv13.pre.i = zext i32 %cond.i to i64
  br label %if.end10.i

if.then8.i:                                       ; preds = %while.body.i
  %19 = load i8** %15, align 8, !tbaa !36
  %conv9.i = zext i32 %cond.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %conv9.i, i32 1, i1 false) #4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %while.body.if.end10_crit_edge.i
  %conv13.pre-phi.i = phi i64 [ %conv13.pre.i, %while.body.if.end10_crit_edge.i ], [ %conv9.i, %if.then8.i ]
  store i32 %cond.i, i32* %12, align 4, !tbaa !32
  %20 = load i8** %15, align 8, !tbaa !36
  store i8* %20, i8** %16, align 8, !tbaa !37
  %21 = load i64* %17, align 8, !tbaa !23
  %add.i = add nsw i64 %21, %conv13.pre-phi.i
  store i64 %add.i, i64* %17, align 8, !tbaa !23
  %call14.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp15.i = icmp eq i32 %call14.i, -1
  br i1 %cmp15.i, label %return.loopexit, label %while.cond.i

if.end17.loopexit:                                ; preds = %while.cond.i
  br label %if.end17

if.end17:                                         ; preds = %if.end17.loopexit, %while.cond.preheader.i, %if.end11
  %size = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %22 = bitcast i64* %size to i32*
  %23 = load i32* %22, align 4, !tbaa !12
  %tobool18 = icmp eq i32 %23, 0
  br i1 %tobool18, label %if.end28, label %if.then19

if.then19:                                        ; preds = %if.end17
  %avail_in = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %24 = bitcast i8** %avail_in to i32*
  %25 = load i32* %24, align 4, !tbaa !32
  %tobool20 = icmp eq i32 %25, 0
  br i1 %tobool20, label %if.end26, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %if.then19
  %call22 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 1)
  %cmp23 = icmp eq i32 %call22, -1
  br i1 %cmp23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %land.lhs.true21
  %26 = load i32* %err, align 4, !tbaa !14
  br label %return

if.end26:                                         ; preds = %land.lhs.true21, %if.then19
  %call27 = tail call i32 bitcast (i32 (%struct.z_stream_s.10*, i32, i32)* @deflateParams to i32 (%struct.z_stream_s*, i32, i32)*)(%struct.z_stream_s* %1, i32 %level, i32 %strategy) #4
  br label %if.end28

if.end28:                                         ; preds = %if.end26, %if.end17
  store i32 %level, i32* %5, align 4, !tbaa !29
  %strategy30 = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 14
  store i32 %strategy, i32* %strategy30, align 4, !tbaa !30
  br label %return

return.loopexit:                                  ; preds = %if.end10.i
  br label %return

return:                                           ; preds = %return.loopexit, %if.end28, %if.then24, %land.lhs.true.i, %land.lhs.true, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ %26, %if.then24 ], [ 0, %if.end28 ], [ -2, %entry ], [ -2, %lor.lhs.false ], [ -2, %if.end ], [ 0, %land.lhs.true ], [ -1, %land.lhs.true.i ], [ -1, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @gzclose_w(%struct.gzFile_s* %file) #3 {
entry:
  %cmp = icmp eq %struct.gzFile_s* %file, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.gzFile_s* %file to %struct.gz_state*
  %1 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %2, 31153
  br i1 %cmp1, label %if.end3, label %return

if.end3:                                          ; preds = %if.end
  %seek = getelementptr inbounds %struct.gzFile_s* %file, i64 4, i32 1
  %3 = bitcast i8** %seek to i32*
  %4 = load i32* %3, align 4, !tbaa !21
  %tobool = icmp eq i32 %4, 0
  br i1 %tobool, label %if.end9, label %if.then4

if.then4:                                         ; preds = %if.end3
  store i32 0, i32* %3, align 4, !tbaa !21
  %skip = getelementptr inbounds %struct.gzFile_s* %file, i64 4
  %5 = bitcast %struct.gzFile_s* %skip to i64*
  %6 = load i64* %5, align 8, !tbaa !25
  %avail_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5, i32 1
  %7 = bitcast i8** %avail_in.i to i32*
  %8 = load i32* %7, align 4, !tbaa !32
  %tobool.i = icmp eq i32 %8, 0
  br i1 %tobool.i, label %while.cond.preheader.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then4
  %call.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %if.then7, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %land.lhs.true.i, %if.then4
  %tobool235.i = icmp eq i64 %6, 0
  br i1 %tobool235.i, label %if.end9, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.preheader.i
  %size.i = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %9 = bitcast i64* %size.i to i32*
  %in12.i = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %10 = bitcast %struct.gzFile_s* %in12.i to i8**
  %next_in.i = getelementptr inbounds %struct.gzFile_s* %file, i64 5
  %11 = bitcast %struct.gzFile_s* %next_in.i to i8**
  %12 = getelementptr inbounds %struct.gzFile_s* %file, i64 0, i32 2
  br label %while.body.i

while.cond.i:                                     ; preds = %if.end10.i
  %sub.i = sub nsw i64 %len.addr.037.i, %conv13.pre-phi.i
  %tobool2.i = icmp eq i64 %len.addr.037.i, %conv13.pre-phi.i
  br i1 %tobool2.i, label %if.end9.loopexit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i, %while.body.lr.ph.i
  %len.addr.037.i = phi i64 [ %6, %while.body.lr.ph.i ], [ %sub.i, %while.cond.i ]
  %first.036.i = phi i1 [ false, %while.body.lr.ph.i ], [ true, %while.cond.i ]
  %13 = load i32* %9, align 4, !tbaa !12
  %conv.i = zext i32 %13 to i64
  %cmp3.i = icmp sgt i64 %conv.i, %len.addr.037.i
  %conv5.i = trunc i64 %len.addr.037.i to i32
  %cond.i = select i1 %cmp3.i, i32 %conv5.i, i32 %13
  br i1 %first.036.i, label %while.body.if.end10_crit_edge.i, label %if.then8.i

while.body.if.end10_crit_edge.i:                  ; preds = %while.body.i
  %conv13.pre.i = zext i32 %cond.i to i64
  br label %if.end10.i

if.then8.i:                                       ; preds = %while.body.i
  %14 = load i8** %10, align 8, !tbaa !36
  %conv9.i = zext i32 %cond.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %conv9.i, i32 1, i1 false) #4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %while.body.if.end10_crit_edge.i
  %conv13.pre-phi.i = phi i64 [ %conv13.pre.i, %while.body.if.end10_crit_edge.i ], [ %conv9.i, %if.then8.i ]
  store i32 %cond.i, i32* %7, align 4, !tbaa !32
  %15 = load i8** %10, align 8, !tbaa !36
  store i8* %15, i8** %11, align 8, !tbaa !37
  %16 = load i64* %12, align 8, !tbaa !23
  %add.i = add nsw i64 %16, %conv13.pre-phi.i
  store i64 %add.i, i64* %12, align 8, !tbaa !23
  %call14.i = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #4
  %cmp15.i = icmp eq i32 %call14.i, -1
  br i1 %cmp15.i, label %if.then7.loopexit, label %while.cond.i

if.then7.loopexit:                                ; preds = %if.end10.i
  br label %if.then7

if.then7:                                         ; preds = %if.then7.loopexit, %land.lhs.true.i
  %err = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %17 = load i32* %err, align 4, !tbaa !14
  br label %if.end9

if.end9.loopexit:                                 ; preds = %while.cond.i
  br label %if.end9

if.end9:                                          ; preds = %if.end9.loopexit, %if.then7, %while.cond.preheader.i, %if.end3
  %ret.0 = phi i32 [ %17, %if.then7 ], [ 0, %if.end3 ], [ 0, %while.cond.preheader.i ], [ 0, %if.end9.loopexit ]
  %call10 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 4)
  %cmp11 = icmp eq i32 %call10, -1
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end9
  %err13 = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 17
  %18 = load i32* %err13, align 4, !tbaa !14
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end9
  %ret.1 = phi i32 [ %18, %if.then12 ], [ %ret.0, %if.end9 ]
  %size = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 2
  %19 = bitcast i64* %size to i32*
  %20 = load i32* %19, align 4, !tbaa !12
  %tobool15 = icmp eq i32 %20, 0
  br i1 %tobool15, label %if.end21, label %if.then16

if.then16:                                        ; preds = %if.end14
  %direct = getelementptr inbounds %struct.gzFile_s* %file, i64 2, i32 2
  %21 = bitcast i64* %direct to i32*
  %22 = load i32* %21, align 4, !tbaa !31
  %tobool17 = icmp eq i32 %22, 0
  br i1 %tobool17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.then16
  %strm = getelementptr inbounds %struct.gzFile_s* %file, i64 5
  %23 = bitcast %struct.gzFile_s* %strm to %struct.z_stream_s*
  %call19 = tail call i32 bitcast (i32 (%struct.z_stream_s.10*)* @deflateEnd to i32 (%struct.z_stream_s*)*)(%struct.z_stream_s* %23) #4
  %24 = getelementptr inbounds %struct.gzFile_s* %file, i64 2, i32 1
  %25 = load i8** %24, align 8, !tbaa !35
  tail call void @free(i8* %25) #4
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.then16
  %in = getelementptr inbounds %struct.gzFile_s* %file, i64 2
  %26 = bitcast %struct.gzFile_s* %in to i8**
  %27 = load i8** %26, align 8, !tbaa !36
  tail call void @free(i8* %27) #4
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end14
  tail call void @gz_error(%struct.gz_state* %0, i32 0, i8* null) #4
  %28 = getelementptr inbounds %struct.gzFile_s* %file, i64 1, i32 1
  %29 = load i8** %28, align 8, !tbaa !27
  tail call void @free(i8* %29) #4
  %fd = getelementptr inbounds %struct.gz_state* %0, i64 0, i32 2
  %30 = load i32* %fd, align 4, !tbaa !15
  %call22 = tail call i32 @close(i32 %30) #4
  %cmp23 = icmp eq i32 %call22, -1
  %.ret.1 = select i1 %cmp23, i32 -1, i32 %ret.1
  %31 = bitcast %struct.gzFile_s* %file to i8*
  tail call void @free(i8* %31) #4
  br label %return

return:                                           ; preds = %if.end21, %if.end, %entry
  %retval.0 = phi i32 [ %.ret.1, %if.end21 ], [ -2, %entry ], [ -2, %if.end ]
  ret i32 %retval.0
}

declare i64 @write(i32, i8* nocapture readonly, i64) #7

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_init(%struct.gz_state* %state) #3 {
entry:
  %strm1 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19
  %want = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 5
  %0 = load i32* %want, align 4, !tbaa !13
  %conv = zext i32 %0 to i64
  %call = tail call noalias i8* @malloc(i64 %conv) #4
  %in = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 6
  store i8* %call, i8** %in, align 8, !tbaa !36
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @gz_error(%struct.gz_state* %state, i32 -4, i8* getelementptr inbounds ([14 x i8]* @.str240, i64 0, i64 0)) #4
  br label %return

if.end:                                           ; preds = %entry
  %direct = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 8
  %1 = load i32* %direct, align 4, !tbaa !31
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.then4, label %if.end21.thread

if.end21.thread:                                  ; preds = %if.end
  %size57 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 4
  store i32 %0, i32* %size57, align 4, !tbaa !12
  br label %return

if.then4:                                         ; preds = %if.end
  %call7 = tail call noalias i8* @malloc(i64 %conv) #4
  %out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 7
  store i8* %call7, i8** %out, align 8, !tbaa !35
  %cmp9 = icmp eq i8* %call7, null
  br i1 %cmp9, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.then4
  tail call void @free(i8* %call) #4
  tail call void @gz_error(%struct.gz_state* %state, i32 -4, i8* getelementptr inbounds ([14 x i8]* @.str240, i64 0, i64 0)) #4
  br label %return

if.end13:                                         ; preds = %if.then4
  %zalloc = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 8
  %level = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 13
  %2 = bitcast i8* (i8*, i32, i32)** %zalloc to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 24, i32 8, i1 false)
  %3 = load i32* %level, align 4, !tbaa !29
  %strategy = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 14
  %4 = load i32* %strategy, align 4, !tbaa !30
  %call14 = tail call i32 bitcast (i32 (%struct.z_stream_s.10*, i32, i32, i32, i32, i32, i8*, i32)* @deflateInit2_ to i32 (%struct.z_stream_s*, i32, i32, i32, i32, i32, i8*, i32)*)(%struct.z_stream_s* %strm1, i32 %3, i32 8, i32 31, i32 8, i32 %4, i8* getelementptr inbounds ([6 x i8]* @.str341, i64 0, i64 0), i32 112) #4
  %cmp15 = icmp eq i32 %call14, 0
  br i1 %cmp15, label %if.end21, label %if.then17

if.then17:                                        ; preds = %if.end13
  %5 = load i8** %out, align 8, !tbaa !35
  tail call void @free(i8* %5) #4
  %6 = load i8** %in, align 8, !tbaa !36
  tail call void @free(i8* %6) #4
  tail call void @gz_error(%struct.gz_state* %state, i32 -4, i8* getelementptr inbounds ([14 x i8]* @.str240, i64 0, i64 0)) #4
  br label %return

if.end21:                                         ; preds = %if.end13
  %.pre = load i32* %want, align 4, !tbaa !13
  %.pre56 = load i32* %direct, align 4, !tbaa !31
  %size = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 4
  store i32 %.pre, i32* %size, align 4, !tbaa !12
  %tobool24 = icmp eq i32 %.pre56, 0
  br i1 %tobool24, label %if.then25, label %return

if.then25:                                        ; preds = %if.end21
  %avail_out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 4
  store i32 %.pre, i32* %avail_out, align 4, !tbaa !33
  %out27 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 7
  %7 = load i8** %out27, align 8, !tbaa !35
  %next_out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 3
  store i8* %7, i8** %next_out, align 8, !tbaa !34
  %next = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 1
  store i8* %7, i8** %next, align 8, !tbaa !26
  br label %return

return:                                           ; preds = %if.then25, %if.end21, %if.then17, %if.then11, %if.end21.thread, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then11 ], [ -1, %if.then17 ], [ 0, %if.end21 ], [ 0, %if.then25 ], [ 0, %if.end21.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_comp(%struct.gz_state* %state, i32 %flush) #3 {
entry:
  %strm1 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19
  %size = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 4
  %0 = load i32* %size, align 4, !tbaa !12
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @gz_init(%struct.gz_state* %state)
  %cmp2 = icmp eq i32 %call, -1
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %direct = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 8
  %1 = load i32* %direct, align 4, !tbaa !31
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %do.body.preheader, label %if.then3

do.body.preheader:                                ; preds = %if.end
  %avail_out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 4
  %next_out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 3
  %next = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 0, i32 1
  %out = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 7
  %fd32 = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 2
  %cmp20 = icmp eq i32 %flush, 0
  %cmp23 = icmp eq i32 %flush, 4
  %.pre = load i32* %avail_out, align 4, !tbaa !33
  br i1 %cmp20, label %do.body.us.preheader, label %do.body.preheader.do.body.preheader.split_crit_edge

do.body.us.preheader:                             ; preds = %do.body.preheader
  br label %do.body.us

do.body.preheader.do.body.preheader.split_crit_edge: ; preds = %do.body.preheader
  br i1 %cmp23, label %do.body.preheader154, label %if.then28.us116.preheader

if.then28.us116.preheader:                        ; preds = %do.body.preheader.do.body.preheader.split_crit_edge
  br label %if.then28.us116

do.body.preheader154:                             ; preds = %do.body.preheader.do.body.preheader.split_crit_edge
  br label %do.body

do.body.us:                                       ; preds = %if.end64.us, %do.body.us.preheader
  %2 = phi i32 [ %11, %if.end64.us ], [ %.pre, %do.body.us.preheader ]
  %cmp17.us = icmp eq i32 %2, 0
  br i1 %cmp17.us, label %if.then28.us, label %if.end58.us

if.then28.us:                                     ; preds = %do.body.us
  %3 = load i8** %next_out, align 8, !tbaa !34
  %4 = load i8** %next, align 8, !tbaa !26
  %sub.ptr.lhs.cast.us = ptrtoint i8* %3 to i64
  %sub.ptr.rhs.cast.us = ptrtoint i8* %4 to i64
  %sub.ptr.sub.us = sub i64 %sub.ptr.lhs.cast.us, %sub.ptr.rhs.cast.us
  %conv29.us = trunc i64 %sub.ptr.sub.us to i32
  %tobool30.us = icmp eq i32 %conv29.us, 0
  br i1 %tobool30.us, label %if.then50.us, label %land.lhs.true31.us

land.lhs.true31.us:                               ; preds = %if.then28.us
  %5 = load i32* %fd32, align 4, !tbaa !15
  %conv35.us = and i64 %sub.ptr.sub.us, 4294967295
  %call36.us = tail call i64 @write(i32 %5, i8* %4, i64 %conv35.us) #4
  %conv37.us = trunc i64 %call36.us to i32
  %cmp38.us = icmp sgt i32 %conv37.us, -1
  %cmp41.us = icmp eq i32 %conv37.us, %conv29.us
  %or.cond108.us = and i1 %cmp38.us, %cmp41.us
  br i1 %or.cond108.us, label %if.end46.us, label %if.then43.loopexit

if.end46.us:                                      ; preds = %land.lhs.true31.us
  %.pre138 = load i32* %avail_out, align 4, !tbaa !33
  %cmp48.us = icmp eq i32 %.pre138, 0
  br i1 %cmp48.us, label %if.then50.us, label %if.end46.us.if.end54.us_crit_edge

if.end46.us.if.end54.us_crit_edge:                ; preds = %if.end46.us
  %.pre139 = load i8** %next_out, align 8, !tbaa !34
  br label %if.end54.us

if.then50.us:                                     ; preds = %if.end46.us, %if.then28.us
  %6 = load i32* %size, align 4, !tbaa !12
  store i32 %6, i32* %avail_out, align 4, !tbaa !33
  %7 = load i8** %out, align 8, !tbaa !35
  store i8* %7, i8** %next_out, align 8, !tbaa !34
  br label %if.end54.us

if.end54.us:                                      ; preds = %if.then50.us, %if.end46.us.if.end54.us_crit_edge
  %8 = phi i32 [ %.pre138, %if.end46.us.if.end54.us_crit_edge ], [ %6, %if.then50.us ]
  %9 = phi i8* [ %.pre139, %if.end46.us.if.end54.us_crit_edge ], [ %7, %if.then50.us ]
  store i8* %9, i8** %next, align 8, !tbaa !26
  br label %if.end58.us

if.end58.us:                                      ; preds = %if.end54.us, %do.body.us
  %10 = phi i32 [ %8, %if.end54.us ], [ %2, %do.body.us ]
  %call60.us = tail call i32 bitcast (i32 (%struct.z_stream_s.10*, i32)* @deflate to i32 (%struct.z_stream_s*, i32)*)(%struct.z_stream_s* %strm1, i32 0) #4
  %cmp61.us = icmp eq i32 %call60.us, -2
  br i1 %cmp61.us, label %if.then63.loopexit, label %if.end64.us

if.end64.us:                                      ; preds = %if.end58.us
  %11 = load i32* %avail_out, align 4, !tbaa !33
  %tobool66.us = icmp eq i32 %10, %11
  br i1 %tobool66.us, label %do.end.loopexit, label %do.body.us

if.then28.us116:                                  ; preds = %if.end64.us136, %if.then28.us116.preheader
  %12 = phi i32 [ %21, %if.end64.us136 ], [ %.pre, %if.then28.us116.preheader ]
  %13 = load i8** %next_out, align 8, !tbaa !34
  %14 = load i8** %next, align 8, !tbaa !26
  %sub.ptr.lhs.cast.us117 = ptrtoint i8* %13 to i64
  %sub.ptr.rhs.cast.us118 = ptrtoint i8* %14 to i64
  %sub.ptr.sub.us119 = sub i64 %sub.ptr.lhs.cast.us117, %sub.ptr.rhs.cast.us118
  %conv29.us120 = trunc i64 %sub.ptr.sub.us119 to i32
  %tobool30.us121 = icmp eq i32 %conv29.us120, 0
  br i1 %tobool30.us121, label %if.end46.us129, label %land.lhs.true31.us122

land.lhs.true31.us122:                            ; preds = %if.then28.us116
  %15 = load i32* %fd32, align 4, !tbaa !15
  %conv35.us123 = and i64 %sub.ptr.sub.us119, 4294967295
  %call36.us124 = tail call i64 @write(i32 %15, i8* %14, i64 %conv35.us123) #4
  %conv37.us125 = trunc i64 %call36.us124 to i32
  %cmp38.us126 = icmp sgt i32 %conv37.us125, -1
  %cmp41.us127 = icmp eq i32 %conv37.us125, %conv29.us120
  %or.cond108.us128 = and i1 %cmp38.us126, %cmp41.us127
  br i1 %or.cond108.us128, label %land.lhs.true31.us122.if.end46.us129_crit_edge, label %if.then43.loopexit158

land.lhs.true31.us122.if.end46.us129_crit_edge:   ; preds = %land.lhs.true31.us122
  %.pre144 = load i32* %avail_out, align 4, !tbaa !33
  br label %if.end46.us129

if.end46.us129:                                   ; preds = %land.lhs.true31.us122.if.end46.us129_crit_edge, %if.then28.us116
  %16 = phi i32 [ %.pre144, %land.lhs.true31.us122.if.end46.us129_crit_edge ], [ %12, %if.then28.us116 ]
  %cmp48.us130 = icmp eq i32 %16, 0
  br i1 %cmp48.us130, label %if.then50.us131, label %if.end46.us129.if.end54.us132_crit_edge

if.end46.us129.if.end54.us132_crit_edge:          ; preds = %if.end46.us129
  %.pre145 = load i8** %next_out, align 8, !tbaa !34
  br label %if.end58.us133

if.then50.us131:                                  ; preds = %if.end46.us129
  %17 = load i32* %size, align 4, !tbaa !12
  store i32 %17, i32* %avail_out, align 4, !tbaa !33
  %18 = load i8** %out, align 8, !tbaa !35
  store i8* %18, i8** %next_out, align 8, !tbaa !34
  br label %if.end58.us133

if.end58.us133:                                   ; preds = %if.then50.us131, %if.end46.us129.if.end54.us132_crit_edge
  %19 = phi i32 [ %16, %if.end46.us129.if.end54.us132_crit_edge ], [ %17, %if.then50.us131 ]
  %20 = phi i8* [ %.pre145, %if.end46.us129.if.end54.us132_crit_edge ], [ %18, %if.then50.us131 ]
  store i8* %20, i8** %next, align 8, !tbaa !26
  %call60.us134 = tail call i32 bitcast (i32 (%struct.z_stream_s.10*, i32)* @deflate to i32 (%struct.z_stream_s*, i32)*)(%struct.z_stream_s* %strm1, i32 %flush) #4
  %cmp61.us135 = icmp eq i32 %call60.us134, -2
  br i1 %cmp61.us135, label %if.then63.loopexit159, label %if.end64.us136

if.end64.us136:                                   ; preds = %if.end58.us133
  %21 = load i32* %avail_out, align 4, !tbaa !33
  %tobool66.us137 = icmp eq i32 %19, %21
  br i1 %tobool66.us137, label %do.end.loopexit160, label %if.then28.us116

if.then3:                                         ; preds = %if.end
  %fd = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 2
  %22 = load i32* %fd, align 4, !tbaa !15
  %next_in = getelementptr inbounds %struct.z_stream_s* %strm1, i64 0, i32 0
  %23 = load i8** %next_in, align 8, !tbaa !37
  %avail_in = getelementptr inbounds %struct.gz_state* %state, i64 0, i32 19, i32 1
  %24 = load i32* %avail_in, align 4, !tbaa !32
  %conv = zext i32 %24 to i64
  %call4 = tail call i64 @write(i32 %22, i8* %23, i64 %conv) #4
  %conv5 = trunc i64 %call4 to i32
  %cmp6 = icmp slt i32 %conv5, 0
  br i1 %cmp6, label %if.then11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then3
  %25 = load i32* %avail_in, align 4, !tbaa !32
  %cmp9 = icmp eq i32 %conv5, %25
  br i1 %cmp9, label %if.end14, label %if.then11

if.then11:                                        ; preds = %lor.lhs.false, %if.then3
  %call12 = tail call i32* @__errno_location() #13
  %26 = load i32* %call12, align 4, !tbaa !28
  %call13 = tail call i8* @strerror(i32 %26) #4
  tail call void @gz_error(%struct.gz_state* %state, i32 -1, i8* %call13) #4
  br label %return

if.end14:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %avail_in, align 4, !tbaa !32
  br label %return

do.body:                                          ; preds = %if.end64, %do.body.preheader154
  %27 = phi i32 [ %38, %if.end64 ], [ %.pre, %do.body.preheader154 ]
  %ret.0 = phi i32 [ %call60, %if.end64 ], [ 0, %do.body.preheader154 ]
  %cmp17 = icmp eq i32 %27, 0
  %cmp26 = icmp eq i32 %ret.0, 1
  %or.cond = or i1 %cmp17, %cmp26
  br i1 %or.cond, label %if.then28, label %if.end58

if.then28:                                        ; preds = %do.body
  %28 = load i8** %next_out, align 8, !tbaa !34
  %29 = load i8** %next, align 8, !tbaa !26
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %29 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv29 = trunc i64 %sub.ptr.sub to i32
  %tobool30 = icmp eq i32 %conv29, 0
  br i1 %tobool30, label %if.end46, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %if.then28
  %30 = load i32* %fd32, align 4, !tbaa !15
  %conv35 = and i64 %sub.ptr.sub, 4294967295
  %call36 = tail call i64 @write(i32 %30, i8* %29, i64 %conv35) #4
  %conv37 = trunc i64 %call36 to i32
  %cmp38 = icmp sgt i32 %conv37, -1
  %cmp41 = icmp eq i32 %conv37, %conv29
  %or.cond108 = and i1 %cmp38, %cmp41
  br i1 %or.cond108, label %land.lhs.true31.if.end46_crit_edge, label %if.then43.loopexit155

land.lhs.true31.if.end46_crit_edge:               ; preds = %land.lhs.true31
  %.pre141 = load i32* %avail_out, align 4, !tbaa !33
  br label %if.end46

if.then43.loopexit:                               ; preds = %land.lhs.true31.us
  br label %if.then43

if.then43.loopexit155:                            ; preds = %land.lhs.true31
  br label %if.then43

if.then43.loopexit158:                            ; preds = %land.lhs.true31.us122
  br label %if.then43

if.then43:                                        ; preds = %if.then43.loopexit158, %if.then43.loopexit155, %if.then43.loopexit
  %call44 = tail call i32* @__errno_location() #13
  %31 = load i32* %call44, align 4, !tbaa !28
  %call45 = tail call i8* @strerror(i32 %31) #4
  tail call void @gz_error(%struct.gz_state* %state, i32 -1, i8* %call45) #4
  br label %return

if.end46:                                         ; preds = %land.lhs.true31.if.end46_crit_edge, %if.then28
  %32 = phi i32 [ %.pre141, %land.lhs.true31.if.end46_crit_edge ], [ %27, %if.then28 ]
  %cmp48 = icmp eq i32 %32, 0
  br i1 %cmp48, label %if.then50, label %if.end46.if.end54_crit_edge

if.end46.if.end54_crit_edge:                      ; preds = %if.end46
  %.pre142 = load i8** %next_out, align 8, !tbaa !34
  br label %if.end54

if.then50:                                        ; preds = %if.end46
  %33 = load i32* %size, align 4, !tbaa !12
  store i32 %33, i32* %avail_out, align 4, !tbaa !33
  %34 = load i8** %out, align 8, !tbaa !35
  store i8* %34, i8** %next_out, align 8, !tbaa !34
  br label %if.end54

if.end54:                                         ; preds = %if.then50, %if.end46.if.end54_crit_edge
  %35 = phi i32 [ %32, %if.end46.if.end54_crit_edge ], [ %33, %if.then50 ]
  %36 = phi i8* [ %.pre142, %if.end46.if.end54_crit_edge ], [ %34, %if.then50 ]
  store i8* %36, i8** %next, align 8, !tbaa !26
  br label %if.end58

if.end58:                                         ; preds = %if.end54, %do.body
  %37 = phi i32 [ %35, %if.end54 ], [ %27, %do.body ]
  %call60 = tail call i32 bitcast (i32 (%struct.z_stream_s.10*, i32)* @deflate to i32 (%struct.z_stream_s*, i32)*)(%struct.z_stream_s* %strm1, i32 4) #4
  %cmp61 = icmp eq i32 %call60, -2
  br i1 %cmp61, label %if.then63.loopexit156, label %if.end64

if.then63.loopexit:                               ; preds = %if.end58.us
  br label %if.then63

if.then63.loopexit156:                            ; preds = %if.end58
  br label %if.then63

if.then63.loopexit159:                            ; preds = %if.end58.us133
  br label %if.then63

if.then63:                                        ; preds = %if.then63.loopexit159, %if.then63.loopexit156, %if.then63.loopexit
  tail call void @gz_error(%struct.gz_state* %state, i32 -2, i8* getelementptr inbounds ([39 x i8]* @.str139, i64 0, i64 0)) #4
  br label %return

if.end64:                                         ; preds = %if.end58
  %38 = load i32* %avail_out, align 4, !tbaa !33
  %tobool66 = icmp eq i32 %37, %38
  br i1 %tobool66, label %do.end.loopexit157, label %do.body

do.end.loopexit:                                  ; preds = %if.end64.us
  br label %do.end

do.end.loopexit157:                               ; preds = %if.end64
  br label %do.end

do.end.loopexit160:                               ; preds = %if.end64.us136
  br label %do.end

do.end:                                           ; preds = %do.end.loopexit160, %do.end.loopexit157, %do.end.loopexit
  br i1 %cmp23, label %if.then69, label %return

if.then69:                                        ; preds = %do.end
  %call70 = tail call i32 bitcast (i32 (%struct.z_stream_s.10*)* @deflateReset to i32 (%struct.z_stream_s*)*)(%struct.z_stream_s* %strm1) #4
  br label %return

return:                                           ; preds = %if.then69, %do.end, %if.then63, %if.then43, %if.end14, %if.then11, %land.lhs.true
  %retval.0 = phi i32 [ -1, %if.then11 ], [ 0, %if.end14 ], [ -1, %if.then43 ], [ -1, %if.then63 ], [ -1, %land.lhs.true ], [ 0, %if.then69 ], [ 0, %do.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflateInit_(%struct.z_stream_s.10* %strm, i32 %level, i8* readonly %version, i32 %stream_size) #3 {
entry:
  %call = tail call i32 @deflateInit2_(%struct.z_stream_s.10* %strm, i32 %level, i32 8, i32 15, i32 8, i32 0, i8* %version, i32 %stream_size)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @deflateInit2_(%struct.z_stream_s.10* %strm, i32 %level, i32 %method, i32 %windowBits, i32 %memLevel, i32 %strategy, i8* readonly %version, i32 %stream_size) #3 {
entry:
  %cmp = icmp eq i8* %version, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8* %version, align 1, !tbaa !5
  %cmp2 = icmp eq i8 %0, 49
  %cmp6 = icmp eq i32 %stream_size, 112
  %or.cond = and i1 %cmp2, %cmp6
  br i1 %or.cond, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false
  %cmp8 = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp8, label %return, label %if.end11

if.end11:                                         ; preds = %if.end
  %msg = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 6
  store i8* null, i8** %msg, align 8, !tbaa !38
  %zalloc = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 8
  %1 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %cmp12 = icmp eq i8* (i8*, i32, i32)* %1, null
  br i1 %cmp12, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end11
  store i8* (i8*, i32, i32)* @zcalloc, i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %opaque = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 10
  store i8* null, i8** %opaque, align 8, !tbaa !45
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end11
  %2 = phi i8* (i8*, i32, i32)* [ @zcalloc, %if.then14 ], [ %1, %if.end11 ]
  %zfree = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 9
  %3 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %cmp17 = icmp eq void (i8*, i8*)* %3, null
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end16
  store void (i8*, i8*)* @zcfree, void (i8*, i8*)** %zfree, align 8, !tbaa !46
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end16
  %cmp22 = icmp eq i32 %level, -1
  %.level = select i1 %cmp22, i32 6, i32 %level
  %cmp26 = icmp slt i32 %windowBits, 0
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.end21
  %sub = sub nsw i32 0, %windowBits
  br label %if.end34

if.else:                                          ; preds = %if.end21
  %cmp29 = icmp sgt i32 %windowBits, 15
  %sub32 = add nsw i32 %windowBits, -16
  %sub32.windowBits = select i1 %cmp29, i32 %sub32, i32 %windowBits
  %. = select i1 %cmp29, i32 2, i32 1
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then28
  %windowBits.addr.0 = phi i32 [ %sub, %if.then28 ], [ %sub32.windowBits, %if.else ]
  %wrap.0 = phi i32 [ 0, %if.then28 ], [ %., %if.else ]
  %memLevel.off = add i32 %memLevel, -1
  %4 = icmp ugt i32 %memLevel.off, 8
  %cmp41 = icmp ne i32 %method, 8
  %or.cond137 = or i1 %4, %cmp41
  %cmp44 = icmp slt i32 %windowBits.addr.0, 8
  %or.cond138 = or i1 %or.cond137, %cmp44
  %cmp47 = icmp sgt i32 %windowBits.addr.0, 15
  %or.cond139 = or i1 %or.cond138, %cmp47
  %cmp50 = icmp slt i32 %.level, 0
  %or.cond140 = or i1 %or.cond139, %cmp50
  %cmp53 = icmp sgt i32 %.level, 9
  %or.cond141 = or i1 %or.cond140, %cmp53
  %cmp56 = icmp slt i32 %strategy, 0
  %or.cond142 = or i1 %or.cond141, %cmp56
  %cmp59 = icmp sgt i32 %strategy, 4
  %or.cond143 = or i1 %or.cond142, %cmp59
  br i1 %or.cond143, label %return, label %if.end62

if.end62:                                         ; preds = %if.end34
  %cmp63 = icmp eq i32 %windowBits.addr.0, 8
  %.windowBits.addr.0 = select i1 %cmp63, i32 9, i32 %windowBits.addr.0
  %opaque68 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 10
  %5 = load i8** %opaque68, align 8, !tbaa !45
  %call = tail call i8* %2(i8* %5, i32 1, i32 5936) #4
  %cmp69 = icmp eq i8* %call, null
  br i1 %cmp69, label %return, label %if.end72

if.end72:                                         ; preds = %if.end62
  %6 = bitcast i8* %call to %struct.internal_state.11*
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  store %struct.internal_state.11* %6, %struct.internal_state.11** %state, align 8, !tbaa !47
  %strm73 = bitcast i8* %call to %struct.z_stream_s.10**
  store %struct.z_stream_s.10* %strm, %struct.z_stream_s.10** %strm73, align 8, !tbaa !48
  %wrap74 = getelementptr inbounds i8* %call, i64 44
  %7 = bitcast i8* %wrap74 to i32*
  store i32 %wrap.0, i32* %7, align 4, !tbaa !52
  %gzhead = getelementptr inbounds i8* %call, i64 48
  %8 = bitcast i8* %gzhead to %struct.gz_header_s**
  store %struct.gz_header_s* null, %struct.gz_header_s** %8, align 8, !tbaa !53
  %w_bits = getelementptr inbounds i8* %call, i64 72
  %9 = bitcast i8* %w_bits to i32*
  store i32 %.windowBits.addr.0, i32* %9, align 4, !tbaa !54
  %shl = shl i32 1, %.windowBits.addr.0
  %w_size = getelementptr inbounds i8* %call, i64 68
  %10 = bitcast i8* %w_size to i32*
  store i32 %shl, i32* %10, align 4, !tbaa !55
  %sub77 = add i32 %shl, -1
  %w_mask = getelementptr inbounds i8* %call, i64 76
  %11 = bitcast i8* %w_mask to i32*
  store i32 %sub77, i32* %11, align 4, !tbaa !56
  %add = add nsw i32 %memLevel, 7
  %hash_bits = getelementptr inbounds i8* %call, i64 120
  %12 = bitcast i8* %hash_bits to i32*
  store i32 %add, i32* %12, align 4, !tbaa !57
  %shl79 = shl i32 1, %add
  %hash_size = getelementptr inbounds i8* %call, i64 116
  %13 = bitcast i8* %hash_size to i32*
  store i32 %shl79, i32* %13, align 4, !tbaa !58
  %sub81 = add i32 %shl79, -1
  %hash_mask = getelementptr inbounds i8* %call, i64 124
  %14 = bitcast i8* %hash_mask to i32*
  store i32 %sub81, i32* %14, align 4, !tbaa !59
  %sub84 = add i32 %memLevel, 9
  %div = udiv i32 %sub84, 3
  %hash_shift = getelementptr inbounds i8* %call, i64 128
  %15 = bitcast i8* %hash_shift to i32*
  store i32 %div, i32* %15, align 4, !tbaa !60
  %16 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %17 = load i8** %opaque68, align 8, !tbaa !45
  %call88 = tail call i8* %16(i8* %17, i32 %shl, i32 2) #4
  %window = getelementptr inbounds i8* %call, i64 80
  %18 = bitcast i8* %window to i8**
  store i8* %call88, i8** %18, align 8, !tbaa !61
  %19 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %20 = load i8** %opaque68, align 8, !tbaa !45
  %21 = load i32* %10, align 4, !tbaa !55
  %call92 = tail call i8* %19(i8* %20, i32 %21, i32 2) #4
  %22 = bitcast i8* %call92 to i16*
  %prev = getelementptr inbounds i8* %call, i64 96
  %23 = bitcast i8* %prev to i16**
  store i16* %22, i16** %23, align 8, !tbaa !62
  %24 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %25 = load i8** %opaque68, align 8, !tbaa !45
  %26 = load i32* %13, align 4, !tbaa !58
  %call96 = tail call i8* %24(i8* %25, i32 %26, i32 2) #4
  %27 = bitcast i8* %call96 to i16*
  %head = getelementptr inbounds i8* %call, i64 104
  %28 = bitcast i8* %head to i16**
  store i16* %27, i16** %28, align 8, !tbaa !63
  %high_water = getelementptr inbounds i8* %call, i64 5928
  %29 = bitcast i8* %high_water to i64*
  store i64 0, i64* %29, align 8, !tbaa !64
  %add97 = add nsw i32 %memLevel, 6
  %shl98 = shl i32 1, %add97
  %lit_bufsize = getelementptr inbounds i8* %call, i64 5880
  %30 = bitcast i8* %lit_bufsize to i32*
  store i32 %shl98, i32* %30, align 4, !tbaa !65
  %31 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %32 = load i8** %opaque68, align 8, !tbaa !45
  %call102 = tail call i8* %31(i8* %32, i32 %shl98, i32 4) #4
  %33 = bitcast i8* %call102 to i16*
  %pending_buf = getelementptr inbounds i8* %call, i64 16
  %34 = bitcast i8* %pending_buf to i8**
  store i8* %call102, i8** %34, align 8, !tbaa !66
  %35 = load i32* %30, align 4, !tbaa !65
  %conv104 = zext i32 %35 to i64
  %mul = shl nuw nsw i64 %conv104, 2
  %pending_buf_size = getelementptr inbounds i8* %call, i64 24
  %36 = bitcast i8* %pending_buf_size to i64*
  store i64 %mul, i64* %36, align 8, !tbaa !67
  %37 = load i8** %18, align 8, !tbaa !61
  %cmp106 = icmp eq i8* %37, null
  br i1 %cmp106, label %lor.lhs.false.i, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %if.end72
  %38 = load i16** %23, align 8, !tbaa !62
  %cmp110 = icmp eq i16* %38, null
  br i1 %cmp110, label %lor.lhs.false.i, label %lor.lhs.false112

lor.lhs.false112:                                 ; preds = %lor.lhs.false108
  %39 = load i16** %28, align 8, !tbaa !63
  %cmp114 = icmp eq i16* %39, null
  %cmp118 = icmp eq i8* %call102, null
  %or.cond225 = or i1 %cmp114, %cmp118
  br i1 %or.cond225, label %lor.lhs.false.i, label %if.end123

lor.lhs.false.i:                                  ; preds = %lor.lhs.false112, %lor.lhs.false108, %if.end72
  %status = getelementptr inbounds i8* %call, i64 8
  %40 = bitcast i8* %status to i32*
  store i32 666, i32* %40, align 4, !tbaa !68
  %41 = load i8** getelementptr inbounds ([10 x i8*]* @z_errmsg, i64 0, i64 6), align 8, !tbaa !1
  store i8* %41, i8** %msg, align 8, !tbaa !38
  %42 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1.i = icmp eq %struct.internal_state.11* %42, null
  br i1 %cmp1.i, label %return, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %status3.i = getelementptr inbounds %struct.internal_state.11* %42, i64 0, i32 1
  %43 = load i32* %status3.i, align 4, !tbaa !68
  switch i32 %43, label %return [
    i32 666, label %if.end17.i
    i32 113, label %if.end17.i
    i32 103, label %if.end17.i
    i32 91, label %if.end17.i
    i32 73, label %if.end17.i
    i32 69, label %if.end17.i
    i32 42, label %if.end17.i
  ]

if.end17.i:                                       ; preds = %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i
  %pending_buf.i = getelementptr inbounds %struct.internal_state.11* %42, i64 0, i32 2
  %44 = load i8** %pending_buf.i, align 8, !tbaa !66
  %tobool.i = icmp eq i8* %44, null
  br i1 %tobool.i, label %if.end22.i, label %if.then19.i

if.then19.i:                                      ; preds = %if.end17.i
  %45 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %46 = load i8** %opaque68, align 8, !tbaa !45
  tail call void %45(i8* %46, i8* %44) #4
  %.pre.i = load %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then19.i, %if.end17.i
  %47 = phi %struct.internal_state.11* [ %42, %if.end17.i ], [ %.pre.i, %if.then19.i ]
  %head.i = getelementptr inbounds %struct.internal_state.11* %47, i64 0, i32 17
  %48 = load i16** %head.i, align 8, !tbaa !63
  %tobool24.i = icmp eq i16* %48, null
  br i1 %tobool24.i, label %if.end30.i, label %if.then25.i

if.then25.i:                                      ; preds = %if.end22.i
  %49 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %50 = load i8** %opaque68, align 8, !tbaa !45
  %51 = bitcast i16* %48 to i8*
  tail call void %49(i8* %50, i8* %51) #4
  %.pre86.i = load %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then25.i, %if.end22.i
  %52 = phi %struct.internal_state.11* [ %47, %if.end22.i ], [ %.pre86.i, %if.then25.i ]
  %prev.i = getelementptr inbounds %struct.internal_state.11* %52, i64 0, i32 16
  %53 = load i16** %prev.i, align 8, !tbaa !62
  %tobool32.i = icmp eq i16* %53, null
  br i1 %tobool32.i, label %if.end38.i, label %if.then33.i

if.then33.i:                                      ; preds = %if.end30.i
  %54 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %55 = load i8** %opaque68, align 8, !tbaa !45
  %56 = bitcast i16* %53 to i8*
  tail call void %54(i8* %55, i8* %56) #4
  %.pre87.i = load %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.then33.i, %if.end30.i
  %57 = phi %struct.internal_state.11* [ %52, %if.end30.i ], [ %.pre87.i, %if.then33.i ]
  %window.i = getelementptr inbounds %struct.internal_state.11* %57, i64 0, i32 14
  %58 = load i8** %window.i, align 8, !tbaa !61
  %tobool40.i = icmp eq i8* %58, null
  br i1 %tobool40.i, label %if.end46.i, label %if.then41.i

if.then41.i:                                      ; preds = %if.end38.i
  %59 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %60 = load i8** %opaque68, align 8, !tbaa !45
  tail call void %59(i8* %60, i8* %58) #4
  %.pre88.i = load %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.then41.i, %if.end38.i
  %61 = phi %struct.internal_state.11* [ %.pre88.i, %if.then41.i ], [ %57, %if.end38.i ]
  %62 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %63 = load i8** %opaque68, align 8, !tbaa !45
  %64 = bitcast %struct.internal_state.11* %61 to i8*
  tail call void %62(i8* %63, i8* %64) #4
  store %struct.internal_state.11* null, %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %return

if.end123:                                        ; preds = %lor.lhs.false112
  %div224 = lshr i32 %35, 1
  %div126 = zext i32 %div224 to i64
  %add.ptr = getelementptr inbounds i16* %33, i64 %div126
  %d_buf = getelementptr inbounds i8* %call, i64 5888
  %65 = bitcast i8* %d_buf to i16**
  store i16* %add.ptr, i16** %65, align 8, !tbaa !69
  %mul130 = mul i64 %conv104, 3
  %add.ptr131 = getelementptr inbounds i8* %call102, i64 %mul130
  %l_buf = getelementptr inbounds i8* %call, i64 5872
  %66 = bitcast i8* %l_buf to i8**
  store i8* %add.ptr131, i8** %66, align 8, !tbaa !70
  %level132 = getelementptr inbounds i8* %call, i64 180
  %67 = bitcast i8* %level132 to i32*
  store i32 %.level, i32* %67, align 4, !tbaa !71
  %strategy133 = getelementptr inbounds i8* %call, i64 184
  %68 = bitcast i8* %strategy133 to i32*
  store i32 %strategy, i32* %68, align 4, !tbaa !72
  %69 = getelementptr inbounds i8* %call, i64 60
  store i8 8, i8* %69, align 1, !tbaa !73
  %call136 = tail call i32 @deflateReset(%struct.z_stream_s.10* %strm)
  br label %return

return:                                           ; preds = %if.end123, %if.end46.i, %if.end.i, %lor.lhs.false.i, %if.end62, %if.end34, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ %call136, %if.end123 ], [ -6, %lor.lhs.false ], [ -6, %entry ], [ -2, %if.end ], [ -2, %if.end34 ], [ -4, %if.end62 ], [ -4, %lor.lhs.false.i ], [ -4, %if.end.i ], [ -4, %if.end46.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflateEnd(%struct.z_stream_s.10* %strm) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %status3 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 1
  %1 = load i32* %status3, align 4, !tbaa !68
  switch i32 %1, label %return [
    i32 666, label %if.end17
    i32 113, label %if.end17
    i32 103, label %if.end17
    i32 91, label %if.end17
    i32 73, label %if.end17
    i32 69, label %if.end17
    i32 42, label %if.end17
  ]

if.end17:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %pending_buf = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %2 = load i8** %pending_buf, align 8, !tbaa !66
  %tobool = icmp eq i8* %2, null
  br i1 %tobool, label %if.end22, label %if.then19

if.then19:                                        ; preds = %if.end17
  %zfree = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 9
  %3 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %opaque = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 10
  %4 = load i8** %opaque, align 8, !tbaa !45
  tail call void %3(i8* %4, i8* %2) #4
  %.pre = load %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %if.end22

if.end22:                                         ; preds = %if.then19, %if.end17
  %5 = phi %struct.internal_state.11* [ %0, %if.end17 ], [ %.pre, %if.then19 ]
  %head = getelementptr inbounds %struct.internal_state.11* %5, i64 0, i32 17
  %6 = load i16** %head, align 8, !tbaa !63
  %tobool24 = icmp eq i16* %6, null
  br i1 %tobool24, label %if.end30, label %if.then25

if.then25:                                        ; preds = %if.end22
  %zfree26 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 9
  %7 = load void (i8*, i8*)** %zfree26, align 8, !tbaa !46
  %opaque27 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 10
  %8 = load i8** %opaque27, align 8, !tbaa !45
  %9 = bitcast i16* %6 to i8*
  tail call void %7(i8* %8, i8* %9) #4
  %.pre86 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %if.end22
  %10 = phi %struct.internal_state.11* [ %5, %if.end22 ], [ %.pre86, %if.then25 ]
  %prev = getelementptr inbounds %struct.internal_state.11* %10, i64 0, i32 16
  %11 = load i16** %prev, align 8, !tbaa !62
  %tobool32 = icmp eq i16* %11, null
  br i1 %tobool32, label %if.end38, label %if.then33

if.then33:                                        ; preds = %if.end30
  %zfree34 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 9
  %12 = load void (i8*, i8*)** %zfree34, align 8, !tbaa !46
  %opaque35 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 10
  %13 = load i8** %opaque35, align 8, !tbaa !45
  %14 = bitcast i16* %11 to i8*
  tail call void %12(i8* %13, i8* %14) #4
  %.pre87 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %if.end38

if.end38:                                         ; preds = %if.then33, %if.end30
  %15 = phi %struct.internal_state.11* [ %10, %if.end30 ], [ %.pre87, %if.then33 ]
  %window = getelementptr inbounds %struct.internal_state.11* %15, i64 0, i32 14
  %16 = load i8** %window, align 8, !tbaa !61
  %tobool40 = icmp eq i8* %16, null
  %zfree47.pre = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 9
  br i1 %tobool40, label %if.end38.if.end46_crit_edge, label %if.then41

if.end38.if.end46_crit_edge:                      ; preds = %if.end38
  %opaque48.pre = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 10
  br label %if.end46

if.then41:                                        ; preds = %if.end38
  %17 = load void (i8*, i8*)** %zfree47.pre, align 8, !tbaa !46
  %opaque43 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 10
  %18 = load i8** %opaque43, align 8, !tbaa !45
  tail call void %17(i8* %18, i8* %16) #4
  %.pre88 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %if.end38.if.end46_crit_edge
  %opaque48.pre-phi = phi i8** [ %opaque48.pre, %if.end38.if.end46_crit_edge ], [ %opaque43, %if.then41 ]
  %19 = phi %struct.internal_state.11* [ %15, %if.end38.if.end46_crit_edge ], [ %.pre88, %if.then41 ]
  %20 = load void (i8*, i8*)** %zfree47.pre, align 8, !tbaa !46
  %21 = load i8** %opaque48.pre-phi, align 8, !tbaa !45
  %22 = bitcast %struct.internal_state.11* %19 to i8*
  tail call void %20(i8* %21, i8* %22) #4
  store %struct.internal_state.11* null, %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp51 = icmp eq i32 %1, 113
  %cond = select i1 %cmp51, i32 -3, i32 0
  br label %return

return:                                           ; preds = %if.end46, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ %cond, %if.end46 ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflateReset(%struct.z_stream_s.10* %strm) #3 {
entry:
  %cmp.i = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp.i, label %if.end, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %state.i = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state.i, align 8, !tbaa !47
  %cmp1.i = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp1.i, label %if.end, label %lor.lhs.false2.i

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i
  %zalloc.i = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 8
  %1 = load i8* (i8*, i32, i32)** %zalloc.i, align 8, !tbaa !44
  %cmp3.i = icmp eq i8* (i8*, i32, i32)* %1, null
  br i1 %cmp3.i, label %if.end, label %lor.lhs.false4.i

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false2.i
  %zfree.i = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 9
  %2 = load void (i8*, i8*)** %zfree.i, align 8, !tbaa !46
  %cmp5.i = icmp eq void (i8*, i8*)* %2, null
  br i1 %cmp5.i, label %if.end, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false4.i
  %total_out.i = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  %total_in.i = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 2
  store i64 0, i64* %total_in.i, align 8, !tbaa !74
  %data_type.i = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 11
  %3 = bitcast i64* %total_out.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 16, i32 8, i1 false) #4
  store i32 2, i32* %data_type.i, align 4, !tbaa !75
  %pending.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  store i32 0, i32* %pending.i, align 4, !tbaa !76
  %pending_buf.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %4 = load i8** %pending_buf.i, align 8, !tbaa !66
  %pending_out.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 4
  store i8* %4, i8** %pending_out.i, align 8, !tbaa !77
  %wrap.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 6
  %5 = load i32* %wrap.i, align 4, !tbaa !52
  %cmp7.i = icmp slt i32 %5, 0
  br i1 %cmp7.i, label %if.then8.i, label %if.end11.i

if.then8.i:                                       ; preds = %if.end.i
  %sub.i = sub nsw i32 0, %5
  store i32 %sub.i, i32* %wrap.i, align 4, !tbaa !52
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then8.i, %if.end.i
  %6 = phi i32 [ %sub.i, %if.then8.i ], [ %5, %if.end.i ]
  %tobool.i = icmp ne i32 %6, 0
  %cond.i = select i1 %tobool.i, i32 42, i32 113
  %status.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 1
  store i32 %cond.i, i32* %status.i, align 4, !tbaa !68
  %cmp14.i = icmp eq i32 %6, 2
  br i1 %cmp14.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %if.end11.i
  %call.i = tail call i64 @crc32(i64 0, i8* null, i32 0) #4
  br label %if.then

cond.false.i:                                     ; preds = %if.end11.i
  %call15.i = tail call i64 @adler32(i64 0, i8* null, i32 0) #4
  br label %if.then

if.then:                                          ; preds = %cond.false.i, %cond.true.i
  %cond16.i = phi i64 [ %call.i, %cond.true.i ], [ %call15.i, %cond.false.i ]
  %adler.i = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  store i64 %cond16.i, i64* %adler.i, align 8, !tbaa !78
  %last_flush.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 10
  store i32 0, i32* %last_flush.i, align 4, !tbaa !79
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_init to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %0) #4
  %7 = load %struct.internal_state.11** %state.i, align 8, !tbaa !47
  %w_size.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 11
  %8 = load i32* %w_size.i, align 4, !tbaa !55
  %conv.i = zext i32 %8 to i64
  %mul.i = shl nuw nsw i64 %conv.i, 1
  %window_size.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 15
  store i64 %mul.i, i64* %window_size.i, align 8, !tbaa !80
  %hash_size.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 19
  %9 = load i32* %hash_size.i, align 4, !tbaa !58
  %sub.i3 = add i32 %9, -1
  %idxprom.i = zext i32 %sub.i3 to i64
  %head.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 17
  %10 = load i16** %head.i, align 8, !tbaa !63
  %arrayidx.i = getelementptr inbounds i16* %10, i64 %idxprom.i
  store i16 0, i16* %arrayidx.i, align 2, !tbaa !81
  %11 = bitcast i16* %10 to i8*
  %mul5.i = shl nuw nsw i64 %idxprom.i, 1
  tail call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 %mul5.i, i32 1, i1 false) #4
  %level.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 33
  %12 = load i32* %level.i, align 4, !tbaa !71
  %idxprom6.i = sext i32 %12 to i64
  %max_lazy.i = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom6.i, i32 1
  %13 = load i16* %max_lazy.i, align 2, !tbaa !82
  %conv8.i = zext i16 %13 to i32
  %max_lazy_match.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 32
  store i32 %conv8.i, i32* %max_lazy_match.i, align 4, !tbaa !84
  %good_length.i = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom6.i, i32 0
  %14 = load i16* %good_length.i, align 16, !tbaa !85
  %conv12.i = zext i16 %14 to i32
  %good_match.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 35
  store i32 %conv12.i, i32* %good_match.i, align 4, !tbaa !86
  %nice_length.i = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom6.i, i32 2
  %15 = load i16* %nice_length.i, align 4, !tbaa !87
  %conv16.i = zext i16 %15 to i32
  %nice_match.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 36
  store i32 %conv16.i, i32* %nice_match.i, align 4, !tbaa !88
  %max_chain.i = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom6.i, i32 3
  %16 = load i16* %max_chain.i, align 2, !tbaa !89
  %conv20.i = zext i16 %16 to i32
  %max_chain_length.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 31
  store i32 %conv20.i, i32* %max_chain_length.i, align 4, !tbaa !90
  %strstart.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 27
  store i32 0, i32* %strstart.i, align 4, !tbaa !91
  %block_start.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 23
  store i64 0, i64* %block_start.i, align 8, !tbaa !92
  %lookahead.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 29
  store i32 0, i32* %lookahead.i, align 4, !tbaa !93
  %insert.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 55
  store i32 0, i32* %insert.i, align 4, !tbaa !94
  %prev_length.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 30
  store i32 2, i32* %prev_length.i, align 4, !tbaa !95
  %match_length.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 24
  store i32 2, i32* %match_length.i, align 4, !tbaa !96
  %match_available.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 26
  store i32 0, i32* %match_available.i, align 4, !tbaa !97
  %ins_h.i = getelementptr inbounds %struct.internal_state.11* %7, i64 0, i32 18
  store i32 0, i32* %ins_h.i, align 4, !tbaa !98
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false4.i, %lor.lhs.false2.i, %lor.lhs.false.i, %entry
  %retval.0.i5 = phi i32 [ 0, %if.then ], [ -2, %lor.lhs.false4.i ], [ -2, %lor.lhs.false2.i ], [ -2, %lor.lhs.false.i ], [ -2, %entry ]
  ret i32 %retval.0.i5
}

; Function Attrs: nounwind uwtable
define i32 @deflateSetDictionary(%struct.z_stream_s.10* %strm, i8* %dictionary, i32 %dictLength) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  %cmp3 = icmp eq i8* %dictionary, null
  %or.cond = or i1 %cmp1, %cmp3
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %wrap5 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 6
  %1 = load i32* %wrap5, align 4, !tbaa !52
  %cmp6 = icmp eq i32 %1, 2
  br i1 %cmp6, label %return, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %if.end
  %cmp8 = icmp eq i32 %1, 1
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false10

land.lhs.true:                                    ; preds = %lor.lhs.false7
  %status = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 1
  %2 = load i32* %status, align 4, !tbaa !68
  %cmp9 = icmp eq i32 %2, 42
  br i1 %cmp9, label %lor.lhs.false10, label %return

lor.lhs.false10:                                  ; preds = %land.lhs.true, %lor.lhs.false7
  %lookahead = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 29
  %3 = load i32* %lookahead, align 4, !tbaa !93
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %if.end12, label %return

if.end12:                                         ; preds = %lor.lhs.false10
  br i1 %cmp8, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end12
  %adler = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  %4 = load i64* %adler, align 8, !tbaa !78
  %call = tail call i64 @adler32(i64 %4, i8* %dictionary, i32 %dictLength) #4
  store i64 %call, i64* %adler, align 8, !tbaa !78
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end12
  store i32 0, i32* %wrap5, align 4, !tbaa !52
  %w_size = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 11
  %5 = load i32* %w_size, align 4, !tbaa !55
  %cmp18 = icmp ugt i32 %5, %dictLength
  br i1 %cmp18, label %if.end29, label %if.then19

if.then19:                                        ; preds = %if.end16
  %cmp20 = icmp eq i32 %1, 0
  br i1 %cmp20, label %if.then21, label %if.end25

if.then21:                                        ; preds = %if.then19
  %hash_size = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 19
  %6 = load i32* %hash_size, align 4, !tbaa !58
  %sub = add i32 %6, -1
  %idxprom = zext i32 %sub to i64
  %head = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 17
  %7 = load i16** %head, align 8, !tbaa !63
  %arrayidx = getelementptr inbounds i16* %7, i64 %idxprom
  store i16 0, i16* %arrayidx, align 2, !tbaa !81
  %8 = bitcast i16* %7 to i8*
  %mul = shl nuw nsw i64 %idxprom, 1
  tail call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %mul, i32 1, i1 false)
  %strstart = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 27
  store i32 0, i32* %strstart, align 4, !tbaa !91
  %block_start = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 23
  store i64 0, i64* %block_start, align 8, !tbaa !92
  %insert = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 55
  store i32 0, i32* %insert, align 4, !tbaa !94
  %.pre147 = load i32* %w_size, align 4, !tbaa !55
  br label %if.end25

if.end25:                                         ; preds = %if.then21, %if.then19
  %9 = phi i32 [ %.pre147, %if.then21 ], [ %5, %if.then19 ]
  %sub27 = sub i32 %dictLength, %9
  %idx.ext = zext i32 %sub27 to i64
  %add.ptr = getelementptr inbounds i8* %dictionary, i64 %idx.ext
  br label %if.end29

if.end29:                                         ; preds = %if.end25, %if.end16
  %dictLength.addr.0 = phi i32 [ %9, %if.end25 ], [ %dictLength, %if.end16 ]
  %dictionary.addr.0 = phi i8* [ %add.ptr, %if.end25 ], [ %dictionary, %if.end16 ]
  %avail_in = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 1
  %10 = load i32* %avail_in, align 4, !tbaa !32
  %next_in = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 0
  %11 = load i8** %next_in, align 8, !tbaa !37
  store i32 %dictLength.addr.0, i32* %avail_in, align 4, !tbaa !32
  store i8* %dictionary.addr.0, i8** %next_in, align 8, !tbaa !37
  tail call fastcc void @fill_window(%struct.internal_state.11* %0)
  %12 = load i32* %lookahead, align 4, !tbaa !93
  %cmp33136 = icmp ugt i32 %12, 2
  %strstart35 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 27
  %13 = load i32* %strstart35, align 4, !tbaa !91
  br i1 %cmp33136, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %if.end29
  %ins_h = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 18
  %hash_shift = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 22
  %window = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 14
  %hash_mask = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 21
  %head45 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 17
  %w_mask = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 13
  %prev = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 16
  br label %while.body

while.body:                                       ; preds = %do.end, %while.body.lr.ph
  %14 = phi i32 [ %13, %while.body.lr.ph ], [ %21, %do.end ]
  %15 = phi i32 [ %12, %while.body.lr.ph ], [ %20, %do.end ]
  %sub37 = add i32 %15, -2
  %.pre = load i32* %ins_h, align 4, !tbaa !98
  %.pre141 = load i32* %hash_shift, align 4, !tbaa !60
  %.pre142 = load i8** %window, align 8, !tbaa !61
  %.pre143 = load i32* %hash_mask, align 4, !tbaa !59
  %.pre144 = load i16** %head45, align 8, !tbaa !63
  %.pre145 = load i32* %w_mask, align 4, !tbaa !56
  %.pre146 = load i16** %prev, align 8, !tbaa !62
  br label %do.body

do.body:                                          ; preds = %do.body, %while.body
  %16 = phi i32 [ %.pre, %while.body ], [ %and, %do.body ]
  %str.0 = phi i32 [ %14, %while.body ], [ %inc, %do.body ]
  %n.0 = phi i32 [ %sub37, %while.body ], [ %dec, %do.body ]
  %shl = shl i32 %16, %.pre141
  %sub38 = add i32 %str.0, 2
  %idxprom39 = zext i32 %sub38 to i64
  %arrayidx40 = getelementptr inbounds i8* %.pre142, i64 %idxprom39
  %17 = load i8* %arrayidx40, align 1, !tbaa !5
  %conv41 = zext i8 %17 to i32
  %xor = xor i32 %conv41, %shl
  %and = and i32 %xor, %.pre143
  store i32 %and, i32* %ins_h, align 4, !tbaa !98
  %idxprom44 = zext i32 %and to i64
  %arrayidx46 = getelementptr inbounds i16* %.pre144, i64 %idxprom44
  %18 = load i16* %arrayidx46, align 2, !tbaa !81
  %and47 = and i32 %.pre145, %str.0
  %idxprom48 = zext i32 %and47 to i64
  %arrayidx49 = getelementptr inbounds i16* %.pre146, i64 %idxprom48
  store i16 %18, i16* %arrayidx49, align 2, !tbaa !81
  %conv50 = trunc i32 %str.0 to i16
  store i16 %conv50, i16* %arrayidx46, align 2, !tbaa !81
  %inc = add i32 %str.0, 1
  %dec = add i32 %n.0, -1
  %tobool55 = icmp eq i32 %dec, 0
  br i1 %tobool55, label %do.end, label %do.body

do.end:                                           ; preds = %do.body
  %19 = add i32 %sub37, %14
  store i32 %19, i32* %strstart35, align 4, !tbaa !91
  store i32 2, i32* %lookahead, align 4, !tbaa !93
  tail call fastcc void @fill_window(%struct.internal_state.11* %0)
  %20 = load i32* %lookahead, align 4, !tbaa !93
  %cmp33 = icmp ugt i32 %20, 2
  %21 = load i32* %strstart35, align 4, !tbaa !91
  br i1 %cmp33, label %while.body, label %while.end.loopexit

while.end.loopexit:                               ; preds = %do.end
  %.lcssa149 = phi i32 [ %21, %do.end ]
  %.lcssa = phi i32 [ %20, %do.end ]
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.end29
  %.lcssa135 = phi i32 [ %13, %if.end29 ], [ %.lcssa149, %while.end.loopexit ]
  %22 = phi i32 [ %12, %if.end29 ], [ %.lcssa, %while.end.loopexit ]
  %add60 = add i32 %.lcssa135, %22
  store i32 %add60, i32* %strstart35, align 4, !tbaa !91
  %conv62 = zext i32 %add60 to i64
  %block_start63 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 23
  store i64 %conv62, i64* %block_start63, align 8, !tbaa !92
  %insert65 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 55
  store i32 %22, i32* %insert65, align 4, !tbaa !94
  store i32 0, i32* %lookahead, align 4, !tbaa !93
  %prev_length = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 30
  store i32 2, i32* %prev_length, align 4, !tbaa !95
  %match_length = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 24
  store i32 2, i32* %match_length, align 4, !tbaa !96
  %match_available = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 26
  store i32 0, i32* %match_available, align 4, !tbaa !97
  store i8* %11, i8** %next_in, align 8, !tbaa !37
  store i32 %10, i32* %avail_in, align 4, !tbaa !32
  store i32 %1, i32* %wrap5, align 4, !tbaa !52
  br label %return

return:                                           ; preds = %while.end, %lor.lhs.false10, %land.lhs.true, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %while.end ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %land.lhs.true ], [ -2, %lor.lhs.false10 ], [ -2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflateResetKeep(%struct.z_stream_s.10* %strm) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp1, label %return, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %zalloc = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 8
  %1 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %cmp3 = icmp eq i8* (i8*, i32, i32)* %1, null
  br i1 %cmp3, label %return, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %zfree = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 9
  %2 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %cmp5 = icmp eq void (i8*, i8*)* %2, null
  br i1 %cmp5, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false4
  %total_out = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  %total_in = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 2
  store i64 0, i64* %total_in, align 8, !tbaa !74
  %data_type = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 11
  %3 = bitcast i64* %total_out to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 16, i32 8, i1 false)
  store i32 2, i32* %data_type, align 4, !tbaa !75
  %pending = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  store i32 0, i32* %pending, align 4, !tbaa !76
  %pending_buf = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %4 = load i8** %pending_buf, align 8, !tbaa !66
  %pending_out = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 4
  store i8* %4, i8** %pending_out, align 8, !tbaa !77
  %wrap = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 6
  %5 = load i32* %wrap, align 4, !tbaa !52
  %cmp7 = icmp slt i32 %5, 0
  br i1 %cmp7, label %if.then8, label %if.end11

if.then8:                                         ; preds = %if.end
  %sub = sub nsw i32 0, %5
  store i32 %sub, i32* %wrap, align 4, !tbaa !52
  br label %if.end11

if.end11:                                         ; preds = %if.then8, %if.end
  %6 = phi i32 [ %sub, %if.then8 ], [ %5, %if.end ]
  %tobool = icmp ne i32 %6, 0
  %cond = select i1 %tobool, i32 42, i32 113
  %status = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 1
  store i32 %cond, i32* %status, align 4, !tbaa !68
  %cmp14 = icmp eq i32 %6, 2
  br i1 %cmp14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end11
  %call = tail call i64 @crc32(i64 0, i8* null, i32 0) #4
  br label %cond.end

cond.false:                                       ; preds = %if.end11
  %call15 = tail call i64 @adler32(i64 0, i8* null, i32 0) #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi i64 [ %call, %cond.true ], [ %call15, %cond.false ]
  %adler = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  store i64 %cond16, i64* %adler, align 8, !tbaa !78
  %last_flush = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 10
  store i32 0, i32* %last_flush, align 4, !tbaa !79
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_init to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %0) #4
  br label %return

return:                                           ; preds = %cond.end, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %cond.end ], [ -2, %lor.lhs.false4 ], [ -2, %lor.lhs.false2 ], [ -2, %lor.lhs.false ], [ -2, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflateSetHeader(%struct.z_stream_s.10* readonly %strm, %struct.gz_header_s* %head) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %wrap = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 6
  %1 = load i32* %wrap, align 4, !tbaa !52
  %cmp3 = icmp eq i32 %1, 2
  br i1 %cmp3, label %if.end5, label %return

if.end5:                                          ; preds = %if.end
  %gzhead = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 7
  store %struct.gz_header_s* %head, %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  br label %return

return:                                           ; preds = %if.end5, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.end5 ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflatePending(%struct.z_stream_s.10* readonly %strm, i32* %pending, i32* %bits) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %cmp2 = icmp eq i32* %pending, null
  br i1 %cmp2, label %if.end6, label %if.then3

if.then3:                                         ; preds = %if.end
  %pending5 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %1 = load i32* %pending5, align 4, !tbaa !76
  store i32 %1, i32* %pending, align 4, !tbaa !28
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.end
  %cmp7 = icmp eq i32* %bits, null
  br i1 %cmp7, label %return, label %if.then8

if.then8:                                         ; preds = %if.end6
  %bi_valid = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 57
  %2 = load i32* %bi_valid, align 4, !tbaa !99
  store i32 %2, i32* %bits, align 4, !tbaa !28
  br label %return

return:                                           ; preds = %if.then8, %if.end6, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -2, %lor.lhs.false ], [ -2, %entry ], [ 0, %if.end6 ], [ 0, %if.then8 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflatePrime(%struct.z_stream_s.10* readonly %strm, i32 %bits, i32 %value) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %d_buf = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 51
  %1 = load i16** %d_buf, align 8, !tbaa !69
  %2 = bitcast i16* %1 to i8*
  %pending_out = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 4
  %3 = load i8** %pending_out, align 8, !tbaa !77
  %add.ptr = getelementptr inbounds i8* %3, i64 2
  %cmp3 = icmp ult i8* %2, %add.ptr
  br i1 %cmp3, label %return, label %do.body.preheader

do.body.preheader:                                ; preds = %if.end
  %bi_valid = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 57
  %bi_buf = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 56
  br label %do.body

do.body:                                          ; preds = %do.body, %do.body.preheader
  %bits.addr.0 = phi i32 [ %sub16, %do.body ], [ %bits, %do.body.preheader ]
  %value.addr.0 = phi i32 [ %shr, %do.body ], [ %value, %do.body.preheader ]
  %4 = load i32* %bi_valid, align 4, !tbaa !99
  %sub = sub nsw i32 16, %4
  %cmp6 = icmp sgt i32 %sub, %bits.addr.0
  %bits.addr.0.sub = select i1 %cmp6, i32 %bits.addr.0, i32 %sub
  %shl = shl i32 1, %bits.addr.0.sub
  %sub9 = add nsw i32 %shl, -1
  %and = and i32 %sub9, %value.addr.0
  %shl11 = shl i32 %and, %4
  %5 = load i16* %bi_buf, align 2, !tbaa !100
  %conv13 = zext i16 %5 to i32
  %or = or i32 %shl11, %conv13
  %conv14 = trunc i32 %or to i16
  store i16 %conv14, i16* %bi_buf, align 2, !tbaa !100
  %add = add nsw i32 %bits.addr.0.sub, %4
  store i32 %add, i32* %bi_valid, align 4, !tbaa !99
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %0) #4
  %shr = ashr i32 %value.addr.0, %bits.addr.0.sub
  %sub16 = sub nsw i32 %bits.addr.0, %bits.addr.0.sub
  %tobool = icmp eq i32 %bits.addr.0, %bits.addr.0.sub
  br i1 %tobool, label %return.loopexit, label %do.body

return.loopexit:                                  ; preds = %do.body
  br label %return

return:                                           ; preds = %return.loopexit, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -2, %lor.lhs.false ], [ -2, %entry ], [ -5, %if.end ], [ 0, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflateParams(%struct.z_stream_s.10* %strm, i32 %level, i32 %strategy) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %cmp3 = icmp eq i32 %level, -1
  %.level = select i1 %cmp3, i32 6, i32 %level
  %1 = icmp ugt i32 %.level, 9
  %cmp10 = icmp slt i32 %strategy, 0
  %or.cond49 = or i1 %1, %cmp10
  %cmp12 = icmp sgt i32 %strategy, 4
  %or.cond50 = or i1 %or.cond49, %cmp12
  br i1 %or.cond50, label %return, label %if.end14

if.end14:                                         ; preds = %if.end
  %level15 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 33
  %strategy17 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 34
  %2 = load i32* %strategy17, align 4, !tbaa !72
  %cmp18 = icmp eq i32 %2, %strategy
  br i1 %cmp18, label %lor.lhs.false19, label %land.lhs.true

lor.lhs.false19:                                  ; preds = %if.end14
  %3 = load i32* %level15, align 4, !tbaa !71
  %idxprom = sext i32 %3 to i64
  %func16 = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom, i32 4
  %4 = load i32 (%struct.internal_state.11*, i32)** %func16, align 8, !tbaa !101
  %idxprom20 = sext i32 %.level to i64
  %func22 = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom20, i32 4
  %5 = load i32 (%struct.internal_state.11*, i32)** %func22, align 8, !tbaa !101
  %cmp23 = icmp eq i32 (%struct.internal_state.11*, i32)* %4, %5
  br i1 %cmp23, label %if.end31, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false19, %if.end14
  %total_in = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 2
  %6 = load i64* %total_in, align 8, !tbaa !74
  %cmp24 = icmp eq i64 %6, 0
  br i1 %cmp24, label %if.end31, label %if.then25

if.then25:                                        ; preds = %land.lhs.true
  %call = tail call i32 @deflate(%struct.z_stream_s.10* %strm, i32 5)
  %cmp26 = icmp eq i32 %call, -5
  br i1 %cmp26, label %land.lhs.true27, label %if.end31

land.lhs.true27:                                  ; preds = %if.then25
  %pending = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %7 = load i32* %pending, align 4, !tbaa !76
  %cmp28 = icmp eq i32 %7, 0
  %.call = select i1 %cmp28, i32 0, i32 -5
  br label %if.end31

if.end31:                                         ; preds = %land.lhs.true27, %if.then25, %land.lhs.true, %lor.lhs.false19
  %err.0 = phi i32 [ %call, %if.then25 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false19 ], [ %.call, %land.lhs.true27 ]
  %8 = load i32* %level15, align 4, !tbaa !71
  %cmp33 = icmp eq i32 %8, %.level
  br i1 %cmp33, label %if.end47, label %if.then34

if.then34:                                        ; preds = %if.end31
  store i32 %.level, i32* %level15, align 4, !tbaa !71
  %idxprom36 = sext i32 %.level to i64
  %max_lazy = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom36, i32 1
  %9 = load i16* %max_lazy, align 2, !tbaa !82
  %conv = zext i16 %9 to i32
  %max_lazy_match = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 32
  store i32 %conv, i32* %max_lazy_match, align 4, !tbaa !84
  %good_length = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom36, i32 0
  %10 = load i16* %good_length, align 16, !tbaa !85
  %conv40 = zext i16 %10 to i32
  %good_match = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 35
  store i32 %conv40, i32* %good_match, align 4, !tbaa !86
  %nice_length = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom36, i32 2
  %11 = load i16* %nice_length, align 4, !tbaa !87
  %conv43 = zext i16 %11 to i32
  %nice_match = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 36
  store i32 %conv43, i32* %nice_match, align 4, !tbaa !88
  %max_chain = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom36, i32 3
  %12 = load i16* %max_chain, align 2, !tbaa !89
  %conv46 = zext i16 %12 to i32
  %max_chain_length = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 31
  store i32 %conv46, i32* %max_chain_length, align 4, !tbaa !90
  br label %if.end47

if.end47:                                         ; preds = %if.then34, %if.end31
  store i32 %strategy, i32* %strategy17, align 4, !tbaa !72
  br label %return

return:                                           ; preds = %if.end47, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ %err.0, %if.end47 ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflate(%struct.z_stream_s.10* %strm, i32 %flush) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  %cmp3 = icmp sgt i32 %flush, 5
  %or.cond = or i1 %cmp1, %cmp3
  %cmp5 = icmp slt i32 %flush, 0
  %or.cond804 = or i1 %or.cond, %cmp5
  br i1 %or.cond804, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %next_out = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 3
  %1 = load i8** %next_out, align 8, !tbaa !34
  %cmp7 = icmp eq i8* %1, null
  br i1 %cmp7, label %if.then15, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %if.end
  %next_in = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 0
  %2 = load i8** %next_in, align 8, !tbaa !37
  %cmp9 = icmp eq i8* %2, null
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false11

land.lhs.true:                                    ; preds = %lor.lhs.false8
  %avail_in = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 1
  %3 = load i32* %avail_in, align 4, !tbaa !32
  %cmp10 = icmp eq i32 %3, 0
  br i1 %cmp10, label %lor.lhs.false11, label %if.then15

lor.lhs.false11:                                  ; preds = %land.lhs.true, %lor.lhs.false8
  %status = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 1
  %4 = load i32* %status, align 4, !tbaa !68
  %cmp12 = icmp eq i32 %4, 666
  %cmp14 = icmp ne i32 %flush, 4
  %or.cond805 = and i1 %cmp12, %cmp14
  br i1 %or.cond805, label %if.then15, label %if.end16

if.then15:                                        ; preds = %lor.lhs.false11, %land.lhs.true, %if.end
  %5 = load i8** getelementptr inbounds ([10 x i8*]* @z_errmsg, i64 0, i64 4), align 8, !tbaa !1
  %msg = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 6
  store i8* %5, i8** %msg, align 8, !tbaa !38
  br label %return

if.end16:                                         ; preds = %lor.lhs.false11
  %avail_out = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 4
  %6 = load i32* %avail_out, align 4, !tbaa !33
  %cmp17 = icmp eq i32 %6, 0
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end16
  %7 = load i8** getelementptr inbounds ([10 x i8*]* @z_errmsg, i64 0, i64 7), align 8, !tbaa !1
  %msg19 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 6
  store i8* %7, i8** %msg19, align 8, !tbaa !38
  br label %return

if.end20:                                         ; preds = %if.end16
  %strm21 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 0
  store %struct.z_stream_s.10* %strm, %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %last_flush = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 10
  %8 = load i32* %last_flush, align 4, !tbaa !79
  store i32 %flush, i32* %last_flush, align 4, !tbaa !79
  %cmp24 = icmp eq i32 %4, 42
  br i1 %cmp24, label %if.then25, label %if.end257

if.then25:                                        ; preds = %if.end20
  %wrap = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 6
  %9 = load i32* %wrap, align 4, !tbaa !52
  %cmp26 = icmp eq i32 %9, 2
  br i1 %cmp26, label %if.then27, label %if.else209

if.then27:                                        ; preds = %if.then25
  %call = tail call i64 @crc32(i64 0, i8* null, i32 0) #4
  %adler = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  store i64 %call, i64* %adler, align 8, !tbaa !78
  %pending = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %10 = load i32* %pending, align 4, !tbaa !76
  %inc = add i32 %10, 1
  store i32 %inc, i32* %pending, align 4, !tbaa !76
  %idxprom = zext i32 %10 to i64
  %pending_buf = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %11 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx = getelementptr inbounds i8* %11, i64 %idxprom
  store i8 31, i8* %arrayidx, align 1, !tbaa !5
  %12 = load i32* %pending, align 4, !tbaa !76
  %inc29 = add i32 %12, 1
  store i32 %inc29, i32* %pending, align 4, !tbaa !76
  %idxprom30 = zext i32 %12 to i64
  %13 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx32 = getelementptr inbounds i8* %13, i64 %idxprom30
  store i8 -117, i8* %arrayidx32, align 1, !tbaa !5
  %14 = load i32* %pending, align 4, !tbaa !76
  %inc34 = add i32 %14, 1
  store i32 %inc34, i32* %pending, align 4, !tbaa !76
  %idxprom35 = zext i32 %14 to i64
  %15 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx37 = getelementptr inbounds i8* %15, i64 %idxprom35
  store i8 8, i8* %arrayidx37, align 1, !tbaa !5
  %gzhead = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 7
  %16 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %cmp38 = icmp eq %struct.gz_header_s* %16, null
  br i1 %cmp38, label %if.then39, label %if.else

if.then39:                                        ; preds = %if.then27
  %17 = load i32* %pending, align 4, !tbaa !76
  %inc41 = add i32 %17, 1
  store i32 %inc41, i32* %pending, align 4, !tbaa !76
  %idxprom42 = zext i32 %17 to i64
  %18 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx44 = getelementptr inbounds i8* %18, i64 %idxprom42
  store i8 0, i8* %arrayidx44, align 1, !tbaa !5
  %19 = load i32* %pending, align 4, !tbaa !76
  %inc46 = add i32 %19, 1
  store i32 %inc46, i32* %pending, align 4, !tbaa !76
  %idxprom47 = zext i32 %19 to i64
  %20 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx49 = getelementptr inbounds i8* %20, i64 %idxprom47
  store i8 0, i8* %arrayidx49, align 1, !tbaa !5
  %21 = load i32* %pending, align 4, !tbaa !76
  %inc51 = add i32 %21, 1
  store i32 %inc51, i32* %pending, align 4, !tbaa !76
  %idxprom52 = zext i32 %21 to i64
  %22 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx54 = getelementptr inbounds i8* %22, i64 %idxprom52
  store i8 0, i8* %arrayidx54, align 1, !tbaa !5
  %23 = load i32* %pending, align 4, !tbaa !76
  %inc56 = add i32 %23, 1
  store i32 %inc56, i32* %pending, align 4, !tbaa !76
  %idxprom57 = zext i32 %23 to i64
  %24 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx59 = getelementptr inbounds i8* %24, i64 %idxprom57
  store i8 0, i8* %arrayidx59, align 1, !tbaa !5
  %25 = load i32* %pending, align 4, !tbaa !76
  %inc61 = add i32 %25, 1
  store i32 %inc61, i32* %pending, align 4, !tbaa !76
  %idxprom62 = zext i32 %25 to i64
  %26 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx64 = getelementptr inbounds i8* %26, i64 %idxprom62
  store i8 0, i8* %arrayidx64, align 1, !tbaa !5
  %level = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 33
  %27 = load i32* %level, align 4, !tbaa !71
  %cmp65 = icmp eq i32 %27, 9
  br i1 %cmp65, label %if.end517.thread, label %cond.false

cond.false:                                       ; preds = %if.then39
  %strategy = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 34
  %28 = load i32* %strategy, align 4, !tbaa !72
  %cmp66 = icmp sgt i32 %28, 1
  br i1 %cmp66, label %if.end517.thread, label %lor.rhs

lor.rhs:                                          ; preds = %cond.false
  %cmp68 = icmp slt i32 %27, 2
  %phitmp1112 = select i1 %cmp68, i8 4, i8 0
  br label %if.end517.thread

if.end517.thread:                                 ; preds = %lor.rhs, %cond.false, %if.then39
  %cond69 = phi i8 [ 2, %if.then39 ], [ 4, %cond.false ], [ %phitmp1112, %lor.rhs ]
  %29 = load i32* %pending, align 4, !tbaa !76
  %inc71 = add i32 %29, 1
  store i32 %inc71, i32* %pending, align 4, !tbaa !76
  %idxprom72 = zext i32 %29 to i64
  %30 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx74 = getelementptr inbounds i8* %30, i64 %idxprom72
  store i8 %cond69, i8* %arrayidx74, align 1, !tbaa !5
  %31 = load i32* %pending, align 4, !tbaa !76
  %inc76 = add i32 %31, 1
  store i32 %inc76, i32* %pending, align 4, !tbaa !76
  %idxprom77 = zext i32 %31 to i64
  %32 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx79 = getelementptr inbounds i8* %32, i64 %idxprom77
  store i8 3, i8* %arrayidx79, align 1, !tbaa !5
  store i32 113, i32* %status, align 4, !tbaa !68
  br label %if.end565

if.else:                                          ; preds = %if.then27
  %text = getelementptr inbounds %struct.gz_header_s* %16, i64 0, i32 0
  %33 = load i32* %text, align 4, !tbaa !102
  %tobool = icmp ne i32 %33, 0
  %cond82 = zext i1 %tobool to i8
  %hcrc = getelementptr inbounds %struct.gz_header_s* %16, i64 0, i32 11
  %34 = load i32* %hcrc, align 4, !tbaa !104
  %tobool84 = icmp ne i32 %34, 0
  %cond85 = select i1 %tobool84, i8 2, i8 0
  %add = or i8 %cond85, %cond82
  %extra = getelementptr inbounds %struct.gz_header_s* %16, i64 0, i32 4
  %35 = load i8** %extra, align 8, !tbaa !105
  %cmp87 = icmp eq i8* %35, null
  %cond89 = select i1 %cmp87, i8 0, i8 4
  %add90 = or i8 %add, %cond89
  %name = getelementptr inbounds %struct.gz_header_s* %16, i64 0, i32 7
  %36 = load i8** %name, align 8, !tbaa !106
  %cmp92 = icmp eq i8* %36, null
  %cond94 = select i1 %cmp92, i8 0, i8 8
  %add95 = or i8 %add90, %cond94
  %comment = getelementptr inbounds %struct.gz_header_s* %16, i64 0, i32 9
  %37 = load i8** %comment, align 8, !tbaa !107
  %cmp97 = icmp eq i8* %37, null
  %cond99 = select i1 %cmp97, i8 0, i8 16
  %add100 = or i8 %add95, %cond99
  %38 = load i32* %pending, align 4, !tbaa !76
  %inc103 = add i32 %38, 1
  store i32 %inc103, i32* %pending, align 4, !tbaa !76
  %idxprom104 = zext i32 %38 to i64
  %39 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx106 = getelementptr inbounds i8* %39, i64 %idxprom104
  store i8 %add100, i8* %arrayidx106, align 1, !tbaa !5
  %40 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %time = getelementptr inbounds %struct.gz_header_s* %40, i64 0, i32 1
  %41 = load i64* %time, align 8, !tbaa !108
  %conv108 = trunc i64 %41 to i8
  %42 = load i32* %pending, align 4, !tbaa !76
  %inc110 = add i32 %42, 1
  store i32 %inc110, i32* %pending, align 4, !tbaa !76
  %idxprom111 = zext i32 %42 to i64
  %43 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx113 = getelementptr inbounds i8* %43, i64 %idxprom111
  store i8 %conv108, i8* %arrayidx113, align 1, !tbaa !5
  %44 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %time115 = getelementptr inbounds %struct.gz_header_s* %44, i64 0, i32 1
  %45 = load i64* %time115, align 8, !tbaa !108
  %shr = lshr i64 %45, 8
  %conv117 = trunc i64 %shr to i8
  %46 = load i32* %pending, align 4, !tbaa !76
  %inc119 = add i32 %46, 1
  store i32 %inc119, i32* %pending, align 4, !tbaa !76
  %idxprom120 = zext i32 %46 to i64
  %47 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx122 = getelementptr inbounds i8* %47, i64 %idxprom120
  store i8 %conv117, i8* %arrayidx122, align 1, !tbaa !5
  %48 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %time124 = getelementptr inbounds %struct.gz_header_s* %48, i64 0, i32 1
  %49 = load i64* %time124, align 8, !tbaa !108
  %shr125 = lshr i64 %49, 16
  %conv127 = trunc i64 %shr125 to i8
  %50 = load i32* %pending, align 4, !tbaa !76
  %inc129 = add i32 %50, 1
  store i32 %inc129, i32* %pending, align 4, !tbaa !76
  %idxprom130 = zext i32 %50 to i64
  %51 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx132 = getelementptr inbounds i8* %51, i64 %idxprom130
  store i8 %conv127, i8* %arrayidx132, align 1, !tbaa !5
  %52 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %time134 = getelementptr inbounds %struct.gz_header_s* %52, i64 0, i32 1
  %53 = load i64* %time134, align 8, !tbaa !108
  %shr135 = lshr i64 %53, 24
  %conv137 = trunc i64 %shr135 to i8
  %54 = load i32* %pending, align 4, !tbaa !76
  %inc139 = add i32 %54, 1
  store i32 %inc139, i32* %pending, align 4, !tbaa !76
  %idxprom140 = zext i32 %54 to i64
  %55 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx142 = getelementptr inbounds i8* %55, i64 %idxprom140
  store i8 %conv137, i8* %arrayidx142, align 1, !tbaa !5
  %level143 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 33
  %56 = load i32* %level143, align 4, !tbaa !71
  %cmp144 = icmp eq i32 %56, 9
  br i1 %cmp144, label %cond.end157, label %cond.false147

cond.false147:                                    ; preds = %if.else
  %strategy148 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 34
  %57 = load i32* %strategy148, align 4, !tbaa !72
  %cmp149 = icmp sgt i32 %57, 1
  br i1 %cmp149, label %cond.end157, label %lor.rhs151

lor.rhs151:                                       ; preds = %cond.false147
  %cmp153 = icmp slt i32 %56, 2
  %phitmp = select i1 %cmp153, i8 4, i8 0
  br label %cond.end157

cond.end157:                                      ; preds = %lor.rhs151, %cond.false147, %if.else
  %cond158 = phi i8 [ 2, %if.else ], [ 4, %cond.false147 ], [ %phitmp, %lor.rhs151 ]
  %58 = load i32* %pending, align 4, !tbaa !76
  %inc161 = add i32 %58, 1
  store i32 %inc161, i32* %pending, align 4, !tbaa !76
  %idxprom162 = zext i32 %58 to i64
  %59 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx164 = getelementptr inbounds i8* %59, i64 %idxprom162
  store i8 %cond158, i8* %arrayidx164, align 1, !tbaa !5
  %60 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %os = getelementptr inbounds %struct.gz_header_s* %60, i64 0, i32 3
  %61 = load i32* %os, align 4, !tbaa !109
  %conv167 = trunc i32 %61 to i8
  %62 = load i32* %pending, align 4, !tbaa !76
  %inc169 = add i32 %62, 1
  store i32 %inc169, i32* %pending, align 4, !tbaa !76
  %idxprom170 = zext i32 %62 to i64
  %63 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx172 = getelementptr inbounds i8* %63, i64 %idxprom170
  store i8 %conv167, i8* %arrayidx172, align 1, !tbaa !5
  %64 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %extra174 = getelementptr inbounds %struct.gz_header_s* %64, i64 0, i32 4
  %65 = load i8** %extra174, align 8, !tbaa !105
  %cmp175 = icmp eq i8* %65, null
  br i1 %cmp175, label %if.end196, label %if.then177

if.then177:                                       ; preds = %cond.end157
  %extra_len = getelementptr inbounds %struct.gz_header_s* %64, i64 0, i32 5
  %66 = load i32* %extra_len, align 4, !tbaa !110
  %conv180 = trunc i32 %66 to i8
  %67 = load i32* %pending, align 4, !tbaa !76
  %inc182 = add i32 %67, 1
  store i32 %inc182, i32* %pending, align 4, !tbaa !76
  %idxprom183 = zext i32 %67 to i64
  %68 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx185 = getelementptr inbounds i8* %68, i64 %idxprom183
  store i8 %conv180, i8* %arrayidx185, align 1, !tbaa !5
  %69 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %extra_len187 = getelementptr inbounds %struct.gz_header_s* %69, i64 0, i32 5
  %70 = load i32* %extra_len187, align 4, !tbaa !110
  %shr188 = lshr i32 %70, 8
  %conv190 = trunc i32 %shr188 to i8
  %71 = load i32* %pending, align 4, !tbaa !76
  %inc192 = add i32 %71, 1
  store i32 %inc192, i32* %pending, align 4, !tbaa !76
  %idxprom193 = zext i32 %71 to i64
  %72 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx195 = getelementptr inbounds i8* %72, i64 %idxprom193
  store i8 %conv190, i8* %arrayidx195, align 1, !tbaa !5
  %.pre = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  br label %if.end196

if.end196:                                        ; preds = %if.then177, %cond.end157
  %73 = phi %struct.gz_header_s* [ %64, %cond.end157 ], [ %.pre, %if.then177 ]
  %hcrc198 = getelementptr inbounds %struct.gz_header_s* %73, i64 0, i32 11
  %74 = load i32* %hcrc198, align 4, !tbaa !104
  %tobool199 = icmp eq i32 %74, 0
  br i1 %tobool199, label %if.end257.thread, label %if.then200

if.then200:                                       ; preds = %if.end196
  %75 = load i64* %adler, align 8, !tbaa !78
  %76 = load i8** %pending_buf, align 8, !tbaa !66
  %77 = load i32* %pending, align 4, !tbaa !76
  %call204 = tail call i64 @crc32(i64 %75, i8* %76, i32 %77) #4
  store i64 %call204, i64* %adler, align 8, !tbaa !78
  br label %if.end257.thread

if.end257.thread:                                 ; preds = %if.then200, %if.end196
  %gzindex = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 8
  store i32 0, i32* %gzindex, align 4, !tbaa !111
  store i32 69, i32* %status, align 4, !tbaa !68
  br label %if.then261

if.else209:                                       ; preds = %if.then25
  %w_bits = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 12
  %78 = load i32* %w_bits, align 4, !tbaa !54
  %add210 = shl i32 %78, 12
  %shl211 = add i32 %add210, -30720
  %strategy212 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 34
  %79 = load i32* %strategy212, align 4, !tbaa !72
  %cmp213 = icmp sgt i32 %79, 1
  br i1 %cmp213, label %if.end233, label %lor.lhs.false215

lor.lhs.false215:                                 ; preds = %if.else209
  %level216 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 33
  %80 = load i32* %level216, align 4, !tbaa !71
  %cmp217 = icmp slt i32 %80, 2
  br i1 %cmp217, label %if.end233, label %if.else220

if.else220:                                       ; preds = %lor.lhs.false215
  %cmp222 = icmp slt i32 %80, 6
  br i1 %cmp222, label %if.end233, label %if.else225

if.else225:                                       ; preds = %if.else220
  %cmp227 = icmp eq i32 %80, 6
  %. = select i1 %cmp227, i32 128, i32 192
  br label %if.end233

if.end233:                                        ; preds = %if.else225, %if.else220, %lor.lhs.false215, %if.else209
  %level_flags.0 = phi i32 [ 0, %lor.lhs.false215 ], [ 0, %if.else209 ], [ 64, %if.else220 ], [ %., %if.else225 ]
  %or = or i32 %level_flags.0, %shl211
  %strstart = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 27
  %81 = load i32* %strstart, align 4, !tbaa !91
  %cmp235 = icmp eq i32 %81, 0
  %or238 = or i32 %or, 32
  %82 = select i1 %cmp235, i32 %or, i32 %or238
  %rem = urem i32 %82, 31
  %or.or238 = or i32 %82, %rem
  %add241 = xor i32 %or.or238, 31
  store i32 113, i32* %status, align 4, !tbaa !68
  %shr.i = lshr i32 %82, 8
  %conv.i = trunc i32 %shr.i to i8
  %pending.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %83 = load i32* %pending.i, align 4, !tbaa !76
  %inc.i = add i32 %83, 1
  store i32 %inc.i, i32* %pending.i, align 4, !tbaa !76
  %idxprom.i = zext i32 %83 to i64
  %pending_buf.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %84 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx.i = getelementptr inbounds i8* %84, i64 %idxprom.i
  store i8 %conv.i, i8* %arrayidx.i, align 1, !tbaa !5
  %conv1.i = trunc i32 %add241 to i8
  %85 = load i32* %pending.i, align 4, !tbaa !76
  %inc3.i = add i32 %85, 1
  store i32 %inc3.i, i32* %pending.i, align 4, !tbaa !76
  %idxprom4.i = zext i32 %85 to i64
  %86 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx6.i = getelementptr inbounds i8* %86, i64 %idxprom4.i
  store i8 %conv1.i, i8* %arrayidx6.i, align 1, !tbaa !5
  %87 = load i32* %strstart, align 4, !tbaa !91
  %cmp244 = icmp eq i32 %87, 0
  %adler255.pre = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  br i1 %cmp244, label %if.end253, label %if.then246

if.then246:                                       ; preds = %if.end233
  %88 = load i64* %adler255.pre, align 8, !tbaa !78
  %shr248 = lshr i64 %88, 16
  %shr.i11191356 = lshr i64 %88, 24
  %conv.i1120 = trunc i64 %shr.i11191356 to i8
  %89 = load i32* %pending.i, align 4, !tbaa !76
  %inc.i1122 = add i32 %89, 1
  store i32 %inc.i1122, i32* %pending.i, align 4, !tbaa !76
  %idxprom.i1123 = zext i32 %89 to i64
  %90 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx.i1125 = getelementptr inbounds i8* %90, i64 %idxprom.i1123
  store i8 %conv.i1120, i8* %arrayidx.i1125, align 1, !tbaa !5
  %conv1.i1126 = trunc i64 %shr248 to i8
  %91 = load i32* %pending.i, align 4, !tbaa !76
  %inc3.i1127 = add i32 %91, 1
  store i32 %inc3.i1127, i32* %pending.i, align 4, !tbaa !76
  %idxprom4.i1128 = zext i32 %91 to i64
  %92 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx6.i1129 = getelementptr inbounds i8* %92, i64 %idxprom4.i1128
  store i8 %conv1.i1126, i8* %arrayidx6.i1129, align 1, !tbaa !5
  %93 = load i64* %adler255.pre, align 8, !tbaa !78
  %.tr1111 = trunc i64 %93 to i32
  %shr.i1172 = lshr i32 %.tr1111, 8
  %conv.i1173 = trunc i32 %shr.i1172 to i8
  %94 = load i32* %pending.i, align 4, !tbaa !76
  %inc.i1175 = add i32 %94, 1
  store i32 %inc.i1175, i32* %pending.i, align 4, !tbaa !76
  %idxprom.i1176 = zext i32 %94 to i64
  %95 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx.i1178 = getelementptr inbounds i8* %95, i64 %idxprom.i1176
  store i8 %conv.i1173, i8* %arrayidx.i1178, align 1, !tbaa !5
  %conv1.i1179 = trunc i64 %93 to i8
  %96 = load i32* %pending.i, align 4, !tbaa !76
  %inc3.i1180 = add i32 %96, 1
  store i32 %inc3.i1180, i32* %pending.i, align 4, !tbaa !76
  %idxprom4.i1181 = zext i32 %96 to i64
  %97 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx6.i1182 = getelementptr inbounds i8* %97, i64 %idxprom4.i1181
  store i8 %conv1.i1179, i8* %arrayidx6.i1182, align 1, !tbaa !5
  br label %if.end253

if.end253:                                        ; preds = %if.then246, %if.end233
  %call254 = tail call i64 @adler32(i64 0, i8* null, i32 0) #4
  store i64 %call254, i64* %adler255.pre, align 8, !tbaa !78
  %.pr = load i32* %status, align 4, !tbaa !68
  br label %if.end257

if.end257:                                        ; preds = %if.end253, %if.end20
  %98 = phi i32 [ %.pr, %if.end253 ], [ %4, %if.end20 ]
  %cmp259 = icmp eq i32 %98, 69
  br i1 %cmp259, label %if.end257.if.then261_crit_edge, label %if.end344

if.end257.if.then261_crit_edge:                   ; preds = %if.end257
  %gzhead262.pre = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 7
  br label %if.then261

if.then261:                                       ; preds = %if.end257.if.then261_crit_edge, %if.end257.thread
  %gzhead262.pre-phi = phi %struct.gz_header_s** [ %gzhead262.pre, %if.end257.if.then261_crit_edge ], [ %gzhead, %if.end257.thread ]
  %99 = load %struct.gz_header_s** %gzhead262.pre-phi, align 8, !tbaa !53
  %extra263 = getelementptr inbounds %struct.gz_header_s* %99, i64 0, i32 4
  %100 = load i8** %extra263, align 8, !tbaa !105
  %cmp264 = icmp eq i8* %100, null
  br i1 %cmp264, label %if.else341, label %if.then266

if.then266:                                       ; preds = %if.then261
  %pending267 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %101 = load i32* %pending267, align 4, !tbaa !76
  %gzindex268 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 8
  %102 = load i32* %gzindex268, align 4, !tbaa !111
  %extra_len2701359 = getelementptr inbounds %struct.gz_header_s* %99, i64 0, i32 5
  %103 = load i32* %extra_len2701359, align 4, !tbaa !110
  %and2711360 = and i32 %103, 65535
  %cmp2721361 = icmp ult i32 %102, %and2711360
  br i1 %cmp2721361, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %if.then266
  %pending_buf_size = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 3
  %adler287 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  %pending_buf288 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %total_out.i1194 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  br label %while.body

while.body:                                       ; preds = %if.end302.while.body_crit_edge, %while.body.lr.ph
  %104 = phi i32 [ %102, %while.body.lr.ph ], [ %inc314, %if.end302.while.body_crit_edge ]
  %105 = phi i32 [ %101, %while.body.lr.ph ], [ %.pre1367, %if.end302.while.body_crit_edge ]
  %106 = phi %struct.gz_header_s* [ %99, %while.body.lr.ph ], [ %131, %if.end302.while.body_crit_edge ]
  %beg.01362 = phi i32 [ %101, %while.body.lr.ph ], [ %beg.1, %if.end302.while.body_crit_edge ]
  %conv275 = zext i32 %105 to i64
  %107 = load i64* %pending_buf_size, align 8, !tbaa !67
  %cmp276 = icmp eq i64 %conv275, %107
  br i1 %cmp276, label %if.then278, label %if.end302

if.then278:                                       ; preds = %while.body
  %hcrc280 = getelementptr inbounds %struct.gz_header_s* %106, i64 0, i32 11
  %108 = load i32* %hcrc280, align 4, !tbaa !104
  %tobool281 = icmp ne i32 %108, 0
  %cmp284 = icmp ugt i32 %105, %beg.01362
  %or.cond1113 = and i1 %tobool281, %cmp284
  br i1 %or.cond1113, label %if.then286, label %if.end293

if.then286:                                       ; preds = %if.then278
  %109 = load i64* %adler287, align 8, !tbaa !78
  %110 = load i8** %pending_buf288, align 8, !tbaa !66
  %idx.ext = zext i32 %beg.01362 to i64
  %add.ptr = getelementptr inbounds i8* %110, i64 %idx.ext
  %sub290 = sub i32 %105, %beg.01362
  %call291 = tail call i64 @crc32(i64 %109, i8* %add.ptr, i32 %sub290) #4
  store i64 %call291, i64* %adler287, align 8, !tbaa !78
  br label %if.end293

if.end293:                                        ; preds = %if.then286, %if.then278
  %111 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %111) #4
  %pending.i1184 = getelementptr inbounds %struct.internal_state.11* %111, i64 0, i32 5
  %112 = load i32* %pending.i1184, align 4, !tbaa !76
  %113 = load i32* %avail_out, align 4, !tbaa !33
  %cmp.i1186 = icmp ugt i32 %112, %113
  %..i1187 = select i1 %cmp.i1186, i32 %113, i32 %112
  %cmp2.i1188 = icmp eq i32 %..i1187, 0
  br i1 %cmp2.i1188, label %flush_pending.exit1202, label %if.end4.i1199

if.end4.i1199:                                    ; preds = %if.end293
  %114 = load i8** %next_out, align 8, !tbaa !34
  %pending_out.i1190 = getelementptr inbounds %struct.internal_state.11* %111, i64 0, i32 4
  %115 = load i8** %pending_out.i1190, align 8, !tbaa !77
  %conv.i1191 = zext i32 %..i1187 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 %conv.i1191, i32 1, i1 false) #4
  %116 = load i8** %next_out, align 8, !tbaa !34
  %add.ptr.i1192 = getelementptr inbounds i8* %116, i64 %conv.i1191
  store i8* %add.ptr.i1192, i8** %next_out, align 8, !tbaa !34
  %117 = load i8** %pending_out.i1190, align 8, !tbaa !77
  %add.ptr8.i1193 = getelementptr inbounds i8* %117, i64 %conv.i1191
  store i8* %add.ptr8.i1193, i8** %pending_out.i1190, align 8, !tbaa !77
  %118 = load i64* %total_out.i1194, align 8, !tbaa !112
  %add.i1195 = add i64 %118, %conv.i1191
  store i64 %add.i1195, i64* %total_out.i1194, align 8, !tbaa !112
  %119 = load i32* %avail_out, align 4, !tbaa !33
  %sub.i1196 = sub i32 %119, %..i1187
  store i32 %sub.i1196, i32* %avail_out, align 4, !tbaa !33
  %120 = load i32* %pending.i1184, align 4, !tbaa !76
  %sub12.i1197 = sub i32 %120, %..i1187
  store i32 %sub12.i1197, i32* %pending.i1184, align 4, !tbaa !76
  %cmp14.i1198 = icmp eq i32 %120, %..i1187
  br i1 %cmp14.i1198, label %if.then16.i1201, label %flush_pending.exit1202

if.then16.i1201:                                  ; preds = %if.end4.i1199
  %pending_buf.i1200 = getelementptr inbounds %struct.internal_state.11* %111, i64 0, i32 2
  %121 = load i8** %pending_buf.i1200, align 8, !tbaa !66
  store i8* %121, i8** %pending_out.i1190, align 8, !tbaa !77
  br label %flush_pending.exit1202

flush_pending.exit1202:                           ; preds = %if.then16.i1201, %if.end4.i1199, %if.end293
  %122 = load i32* %pending267, align 4, !tbaa !76
  %conv296 = zext i32 %122 to i64
  %123 = load i64* %pending_buf_size, align 8, !tbaa !67
  %cmp298 = icmp eq i64 %conv296, %123
  br i1 %cmp298, label %flush_pending.exit1202.while.end_crit_edge, label %flush_pending.exit1202.if.end302_crit_edge

flush_pending.exit1202.if.end302_crit_edge:       ; preds = %flush_pending.exit1202
  %.pre1368 = load i32* %gzindex268, align 4, !tbaa !111
  %.pre1369 = load %struct.gz_header_s** %gzhead262.pre-phi, align 8, !tbaa !53
  br label %if.end302

if.end302:                                        ; preds = %flush_pending.exit1202.if.end302_crit_edge, %while.body
  %124 = phi i32 [ %122, %flush_pending.exit1202.if.end302_crit_edge ], [ %105, %while.body ]
  %125 = phi %struct.gz_header_s* [ %.pre1369, %flush_pending.exit1202.if.end302_crit_edge ], [ %106, %while.body ]
  %126 = phi i32 [ %.pre1368, %flush_pending.exit1202.if.end302_crit_edge ], [ %104, %while.body ]
  %beg.1 = phi i32 [ %122, %flush_pending.exit1202.if.end302_crit_edge ], [ %beg.01362, %while.body ]
  %idxprom304 = zext i32 %126 to i64
  %extra306 = getelementptr inbounds %struct.gz_header_s* %125, i64 0, i32 4
  %127 = load i8** %extra306, align 8, !tbaa !105
  %arrayidx307 = getelementptr inbounds i8* %127, i64 %idxprom304
  %128 = load i8* %arrayidx307, align 1, !tbaa !5
  %inc309 = add i32 %124, 1
  store i32 %inc309, i32* %pending267, align 4, !tbaa !76
  %idxprom310 = zext i32 %124 to i64
  %129 = load i8** %pending_buf288, align 8, !tbaa !66
  %arrayidx312 = getelementptr inbounds i8* %129, i64 %idxprom310
  store i8 %128, i8* %arrayidx312, align 1, !tbaa !5
  %130 = load i32* %gzindex268, align 4, !tbaa !111
  %inc314 = add i32 %130, 1
  store i32 %inc314, i32* %gzindex268, align 4, !tbaa !111
  %131 = load %struct.gz_header_s** %gzhead262.pre-phi, align 8, !tbaa !53
  %extra_len270 = getelementptr inbounds %struct.gz_header_s* %131, i64 0, i32 5
  %132 = load i32* %extra_len270, align 4, !tbaa !110
  %and271 = and i32 %132, 65535
  %cmp272 = icmp ult i32 %inc314, %and271
  br i1 %cmp272, label %if.end302.while.body_crit_edge, label %while.end.loopexit

if.end302.while.body_crit_edge:                   ; preds = %if.end302
  %.pre1367 = load i32* %pending267, align 4, !tbaa !76
  br label %while.body

flush_pending.exit1202.while.end_crit_edge:       ; preds = %flush_pending.exit1202
  %.lcssa = phi i32 [ %122, %flush_pending.exit1202 ]
  %.pre1370 = load %struct.gz_header_s** %gzhead262.pre-phi, align 8, !tbaa !53
  br label %while.end

while.end.loopexit:                               ; preds = %if.end302
  %.lcssa1382 = phi %struct.gz_header_s* [ %131, %if.end302 ]
  %beg.1.lcssa = phi i32 [ %beg.1, %if.end302 ]
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %flush_pending.exit1202.while.end_crit_edge, %if.then266
  %133 = phi %struct.gz_header_s* [ %.pre1370, %flush_pending.exit1202.while.end_crit_edge ], [ %99, %if.then266 ], [ %.lcssa1382, %while.end.loopexit ]
  %beg.2 = phi i32 [ %.lcssa, %flush_pending.exit1202.while.end_crit_edge ], [ %101, %if.then266 ], [ %beg.1.lcssa, %while.end.loopexit ]
  %hcrc316 = getelementptr inbounds %struct.gz_header_s* %133, i64 0, i32 11
  %134 = load i32* %hcrc316, align 4, !tbaa !104
  %tobool317 = icmp eq i32 %134, 0
  br i1 %tobool317, label %if.end331, label %land.lhs.true318

land.lhs.true318:                                 ; preds = %while.end
  %135 = load i32* %pending267, align 4, !tbaa !76
  %cmp320 = icmp ugt i32 %135, %beg.2
  br i1 %cmp320, label %if.then322, label %if.end331

if.then322:                                       ; preds = %land.lhs.true318
  %adler323 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  %136 = load i64* %adler323, align 8, !tbaa !78
  %pending_buf324 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %137 = load i8** %pending_buf324, align 8, !tbaa !66
  %idx.ext325 = zext i32 %beg.2 to i64
  %add.ptr326 = getelementptr inbounds i8* %137, i64 %idx.ext325
  %sub328 = sub i32 %135, %beg.2
  %call329 = tail call i64 @crc32(i64 %136, i8* %add.ptr326, i32 %sub328) #4
  store i64 %call329, i64* %adler323, align 8, !tbaa !78
  %.pre1371 = load %struct.gz_header_s** %gzhead262.pre-phi, align 8, !tbaa !53
  br label %if.end331

if.end331:                                        ; preds = %if.then322, %land.lhs.true318, %while.end
  %138 = phi %struct.gz_header_s* [ %133, %while.end ], [ %.pre1371, %if.then322 ], [ %133, %land.lhs.true318 ]
  %139 = load i32* %gzindex268, align 4, !tbaa !111
  %extra_len334 = getelementptr inbounds %struct.gz_header_s* %138, i64 0, i32 5
  %140 = load i32* %extra_len334, align 4, !tbaa !110
  %cmp335 = icmp eq i32 %139, %140
  br i1 %cmp335, label %if.then337, label %if.end331.if.end344_crit_edge

if.end331.if.end344_crit_edge:                    ; preds = %if.end331
  %.pr1338.pr.pre = load i32* %status, align 4, !tbaa !68
  br label %if.end344

if.then337:                                       ; preds = %if.end331
  store i32 0, i32* %gzindex268, align 4, !tbaa !111
  store i32 73, i32* %status, align 4, !tbaa !68
  br label %if.then348

if.else341:                                       ; preds = %if.then261
  store i32 73, i32* %status, align 4, !tbaa !68
  br label %if.then348

if.end344:                                        ; preds = %if.end331.if.end344_crit_edge, %if.end257
  %.pr1338.pr = phi i32 [ %.pr1338.pr.pre, %if.end331.if.end344_crit_edge ], [ %98, %if.end257 ]
  %cmp346 = icmp eq i32 %.pr1338.pr, 73
  br i1 %cmp346, label %if.end344.if.then348_crit_edge, label %if.end429

if.end344.if.then348_crit_edge:                   ; preds = %if.end344
  %gzhead349.phi.trans.insert = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 7
  %.pre1372 = load %struct.gz_header_s** %gzhead349.phi.trans.insert, align 8, !tbaa !53
  br label %if.then348

if.then348:                                       ; preds = %if.end344.if.then348_crit_edge, %if.else341, %if.then337
  %141 = phi %struct.gz_header_s* [ %.pre1372, %if.end344.if.then348_crit_edge ], [ %138, %if.then337 ], [ %99, %if.else341 ]
  %gzhead349 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 7
  %name350 = getelementptr inbounds %struct.gz_header_s* %141, i64 0, i32 7
  %142 = load i8** %name350, align 8, !tbaa !106
  %cmp351 = icmp eq i8* %142, null
  br i1 %cmp351, label %if.else426, label %if.then353

if.then353:                                       ; preds = %if.then348
  %pending355 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %143 = load i32* %pending355, align 4, !tbaa !76
  %pending_buf_size358 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 3
  %adler370 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  %pending_buf371 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %total_out.i1214 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  %gzindex388 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 8
  br label %do.body

do.body:                                          ; preds = %if.end387.do.body_crit_edge, %if.then353
  %144 = phi i32 [ %143, %if.then353 ], [ %.pre1373, %if.end387.do.body_crit_edge ]
  %beg354.0 = phi i32 [ %143, %if.then353 ], [ %beg354.1, %if.end387.do.body_crit_edge ]
  %conv357 = zext i32 %144 to i64
  %145 = load i64* %pending_buf_size358, align 8, !tbaa !67
  %cmp359 = icmp eq i64 %conv357, %145
  br i1 %cmp359, label %if.then361, label %if.end387

if.then361:                                       ; preds = %do.body
  %146 = load %struct.gz_header_s** %gzhead349, align 8, !tbaa !53
  %hcrc363 = getelementptr inbounds %struct.gz_header_s* %146, i64 0, i32 11
  %147 = load i32* %hcrc363, align 4, !tbaa !104
  %tobool364 = icmp ne i32 %147, 0
  %cmp367 = icmp ugt i32 %144, %beg354.0
  %or.cond1114 = and i1 %tobool364, %cmp367
  br i1 %or.cond1114, label %if.then369, label %if.end378

if.then369:                                       ; preds = %if.then361
  %148 = load i64* %adler370, align 8, !tbaa !78
  %149 = load i8** %pending_buf371, align 8, !tbaa !66
  %idx.ext372 = zext i32 %beg354.0 to i64
  %add.ptr373 = getelementptr inbounds i8* %149, i64 %idx.ext372
  %sub375 = sub i32 %144, %beg354.0
  %call376 = tail call i64 @crc32(i64 %148, i8* %add.ptr373, i32 %sub375) #4
  store i64 %call376, i64* %adler370, align 8, !tbaa !78
  br label %if.end378

if.end378:                                        ; preds = %if.then369, %if.then361
  %150 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %150) #4
  %pending.i1204 = getelementptr inbounds %struct.internal_state.11* %150, i64 0, i32 5
  %151 = load i32* %pending.i1204, align 4, !tbaa !76
  %152 = load i32* %avail_out, align 4, !tbaa !33
  %cmp.i1206 = icmp ugt i32 %151, %152
  %..i1207 = select i1 %cmp.i1206, i32 %152, i32 %151
  %cmp2.i1208 = icmp eq i32 %..i1207, 0
  br i1 %cmp2.i1208, label %flush_pending.exit1222, label %if.end4.i1219

if.end4.i1219:                                    ; preds = %if.end378
  %153 = load i8** %next_out, align 8, !tbaa !34
  %pending_out.i1210 = getelementptr inbounds %struct.internal_state.11* %150, i64 0, i32 4
  %154 = load i8** %pending_out.i1210, align 8, !tbaa !77
  %conv.i1211 = zext i32 %..i1207 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %153, i8* %154, i64 %conv.i1211, i32 1, i1 false) #4
  %155 = load i8** %next_out, align 8, !tbaa !34
  %add.ptr.i1212 = getelementptr inbounds i8* %155, i64 %conv.i1211
  store i8* %add.ptr.i1212, i8** %next_out, align 8, !tbaa !34
  %156 = load i8** %pending_out.i1210, align 8, !tbaa !77
  %add.ptr8.i1213 = getelementptr inbounds i8* %156, i64 %conv.i1211
  store i8* %add.ptr8.i1213, i8** %pending_out.i1210, align 8, !tbaa !77
  %157 = load i64* %total_out.i1214, align 8, !tbaa !112
  %add.i1215 = add i64 %157, %conv.i1211
  store i64 %add.i1215, i64* %total_out.i1214, align 8, !tbaa !112
  %158 = load i32* %avail_out, align 4, !tbaa !33
  %sub.i1216 = sub i32 %158, %..i1207
  store i32 %sub.i1216, i32* %avail_out, align 4, !tbaa !33
  %159 = load i32* %pending.i1204, align 4, !tbaa !76
  %sub12.i1217 = sub i32 %159, %..i1207
  store i32 %sub12.i1217, i32* %pending.i1204, align 4, !tbaa !76
  %cmp14.i1218 = icmp eq i32 %159, %..i1207
  br i1 %cmp14.i1218, label %if.then16.i1221, label %flush_pending.exit1222

if.then16.i1221:                                  ; preds = %if.end4.i1219
  %pending_buf.i1220 = getelementptr inbounds %struct.internal_state.11* %150, i64 0, i32 2
  %160 = load i8** %pending_buf.i1220, align 8, !tbaa !66
  store i8* %160, i8** %pending_out.i1210, align 8, !tbaa !77
  br label %flush_pending.exit1222

flush_pending.exit1222:                           ; preds = %if.then16.i1221, %if.end4.i1219, %if.end378
  %161 = load i32* %pending355, align 4, !tbaa !76
  %conv381 = zext i32 %161 to i64
  %162 = load i64* %pending_buf_size358, align 8, !tbaa !67
  %cmp383 = icmp eq i64 %conv381, %162
  br i1 %cmp383, label %do.end, label %if.end387

if.end387:                                        ; preds = %flush_pending.exit1222, %do.body
  %163 = phi i32 [ %161, %flush_pending.exit1222 ], [ %144, %do.body ]
  %beg354.1 = phi i32 [ %161, %flush_pending.exit1222 ], [ %beg354.0, %do.body ]
  %164 = load i32* %gzindex388, align 4, !tbaa !111
  %inc389 = add i32 %164, 1
  store i32 %inc389, i32* %gzindex388, align 4, !tbaa !111
  %idxprom390 = zext i32 %164 to i64
  %165 = load %struct.gz_header_s** %gzhead349, align 8, !tbaa !53
  %name392 = getelementptr inbounds %struct.gz_header_s* %165, i64 0, i32 7
  %166 = load i8** %name392, align 8, !tbaa !106
  %arrayidx393 = getelementptr inbounds i8* %166, i64 %idxprom390
  %167 = load i8* %arrayidx393, align 1, !tbaa !5
  %conv394 = zext i8 %167 to i32
  %inc397 = add i32 %163, 1
  store i32 %inc397, i32* %pending355, align 4, !tbaa !76
  %idxprom398 = zext i32 %163 to i64
  %168 = load i8** %pending_buf371, align 8, !tbaa !66
  %arrayidx400 = getelementptr inbounds i8* %168, i64 %idxprom398
  store i8 %167, i8* %arrayidx400, align 1, !tbaa !5
  %cmp401 = icmp eq i8 %167, 0
  br i1 %cmp401, label %do.end, label %if.end387.do.body_crit_edge

if.end387.do.body_crit_edge:                      ; preds = %if.end387
  %.pre1373 = load i32* %pending355, align 4, !tbaa !76
  br label %do.body

do.end:                                           ; preds = %if.end387, %flush_pending.exit1222
  %beg354.2 = phi i32 [ %beg354.1, %if.end387 ], [ %161, %flush_pending.exit1222 ]
  %val.0 = phi i32 [ %conv394, %if.end387 ], [ 1, %flush_pending.exit1222 ]
  %169 = load %struct.gz_header_s** %gzhead349, align 8, !tbaa !53
  %hcrc404 = getelementptr inbounds %struct.gz_header_s* %169, i64 0, i32 11
  %170 = load i32* %hcrc404, align 4, !tbaa !104
  %tobool405 = icmp eq i32 %170, 0
  br i1 %tobool405, label %if.end419, label %land.lhs.true406

land.lhs.true406:                                 ; preds = %do.end
  %171 = load i32* %pending355, align 4, !tbaa !76
  %cmp408 = icmp ugt i32 %171, %beg354.2
  br i1 %cmp408, label %if.then410, label %if.end419

if.then410:                                       ; preds = %land.lhs.true406
  %172 = load i64* %adler370, align 8, !tbaa !78
  %173 = load i8** %pending_buf371, align 8, !tbaa !66
  %idx.ext413 = zext i32 %beg354.2 to i64
  %add.ptr414 = getelementptr inbounds i8* %173, i64 %idx.ext413
  %sub416 = sub i32 %171, %beg354.2
  %call417 = tail call i64 @crc32(i64 %172, i8* %add.ptr414, i32 %sub416) #4
  store i64 %call417, i64* %adler370, align 8, !tbaa !78
  br label %if.end419

if.end419:                                        ; preds = %if.then410, %land.lhs.true406, %do.end
  %cmp420 = icmp eq i32 %val.0, 0
  br i1 %cmp420, label %if.then422, label %if.end429thread-pre-split

if.then422:                                       ; preds = %if.end419
  store i32 0, i32* %gzindex388, align 4, !tbaa !111
  store i32 91, i32* %status, align 4, !tbaa !68
  br label %if.then433

if.else426:                                       ; preds = %if.then348
  store i32 91, i32* %status, align 4, !tbaa !68
  br label %if.then433

if.end429thread-pre-split:                        ; preds = %if.end419
  %.pr1340 = load i32* %status, align 4, !tbaa !68
  br label %if.end429

if.end429:                                        ; preds = %if.end429thread-pre-split, %if.end344
  %174 = phi i32 [ %.pr1340, %if.end429thread-pre-split ], [ %.pr1338.pr, %if.end344 ]
  %cmp431 = icmp eq i32 %174, 91
  br i1 %cmp431, label %if.end429.if.then433_crit_edge, label %if.end517

if.end429.if.then433_crit_edge:                   ; preds = %if.end429
  %gzhead434.pre = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 7
  br label %if.then433

if.then433:                                       ; preds = %if.end429.if.then433_crit_edge, %if.else426, %if.then422
  %gzhead434.pre-phi = phi %struct.gz_header_s** [ %gzhead434.pre, %if.end429.if.then433_crit_edge ], [ %gzhead349, %if.then422 ], [ %gzhead349, %if.else426 ]
  %175 = load %struct.gz_header_s** %gzhead434.pre-phi, align 8, !tbaa !53
  %comment435 = getelementptr inbounds %struct.gz_header_s* %175, i64 0, i32 9
  %176 = load i8** %comment435, align 8, !tbaa !107
  %cmp436 = icmp eq i8* %176, null
  br i1 %cmp436, label %if.else514, label %if.then438

if.then438:                                       ; preds = %if.then433
  %pending440 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %177 = load i32* %pending440, align 4, !tbaa !76
  %pending_buf_size445 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 3
  %adler457 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  %pending_buf458 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %total_out.i1234 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  %gzindex475 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 8
  br label %do.body442

do.body442:                                       ; preds = %if.end474.do.body442_crit_edge, %if.then438
  %178 = phi i32 [ %177, %if.then438 ], [ %.pre1374, %if.end474.do.body442_crit_edge ]
  %beg439.0 = phi i32 [ %177, %if.then438 ], [ %beg439.1, %if.end474.do.body442_crit_edge ]
  %conv444 = zext i32 %178 to i64
  %179 = load i64* %pending_buf_size445, align 8, !tbaa !67
  %cmp446 = icmp eq i64 %conv444, %179
  br i1 %cmp446, label %if.then448, label %if.end474

if.then448:                                       ; preds = %do.body442
  %180 = load %struct.gz_header_s** %gzhead434.pre-phi, align 8, !tbaa !53
  %hcrc450 = getelementptr inbounds %struct.gz_header_s* %180, i64 0, i32 11
  %181 = load i32* %hcrc450, align 4, !tbaa !104
  %tobool451 = icmp ne i32 %181, 0
  %cmp454 = icmp ugt i32 %178, %beg439.0
  %or.cond1115 = and i1 %tobool451, %cmp454
  br i1 %or.cond1115, label %if.then456, label %if.end465

if.then456:                                       ; preds = %if.then448
  %182 = load i64* %adler457, align 8, !tbaa !78
  %183 = load i8** %pending_buf458, align 8, !tbaa !66
  %idx.ext459 = zext i32 %beg439.0 to i64
  %add.ptr460 = getelementptr inbounds i8* %183, i64 %idx.ext459
  %sub462 = sub i32 %178, %beg439.0
  %call463 = tail call i64 @crc32(i64 %182, i8* %add.ptr460, i32 %sub462) #4
  store i64 %call463, i64* %adler457, align 8, !tbaa !78
  br label %if.end465

if.end465:                                        ; preds = %if.then456, %if.then448
  %184 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %184) #4
  %pending.i1224 = getelementptr inbounds %struct.internal_state.11* %184, i64 0, i32 5
  %185 = load i32* %pending.i1224, align 4, !tbaa !76
  %186 = load i32* %avail_out, align 4, !tbaa !33
  %cmp.i1226 = icmp ugt i32 %185, %186
  %..i1227 = select i1 %cmp.i1226, i32 %186, i32 %185
  %cmp2.i1228 = icmp eq i32 %..i1227, 0
  br i1 %cmp2.i1228, label %flush_pending.exit1242, label %if.end4.i1239

if.end4.i1239:                                    ; preds = %if.end465
  %187 = load i8** %next_out, align 8, !tbaa !34
  %pending_out.i1230 = getelementptr inbounds %struct.internal_state.11* %184, i64 0, i32 4
  %188 = load i8** %pending_out.i1230, align 8, !tbaa !77
  %conv.i1231 = zext i32 %..i1227 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %187, i8* %188, i64 %conv.i1231, i32 1, i1 false) #4
  %189 = load i8** %next_out, align 8, !tbaa !34
  %add.ptr.i1232 = getelementptr inbounds i8* %189, i64 %conv.i1231
  store i8* %add.ptr.i1232, i8** %next_out, align 8, !tbaa !34
  %190 = load i8** %pending_out.i1230, align 8, !tbaa !77
  %add.ptr8.i1233 = getelementptr inbounds i8* %190, i64 %conv.i1231
  store i8* %add.ptr8.i1233, i8** %pending_out.i1230, align 8, !tbaa !77
  %191 = load i64* %total_out.i1234, align 8, !tbaa !112
  %add.i1235 = add i64 %191, %conv.i1231
  store i64 %add.i1235, i64* %total_out.i1234, align 8, !tbaa !112
  %192 = load i32* %avail_out, align 4, !tbaa !33
  %sub.i1236 = sub i32 %192, %..i1227
  store i32 %sub.i1236, i32* %avail_out, align 4, !tbaa !33
  %193 = load i32* %pending.i1224, align 4, !tbaa !76
  %sub12.i1237 = sub i32 %193, %..i1227
  store i32 %sub12.i1237, i32* %pending.i1224, align 4, !tbaa !76
  %cmp14.i1238 = icmp eq i32 %193, %..i1227
  br i1 %cmp14.i1238, label %if.then16.i1241, label %flush_pending.exit1242

if.then16.i1241:                                  ; preds = %if.end4.i1239
  %pending_buf.i1240 = getelementptr inbounds %struct.internal_state.11* %184, i64 0, i32 2
  %194 = load i8** %pending_buf.i1240, align 8, !tbaa !66
  store i8* %194, i8** %pending_out.i1230, align 8, !tbaa !77
  br label %flush_pending.exit1242

flush_pending.exit1242:                           ; preds = %if.then16.i1241, %if.end4.i1239, %if.end465
  %195 = load i32* %pending440, align 4, !tbaa !76
  %conv468 = zext i32 %195 to i64
  %196 = load i64* %pending_buf_size445, align 8, !tbaa !67
  %cmp470 = icmp eq i64 %conv468, %196
  br i1 %cmp470, label %do.end491, label %if.end474

if.end474:                                        ; preds = %flush_pending.exit1242, %do.body442
  %197 = phi i32 [ %195, %flush_pending.exit1242 ], [ %178, %do.body442 ]
  %beg439.1 = phi i32 [ %195, %flush_pending.exit1242 ], [ %beg439.0, %do.body442 ]
  %198 = load i32* %gzindex475, align 4, !tbaa !111
  %inc476 = add i32 %198, 1
  store i32 %inc476, i32* %gzindex475, align 4, !tbaa !111
  %idxprom477 = zext i32 %198 to i64
  %199 = load %struct.gz_header_s** %gzhead434.pre-phi, align 8, !tbaa !53
  %comment479 = getelementptr inbounds %struct.gz_header_s* %199, i64 0, i32 9
  %200 = load i8** %comment479, align 8, !tbaa !107
  %arrayidx480 = getelementptr inbounds i8* %200, i64 %idxprom477
  %201 = load i8* %arrayidx480, align 1, !tbaa !5
  %conv481 = zext i8 %201 to i32
  %inc484 = add i32 %197, 1
  store i32 %inc484, i32* %pending440, align 4, !tbaa !76
  %idxprom485 = zext i32 %197 to i64
  %202 = load i8** %pending_buf458, align 8, !tbaa !66
  %arrayidx487 = getelementptr inbounds i8* %202, i64 %idxprom485
  store i8 %201, i8* %arrayidx487, align 1, !tbaa !5
  %cmp489 = icmp eq i8 %201, 0
  br i1 %cmp489, label %do.end491, label %if.end474.do.body442_crit_edge

if.end474.do.body442_crit_edge:                   ; preds = %if.end474
  %.pre1374 = load i32* %pending440, align 4, !tbaa !76
  br label %do.body442

do.end491:                                        ; preds = %if.end474, %flush_pending.exit1242
  %beg439.2 = phi i32 [ %beg439.1, %if.end474 ], [ %195, %flush_pending.exit1242 ]
  %val441.0 = phi i32 [ %conv481, %if.end474 ], [ 1, %flush_pending.exit1242 ]
  %203 = load %struct.gz_header_s** %gzhead434.pre-phi, align 8, !tbaa !53
  %hcrc493 = getelementptr inbounds %struct.gz_header_s* %203, i64 0, i32 11
  %204 = load i32* %hcrc493, align 4, !tbaa !104
  %tobool494 = icmp eq i32 %204, 0
  br i1 %tobool494, label %if.end508, label %land.lhs.true495

land.lhs.true495:                                 ; preds = %do.end491
  %205 = load i32* %pending440, align 4, !tbaa !76
  %cmp497 = icmp ugt i32 %205, %beg439.2
  br i1 %cmp497, label %if.then499, label %if.end508

if.then499:                                       ; preds = %land.lhs.true495
  %206 = load i64* %adler457, align 8, !tbaa !78
  %207 = load i8** %pending_buf458, align 8, !tbaa !66
  %idx.ext502 = zext i32 %beg439.2 to i64
  %add.ptr503 = getelementptr inbounds i8* %207, i64 %idx.ext502
  %sub505 = sub i32 %205, %beg439.2
  %call506 = tail call i64 @crc32(i64 %206, i8* %add.ptr503, i32 %sub505) #4
  store i64 %call506, i64* %adler457, align 8, !tbaa !78
  br label %if.end508

if.end508:                                        ; preds = %if.then499, %land.lhs.true495, %do.end491
  %cmp509 = icmp eq i32 %val441.0, 0
  br i1 %cmp509, label %if.then511, label %if.end508.if.end517_crit_edge

if.end508.if.end517_crit_edge:                    ; preds = %if.end508
  %.pr1342.pr.pre = load i32* %status, align 4, !tbaa !68
  br label %if.end517

if.then511:                                       ; preds = %if.end508
  store i32 103, i32* %status, align 4, !tbaa !68
  br label %if.then521

if.else514:                                       ; preds = %if.then433
  store i32 103, i32* %status, align 4, !tbaa !68
  br label %if.then521

if.end517:                                        ; preds = %if.end508.if.end517_crit_edge, %if.end429
  %.pr1342.pr = phi i32 [ %.pr1342.pr.pre, %if.end508.if.end517_crit_edge ], [ %174, %if.end429 ]
  %cmp519 = icmp eq i32 %.pr1342.pr, 103
  br i1 %cmp519, label %if.end517.if.then521_crit_edge, label %if.end565

if.end517.if.then521_crit_edge:                   ; preds = %if.end517
  %gzhead522.pre = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 7
  br label %if.then521

if.then521:                                       ; preds = %if.end517.if.then521_crit_edge, %if.else514, %if.then511
  %gzhead522.pre-phi = phi %struct.gz_header_s** [ %gzhead522.pre, %if.end517.if.then521_crit_edge ], [ %gzhead434.pre-phi, %if.then511 ], [ %gzhead434.pre-phi, %if.else514 ]
  %208 = load %struct.gz_header_s** %gzhead522.pre-phi, align 8, !tbaa !53
  %hcrc523 = getelementptr inbounds %struct.gz_header_s* %208, i64 0, i32 11
  %209 = load i32* %hcrc523, align 4, !tbaa !104
  %tobool524 = icmp eq i32 %209, 0
  br i1 %tobool524, label %if.else562, label %if.then525

if.then525:                                       ; preds = %if.then521
  %pending526 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %210 = load i32* %pending526, align 4, !tbaa !76
  %add527 = add i32 %210, 2
  %conv528 = zext i32 %add527 to i64
  %pending_buf_size529 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 3
  %211 = load i64* %pending_buf_size529, align 8, !tbaa !67
  %cmp530 = icmp ugt i64 %conv528, %211
  br i1 %cmp530, label %if.then532, label %if.end533

if.then532:                                       ; preds = %if.then525
  %212 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %212) #4
  %pending.i1244 = getelementptr inbounds %struct.internal_state.11* %212, i64 0, i32 5
  %213 = load i32* %pending.i1244, align 4, !tbaa !76
  %214 = load i32* %avail_out, align 4, !tbaa !33
  %cmp.i1246 = icmp ugt i32 %213, %214
  %..i1247 = select i1 %cmp.i1246, i32 %214, i32 %213
  %cmp2.i1248 = icmp eq i32 %..i1247, 0
  br i1 %cmp2.i1248, label %if.end533, label %if.end4.i1259

if.end4.i1259:                                    ; preds = %if.then532
  %215 = load i8** %next_out, align 8, !tbaa !34
  %pending_out.i1250 = getelementptr inbounds %struct.internal_state.11* %212, i64 0, i32 4
  %216 = load i8** %pending_out.i1250, align 8, !tbaa !77
  %conv.i1251 = zext i32 %..i1247 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %215, i8* %216, i64 %conv.i1251, i32 1, i1 false) #4
  %217 = load i8** %next_out, align 8, !tbaa !34
  %add.ptr.i1252 = getelementptr inbounds i8* %217, i64 %conv.i1251
  store i8* %add.ptr.i1252, i8** %next_out, align 8, !tbaa !34
  %218 = load i8** %pending_out.i1250, align 8, !tbaa !77
  %add.ptr8.i1253 = getelementptr inbounds i8* %218, i64 %conv.i1251
  store i8* %add.ptr8.i1253, i8** %pending_out.i1250, align 8, !tbaa !77
  %total_out.i1254 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  %219 = load i64* %total_out.i1254, align 8, !tbaa !112
  %add.i1255 = add i64 %219, %conv.i1251
  store i64 %add.i1255, i64* %total_out.i1254, align 8, !tbaa !112
  %220 = load i32* %avail_out, align 4, !tbaa !33
  %sub.i1256 = sub i32 %220, %..i1247
  store i32 %sub.i1256, i32* %avail_out, align 4, !tbaa !33
  %221 = load i32* %pending.i1244, align 4, !tbaa !76
  %sub12.i1257 = sub i32 %221, %..i1247
  store i32 %sub12.i1257, i32* %pending.i1244, align 4, !tbaa !76
  %cmp14.i1258 = icmp eq i32 %221, %..i1247
  br i1 %cmp14.i1258, label %if.then16.i1261, label %if.end533

if.then16.i1261:                                  ; preds = %if.end4.i1259
  %pending_buf.i1260 = getelementptr inbounds %struct.internal_state.11* %212, i64 0, i32 2
  %222 = load i8** %pending_buf.i1260, align 8, !tbaa !66
  store i8* %222, i8** %pending_out.i1250, align 8, !tbaa !77
  br label %if.end533

if.end533:                                        ; preds = %if.then16.i1261, %if.end4.i1259, %if.then532, %if.then525
  %223 = load i32* %pending526, align 4, !tbaa !76
  %add535 = add i32 %223, 2
  %conv536 = zext i32 %add535 to i64
  %224 = load i64* %pending_buf_size529, align 8, !tbaa !67
  %cmp538 = icmp ugt i64 %conv536, %224
  br i1 %cmp538, label %if.end565, label %if.then540

if.then540:                                       ; preds = %if.end533
  %adler541 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  %225 = load i64* %adler541, align 8, !tbaa !78
  %conv543 = trunc i64 %225 to i8
  %inc545 = add i32 %223, 1
  store i32 %inc545, i32* %pending526, align 4, !tbaa !76
  %idxprom546 = zext i32 %223 to i64
  %pending_buf547 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %226 = load i8** %pending_buf547, align 8, !tbaa !66
  %arrayidx548 = getelementptr inbounds i8* %226, i64 %idxprom546
  store i8 %conv543, i8* %arrayidx548, align 1, !tbaa !5
  %227 = load i64* %adler541, align 8, !tbaa !78
  %shr550 = lshr i64 %227, 8
  %conv552 = trunc i64 %shr550 to i8
  %228 = load i32* %pending526, align 4, !tbaa !76
  %inc554 = add i32 %228, 1
  store i32 %inc554, i32* %pending526, align 4, !tbaa !76
  %idxprom555 = zext i32 %228 to i64
  %229 = load i8** %pending_buf547, align 8, !tbaa !66
  %arrayidx557 = getelementptr inbounds i8* %229, i64 %idxprom555
  store i8 %conv552, i8* %arrayidx557, align 1, !tbaa !5
  %call558 = tail call i64 @crc32(i64 0, i8* null, i32 0) #4
  store i64 %call558, i64* %adler541, align 8, !tbaa !78
  store i32 113, i32* %status, align 4, !tbaa !68
  br label %if.end565

if.else562:                                       ; preds = %if.then521
  store i32 113, i32* %status, align 4, !tbaa !68
  br label %if.end565

if.end565:                                        ; preds = %if.else562, %if.then540, %if.end533, %if.end517, %if.end517.thread
  %pending566 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 5
  %230 = load i32* %pending566, align 4, !tbaa !76
  %cmp567 = icmp eq i32 %230, 0
  br i1 %cmp567, label %if.else576, label %if.then569

if.then569:                                       ; preds = %if.end565
  %231 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %231) #4
  %pending.i1264 = getelementptr inbounds %struct.internal_state.11* %231, i64 0, i32 5
  %232 = load i32* %pending.i1264, align 4, !tbaa !76
  %233 = load i32* %avail_out, align 4, !tbaa !33
  %cmp.i1266 = icmp ugt i32 %232, %233
  %..i1267 = select i1 %cmp.i1266, i32 %233, i32 %232
  %cmp2.i1268 = icmp eq i32 %..i1267, 0
  br i1 %cmp2.i1268, label %flush_pending.exit1282, label %if.end4.i1279

if.end4.i1279:                                    ; preds = %if.then569
  %234 = load i8** %next_out, align 8, !tbaa !34
  %pending_out.i1270 = getelementptr inbounds %struct.internal_state.11* %231, i64 0, i32 4
  %235 = load i8** %pending_out.i1270, align 8, !tbaa !77
  %conv.i1271 = zext i32 %..i1267 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %234, i8* %235, i64 %conv.i1271, i32 1, i1 false) #4
  %236 = load i8** %next_out, align 8, !tbaa !34
  %add.ptr.i1272 = getelementptr inbounds i8* %236, i64 %conv.i1271
  store i8* %add.ptr.i1272, i8** %next_out, align 8, !tbaa !34
  %237 = load i8** %pending_out.i1270, align 8, !tbaa !77
  %add.ptr8.i1273 = getelementptr inbounds i8* %237, i64 %conv.i1271
  store i8* %add.ptr8.i1273, i8** %pending_out.i1270, align 8, !tbaa !77
  %total_out.i1274 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  %238 = load i64* %total_out.i1274, align 8, !tbaa !112
  %add.i1275 = add i64 %238, %conv.i1271
  store i64 %add.i1275, i64* %total_out.i1274, align 8, !tbaa !112
  %239 = load i32* %avail_out, align 4, !tbaa !33
  %sub.i1276 = sub i32 %239, %..i1267
  store i32 %sub.i1276, i32* %avail_out, align 4, !tbaa !33
  %240 = load i32* %pending.i1264, align 4, !tbaa !76
  %sub12.i1277 = sub i32 %240, %..i1267
  store i32 %sub12.i1277, i32* %pending.i1264, align 4, !tbaa !76
  %cmp14.i1278 = icmp eq i32 %240, %..i1267
  br i1 %cmp14.i1278, label %if.then16.i1281, label %flush_pending.exit1282

if.then16.i1281:                                  ; preds = %if.end4.i1279
  %pending_buf.i1280 = getelementptr inbounds %struct.internal_state.11* %231, i64 0, i32 2
  %241 = load i8** %pending_buf.i1280, align 8, !tbaa !66
  store i8* %241, i8** %pending_out.i1270, align 8, !tbaa !77
  br label %flush_pending.exit1282

flush_pending.exit1282:                           ; preds = %if.then16.i1281, %if.end4.i1279, %if.then569
  %242 = phi i32 [ %233, %if.then569 ], [ %sub.i1276, %if.then16.i1281 ], [ %sub.i1276, %if.end4.i1279 ]
  %cmp571 = icmp eq i32 %242, 0
  br i1 %cmp571, label %if.then573, label %if.end599

if.then573:                                       ; preds = %flush_pending.exit1282
  store i32 -1, i32* %last_flush, align 4, !tbaa !79
  br label %return

if.else576:                                       ; preds = %if.end565
  %avail_in577 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 1
  %243 = load i32* %avail_in577, align 4, !tbaa !32
  %cmp578 = icmp eq i32 %243, 0
  br i1 %cmp578, label %land.lhs.true580, label %if.end599

land.lhs.true580:                                 ; preds = %if.else576
  %shl581 = shl i32 %flush, 1
  %cmp582 = icmp sgt i32 %flush, 4
  %cond584 = select i1 %cmp582, i32 9, i32 0
  %sub585 = sub nsw i32 %shl581, %cond584
  %shl586 = shl i32 %8, 1
  %cmp587 = icmp sgt i32 %8, 4
  %cond589 = select i1 %cmp587, i32 9, i32 0
  %sub590 = sub nsw i32 %shl586, %cond589
  %cmp591 = icmp sle i32 %sub585, %sub590
  %or.cond806 = and i1 %cmp591, %cmp14
  br i1 %or.cond806, label %if.then596, label %if.end599

if.then596:                                       ; preds = %land.lhs.true580
  %244 = load i8** getelementptr inbounds ([10 x i8*]* @z_errmsg, i64 0, i64 7), align 8, !tbaa !1
  %msg597 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 6
  store i8* %244, i8** %msg597, align 8, !tbaa !38
  br label %return

if.end599:                                        ; preds = %land.lhs.true580, %if.else576, %flush_pending.exit1282
  %245 = load i32* %status, align 4, !tbaa !68
  %cmp601 = icmp eq i32 %245, 666
  %avail_in604 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 1
  %246 = load i32* %avail_in604, align 4, !tbaa !32
  %cmp605 = icmp eq i32 %246, 0
  br i1 %cmp601, label %land.lhs.true603, label %if.end609

land.lhs.true603:                                 ; preds = %if.end599
  br i1 %cmp605, label %lor.lhs.false613, label %if.then607

if.then607:                                       ; preds = %land.lhs.true603
  %247 = load i8** getelementptr inbounds ([10 x i8*]* @z_errmsg, i64 0, i64 7), align 8, !tbaa !1
  %msg608 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 6
  store i8* %247, i8** %msg608, align 8, !tbaa !38
  br label %return

if.end609:                                        ; preds = %if.end599
  br i1 %cmp605, label %lor.lhs.false613, label %if.then623

lor.lhs.false613:                                 ; preds = %if.end609, %land.lhs.true603
  %lookahead = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 29
  %248 = load i32* %lookahead, align 4, !tbaa !93
  %cmp614 = icmp eq i32 %248, 0
  %cmp617 = icmp eq i32 %flush, 0
  %brmerge = or i1 %cmp617, %cmp601
  %or.cond1378 = and i1 %cmp614, %brmerge
  br i1 %or.cond1378, label %if.end701, label %if.then623

if.then623:                                       ; preds = %lor.lhs.false613, %if.end609
  %strategy624 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 34
  %249 = load i32* %strategy624, align 4, !tbaa !72
  switch i32 %249, label %cond.false635 [
    i32 2, label %cond.true627
    i32 3, label %cond.true633
  ]

cond.true627:                                     ; preds = %if.then623
  %lookahead.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 29
  %match_length.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 24
  %strstart.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 27
  %window.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 14
  %last_lit.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 50
  %d_buf.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 51
  %l_buf.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 48
  %lit_bufsize.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 49
  %block_start.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 23
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i.backedge, %cond.true627
  %250 = load i32* %lookahead.i, align 4, !tbaa !93
  %cmp.i1283 = icmp eq i32 %250, 0
  br i1 %cmp.i1283, label %if.then.i, label %if.end7.i

if.then.i:                                        ; preds = %for.cond.i
  tail call fastcc void @fill_window(%struct.internal_state.11* %0) #4
  %251 = load i32* %lookahead.i, align 4, !tbaa !93
  %cmp2.i1284 = icmp eq i32 %251, 0
  br i1 %cmp2.i1284, label %if.then3.i, label %if.end7.i

if.then3.i:                                       ; preds = %if.then.i
  %cmp4.i = icmp eq i32 %flush, 0
  br i1 %cmp4.i, label %if.then657, label %for.end.i

if.end7.i:                                        ; preds = %if.then.i, %for.cond.i
  store i32 0, i32* %match_length.i, align 4, !tbaa !96
  %252 = load i32* %strstart.i, align 4, !tbaa !91
  %idxprom.i1285 = zext i32 %252 to i64
  %253 = load i8** %window.i, align 8, !tbaa !61
  %arrayidx.i1286 = getelementptr inbounds i8* %253, i64 %idxprom.i1285
  %254 = load i8* %arrayidx.i1286, align 1, !tbaa !5
  %255 = load i32* %last_lit.i, align 4, !tbaa !113
  %idxprom8.i = zext i32 %255 to i64
  %256 = load i16** %d_buf.i, align 8, !tbaa !69
  %arrayidx9.i = getelementptr inbounds i16* %256, i64 %idxprom8.i
  store i16 0, i16* %arrayidx9.i, align 2, !tbaa !81
  %inc.i1287 = add i32 %255, 1
  store i32 %inc.i1287, i32* %last_lit.i, align 4, !tbaa !113
  %257 = load i8** %l_buf.i, align 8, !tbaa !70
  %arrayidx12.i = getelementptr inbounds i8* %257, i64 %idxprom8.i
  store i8 %254, i8* %arrayidx12.i, align 1, !tbaa !5
  %idxprom13.i = zext i8 %254 to i64
  %freq.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 37, i64 %idxprom13.i, i32 0, i32 0
  %258 = load i16* %freq.i, align 2, !tbaa !81
  %inc15.i = add i16 %258, 1
  store i16 %inc15.i, i16* %freq.i, align 2, !tbaa !81
  %259 = load i32* %last_lit.i, align 4, !tbaa !113
  %260 = load i32* %lit_bufsize.i, align 4, !tbaa !65
  %sub.i1288 = add i32 %260, -1
  %cmp17.i = icmp eq i32 %259, %sub.i1288
  %261 = load i32* %lookahead.i, align 4, !tbaa !93
  %dec.i = add i32 %261, -1
  store i32 %dec.i, i32* %lookahead.i, align 4, !tbaa !93
  %262 = load i32* %strstart.i, align 4, !tbaa !91
  %inc20.i = add i32 %262, 1
  store i32 %inc20.i, i32* %strstart.i, align 4, !tbaa !91
  br i1 %cmp17.i, label %if.then21.i, label %for.cond.i.backedge

for.cond.i.backedge:                              ; preds = %flush_pending.exit.i, %if.end7.i
  br label %for.cond.i

if.then21.i:                                      ; preds = %if.end7.i
  %263 = load i64* %block_start.i, align 8, !tbaa !92
  %cmp22.i = icmp sgt i64 %263, -1
  br i1 %cmp22.i, label %cond.true.i, label %cond.end.i

cond.true.i:                                      ; preds = %if.then21.i
  %idxprom26.i = and i64 %263, 4294967295
  %264 = load i8** %window.i, align 8, !tbaa !61
  %arrayidx28.i = getelementptr inbounds i8* %264, i64 %idxprom26.i
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then21.i
  %cond.i = phi i8* [ %arrayidx28.i, %cond.true.i ], [ null, %if.then21.i ]
  %conv30.i = zext i32 %inc20.i to i64
  %sub32.i = sub nsw i64 %conv30.i, %263
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %0, i8* %cond.i, i64 %sub32.i, i32 0) #4
  %265 = load i32* %strstart.i, align 4, !tbaa !91
  %conv34.i = zext i32 %265 to i64
  store i64 %conv34.i, i64* %block_start.i, align 8, !tbaa !92
  %266 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %state.i.i = getelementptr inbounds %struct.z_stream_s.10* %266, i64 0, i32 7
  %267 = load %struct.internal_state.11** %state.i.i, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %267) #4
  %pending.i.i = getelementptr inbounds %struct.internal_state.11* %267, i64 0, i32 5
  %268 = load i32* %pending.i.i, align 4, !tbaa !76
  %avail_out.i.i = getelementptr inbounds %struct.z_stream_s.10* %266, i64 0, i32 4
  %269 = load i32* %avail_out.i.i, align 4, !tbaa !33
  %cmp.i.i = icmp ugt i32 %268, %269
  %..i.i = select i1 %cmp.i.i, i32 %269, i32 %268
  %cmp2.i.i = icmp eq i32 %..i.i, 0
  br i1 %cmp2.i.i, label %flush_pending.exit.i, label %if.end4.i.i

if.end4.i.i:                                      ; preds = %cond.end.i
  %next_out.i.i = getelementptr inbounds %struct.z_stream_s.10* %266, i64 0, i32 3
  %270 = load i8** %next_out.i.i, align 8, !tbaa !34
  %pending_out.i.i = getelementptr inbounds %struct.internal_state.11* %267, i64 0, i32 4
  %271 = load i8** %pending_out.i.i, align 8, !tbaa !77
  %conv.i.i = zext i32 %..i.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %270, i8* %271, i64 %conv.i.i, i32 1, i1 false) #4
  %272 = load i8** %next_out.i.i, align 8, !tbaa !34
  %add.ptr.i.i = getelementptr inbounds i8* %272, i64 %conv.i.i
  store i8* %add.ptr.i.i, i8** %next_out.i.i, align 8, !tbaa !34
  %273 = load i8** %pending_out.i.i, align 8, !tbaa !77
  %add.ptr8.i.i = getelementptr inbounds i8* %273, i64 %conv.i.i
  store i8* %add.ptr8.i.i, i8** %pending_out.i.i, align 8, !tbaa !77
  %total_out.i.i = getelementptr inbounds %struct.z_stream_s.10* %266, i64 0, i32 5
  %274 = load i64* %total_out.i.i, align 8, !tbaa !112
  %add.i.i = add i64 %274, %conv.i.i
  store i64 %add.i.i, i64* %total_out.i.i, align 8, !tbaa !112
  %275 = load i32* %avail_out.i.i, align 4, !tbaa !33
  %sub.i.i = sub i32 %275, %..i.i
  store i32 %sub.i.i, i32* %avail_out.i.i, align 4, !tbaa !33
  %276 = load i32* %pending.i.i, align 4, !tbaa !76
  %sub12.i.i = sub i32 %276, %..i.i
  store i32 %sub12.i.i, i32* %pending.i.i, align 4, !tbaa !76
  %cmp14.i.i = icmp eq i32 %276, %..i.i
  br i1 %cmp14.i.i, label %if.then16.i.i, label %flush_pending.exit.i

if.then16.i.i:                                    ; preds = %if.end4.i.i
  %pending_buf.i.i = getelementptr inbounds %struct.internal_state.11* %267, i64 0, i32 2
  %277 = load i8** %pending_buf.i.i, align 8, !tbaa !66
  store i8* %277, i8** %pending_out.i.i, align 8, !tbaa !77
  br label %flush_pending.exit.i

flush_pending.exit.i:                             ; preds = %if.then16.i.i, %if.end4.i.i, %cond.end.i
  %278 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %avail_out.i1289 = getelementptr inbounds %struct.z_stream_s.10* %278, i64 0, i32 4
  %279 = load i32* %avail_out.i1289, align 4, !tbaa !33
  %cmp37.i = icmp eq i32 %279, 0
  br i1 %cmp37.i, label %if.then657.loopexit, label %for.cond.i.backedge

for.end.i:                                        ; preds = %if.then3.i
  %insert.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 55
  store i32 0, i32* %insert.i, align 4, !tbaa !94
  %cmp42.i = icmp eq i32 %flush, 4
  br i1 %cmp42.i, label %if.then44.i, label %if.end71.i

if.then44.i:                                      ; preds = %for.end.i
  %280 = load i64* %block_start.i, align 8, !tbaa !92
  %cmp46.i = icmp sgt i64 %280, -1
  br i1 %cmp46.i, label %cond.true48.i, label %cond.end55.i

cond.true48.i:                                    ; preds = %if.then44.i
  %idxprom51.i = and i64 %280, 4294967295
  %281 = load i8** %window.i, align 8, !tbaa !61
  %arrayidx53.i = getelementptr inbounds i8* %281, i64 %idxprom51.i
  br label %cond.end55.i

cond.end55.i:                                     ; preds = %cond.true48.i, %if.then44.i
  %cond56.i = phi i8* [ %arrayidx53.i, %cond.true48.i ], [ null, %if.then44.i ]
  %282 = load i32* %strstart.i, align 4, !tbaa !91
  %conv58.i = zext i32 %282 to i64
  %sub60.i = sub nsw i64 %conv58.i, %280
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %0, i8* %cond56.i, i64 %sub60.i, i32 1) #4
  %283 = load i32* %strstart.i, align 4, !tbaa !91
  %conv62.i = zext i32 %283 to i64
  store i64 %conv62.i, i64* %block_start.i, align 8, !tbaa !92
  %284 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %state.i149.i = getelementptr inbounds %struct.z_stream_s.10* %284, i64 0, i32 7
  %285 = load %struct.internal_state.11** %state.i149.i, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %285) #4
  %pending.i150.i = getelementptr inbounds %struct.internal_state.11* %285, i64 0, i32 5
  %286 = load i32* %pending.i150.i, align 4, !tbaa !76
  %avail_out.i151.i = getelementptr inbounds %struct.z_stream_s.10* %284, i64 0, i32 4
  %287 = load i32* %avail_out.i151.i, align 4, !tbaa !33
  %cmp.i152.i = icmp ugt i32 %286, %287
  %..i153.i = select i1 %cmp.i152.i, i32 %287, i32 %286
  %cmp2.i154.i = icmp eq i32 %..i153.i, 0
  br i1 %cmp2.i154.i, label %flush_pending.exit168.i, label %if.end4.i165.i

if.end4.i165.i:                                   ; preds = %cond.end55.i
  %next_out.i155.i = getelementptr inbounds %struct.z_stream_s.10* %284, i64 0, i32 3
  %288 = load i8** %next_out.i155.i, align 8, !tbaa !34
  %pending_out.i156.i = getelementptr inbounds %struct.internal_state.11* %285, i64 0, i32 4
  %289 = load i8** %pending_out.i156.i, align 8, !tbaa !77
  %conv.i157.i = zext i32 %..i153.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %288, i8* %289, i64 %conv.i157.i, i32 1, i1 false) #4
  %290 = load i8** %next_out.i155.i, align 8, !tbaa !34
  %add.ptr.i158.i = getelementptr inbounds i8* %290, i64 %conv.i157.i
  store i8* %add.ptr.i158.i, i8** %next_out.i155.i, align 8, !tbaa !34
  %291 = load i8** %pending_out.i156.i, align 8, !tbaa !77
  %add.ptr8.i159.i = getelementptr inbounds i8* %291, i64 %conv.i157.i
  store i8* %add.ptr8.i159.i, i8** %pending_out.i156.i, align 8, !tbaa !77
  %total_out.i160.i = getelementptr inbounds %struct.z_stream_s.10* %284, i64 0, i32 5
  %292 = load i64* %total_out.i160.i, align 8, !tbaa !112
  %add.i161.i = add i64 %292, %conv.i157.i
  store i64 %add.i161.i, i64* %total_out.i160.i, align 8, !tbaa !112
  %293 = load i32* %avail_out.i151.i, align 4, !tbaa !33
  %sub.i162.i = sub i32 %293, %..i153.i
  store i32 %sub.i162.i, i32* %avail_out.i151.i, align 4, !tbaa !33
  %294 = load i32* %pending.i150.i, align 4, !tbaa !76
  %sub12.i163.i = sub i32 %294, %..i153.i
  store i32 %sub12.i163.i, i32* %pending.i150.i, align 4, !tbaa !76
  %cmp14.i164.i = icmp eq i32 %294, %..i153.i
  br i1 %cmp14.i164.i, label %if.then16.i167.i, label %flush_pending.exit168.i

if.then16.i167.i:                                 ; preds = %if.end4.i165.i
  %pending_buf.i166.i = getelementptr inbounds %struct.internal_state.11* %285, i64 0, i32 2
  %295 = load i8** %pending_buf.i166.i, align 8, !tbaa !66
  store i8* %295, i8** %pending_out.i156.i, align 8, !tbaa !77
  br label %flush_pending.exit168.i

flush_pending.exit168.i:                          ; preds = %if.then16.i167.i, %if.end4.i165.i, %cond.end55.i
  %296 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %avail_out66.i = getelementptr inbounds %struct.z_stream_s.10* %296, i64 0, i32 4
  %297 = load i32* %avail_out66.i, align 4, !tbaa !33
  %cmp67.i = icmp eq i32 %297, 0
  %..i1290 = select i1 %cmp67.i, i32 2, i32 3
  br label %cond.end642

if.end71.i:                                       ; preds = %for.end.i
  %298 = load i32* %last_lit.i, align 4, !tbaa !113
  %tobool73.i = icmp eq i32 %298, 0
  br i1 %tobool73.i, label %if.then667, label %if.then74.i

if.then74.i:                                      ; preds = %if.end71.i
  %299 = load i64* %block_start.i, align 8, !tbaa !92
  %cmp76.i = icmp sgt i64 %299, -1
  br i1 %cmp76.i, label %cond.true78.i, label %cond.end85.i

cond.true78.i:                                    ; preds = %if.then74.i
  %idxprom81.i = and i64 %299, 4294967295
  %300 = load i8** %window.i, align 8, !tbaa !61
  %arrayidx83.i = getelementptr inbounds i8* %300, i64 %idxprom81.i
  br label %cond.end85.i

cond.end85.i:                                     ; preds = %cond.true78.i, %if.then74.i
  %cond86.i = phi i8* [ %arrayidx83.i, %cond.true78.i ], [ null, %if.then74.i ]
  %301 = load i32* %strstart.i, align 4, !tbaa !91
  %conv88.i = zext i32 %301 to i64
  %sub90.i = sub nsw i64 %conv88.i, %299
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %0, i8* %cond86.i, i64 %sub90.i, i32 0) #4
  %302 = load i32* %strstart.i, align 4, !tbaa !91
  %conv92.i = zext i32 %302 to i64
  store i64 %conv92.i, i64* %block_start.i, align 8, !tbaa !92
  %303 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %state.i169.i = getelementptr inbounds %struct.z_stream_s.10* %303, i64 0, i32 7
  %304 = load %struct.internal_state.11** %state.i169.i, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %304) #4
  %pending.i170.i = getelementptr inbounds %struct.internal_state.11* %304, i64 0, i32 5
  %305 = load i32* %pending.i170.i, align 4, !tbaa !76
  %avail_out.i171.i = getelementptr inbounds %struct.z_stream_s.10* %303, i64 0, i32 4
  %306 = load i32* %avail_out.i171.i, align 4, !tbaa !33
  %cmp.i172.i = icmp ugt i32 %305, %306
  %..i173.i = select i1 %cmp.i172.i, i32 %306, i32 %305
  %cmp2.i174.i = icmp eq i32 %..i173.i, 0
  br i1 %cmp2.i174.i, label %flush_pending.exit188.i, label %if.end4.i185.i

if.end4.i185.i:                                   ; preds = %cond.end85.i
  %next_out.i175.i = getelementptr inbounds %struct.z_stream_s.10* %303, i64 0, i32 3
  %307 = load i8** %next_out.i175.i, align 8, !tbaa !34
  %pending_out.i176.i = getelementptr inbounds %struct.internal_state.11* %304, i64 0, i32 4
  %308 = load i8** %pending_out.i176.i, align 8, !tbaa !77
  %conv.i177.i = zext i32 %..i173.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %307, i8* %308, i64 %conv.i177.i, i32 1, i1 false) #4
  %309 = load i8** %next_out.i175.i, align 8, !tbaa !34
  %add.ptr.i178.i = getelementptr inbounds i8* %309, i64 %conv.i177.i
  store i8* %add.ptr.i178.i, i8** %next_out.i175.i, align 8, !tbaa !34
  %310 = load i8** %pending_out.i176.i, align 8, !tbaa !77
  %add.ptr8.i179.i = getelementptr inbounds i8* %310, i64 %conv.i177.i
  store i8* %add.ptr8.i179.i, i8** %pending_out.i176.i, align 8, !tbaa !77
  %total_out.i180.i = getelementptr inbounds %struct.z_stream_s.10* %303, i64 0, i32 5
  %311 = load i64* %total_out.i180.i, align 8, !tbaa !112
  %add.i181.i = add i64 %311, %conv.i177.i
  store i64 %add.i181.i, i64* %total_out.i180.i, align 8, !tbaa !112
  %312 = load i32* %avail_out.i171.i, align 4, !tbaa !33
  %sub.i182.i = sub i32 %312, %..i173.i
  store i32 %sub.i182.i, i32* %avail_out.i171.i, align 4, !tbaa !33
  %313 = load i32* %pending.i170.i, align 4, !tbaa !76
  %sub12.i183.i = sub i32 %313, %..i173.i
  store i32 %sub12.i183.i, i32* %pending.i170.i, align 4, !tbaa !76
  %cmp14.i184.i = icmp eq i32 %313, %..i173.i
  br i1 %cmp14.i184.i, label %if.then16.i187.i, label %flush_pending.exit188.i

if.then16.i187.i:                                 ; preds = %if.end4.i185.i
  %pending_buf.i186.i = getelementptr inbounds %struct.internal_state.11* %304, i64 0, i32 2
  %314 = load i8** %pending_buf.i186.i, align 8, !tbaa !66
  store i8* %314, i8** %pending_out.i176.i, align 8, !tbaa !77
  br label %flush_pending.exit188.i

flush_pending.exit188.i:                          ; preds = %if.then16.i187.i, %if.end4.i185.i, %cond.end85.i
  %315 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %avail_out96.i = getelementptr inbounds %struct.z_stream_s.10* %315, i64 0, i32 4
  %316 = load i32* %avail_out96.i, align 4, !tbaa !33
  %cmp97.i = icmp eq i32 %316, 0
  br i1 %cmp97.i, label %if.then657, label %if.then667

cond.true633:                                     ; preds = %if.then623
  %lookahead.i1291 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 29
  %cmp3.i = icmp eq i32 %flush, 0
  %match_length.i1292 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 24
  %strstart.i1293 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 27
  %last_lit.i1294 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 50
  %d_buf.i1295 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 51
  %l_buf.i1296 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 48
  %317 = load i8* getelementptr inbounds ([512 x i8]* @_dist_code, i64 0, i64 0), align 1, !tbaa !5
  %idxprom117.i = zext i8 %317 to i64
  %freq120.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 38, i64 %idxprom117.i, i32 0, i32 0
  %lit_bufsize.i1297 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 49
  %window.i1298 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 14
  %block_start.i1299 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 23
  br label %for.cond.i1302

for.cond.i1302:                                   ; preds = %for.cond.i1302.backedge, %cond.true633
  %318 = load i32* %lookahead.i1291, align 4, !tbaa !93
  %cmp.i1301 = icmp ult i32 %318, 259
  br i1 %cmp.i1301, label %if.then.i1304, label %if.end9.thread.i

if.end9.thread.i:                                 ; preds = %for.cond.i1302
  store i32 0, i32* %match_length.i1292, align 4, !tbaa !96
  br label %land.lhs.true12.i

if.then.i1304:                                    ; preds = %for.cond.i1302
  tail call fastcc void @fill_window(%struct.internal_state.11* %0) #4
  %319 = load i32* %lookahead.i1291, align 4, !tbaa !93
  %cmp2.i1303 = icmp ult i32 %319, 259
  %or.cond.i = and i1 %cmp2.i1303, %cmp3.i
  br i1 %or.cond.i, label %if.then657.loopexit1381, label %if.end.i

if.end.i:                                         ; preds = %if.then.i1304
  %cmp6.i = icmp eq i32 %319, 0
  br i1 %cmp6.i, label %for.end.i1332, label %if.end9.i

if.end9.i:                                        ; preds = %if.end.i
  store i32 0, i32* %match_length.i1292, align 4, !tbaa !96
  %cmp11.i = icmp ugt i32 %319, 2
  br i1 %cmp11.i, label %land.lhs.true12.i, label %if.end9.if.else_crit_edge.i

if.end9.if.else_crit_edge.i:                      ; preds = %if.end9.i
  %.pre.i = load i32* %strstart.i1293, align 4, !tbaa !91
  br label %if.else.i

land.lhs.true12.i:                                ; preds = %if.end9.i, %if.end9.thread.i
  %320 = phi i32 [ %318, %if.end9.thread.i ], [ %319, %if.end9.i ]
  %321 = load i32* %strstart.i1293, align 4, !tbaa !91
  %cmp13.i = icmp eq i32 %321, 0
  br i1 %cmp13.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %land.lhs.true12.i
  %322 = load i8** %window.i1298, align 8, !tbaa !61
  %idx.ext.i = zext i32 %321 to i64
  %add.ptr.sum.i = add nsw i64 %idx.ext.i, -1
  %add.ptr16.i = getelementptr inbounds i8* %322, i64 %add.ptr.sum.i
  %323 = load i8* %add.ptr16.i, align 1, !tbaa !5
  %incdec.ptr.i = getelementptr inbounds i8* %322, i64 %idx.ext.i
  %324 = load i8* %incdec.ptr.i, align 1, !tbaa !5
  %cmp18.i = icmp eq i8 %323, %324
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.else.i

land.lhs.true20.i:                                ; preds = %if.then14.i
  %incdec.ptr.sum.i = add nuw nsw i64 %idx.ext.i, 1
  %incdec.ptr21.i = getelementptr inbounds i8* %322, i64 %incdec.ptr.sum.i
  %325 = load i8* %incdec.ptr21.i, align 1, !tbaa !5
  %cmp23.i = icmp eq i8 %323, %325
  br i1 %cmp23.i, label %land.lhs.true25.i, label %if.else.i

land.lhs.true25.i:                                ; preds = %land.lhs.true20.i
  %incdec.ptr21.sum.i = add nuw nsw i64 %idx.ext.i, 2
  %incdec.ptr26.i = getelementptr inbounds i8* %322, i64 %incdec.ptr21.sum.i
  %326 = load i8* %incdec.ptr26.i, align 1, !tbaa !5
  %cmp28.i = icmp eq i8 %323, %326
  br i1 %cmp28.i, label %if.then30.i, label %if.else.i

if.then30.i:                                      ; preds = %land.lhs.true25.i
  %add.ptr.sum357.i = add nuw nsw i64 %idx.ext.i, 258
  %add.ptr35.i = getelementptr inbounds i8* %322, i64 %add.ptr.sum357.i
  br label %do.cond.i

do.cond.i:                                        ; preds = %land.lhs.true70.i, %if.then30.i
  %scan.0.i = phi i8* [ %incdec.ptr26.i, %if.then30.i ], [ %incdec.ptr71.i, %land.lhs.true70.i ]
  %incdec.ptr36.i = getelementptr inbounds i8* %scan.0.i, i64 1
  %327 = load i8* %incdec.ptr36.i, align 1, !tbaa !5
  %cmp38.i = icmp eq i8 %323, %327
  br i1 %cmp38.i, label %land.lhs.true40.i, label %if.end88.i

land.lhs.true40.i:                                ; preds = %do.cond.i
  %incdec.ptr41.i = getelementptr inbounds i8* %scan.0.i, i64 2
  %328 = load i8* %incdec.ptr41.i, align 1, !tbaa !5
  %cmp43.i = icmp eq i8 %323, %328
  br i1 %cmp43.i, label %land.lhs.true45.i, label %if.end88.i

land.lhs.true45.i:                                ; preds = %land.lhs.true40.i
  %incdec.ptr46.i = getelementptr inbounds i8* %scan.0.i, i64 3
  %329 = load i8* %incdec.ptr46.i, align 1, !tbaa !5
  %cmp48.i = icmp eq i8 %323, %329
  br i1 %cmp48.i, label %land.lhs.true50.i, label %if.end88.i

land.lhs.true50.i:                                ; preds = %land.lhs.true45.i
  %incdec.ptr51.i = getelementptr inbounds i8* %scan.0.i, i64 4
  %330 = load i8* %incdec.ptr51.i, align 1, !tbaa !5
  %cmp53.i = icmp eq i8 %323, %330
  br i1 %cmp53.i, label %land.lhs.true55.i, label %if.end88.i

land.lhs.true55.i:                                ; preds = %land.lhs.true50.i
  %incdec.ptr56.i = getelementptr inbounds i8* %scan.0.i, i64 5
  %331 = load i8* %incdec.ptr56.i, align 1, !tbaa !5
  %cmp58.i = icmp eq i8 %323, %331
  br i1 %cmp58.i, label %land.lhs.true60.i, label %if.end88.i

land.lhs.true60.i:                                ; preds = %land.lhs.true55.i
  %incdec.ptr61.i = getelementptr inbounds i8* %scan.0.i, i64 6
  %332 = load i8* %incdec.ptr61.i, align 1, !tbaa !5
  %cmp63.i = icmp eq i8 %323, %332
  br i1 %cmp63.i, label %land.lhs.true65.i, label %if.end88.i

land.lhs.true65.i:                                ; preds = %land.lhs.true60.i
  %incdec.ptr66.i = getelementptr inbounds i8* %scan.0.i, i64 7
  %333 = load i8* %incdec.ptr66.i, align 1, !tbaa !5
  %cmp68.i = icmp eq i8 %323, %333
  br i1 %cmp68.i, label %land.lhs.true70.i, label %if.end88.i

land.lhs.true70.i:                                ; preds = %land.lhs.true65.i
  %incdec.ptr71.i = getelementptr inbounds i8* %scan.0.i, i64 8
  %334 = load i8* %incdec.ptr71.i, align 1, !tbaa !5
  %cmp73.i = icmp eq i8 %323, %334
  %cmp75.i = icmp ult i8* %incdec.ptr71.i, %add.ptr35.i
  %or.cond358.i = and i1 %cmp73.i, %cmp75.i
  br i1 %or.cond358.i, label %do.cond.i, label %if.end88.i

if.end88.i:                                       ; preds = %land.lhs.true70.i, %land.lhs.true65.i, %land.lhs.true60.i, %land.lhs.true55.i, %land.lhs.true50.i, %land.lhs.true45.i, %land.lhs.true40.i, %do.cond.i
  %scan.1.i = phi i8* [ %incdec.ptr71.i, %land.lhs.true70.i ], [ %incdec.ptr66.i, %land.lhs.true65.i ], [ %incdec.ptr61.i, %land.lhs.true60.i ], [ %incdec.ptr56.i, %land.lhs.true55.i ], [ %incdec.ptr51.i, %land.lhs.true50.i ], [ %incdec.ptr46.i, %land.lhs.true45.i ], [ %incdec.ptr41.i, %land.lhs.true40.i ], [ %incdec.ptr36.i, %do.cond.i ]
  %sub.ptr.lhs.cast.i = ptrtoint i8* %add.ptr35.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %scan.1.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv77.i = trunc i64 %sub.ptr.sub.i to i32
  %sub.i1305 = sub nsw i32 258, %conv77.i
  %cmp81.i = icmp ugt i32 %sub.i1305, %320
  %.sub.i = select i1 %cmp81.i, i32 %320, i32 %sub.i1305
  store i32 %.sub.i, i32* %match_length.i1292, align 4, !tbaa !96
  %cmp90.i = icmp ugt i32 %.sub.i, 2
  br i1 %cmp90.i, label %if.then92.i, label %if.else.i

if.then92.i:                                      ; preds = %if.end88.i
  %sub94.i = add i32 %.sub.i, 253
  %conv95.i = trunc i32 %sub94.i to i8
  %335 = load i32* %last_lit.i1294, align 4, !tbaa !113
  %idxprom.i1306 = zext i32 %335 to i64
  %336 = load i16** %d_buf.i1295, align 8, !tbaa !69
  %arrayidx.i1307 = getelementptr inbounds i16* %336, i64 %idxprom.i1306
  store i16 1, i16* %arrayidx.i1307, align 2, !tbaa !81
  %inc.i1308 = add i32 %335, 1
  store i32 %inc.i1308, i32* %last_lit.i1294, align 4, !tbaa !113
  %337 = load i8** %l_buf.i1296, align 8, !tbaa !70
  %arrayidx98.i = getelementptr inbounds i8* %337, i64 %idxprom.i1306
  store i8 %conv95.i, i8* %arrayidx98.i, align 1, !tbaa !5
  %conv95.mask.i = and i32 %sub94.i, 255
  %idxprom99.i = zext i32 %conv95.mask.i to i64
  %arrayidx100.i = getelementptr inbounds [0 x i8]* bitcast ([256 x i8]* @_length_code to [0 x i8]*), i64 0, i64 %idxprom99.i
  %338 = load i8* %arrayidx100.i, align 1, !tbaa !5
  %conv101.i = zext i8 %338 to i64
  %add355.i = or i64 %conv101.i, 256
  %add102.i = add nuw nsw i64 %add355.i, 1
  %idxprom103356.i = and i64 %add102.i, 1023
  %freq.i1309 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 37, i64 %idxprom103356.i, i32 0, i32 0
  %339 = load i16* %freq.i1309, align 2, !tbaa !81
  %inc105.i = add i16 %339, 1
  store i16 %inc105.i, i16* %freq.i1309, align 2, !tbaa !81
  %340 = load i16* %freq120.i, align 2, !tbaa !81
  %inc121.i = add i16 %340, 1
  store i16 %inc121.i, i16* %freq120.i, align 2, !tbaa !81
  %341 = load i32* %last_lit.i1294, align 4, !tbaa !113
  %342 = load i32* %lit_bufsize.i1297, align 4, !tbaa !65
  %sub123.i = add i32 %342, -1
  %cmp124.i = icmp eq i32 %341, %sub123.i
  %conv125.i = zext i1 %cmp124.i to i32
  %343 = load i32* %match_length.i1292, align 4, !tbaa !96
  %344 = load i32* %lookahead.i1291, align 4, !tbaa !93
  %sub128.i = sub i32 %344, %343
  store i32 %sub128.i, i32* %lookahead.i1291, align 4, !tbaa !93
  %345 = load i32* %strstart.i1293, align 4, !tbaa !91
  %add131.i = add i32 %345, %343
  store i32 %add131.i, i32* %strstart.i1293, align 4, !tbaa !91
  store i32 0, i32* %match_length.i1292, align 4, !tbaa !96
  br label %if.end161.i

if.else.i:                                        ; preds = %if.end88.i, %land.lhs.true25.i, %land.lhs.true20.i, %if.then14.i, %land.lhs.true12.i, %if.end9.if.else_crit_edge.i
  %346 = phi i32 [ %.pre.i, %if.end9.if.else_crit_edge.i ], [ %321, %if.end88.i ], [ %321, %land.lhs.true25.i ], [ %321, %land.lhs.true20.i ], [ %321, %if.then14.i ], [ 0, %land.lhs.true12.i ]
  %idxprom134.i = zext i32 %346 to i64
  %347 = load i8** %window.i1298, align 8, !tbaa !61
  %arrayidx136.i = getelementptr inbounds i8* %347, i64 %idxprom134.i
  %348 = load i8* %arrayidx136.i, align 1, !tbaa !5
  %349 = load i32* %last_lit.i1294, align 4, !tbaa !113
  %idxprom138.i = zext i32 %349 to i64
  %350 = load i16** %d_buf.i1295, align 8, !tbaa !69
  %arrayidx140.i = getelementptr inbounds i16* %350, i64 %idxprom138.i
  store i16 0, i16* %arrayidx140.i, align 2, !tbaa !81
  %inc142.i = add i32 %349, 1
  store i32 %inc142.i, i32* %last_lit.i1294, align 4, !tbaa !113
  %351 = load i8** %l_buf.i1296, align 8, !tbaa !70
  %arrayidx145.i = getelementptr inbounds i8* %351, i64 %idxprom138.i
  store i8 %348, i8* %arrayidx145.i, align 1, !tbaa !5
  %idxprom146.i = zext i8 %348 to i64
  %freq150.i = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 37, i64 %idxprom146.i, i32 0, i32 0
  %352 = load i16* %freq150.i, align 2, !tbaa !81
  %inc151.i = add i16 %352, 1
  store i16 %inc151.i, i16* %freq150.i, align 2, !tbaa !81
  %353 = load i32* %last_lit.i1294, align 4, !tbaa !113
  %354 = load i32* %lit_bufsize.i1297, align 4, !tbaa !65
  %sub154.i = add i32 %354, -1
  %cmp155.i = icmp eq i32 %353, %sub154.i
  %conv156.i = zext i1 %cmp155.i to i32
  %355 = load i32* %lookahead.i1291, align 4, !tbaa !93
  %dec158.i = add i32 %355, -1
  store i32 %dec158.i, i32* %lookahead.i1291, align 4, !tbaa !93
  %356 = load i32* %strstart.i1293, align 4, !tbaa !91
  %inc160.i = add i32 %356, 1
  store i32 %inc160.i, i32* %strstart.i1293, align 4, !tbaa !91
  br label %if.end161.i

if.end161.i:                                      ; preds = %if.else.i, %if.then92.i
  %357 = phi i32 [ %add131.i, %if.then92.i ], [ %inc160.i, %if.else.i ]
  %bflush.0.i = phi i32 [ %conv125.i, %if.then92.i ], [ %conv156.i, %if.else.i ]
  %tobool.i = icmp eq i32 %bflush.0.i, 0
  br i1 %tobool.i, label %for.cond.i1302.backedge, label %if.then162.i

for.cond.i1302.backedge:                          ; preds = %flush_pending.exit.i1330, %if.end161.i
  br label %for.cond.i1302

if.then162.i:                                     ; preds = %if.end161.i
  %358 = load i64* %block_start.i1299, align 8, !tbaa !92
  %cmp163.i = icmp sgt i64 %358, -1
  br i1 %cmp163.i, label %cond.true165.i, label %cond.end172.i

cond.true165.i:                                   ; preds = %if.then162.i
  %idxprom168.i = and i64 %358, 4294967295
  %359 = load i8** %window.i1298, align 8, !tbaa !61
  %arrayidx170.i = getelementptr inbounds i8* %359, i64 %idxprom168.i
  br label %cond.end172.i

cond.end172.i:                                    ; preds = %cond.true165.i, %if.then162.i
  %cond173.i = phi i8* [ %arrayidx170.i, %cond.true165.i ], [ null, %if.then162.i ]
  %conv175.i = zext i32 %357 to i64
  %sub177.i = sub nsw i64 %conv175.i, %358
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %0, i8* %cond173.i, i64 %sub177.i, i32 0) #4
  %360 = load i32* %strstart.i1293, align 4, !tbaa !91
  %conv179.i = zext i32 %360 to i64
  store i64 %conv179.i, i64* %block_start.i1299, align 8, !tbaa !92
  %361 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %state.i.i1310 = getelementptr inbounds %struct.z_stream_s.10* %361, i64 0, i32 7
  %362 = load %struct.internal_state.11** %state.i.i1310, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %362) #4
  %pending.i.i1311 = getelementptr inbounds %struct.internal_state.11* %362, i64 0, i32 5
  %363 = load i32* %pending.i.i1311, align 4, !tbaa !76
  %avail_out.i.i1312 = getelementptr inbounds %struct.z_stream_s.10* %361, i64 0, i32 4
  %364 = load i32* %avail_out.i.i1312, align 4, !tbaa !33
  %cmp.i.i1313 = icmp ugt i32 %363, %364
  %..i.i1314 = select i1 %cmp.i.i1313, i32 %364, i32 %363
  %cmp2.i.i1315 = icmp eq i32 %..i.i1314, 0
  br i1 %cmp2.i.i1315, label %flush_pending.exit.i1330, label %if.end4.i.i1326

if.end4.i.i1326:                                  ; preds = %cond.end172.i
  %next_out.i.i1316 = getelementptr inbounds %struct.z_stream_s.10* %361, i64 0, i32 3
  %365 = load i8** %next_out.i.i1316, align 8, !tbaa !34
  %pending_out.i.i1317 = getelementptr inbounds %struct.internal_state.11* %362, i64 0, i32 4
  %366 = load i8** %pending_out.i.i1317, align 8, !tbaa !77
  %conv.i.i1318 = zext i32 %..i.i1314 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %365, i8* %366, i64 %conv.i.i1318, i32 1, i1 false) #4
  %367 = load i8** %next_out.i.i1316, align 8, !tbaa !34
  %add.ptr.i.i1319 = getelementptr inbounds i8* %367, i64 %conv.i.i1318
  store i8* %add.ptr.i.i1319, i8** %next_out.i.i1316, align 8, !tbaa !34
  %368 = load i8** %pending_out.i.i1317, align 8, !tbaa !77
  %add.ptr8.i.i1320 = getelementptr inbounds i8* %368, i64 %conv.i.i1318
  store i8* %add.ptr8.i.i1320, i8** %pending_out.i.i1317, align 8, !tbaa !77
  %total_out.i.i1321 = getelementptr inbounds %struct.z_stream_s.10* %361, i64 0, i32 5
  %369 = load i64* %total_out.i.i1321, align 8, !tbaa !112
  %add.i.i1322 = add i64 %369, %conv.i.i1318
  store i64 %add.i.i1322, i64* %total_out.i.i1321, align 8, !tbaa !112
  %370 = load i32* %avail_out.i.i1312, align 4, !tbaa !33
  %sub.i.i1323 = sub i32 %370, %..i.i1314
  store i32 %sub.i.i1323, i32* %avail_out.i.i1312, align 4, !tbaa !33
  %371 = load i32* %pending.i.i1311, align 4, !tbaa !76
  %sub12.i.i1324 = sub i32 %371, %..i.i1314
  store i32 %sub12.i.i1324, i32* %pending.i.i1311, align 4, !tbaa !76
  %cmp14.i.i1325 = icmp eq i32 %371, %..i.i1314
  br i1 %cmp14.i.i1325, label %if.then16.i.i1328, label %flush_pending.exit.i1330

if.then16.i.i1328:                                ; preds = %if.end4.i.i1326
  %pending_buf.i.i1327 = getelementptr inbounds %struct.internal_state.11* %362, i64 0, i32 2
  %372 = load i8** %pending_buf.i.i1327, align 8, !tbaa !66
  store i8* %372, i8** %pending_out.i.i1317, align 8, !tbaa !77
  br label %flush_pending.exit.i1330

flush_pending.exit.i1330:                         ; preds = %if.then16.i.i1328, %if.end4.i.i1326, %cond.end172.i
  %373 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %avail_out.i1329 = getelementptr inbounds %struct.z_stream_s.10* %373, i64 0, i32 4
  %374 = load i32* %avail_out.i1329, align 4, !tbaa !33
  %cmp182.i = icmp eq i32 %374, 0
  br i1 %cmp182.i, label %if.then657.loopexit1381, label %for.cond.i1302.backedge

for.end.i1332:                                    ; preds = %if.end.i
  %insert.i1331 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 55
  store i32 0, i32* %insert.i1331, align 4, !tbaa !94
  %cmp187.i = icmp eq i32 %flush, 4
  br i1 %cmp187.i, label %if.then189.i, label %if.end216.i

if.then189.i:                                     ; preds = %for.end.i1332
  %375 = load i64* %block_start.i1299, align 8, !tbaa !92
  %cmp191.i = icmp sgt i64 %375, -1
  br i1 %cmp191.i, label %cond.true193.i, label %cond.end200.i

cond.true193.i:                                   ; preds = %if.then189.i
  %idxprom196.i = and i64 %375, 4294967295
  %376 = load i8** %window.i1298, align 8, !tbaa !61
  %arrayidx198.i = getelementptr inbounds i8* %376, i64 %idxprom196.i
  br label %cond.end200.i

cond.end200.i:                                    ; preds = %cond.true193.i, %if.then189.i
  %cond201.i = phi i8* [ %arrayidx198.i, %cond.true193.i ], [ null, %if.then189.i ]
  %377 = load i32* %strstart.i1293, align 4, !tbaa !91
  %conv203.i = zext i32 %377 to i64
  %sub205.i = sub nsw i64 %conv203.i, %375
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %0, i8* %cond201.i, i64 %sub205.i, i32 1) #4
  %378 = load i32* %strstart.i1293, align 4, !tbaa !91
  %conv207.i = zext i32 %378 to i64
  store i64 %conv207.i, i64* %block_start.i1299, align 8, !tbaa !92
  %379 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %state.i359.i = getelementptr inbounds %struct.z_stream_s.10* %379, i64 0, i32 7
  %380 = load %struct.internal_state.11** %state.i359.i, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %380) #4
  %pending.i360.i = getelementptr inbounds %struct.internal_state.11* %380, i64 0, i32 5
  %381 = load i32* %pending.i360.i, align 4, !tbaa !76
  %avail_out.i361.i = getelementptr inbounds %struct.z_stream_s.10* %379, i64 0, i32 4
  %382 = load i32* %avail_out.i361.i, align 4, !tbaa !33
  %cmp.i362.i = icmp ugt i32 %381, %382
  %..i363.i = select i1 %cmp.i362.i, i32 %382, i32 %381
  %cmp2.i364.i = icmp eq i32 %..i363.i, 0
  br i1 %cmp2.i364.i, label %flush_pending.exit378.i, label %if.end4.i375.i

if.end4.i375.i:                                   ; preds = %cond.end200.i
  %next_out.i365.i = getelementptr inbounds %struct.z_stream_s.10* %379, i64 0, i32 3
  %383 = load i8** %next_out.i365.i, align 8, !tbaa !34
  %pending_out.i366.i = getelementptr inbounds %struct.internal_state.11* %380, i64 0, i32 4
  %384 = load i8** %pending_out.i366.i, align 8, !tbaa !77
  %conv.i367.i = zext i32 %..i363.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %383, i8* %384, i64 %conv.i367.i, i32 1, i1 false) #4
  %385 = load i8** %next_out.i365.i, align 8, !tbaa !34
  %add.ptr.i368.i = getelementptr inbounds i8* %385, i64 %conv.i367.i
  store i8* %add.ptr.i368.i, i8** %next_out.i365.i, align 8, !tbaa !34
  %386 = load i8** %pending_out.i366.i, align 8, !tbaa !77
  %add.ptr8.i369.i = getelementptr inbounds i8* %386, i64 %conv.i367.i
  store i8* %add.ptr8.i369.i, i8** %pending_out.i366.i, align 8, !tbaa !77
  %total_out.i370.i = getelementptr inbounds %struct.z_stream_s.10* %379, i64 0, i32 5
  %387 = load i64* %total_out.i370.i, align 8, !tbaa !112
  %add.i371.i = add i64 %387, %conv.i367.i
  store i64 %add.i371.i, i64* %total_out.i370.i, align 8, !tbaa !112
  %388 = load i32* %avail_out.i361.i, align 4, !tbaa !33
  %sub.i372.i = sub i32 %388, %..i363.i
  store i32 %sub.i372.i, i32* %avail_out.i361.i, align 4, !tbaa !33
  %389 = load i32* %pending.i360.i, align 4, !tbaa !76
  %sub12.i373.i = sub i32 %389, %..i363.i
  store i32 %sub12.i373.i, i32* %pending.i360.i, align 4, !tbaa !76
  %cmp14.i374.i = icmp eq i32 %389, %..i363.i
  br i1 %cmp14.i374.i, label %if.then16.i377.i, label %flush_pending.exit378.i

if.then16.i377.i:                                 ; preds = %if.end4.i375.i
  %pending_buf.i376.i = getelementptr inbounds %struct.internal_state.11* %380, i64 0, i32 2
  %390 = load i8** %pending_buf.i376.i, align 8, !tbaa !66
  store i8* %390, i8** %pending_out.i366.i, align 8, !tbaa !77
  br label %flush_pending.exit378.i

flush_pending.exit378.i:                          ; preds = %if.then16.i377.i, %if.end4.i375.i, %cond.end200.i
  %391 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %avail_out211.i = getelementptr inbounds %struct.z_stream_s.10* %391, i64 0, i32 4
  %392 = load i32* %avail_out211.i, align 4, !tbaa !33
  %cmp212.i = icmp eq i32 %392, 0
  %..i1333 = select i1 %cmp212.i, i32 2, i32 3
  br label %cond.end642

if.end216.i:                                      ; preds = %for.end.i1332
  %393 = load i32* %last_lit.i1294, align 4, !tbaa !113
  %tobool218.i = icmp eq i32 %393, 0
  br i1 %tobool218.i, label %if.then667, label %if.then219.i

if.then219.i:                                     ; preds = %if.end216.i
  %394 = load i64* %block_start.i1299, align 8, !tbaa !92
  %cmp221.i = icmp sgt i64 %394, -1
  br i1 %cmp221.i, label %cond.true223.i, label %cond.end230.i

cond.true223.i:                                   ; preds = %if.then219.i
  %idxprom226.i = and i64 %394, 4294967295
  %395 = load i8** %window.i1298, align 8, !tbaa !61
  %arrayidx228.i = getelementptr inbounds i8* %395, i64 %idxprom226.i
  br label %cond.end230.i

cond.end230.i:                                    ; preds = %cond.true223.i, %if.then219.i
  %cond231.i = phi i8* [ %arrayidx228.i, %cond.true223.i ], [ null, %if.then219.i ]
  %396 = load i32* %strstart.i1293, align 4, !tbaa !91
  %conv233.i = zext i32 %396 to i64
  %sub235.i = sub nsw i64 %conv233.i, %394
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %0, i8* %cond231.i, i64 %sub235.i, i32 0) #4
  %397 = load i32* %strstart.i1293, align 4, !tbaa !91
  %conv237.i = zext i32 %397 to i64
  store i64 %conv237.i, i64* %block_start.i1299, align 8, !tbaa !92
  %398 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %state.i379.i = getelementptr inbounds %struct.z_stream_s.10* %398, i64 0, i32 7
  %399 = load %struct.internal_state.11** %state.i379.i, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %399) #4
  %pending.i380.i = getelementptr inbounds %struct.internal_state.11* %399, i64 0, i32 5
  %400 = load i32* %pending.i380.i, align 4, !tbaa !76
  %avail_out.i381.i = getelementptr inbounds %struct.z_stream_s.10* %398, i64 0, i32 4
  %401 = load i32* %avail_out.i381.i, align 4, !tbaa !33
  %cmp.i382.i = icmp ugt i32 %400, %401
  %..i383.i = select i1 %cmp.i382.i, i32 %401, i32 %400
  %cmp2.i384.i = icmp eq i32 %..i383.i, 0
  br i1 %cmp2.i384.i, label %flush_pending.exit398.i, label %if.end4.i395.i

if.end4.i395.i:                                   ; preds = %cond.end230.i
  %next_out.i385.i = getelementptr inbounds %struct.z_stream_s.10* %398, i64 0, i32 3
  %402 = load i8** %next_out.i385.i, align 8, !tbaa !34
  %pending_out.i386.i = getelementptr inbounds %struct.internal_state.11* %399, i64 0, i32 4
  %403 = load i8** %pending_out.i386.i, align 8, !tbaa !77
  %conv.i387.i = zext i32 %..i383.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %402, i8* %403, i64 %conv.i387.i, i32 1, i1 false) #4
  %404 = load i8** %next_out.i385.i, align 8, !tbaa !34
  %add.ptr.i388.i = getelementptr inbounds i8* %404, i64 %conv.i387.i
  store i8* %add.ptr.i388.i, i8** %next_out.i385.i, align 8, !tbaa !34
  %405 = load i8** %pending_out.i386.i, align 8, !tbaa !77
  %add.ptr8.i389.i = getelementptr inbounds i8* %405, i64 %conv.i387.i
  store i8* %add.ptr8.i389.i, i8** %pending_out.i386.i, align 8, !tbaa !77
  %total_out.i390.i = getelementptr inbounds %struct.z_stream_s.10* %398, i64 0, i32 5
  %406 = load i64* %total_out.i390.i, align 8, !tbaa !112
  %add.i391.i = add i64 %406, %conv.i387.i
  store i64 %add.i391.i, i64* %total_out.i390.i, align 8, !tbaa !112
  %407 = load i32* %avail_out.i381.i, align 4, !tbaa !33
  %sub.i392.i = sub i32 %407, %..i383.i
  store i32 %sub.i392.i, i32* %avail_out.i381.i, align 4, !tbaa !33
  %408 = load i32* %pending.i380.i, align 4, !tbaa !76
  %sub12.i393.i = sub i32 %408, %..i383.i
  store i32 %sub12.i393.i, i32* %pending.i380.i, align 4, !tbaa !76
  %cmp14.i394.i = icmp eq i32 %408, %..i383.i
  br i1 %cmp14.i394.i, label %if.then16.i397.i, label %flush_pending.exit398.i

if.then16.i397.i:                                 ; preds = %if.end4.i395.i
  %pending_buf.i396.i = getelementptr inbounds %struct.internal_state.11* %399, i64 0, i32 2
  %409 = load i8** %pending_buf.i396.i, align 8, !tbaa !66
  store i8* %409, i8** %pending_out.i386.i, align 8, !tbaa !77
  br label %flush_pending.exit398.i

flush_pending.exit398.i:                          ; preds = %if.then16.i397.i, %if.end4.i395.i, %cond.end230.i
  %410 = load %struct.z_stream_s.10** %strm21, align 8, !tbaa !48
  %avail_out241.i = getelementptr inbounds %struct.z_stream_s.10* %410, i64 0, i32 4
  %411 = load i32* %avail_out241.i, align 4, !tbaa !33
  %cmp242.i = icmp eq i32 %411, 0
  br i1 %cmp242.i, label %if.then657, label %if.then667

cond.false635:                                    ; preds = %if.then623
  %level636 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 33
  %412 = load i32* %level636, align 4, !tbaa !71
  %idxprom637 = sext i32 %412 to i64
  %func = getelementptr inbounds [10 x %struct.config_s]* @configuration_table, i64 0, i64 %idxprom637, i32 4
  %413 = load i32 (%struct.internal_state.11*, i32)** %func, align 8, !tbaa !101
  %call639 = tail call i32 %413(%struct.internal_state.11* %0, i32 %flush) #4
  br label %cond.end642

cond.end642:                                      ; preds = %cond.false635, %flush_pending.exit378.i, %flush_pending.exit168.i
  %cond643 = phi i32 [ %call639, %cond.false635 ], [ %..i1290, %flush_pending.exit168.i ], [ %..i1333, %flush_pending.exit378.i ]
  %414 = and i32 %cond643, -2
  %415 = icmp eq i32 %414, 2
  br i1 %415, label %if.then649, label %if.end651

if.then649:                                       ; preds = %cond.end642
  store i32 666, i32* %status, align 4, !tbaa !68
  br label %if.end651

if.end651:                                        ; preds = %if.then649, %cond.end642
  %416 = and i32 %cond643, -3
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %if.then657, label %if.end664

if.then657.loopexit:                              ; preds = %flush_pending.exit.i
  br label %if.then657

if.then657.loopexit1381:                          ; preds = %flush_pending.exit.i1330, %if.then.i1304
  br label %if.then657

if.then657:                                       ; preds = %if.then657.loopexit1381, %if.then657.loopexit, %if.end651, %flush_pending.exit398.i, %flush_pending.exit188.i, %if.then3.i
  %418 = load i32* %avail_out, align 4, !tbaa !33
  %cmp659 = icmp eq i32 %418, 0
  br i1 %cmp659, label %if.then661, label %return

if.then661:                                       ; preds = %if.then657
  store i32 -1, i32* %last_flush, align 4, !tbaa !79
  br label %return

if.end664:                                        ; preds = %if.end651
  %cmp665 = icmp eq i32 %cond643, 1
  br i1 %cmp665, label %if.then667, label %if.end701

if.then667:                                       ; preds = %if.end664, %flush_pending.exit398.i, %if.end216.i, %flush_pending.exit188.i, %if.end71.i
  switch i32 %flush, label %if.then674 [
    i32 1, label %if.then670
    i32 5, label %if.end693
  ]

if.then670:                                       ; preds = %if.then667
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_align to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %0) #4
  br label %if.end693

if.then674:                                       ; preds = %if.then667
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_stored_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %0, i8* null, i64 0, i32 0) #4
  %cmp675 = icmp eq i32 %flush, 3
  br i1 %cmp675, label %if.then677, label %if.end693

if.then677:                                       ; preds = %if.then674
  %hash_size = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 19
  %419 = load i32* %hash_size, align 4, !tbaa !58
  %sub678 = add i32 %419, -1
  %idxprom679 = zext i32 %sub678 to i64
  %head = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 17
  %420 = load i16** %head, align 8, !tbaa !63
  %arrayidx680 = getelementptr inbounds i16* %420, i64 %idxprom679
  store i16 0, i16* %arrayidx680, align 2, !tbaa !81
  %421 = bitcast i16* %420 to i8*
  %mul = shl nuw nsw i64 %idxprom679, 1
  tail call void @llvm.memset.p0i8.i64(i8* %421, i8 0, i64 %mul, i32 1, i1 false)
  %lookahead685 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 29
  %422 = load i32* %lookahead685, align 4, !tbaa !93
  %cmp686 = icmp eq i32 %422, 0
  br i1 %cmp686, label %if.then688, label %if.end693

if.then688:                                       ; preds = %if.then677
  %strstart689 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 27
  store i32 0, i32* %strstart689, align 4, !tbaa !91
  %block_start = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 23
  store i64 0, i64* %block_start, align 8, !tbaa !92
  %insert = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 55
  store i32 0, i32* %insert, align 4, !tbaa !94
  br label %if.end693

if.end693:                                        ; preds = %if.then688, %if.then677, %if.then674, %if.then670, %if.then667
  %423 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %423) #4
  %pending.i1153 = getelementptr inbounds %struct.internal_state.11* %423, i64 0, i32 5
  %424 = load i32* %pending.i1153, align 4, !tbaa !76
  %425 = load i32* %avail_out, align 4, !tbaa !33
  %cmp.i1155 = icmp ugt i32 %424, %425
  %..i1156 = select i1 %cmp.i1155, i32 %425, i32 %424
  %cmp2.i1157 = icmp eq i32 %..i1156, 0
  br i1 %cmp2.i1157, label %flush_pending.exit1171, label %if.end4.i1168

if.end4.i1168:                                    ; preds = %if.end693
  %426 = load i8** %next_out, align 8, !tbaa !34
  %pending_out.i1159 = getelementptr inbounds %struct.internal_state.11* %423, i64 0, i32 4
  %427 = load i8** %pending_out.i1159, align 8, !tbaa !77
  %conv.i1160 = zext i32 %..i1156 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %426, i8* %427, i64 %conv.i1160, i32 1, i1 false) #4
  %428 = load i8** %next_out, align 8, !tbaa !34
  %add.ptr.i1161 = getelementptr inbounds i8* %428, i64 %conv.i1160
  store i8* %add.ptr.i1161, i8** %next_out, align 8, !tbaa !34
  %429 = load i8** %pending_out.i1159, align 8, !tbaa !77
  %add.ptr8.i1162 = getelementptr inbounds i8* %429, i64 %conv.i1160
  store i8* %add.ptr8.i1162, i8** %pending_out.i1159, align 8, !tbaa !77
  %total_out.i1163 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  %430 = load i64* %total_out.i1163, align 8, !tbaa !112
  %add.i1164 = add i64 %430, %conv.i1160
  store i64 %add.i1164, i64* %total_out.i1163, align 8, !tbaa !112
  %431 = load i32* %avail_out, align 4, !tbaa !33
  %sub.i1165 = sub i32 %431, %..i1156
  store i32 %sub.i1165, i32* %avail_out, align 4, !tbaa !33
  %432 = load i32* %pending.i1153, align 4, !tbaa !76
  %sub12.i1166 = sub i32 %432, %..i1156
  store i32 %sub12.i1166, i32* %pending.i1153, align 4, !tbaa !76
  %cmp14.i1167 = icmp eq i32 %432, %..i1156
  br i1 %cmp14.i1167, label %if.then16.i1170, label %flush_pending.exit1171

if.then16.i1170:                                  ; preds = %if.end4.i1168
  %pending_buf.i1169 = getelementptr inbounds %struct.internal_state.11* %423, i64 0, i32 2
  %433 = load i8** %pending_buf.i1169, align 8, !tbaa !66
  store i8* %433, i8** %pending_out.i1159, align 8, !tbaa !77
  br label %flush_pending.exit1171

flush_pending.exit1171:                           ; preds = %if.then16.i1170, %if.end4.i1168, %if.end693
  %434 = phi i32 [ %425, %if.end693 ], [ %sub.i1165, %if.then16.i1170 ], [ %sub.i1165, %if.end4.i1168 ]
  %cmp695 = icmp eq i32 %434, 0
  br i1 %cmp695, label %if.then697, label %if.end701

if.then697:                                       ; preds = %flush_pending.exit1171
  store i32 -1, i32* %last_flush, align 4, !tbaa !79
  br label %return

if.end701:                                        ; preds = %flush_pending.exit1171, %if.end664, %lor.lhs.false613
  br i1 %cmp14, label %return, label %if.end705

if.end705:                                        ; preds = %if.end701
  %wrap706 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 6
  %435 = load i32* %wrap706, align 4, !tbaa !52
  %cmp707 = icmp slt i32 %435, 1
  br i1 %cmp707, label %return, label %if.end710

if.end710:                                        ; preds = %if.end705
  %cmp712 = icmp eq i32 %435, 2
  %adler715 = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 12
  %436 = load i64* %adler715, align 8, !tbaa !78
  br i1 %cmp712, label %if.then714, label %if.else784

if.then714:                                       ; preds = %if.end710
  %conv717 = trunc i64 %436 to i8
  %437 = load i32* %pending566, align 4, !tbaa !76
  %inc719 = add i32 %437, 1
  store i32 %inc719, i32* %pending566, align 4, !tbaa !76
  %idxprom720 = zext i32 %437 to i64
  %pending_buf721 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %438 = load i8** %pending_buf721, align 8, !tbaa !66
  %arrayidx722 = getelementptr inbounds i8* %438, i64 %idxprom720
  store i8 %conv717, i8* %arrayidx722, align 1, !tbaa !5
  %439 = load i64* %adler715, align 8, !tbaa !78
  %shr724 = lshr i64 %439, 8
  %conv726 = trunc i64 %shr724 to i8
  %440 = load i32* %pending566, align 4, !tbaa !76
  %inc728 = add i32 %440, 1
  store i32 %inc728, i32* %pending566, align 4, !tbaa !76
  %idxprom729 = zext i32 %440 to i64
  %441 = load i8** %pending_buf721, align 8, !tbaa !66
  %arrayidx731 = getelementptr inbounds i8* %441, i64 %idxprom729
  store i8 %conv726, i8* %arrayidx731, align 1, !tbaa !5
  %442 = load i64* %adler715, align 8, !tbaa !78
  %shr733 = lshr i64 %442, 16
  %conv735 = trunc i64 %shr733 to i8
  %443 = load i32* %pending566, align 4, !tbaa !76
  %inc737 = add i32 %443, 1
  store i32 %inc737, i32* %pending566, align 4, !tbaa !76
  %idxprom738 = zext i32 %443 to i64
  %444 = load i8** %pending_buf721, align 8, !tbaa !66
  %arrayidx740 = getelementptr inbounds i8* %444, i64 %idxprom738
  store i8 %conv735, i8* %arrayidx740, align 1, !tbaa !5
  %445 = load i64* %adler715, align 8, !tbaa !78
  %shr742 = lshr i64 %445, 24
  %conv744 = trunc i64 %shr742 to i8
  %446 = load i32* %pending566, align 4, !tbaa !76
  %inc746 = add i32 %446, 1
  store i32 %inc746, i32* %pending566, align 4, !tbaa !76
  %idxprom747 = zext i32 %446 to i64
  %447 = load i8** %pending_buf721, align 8, !tbaa !66
  %arrayidx749 = getelementptr inbounds i8* %447, i64 %idxprom747
  store i8 %conv744, i8* %arrayidx749, align 1, !tbaa !5
  %total_in = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 2
  %448 = load i64* %total_in, align 8, !tbaa !74
  %conv751 = trunc i64 %448 to i8
  %449 = load i32* %pending566, align 4, !tbaa !76
  %inc753 = add i32 %449, 1
  store i32 %inc753, i32* %pending566, align 4, !tbaa !76
  %idxprom754 = zext i32 %449 to i64
  %450 = load i8** %pending_buf721, align 8, !tbaa !66
  %arrayidx756 = getelementptr inbounds i8* %450, i64 %idxprom754
  store i8 %conv751, i8* %arrayidx756, align 1, !tbaa !5
  %451 = load i64* %total_in, align 8, !tbaa !74
  %shr758 = lshr i64 %451, 8
  %conv760 = trunc i64 %shr758 to i8
  %452 = load i32* %pending566, align 4, !tbaa !76
  %inc762 = add i32 %452, 1
  store i32 %inc762, i32* %pending566, align 4, !tbaa !76
  %idxprom763 = zext i32 %452 to i64
  %453 = load i8** %pending_buf721, align 8, !tbaa !66
  %arrayidx765 = getelementptr inbounds i8* %453, i64 %idxprom763
  store i8 %conv760, i8* %arrayidx765, align 1, !tbaa !5
  %454 = load i64* %total_in, align 8, !tbaa !74
  %shr767 = lshr i64 %454, 16
  %conv769 = trunc i64 %shr767 to i8
  %455 = load i32* %pending566, align 4, !tbaa !76
  %inc771 = add i32 %455, 1
  store i32 %inc771, i32* %pending566, align 4, !tbaa !76
  %idxprom772 = zext i32 %455 to i64
  %456 = load i8** %pending_buf721, align 8, !tbaa !66
  %arrayidx774 = getelementptr inbounds i8* %456, i64 %idxprom772
  store i8 %conv769, i8* %arrayidx774, align 1, !tbaa !5
  %457 = load i64* %total_in, align 8, !tbaa !74
  %shr776 = lshr i64 %457, 24
  %conv778 = trunc i64 %shr776 to i8
  %458 = load i32* %pending566, align 4, !tbaa !76
  %inc780 = add i32 %458, 1
  store i32 %inc780, i32* %pending566, align 4, !tbaa !76
  %idxprom781 = zext i32 %458 to i64
  %459 = load i8** %pending_buf721, align 8, !tbaa !66
  %arrayidx783 = getelementptr inbounds i8* %459, i64 %idxprom781
  store i8 %conv778, i8* %arrayidx783, align 1, !tbaa !5
  br label %if.end791

if.else784:                                       ; preds = %if.end710
  %shr786 = lshr i64 %436, 16
  %shr.i11411354 = lshr i64 %436, 24
  %conv.i1142 = trunc i64 %shr.i11411354 to i8
  %460 = load i32* %pending566, align 4, !tbaa !76
  %inc.i1144 = add i32 %460, 1
  store i32 %inc.i1144, i32* %pending566, align 4, !tbaa !76
  %idxprom.i1145 = zext i32 %460 to i64
  %pending_buf.i1146 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %461 = load i8** %pending_buf.i1146, align 8, !tbaa !66
  %arrayidx.i1147 = getelementptr inbounds i8* %461, i64 %idxprom.i1145
  store i8 %conv.i1142, i8* %arrayidx.i1147, align 1, !tbaa !5
  %conv1.i1148 = trunc i64 %shr786 to i8
  %462 = load i32* %pending566, align 4, !tbaa !76
  %inc3.i1149 = add i32 %462, 1
  store i32 %inc3.i1149, i32* %pending566, align 4, !tbaa !76
  %idxprom4.i1150 = zext i32 %462 to i64
  %463 = load i8** %pending_buf.i1146, align 8, !tbaa !66
  %arrayidx6.i1151 = getelementptr inbounds i8* %463, i64 %idxprom4.i1150
  store i8 %conv1.i1148, i8* %arrayidx6.i1151, align 1, !tbaa !5
  %464 = load i64* %adler715, align 8, !tbaa !78
  %.tr = trunc i64 %464 to i32
  %shr.i1130 = lshr i32 %.tr, 8
  %conv.i1131 = trunc i32 %shr.i1130 to i8
  %465 = load i32* %pending566, align 4, !tbaa !76
  %inc.i1133 = add i32 %465, 1
  store i32 %inc.i1133, i32* %pending566, align 4, !tbaa !76
  %idxprom.i1134 = zext i32 %465 to i64
  %466 = load i8** %pending_buf.i1146, align 8, !tbaa !66
  %arrayidx.i1136 = getelementptr inbounds i8* %466, i64 %idxprom.i1134
  store i8 %conv.i1131, i8* %arrayidx.i1136, align 1, !tbaa !5
  %conv1.i1137 = trunc i64 %464 to i8
  %467 = load i32* %pending566, align 4, !tbaa !76
  %inc3.i1138 = add i32 %467, 1
  store i32 %inc3.i1138, i32* %pending566, align 4, !tbaa !76
  %idxprom4.i1139 = zext i32 %467 to i64
  %468 = load i8** %pending_buf.i1146, align 8, !tbaa !66
  %arrayidx6.i1140 = getelementptr inbounds i8* %468, i64 %idxprom4.i1139
  store i8 %conv1.i1137, i8* %arrayidx6.i1140, align 1, !tbaa !5
  br label %if.end791

if.end791:                                        ; preds = %if.else784, %if.then714
  %469 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %469) #4
  %pending.i1116 = getelementptr inbounds %struct.internal_state.11* %469, i64 0, i32 5
  %470 = load i32* %pending.i1116, align 4, !tbaa !76
  %471 = load i32* %avail_out, align 4, !tbaa !33
  %cmp.i = icmp ugt i32 %470, %471
  %..i = select i1 %cmp.i, i32 %471, i32 %470
  %cmp2.i = icmp eq i32 %..i, 0
  br i1 %cmp2.i, label %flush_pending.exit, label %if.end4.i

if.end4.i:                                        ; preds = %if.end791
  %472 = load i8** %next_out, align 8, !tbaa !34
  %pending_out.i = getelementptr inbounds %struct.internal_state.11* %469, i64 0, i32 4
  %473 = load i8** %pending_out.i, align 8, !tbaa !77
  %conv.i1117 = zext i32 %..i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %472, i8* %473, i64 %conv.i1117, i32 1, i1 false) #4
  %474 = load i8** %next_out, align 8, !tbaa !34
  %add.ptr.i = getelementptr inbounds i8* %474, i64 %conv.i1117
  store i8* %add.ptr.i, i8** %next_out, align 8, !tbaa !34
  %475 = load i8** %pending_out.i, align 8, !tbaa !77
  %add.ptr8.i = getelementptr inbounds i8* %475, i64 %conv.i1117
  store i8* %add.ptr8.i, i8** %pending_out.i, align 8, !tbaa !77
  %total_out.i = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 5
  %476 = load i64* %total_out.i, align 8, !tbaa !112
  %add.i = add i64 %476, %conv.i1117
  store i64 %add.i, i64* %total_out.i, align 8, !tbaa !112
  %477 = load i32* %avail_out, align 4, !tbaa !33
  %sub.i = sub i32 %477, %..i
  store i32 %sub.i, i32* %avail_out, align 4, !tbaa !33
  %478 = load i32* %pending.i1116, align 4, !tbaa !76
  %sub12.i = sub i32 %478, %..i
  store i32 %sub12.i, i32* %pending.i1116, align 4, !tbaa !76
  %cmp14.i = icmp eq i32 %478, %..i
  br i1 %cmp14.i, label %if.then16.i, label %flush_pending.exit

if.then16.i:                                      ; preds = %if.end4.i
  %pending_buf.i1118 = getelementptr inbounds %struct.internal_state.11* %469, i64 0, i32 2
  %479 = load i8** %pending_buf.i1118, align 8, !tbaa !66
  store i8* %479, i8** %pending_out.i, align 8, !tbaa !77
  br label %flush_pending.exit

flush_pending.exit:                               ; preds = %if.then16.i, %if.end4.i, %if.end791
  %480 = load i32* %wrap706, align 4, !tbaa !52
  %cmp793 = icmp sgt i32 %480, 0
  br i1 %cmp793, label %if.then795, label %if.end799

if.then795:                                       ; preds = %flush_pending.exit
  %sub797 = sub nsw i32 0, %480
  store i32 %sub797, i32* %wrap706, align 4, !tbaa !52
  br label %if.end799

if.end799:                                        ; preds = %if.then795, %flush_pending.exit
  %481 = load i32* %pending566, align 4, !tbaa !76
  %not.cmp801 = icmp eq i32 %481, 0
  %cond803 = zext i1 %not.cmp801 to i32
  br label %return

return:                                           ; preds = %if.end799, %if.end705, %if.end701, %if.then697, %if.then661, %if.then657, %if.then607, %if.then596, %if.then573, %if.then18, %if.then15, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -2, %if.then15 ], [ -5, %if.then18 ], [ 0, %if.then573 ], [ -5, %if.then607 ], [ 0, %if.then697 ], [ %cond803, %if.end799 ], [ -5, %if.then596 ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ 0, %if.then661 ], [ 0, %if.then657 ], [ 0, %if.end701 ], [ 1, %if.end705 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflateTune(%struct.z_stream_s.10* readonly %strm, i32 %good_length, i32 %max_lazy, i32 %nice_length, i32 %max_chain) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %good_match = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 35
  store i32 %good_length, i32* %good_match, align 4, !tbaa !86
  %max_lazy_match = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 32
  store i32 %max_lazy, i32* %max_lazy_match, align 4, !tbaa !84
  %nice_match = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 36
  store i32 %nice_length, i32* %nice_match, align 4, !tbaa !88
  %max_chain_length = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 31
  store i32 %max_chain, i32* %max_chain_length, align 4, !tbaa !90
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -2, %lor.lhs.false ], [ -2, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i64 @deflateBound(%struct.z_stream_s.10* readonly %strm, i64 %sourceLen) #6 {
entry:
  %add = add i64 %sourceLen, 7
  %shr = lshr i64 %add, 3
  %add1 = add i64 %shr, %sourceLen
  %add2 = add i64 %sourceLen, 63
  %shr3 = lshr i64 %add2, 6
  %add4 = add i64 %add1, %shr3
  %add5 = add i64 %add4, 5
  %cmp = icmp eq %struct.z_stream_s.10* %strm, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %strm, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp6 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %add7 = add i64 %add4, 11
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %wrap = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 6
  %1 = load i32* %wrap, align 4, !tbaa !52
  switch i32 %1, label %sw.default [
    i32 0, label %sw.epilog
    i32 1, label %sw.bb9
    i32 2, label %sw.bb11
  ]

sw.bb9:                                           ; preds = %if.end
  %strstart = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 27
  %2 = load i32* %strstart, align 4, !tbaa !91
  %tobool = icmp ne i32 %2, 0
  %conv = select i1 %tobool, i64 10, i64 6
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end
  %gzhead = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 7
  %3 = load %struct.gz_header_s** %gzhead, align 8, !tbaa !53
  %cmp12 = icmp eq %struct.gz_header_s* %3, null
  br i1 %cmp12, label %sw.epilog, label %if.then14

if.then14:                                        ; preds = %sw.bb11
  %extra = getelementptr inbounds %struct.gz_header_s* %3, i64 0, i32 4
  %4 = load i8** %extra, align 8, !tbaa !105
  %cmp16 = icmp eq i8* %4, null
  br i1 %cmp16, label %if.end23, label %if.then18

if.then18:                                        ; preds = %if.then14
  %extra_len = getelementptr inbounds %struct.gz_header_s* %3, i64 0, i32 5
  %5 = load i32* %extra_len, align 4, !tbaa !110
  %add20 = add i32 %5, 2
  %conv21 = zext i32 %add20 to i64
  %add22 = add nuw nsw i64 %conv21, 18
  br label %if.end23

if.end23:                                         ; preds = %if.then18, %if.then14
  %wraplen.0 = phi i64 [ %add22, %if.then18 ], [ 18, %if.then14 ]
  %name = getelementptr inbounds %struct.gz_header_s* %3, i64 0, i32 7
  %6 = load i8** %name, align 8, !tbaa !106
  %cmp25 = icmp eq i8* %6, null
  br i1 %cmp25, label %if.end29, label %do.body.preheader

do.body.preheader:                                ; preds = %if.end23
  br label %do.body

do.body:                                          ; preds = %do.body, %do.body.preheader
  %wraplen.1 = phi i64 [ %inc, %do.body ], [ %wraplen.0, %do.body.preheader ]
  %str.0 = phi i8* [ %incdec.ptr, %do.body ], [ %6, %do.body.preheader ]
  %inc = add i64 %wraplen.1, 1
  %incdec.ptr = getelementptr inbounds i8* %str.0, i64 1
  %7 = load i8* %str.0, align 1, !tbaa !5
  %tobool28 = icmp eq i8 %7, 0
  br i1 %tobool28, label %if.end29.loopexit, label %do.body

if.end29.loopexit:                                ; preds = %do.body
  %inc.lcssa = phi i64 [ %inc, %do.body ]
  br label %if.end29

if.end29:                                         ; preds = %if.end29.loopexit, %if.end23
  %wraplen.2 = phi i64 [ %wraplen.0, %if.end23 ], [ %inc.lcssa, %if.end29.loopexit ]
  %comment = getelementptr inbounds %struct.gz_header_s* %3, i64 0, i32 9
  %8 = load i8** %comment, align 8, !tbaa !107
  %cmp31 = icmp eq i8* %8, null
  br i1 %cmp31, label %if.end40, label %do.body34.preheader

do.body34.preheader:                              ; preds = %if.end29
  br label %do.body34

do.body34:                                        ; preds = %do.body34, %do.body34.preheader
  %wraplen.3 = phi i64 [ %inc35, %do.body34 ], [ %wraplen.2, %do.body34.preheader ]
  %str.1 = phi i8* [ %incdec.ptr37, %do.body34 ], [ %8, %do.body34.preheader ]
  %inc35 = add i64 %wraplen.3, 1
  %incdec.ptr37 = getelementptr inbounds i8* %str.1, i64 1
  %9 = load i8* %str.1, align 1, !tbaa !5
  %tobool38 = icmp eq i8 %9, 0
  br i1 %tobool38, label %if.end40.loopexit, label %do.body34

if.end40.loopexit:                                ; preds = %do.body34
  %inc35.lcssa = phi i64 [ %inc35, %do.body34 ]
  br label %if.end40

if.end40:                                         ; preds = %if.end40.loopexit, %if.end29
  %wraplen.4 = phi i64 [ %wraplen.2, %if.end29 ], [ %inc35.lcssa, %if.end40.loopexit ]
  %hcrc = getelementptr inbounds %struct.gz_header_s* %3, i64 0, i32 11
  %10 = load i32* %hcrc, align 4, !tbaa !104
  %tobool42 = icmp eq i32 %10, 0
  %add44 = add i64 %wraplen.4, 2
  %wraplen.4.add44 = select i1 %tobool42, i64 %wraplen.4, i64 %add44
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end40, %sw.bb11, %sw.bb9, %if.end
  %wraplen.5 = phi i64 [ 6, %sw.default ], [ 18, %sw.bb11 ], [ %conv, %sw.bb9 ], [ 0, %if.end ], [ %wraplen.4.add44, %if.end40 ]
  %w_bits = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 12
  %11 = load i32* %w_bits, align 4, !tbaa !54
  %cmp47 = icmp eq i32 %11, 15
  br i1 %cmp47, label %lor.lhs.false49, label %if.then52

lor.lhs.false49:                                  ; preds = %sw.epilog
  %hash_bits = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 20
  %12 = load i32* %hash_bits, align 4, !tbaa !57
  %cmp50 = icmp eq i32 %12, 15
  br i1 %cmp50, label %if.end54, label %if.then52

if.then52:                                        ; preds = %lor.lhs.false49, %sw.epilog
  %add53 = add i64 %add5, %wraplen.5
  br label %return

if.end54:                                         ; preds = %lor.lhs.false49
  %shr55 = lshr i64 %sourceLen, 12
  %shr57 = lshr i64 %sourceLen, 14
  %shr59 = lshr i64 %sourceLen, 25
  %add58 = add i64 %add, %shr55
  %add60 = add i64 %add58, %shr57
  %sub = add i64 %add60, %shr59
  %add62 = add i64 %sub, %wraplen.5
  br label %return

return:                                           ; preds = %if.end54, %if.then52, %if.then
  %retval.0 = phi i64 [ %add7, %if.then ], [ %add53, %if.then52 ], [ %add62, %if.end54 ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @deflateCopy(%struct.z_stream_s.10* %dest, %struct.z_stream_s.10* readonly %source) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s.10* %source, null
  %cmp1 = icmp eq %struct.z_stream_s.10* %dest, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %state = getelementptr inbounds %struct.z_stream_s.10* %source, i64 0, i32 7
  %0 = load %struct.internal_state.11** %state, align 8, !tbaa !47
  %cmp3 = icmp eq %struct.internal_state.11* %0, null
  br i1 %cmp3, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false2
  %1 = bitcast %struct.z_stream_s.10* %dest to i8*
  %2 = bitcast %struct.z_stream_s.10* %source to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 112, i32 1, i1 false)
  %zalloc = getelementptr inbounds %struct.z_stream_s.10* %dest, i64 0, i32 8
  %3 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %opaque = getelementptr inbounds %struct.z_stream_s.10* %dest, i64 0, i32 10
  %4 = load i8** %opaque, align 8, !tbaa !45
  %call = tail call i8* %3(i8* %4, i32 1, i32 5936) #4
  %cmp5 = icmp eq i8* %call, null
  br i1 %cmp5, label %return, label %if.end7

if.end7:                                          ; preds = %if.end
  %5 = bitcast i8* %call to %struct.internal_state.11*
  %state8 = getelementptr inbounds %struct.z_stream_s.10* %dest, i64 0, i32 7
  store %struct.internal_state.11* %5, %struct.internal_state.11** %state8, align 8, !tbaa !47
  %6 = bitcast %struct.internal_state.11* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call, i8* %6, i64 5936, i32 1, i1 false)
  %strm = bitcast i8* %call to %struct.z_stream_s.10**
  store %struct.z_stream_s.10* %dest, %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %7 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %8 = load i8** %opaque, align 8, !tbaa !45
  %w_size = getelementptr inbounds i8* %call, i64 68
  %9 = bitcast i8* %w_size to i32*
  %10 = load i32* %9, align 4, !tbaa !55
  %call11 = tail call i8* %7(i8* %8, i32 %10, i32 2) #4
  %window = getelementptr inbounds i8* %call, i64 80
  %11 = bitcast i8* %window to i8**
  store i8* %call11, i8** %11, align 8, !tbaa !61
  %12 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %13 = load i8** %opaque, align 8, !tbaa !45
  %14 = load i32* %9, align 4, !tbaa !55
  %call15 = tail call i8* %12(i8* %13, i32 %14, i32 2) #4
  %15 = bitcast i8* %call15 to i16*
  %prev = getelementptr inbounds i8* %call, i64 96
  %16 = bitcast i8* %prev to i16**
  store i16* %15, i16** %16, align 8, !tbaa !62
  %17 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %18 = load i8** %opaque, align 8, !tbaa !45
  %hash_size = getelementptr inbounds i8* %call, i64 116
  %19 = bitcast i8* %hash_size to i32*
  %20 = load i32* %19, align 4, !tbaa !58
  %call18 = tail call i8* %17(i8* %18, i32 %20, i32 2) #4
  %21 = bitcast i8* %call18 to i16*
  %head = getelementptr inbounds i8* %call, i64 104
  %22 = bitcast i8* %head to i16**
  store i16* %21, i16** %22, align 8, !tbaa !63
  %23 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %24 = load i8** %opaque, align 8, !tbaa !45
  %lit_bufsize = getelementptr inbounds i8* %call, i64 5880
  %25 = bitcast i8* %lit_bufsize to i32*
  %26 = load i32* %25, align 4, !tbaa !65
  %call21 = tail call i8* %23(i8* %24, i32 %26, i32 4) #4
  %27 = bitcast i8* %call21 to i16*
  %pending_buf = getelementptr inbounds i8* %call, i64 16
  %28 = bitcast i8* %pending_buf to i8**
  store i8* %call21, i8** %28, align 8, !tbaa !66
  %29 = load i8** %11, align 8, !tbaa !61
  %cmp23 = icmp eq i8* %29, null
  br i1 %cmp23, label %lor.lhs.false.i, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %if.end7
  %30 = load i16** %16, align 8, !tbaa !62
  %cmp26 = icmp eq i16* %30, null
  br i1 %cmp26, label %lor.lhs.false.i, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %lor.lhs.false24
  %31 = load i16** %22, align 8, !tbaa !63
  %cmp29 = icmp eq i16* %31, null
  %cmp32 = icmp eq i8* %call21, null
  %or.cond130 = or i1 %cmp29, %cmp32
  br i1 %or.cond130, label %lor.lhs.false.i, label %if.end35

lor.lhs.false.i:                                  ; preds = %lor.lhs.false27, %lor.lhs.false24, %if.end7
  %32 = load %struct.internal_state.11** %state8, align 8, !tbaa !47
  %cmp1.i = icmp eq %struct.internal_state.11* %32, null
  br i1 %cmp1.i, label %return, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %status3.i = getelementptr inbounds %struct.internal_state.11* %32, i64 0, i32 1
  %33 = load i32* %status3.i, align 4, !tbaa !68
  switch i32 %33, label %return [
    i32 666, label %if.end17.i
    i32 113, label %if.end17.i
    i32 103, label %if.end17.i
    i32 91, label %if.end17.i
    i32 73, label %if.end17.i
    i32 69, label %if.end17.i
    i32 42, label %if.end17.i
  ]

if.end17.i:                                       ; preds = %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i
  %pending_buf.i = getelementptr inbounds %struct.internal_state.11* %32, i64 0, i32 2
  %34 = load i8** %pending_buf.i, align 8, !tbaa !66
  %tobool.i = icmp eq i8* %34, null
  br i1 %tobool.i, label %if.end22.i, label %if.then19.i

if.then19.i:                                      ; preds = %if.end17.i
  %zfree.i = getelementptr inbounds %struct.z_stream_s.10* %dest, i64 0, i32 9
  %35 = load void (i8*, i8*)** %zfree.i, align 8, !tbaa !46
  %36 = load i8** %opaque, align 8, !tbaa !45
  tail call void %35(i8* %36, i8* %34) #4
  %.pre.i = load %struct.internal_state.11** %state8, align 8, !tbaa !47
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then19.i, %if.end17.i
  %37 = phi %struct.internal_state.11* [ %32, %if.end17.i ], [ %.pre.i, %if.then19.i ]
  %head.i = getelementptr inbounds %struct.internal_state.11* %37, i64 0, i32 17
  %38 = load i16** %head.i, align 8, !tbaa !63
  %tobool24.i = icmp eq i16* %38, null
  br i1 %tobool24.i, label %if.end30.i, label %if.then25.i

if.then25.i:                                      ; preds = %if.end22.i
  %zfree26.i = getelementptr inbounds %struct.z_stream_s.10* %dest, i64 0, i32 9
  %39 = load void (i8*, i8*)** %zfree26.i, align 8, !tbaa !46
  %40 = load i8** %opaque, align 8, !tbaa !45
  %41 = bitcast i16* %38 to i8*
  tail call void %39(i8* %40, i8* %41) #4
  %.pre86.i = load %struct.internal_state.11** %state8, align 8, !tbaa !47
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then25.i, %if.end22.i
  %42 = phi %struct.internal_state.11* [ %37, %if.end22.i ], [ %.pre86.i, %if.then25.i ]
  %prev.i = getelementptr inbounds %struct.internal_state.11* %42, i64 0, i32 16
  %43 = load i16** %prev.i, align 8, !tbaa !62
  %tobool32.i = icmp eq i16* %43, null
  %zfree47.pre.i.pre = getelementptr inbounds %struct.z_stream_s.10* %dest, i64 0, i32 9
  br i1 %tobool32.i, label %if.end38.i, label %if.then33.i

if.then33.i:                                      ; preds = %if.end30.i
  %44 = load void (i8*, i8*)** %zfree47.pre.i.pre, align 8, !tbaa !46
  %45 = load i8** %opaque, align 8, !tbaa !45
  %46 = bitcast i16* %43 to i8*
  tail call void %44(i8* %45, i8* %46) #4
  %.pre87.i = load %struct.internal_state.11** %state8, align 8, !tbaa !47
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.then33.i, %if.end30.i
  %47 = phi %struct.internal_state.11* [ %.pre87.i, %if.then33.i ], [ %42, %if.end30.i ]
  %window.i = getelementptr inbounds %struct.internal_state.11* %47, i64 0, i32 14
  %48 = load i8** %window.i, align 8, !tbaa !61
  %tobool40.i = icmp eq i8* %48, null
  br i1 %tobool40.i, label %if.end46.i, label %if.then41.i

if.then41.i:                                      ; preds = %if.end38.i
  %49 = load void (i8*, i8*)** %zfree47.pre.i.pre, align 8, !tbaa !46
  %50 = load i8** %opaque, align 8, !tbaa !45
  tail call void %49(i8* %50, i8* %48) #4
  %.pre88.i = load %struct.internal_state.11** %state8, align 8, !tbaa !47
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.then41.i, %if.end38.i
  %51 = phi %struct.internal_state.11* [ %.pre88.i, %if.then41.i ], [ %47, %if.end38.i ]
  %52 = load void (i8*, i8*)** %zfree47.pre.i.pre, align 8, !tbaa !46
  %53 = load i8** %opaque, align 8, !tbaa !45
  %54 = bitcast %struct.internal_state.11* %51 to i8*
  tail call void %52(i8* %53, i8* %54) #4
  store %struct.internal_state.11* null, %struct.internal_state.11** %state8, align 8, !tbaa !47
  br label %return

if.end35:                                         ; preds = %lor.lhs.false27
  %window37 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 14
  %55 = load i8** %window37, align 8, !tbaa !61
  %56 = load i32* %9, align 4, !tbaa !55
  %mul = shl i32 %56, 1
  %conv = zext i32 %mul to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %55, i64 %conv, i32 1, i1 false)
  %57 = load i16** %16, align 8, !tbaa !62
  %58 = bitcast i16* %57 to i8*
  %prev41 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 16
  %59 = load i16** %prev41, align 8, !tbaa !62
  %60 = bitcast i16* %59 to i8*
  %61 = load i32* %9, align 4, !tbaa !55
  %conv43 = zext i32 %61 to i64
  %mul44 = shl nuw nsw i64 %conv43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %60, i64 %mul44, i32 1, i1 false)
  %62 = load i16** %22, align 8, !tbaa !63
  %63 = bitcast i16* %62 to i8*
  %head46 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 17
  %64 = load i16** %head46, align 8, !tbaa !63
  %65 = bitcast i16* %64 to i8*
  %66 = load i32* %19, align 4, !tbaa !58
  %conv48 = zext i32 %66 to i64
  %mul49 = shl nuw nsw i64 %conv48, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %65, i64 %mul49, i32 1, i1 false)
  %67 = load i8** %28, align 8, !tbaa !66
  %pending_buf51 = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 2
  %68 = load i8** %pending_buf51, align 8, !tbaa !66
  %pending_buf_size = getelementptr inbounds i8* %call, i64 24
  %69 = bitcast i8* %pending_buf_size to i64*
  %70 = load i64* %69, align 8, !tbaa !67
  %conv53 = and i64 %70, 4294967295
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 %conv53, i32 1, i1 false)
  %71 = load i8** %28, align 8, !tbaa !66
  %pending_out = getelementptr inbounds %struct.internal_state.11* %0, i64 0, i32 4
  %72 = load i8** %pending_out, align 8, !tbaa !77
  %73 = load i8** %pending_buf51, align 8, !tbaa !66
  %sub.ptr.lhs.cast = ptrtoint i8* %72 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %73 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add.ptr = getelementptr inbounds i8* %71, i64 %sub.ptr.sub
  %pending_out56 = getelementptr inbounds i8* %call, i64 32
  %74 = bitcast i8* %pending_out56 to i8**
  store i8* %add.ptr, i8** %74, align 8, !tbaa !77
  %75 = load i32* %25, align 4, !tbaa !65
  %div129 = lshr i32 %75, 1
  %div = zext i32 %div129 to i64
  %add.ptr59 = getelementptr inbounds i16* %27, i64 %div
  %d_buf = getelementptr inbounds i8* %call, i64 5888
  %76 = bitcast i8* %d_buf to i16**
  store i16* %add.ptr59, i16** %76, align 8, !tbaa !69
  %conv62 = zext i32 %75 to i64
  %mul63 = mul i64 %conv62, 3
  %add.ptr64 = getelementptr inbounds i8* %71, i64 %mul63
  %l_buf = getelementptr inbounds i8* %call, i64 5872
  %77 = bitcast i8* %l_buf to i8**
  store i8* %add.ptr64, i8** %77, align 8, !tbaa !70
  %dyn_ltree = getelementptr inbounds i8* %call, i64 196
  %arraydecay = bitcast i8* %dyn_ltree to %struct.ct_data_s*
  %l_desc = getelementptr inbounds i8* %call, i64 2888
  %dyn_tree = bitcast i8* %l_desc to %struct.ct_data_s**
  store %struct.ct_data_s* %arraydecay, %struct.ct_data_s** %dyn_tree, align 8, !tbaa !114
  %dyn_dtree = getelementptr inbounds i8* %call, i64 2488
  %arraydecay65 = bitcast i8* %dyn_dtree to %struct.ct_data_s*
  %d_desc = getelementptr inbounds i8* %call, i64 2912
  %dyn_tree66 = bitcast i8* %d_desc to %struct.ct_data_s**
  store %struct.ct_data_s* %arraydecay65, %struct.ct_data_s** %dyn_tree66, align 8, !tbaa !115
  %bl_tree = getelementptr inbounds i8* %call, i64 2732
  %arraydecay67 = bitcast i8* %bl_tree to %struct.ct_data_s*
  %bl_desc = getelementptr inbounds i8* %call, i64 2936
  %dyn_tree68 = bitcast i8* %bl_desc to %struct.ct_data_s**
  store %struct.ct_data_s* %arraydecay67, %struct.ct_data_s** %dyn_tree68, align 8, !tbaa !116
  br label %return

return:                                           ; preds = %if.end35, %if.end46.i, %if.end.i, %lor.lhs.false.i, %if.end, %lor.lhs.false2, %entry
  %retval.0 = phi i32 [ 0, %if.end35 ], [ -2, %lor.lhs.false2 ], [ -2, %entry ], [ -4, %if.end ], [ -4, %lor.lhs.false.i ], [ -4, %if.end.i ], [ -4, %if.end46.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fill_window(%struct.internal_state.11* %s) #3 {
entry:
  %w_size = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 11
  %0 = load i32* %w_size, align 4, !tbaa !55
  %window_size = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 15
  %lookahead = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 29
  %strstart = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 27
  %sub6 = add i32 %0, -262
  %strm = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 0
  %window44 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 14
  %insert = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 55
  %ins_h = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 18
  %hash_shift = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 22
  %hash_mask = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 21
  %head89 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 17
  %w_mask = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 13
  %prev93 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 16
  %idx.ext = zext i32 %0 to i64
  %match_start = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 28
  %block_start = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 23
  %hash_size = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 19
  %.pre = load i32* %lookahead, align 4, !tbaa !93
  %1 = add i32 %0, -1
  %2 = zext i32 %1 to i64
  %3 = add nuw nsw i64 %2, 1
  br label %do.body

do.body:                                          ; preds = %land.rhs.do.body_crit_edge, %entry
  %4 = phi i32 [ %.pre274, %land.rhs.do.body_crit_edge ], [ %0, %entry ]
  %5 = phi i32 [ %add52, %land.rhs.do.body_crit_edge ], [ %.pre, %entry ]
  %6 = load i64* %window_size, align 8, !tbaa !80
  %conv = zext i32 %5 to i64
  %sub = sub i64 %6, %conv
  %7 = load i32* %strstart, align 4, !tbaa !91
  %conv1 = zext i32 %7 to i64
  %sub2 = sub i64 %sub, %conv1
  %conv3 = trunc i64 %sub2 to i32
  %add = add i32 %sub6, %4
  %cmp = icmp ult i32 %7, %add
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %do.body
  %8 = load i8** %window44, align 8, !tbaa !61
  %add.ptr = getelementptr inbounds i8* %8, i64 %idx.ext
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %add.ptr, i64 %idx.ext, i32 1, i1 false)
  %9 = load i32* %match_start, align 4, !tbaa !117
  %sub10 = sub i32 %9, %0
  store i32 %sub10, i32* %match_start, align 4, !tbaa !117
  %10 = load i32* %strstart, align 4, !tbaa !91
  %sub12 = sub i32 %10, %0
  store i32 %sub12, i32* %strstart, align 4, !tbaa !91
  %11 = load i64* %block_start, align 8, !tbaa !92
  %sub14 = sub nsw i64 %11, %idx.ext
  store i64 %sub14, i64* %block_start, align 8, !tbaa !92
  %12 = load i32* %hash_size, align 4, !tbaa !58
  %idxprom = zext i32 %12 to i64
  %13 = load i16** %head89, align 8, !tbaa !63
  %arrayidx = getelementptr inbounds i16* %13, i64 %idxprom
  %14 = add i32 %12, -1
  %15 = zext i32 %14 to i64
  %16 = add nuw nsw i64 %15, 1
  %end.idx317 = add nuw nsw i64 %15, 1
  %n.vec319 = and i64 %16, 8589934584
  %cmp.zero321 = icmp eq i64 %n.vec319, 0
  %arrayidx.sum = sub i64 %idxprom, %n.vec319
  %rev.ptr.ind.end326 = getelementptr i16* %13, i64 %arrayidx.sum
  %cast.crd329 = trunc i64 %n.vec319 to i32
  %rev.ind.end330 = sub i32 %12, %cast.crd329
  br i1 %cmp.zero321, label %middle.block314, label %vector.ph312

vector.ph312:                                     ; preds = %if.then
  %broadcast.splatinsert370 = insertelement <4 x i32> undef, i32 %0, i32 0
  %broadcast.splat371 = shufflevector <4 x i32> %broadcast.splatinsert370, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %vector.body313

vector.body313:                                   ; preds = %vector.body313, %vector.ph312
  %index316 = phi i64 [ 0, %vector.ph312 ], [ %index.next333, %vector.body313 ]
  %arrayidx.sum376 = sub i64 %idxprom, %index316
  %.sum = add i64 %arrayidx.sum376, -4
  %17 = getelementptr i16* %13, i64 %.sum
  %18 = bitcast i16* %17 to <4 x i16>*
  %wide.load366 = load <4 x i16>* %18, align 2, !tbaa !81
  %reverse367 = shufflevector <4 x i16> %wide.load366, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %.sum385 = add i64 %arrayidx.sum376, -8
  %19 = getelementptr i16* %13, i64 %.sum385
  %20 = bitcast i16* %19 to <4 x i16>*
  %wide.load368 = load <4 x i16>* %20, align 2, !tbaa !81
  %reverse369 = shufflevector <4 x i16> %wide.load368, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %21 = zext <4 x i16> %reverse367 to <4 x i32>
  %22 = zext <4 x i16> %reverse369 to <4 x i32>
  %23 = icmp ult <4 x i32> %21, %broadcast.splat371
  %24 = icmp ult <4 x i32> %22, %broadcast.splat371
  %25 = sub <4 x i32> %21, %broadcast.splat371
  %26 = sub <4 x i32> %22, %broadcast.splat371
  %27 = trunc <4 x i32> %25 to <4 x i16>
  %28 = trunc <4 x i32> %26 to <4 x i16>
  %predphi372 = select <4 x i1> %23, <4 x i16> zeroinitializer, <4 x i16> %27
  %predphi373 = select <4 x i1> %24, <4 x i16> zeroinitializer, <4 x i16> %28
  %reverse374 = shufflevector <4 x i16> %predphi372, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %29 = bitcast i16* %17 to <4 x i16>*
  store <4 x i16> %reverse374, <4 x i16>* %29, align 2, !tbaa !81
  %reverse375 = shufflevector <4 x i16> %predphi373, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %30 = bitcast i16* %19 to <4 x i16>*
  store <4 x i16> %reverse375, <4 x i16>* %30, align 2, !tbaa !81
  %index.next333 = add i64 %index316, 8
  %31 = icmp eq i64 %index.next333, %n.vec319
  br i1 %31, label %middle.block314.loopexit, label %vector.body313, !llvm.loop !118

middle.block314.loopexit:                         ; preds = %vector.body313
  br label %middle.block314

middle.block314:                                  ; preds = %middle.block314.loopexit, %if.then
  %resume.val323 = phi i16* [ %arrayidx, %if.then ], [ %rev.ptr.ind.end326, %middle.block314.loopexit ]
  %resume.val327 = phi i32 [ %12, %if.then ], [ %rev.ind.end330, %middle.block314.loopexit ]
  %new.indc.resume.val331 = phi i64 [ 0, %if.then ], [ %n.vec319, %middle.block314.loopexit ]
  %cmp.n332 = icmp eq i64 %end.idx317, %new.indc.resume.val331
  br i1 %cmp.n332, label %do.end, label %do.body15.preheader

do.body15.preheader:                              ; preds = %middle.block314
  %xtraiter = and i32 %resume.val327, 1
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %resume.val327, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %do.body15.unr, label %do.body15.preheader.split

do.body15.unr:                                    ; preds = %do.body15.preheader
  %incdec.ptr.unr = getelementptr inbounds i16* %resume.val323, i64 -1
  %32 = load i16* %incdec.ptr.unr, align 2, !tbaa !81
  %conv16.unr = zext i16 %32 to i32
  %cmp17.unr = icmp ult i32 %conv16.unr, %0
  br i1 %cmp17.unr, label %cond.end.unr, label %cond.true.unr

cond.true.unr:                                    ; preds = %do.body15.unr
  %sub19.unr = sub i32 %conv16.unr, %0
  %phitmp.unr = trunc i32 %sub19.unr to i16
  br label %cond.end.unr

cond.end.unr:                                     ; preds = %cond.true.unr, %do.body15.unr
  %cond.unr = phi i16 [ %phitmp.unr, %cond.true.unr ], [ 0, %do.body15.unr ]
  store i16 %cond.unr, i16* %incdec.ptr.unr, align 2, !tbaa !81
  %dec.unr = add i32 %resume.val327, -1
  %tobool.unr = icmp eq i32 %dec.unr, 0
  br label %do.body15.preheader.split

do.body15.preheader.split:                        ; preds = %cond.end.unr, %do.body15.preheader
  %p.0.unr = phi i16* [ %resume.val323, %do.body15.preheader ], [ %incdec.ptr.unr, %cond.end.unr ]
  %n.0.unr = phi i32 [ %resume.val327, %do.body15.preheader ], [ %dec.unr, %cond.end.unr ]
  %33 = icmp ult i32 %resume.val327, 2
  br i1 %33, label %do.end.loopexit, label %do.body15.preheader.split.split

do.body15.preheader.split.split:                  ; preds = %do.body15.preheader.split
  br label %do.body15

do.body15:                                        ; preds = %cond.end.1, %do.body15.preheader.split.split
  %p.0 = phi i16* [ %p.0.unr, %do.body15.preheader.split.split ], [ %incdec.ptr.1, %cond.end.1 ]
  %n.0 = phi i32 [ %n.0.unr, %do.body15.preheader.split.split ], [ %dec.1, %cond.end.1 ]
  %incdec.ptr = getelementptr inbounds i16* %p.0, i64 -1
  %34 = load i16* %incdec.ptr, align 2, !tbaa !81
  %conv16 = zext i16 %34 to i32
  %cmp17 = icmp ult i32 %conv16, %0
  br i1 %cmp17, label %cond.end, label %cond.true

cond.true:                                        ; preds = %do.body15
  %sub19 = sub i32 %conv16, %0
  %phitmp = trunc i32 %sub19 to i16
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %do.body15
  %cond = phi i16 [ %phitmp, %cond.true ], [ 0, %do.body15 ]
  store i16 %cond, i16* %incdec.ptr, align 2, !tbaa !81
  %dec = add i32 %n.0, -1
  %incdec.ptr.1 = getelementptr inbounds i16* %incdec.ptr, i64 -1
  %35 = load i16* %incdec.ptr.1, align 2, !tbaa !81
  %conv16.1 = zext i16 %35 to i32
  %cmp17.1 = icmp ult i32 %conv16.1, %0
  br i1 %cmp17.1, label %cond.end.1, label %cond.true.1

do.end.loopexit.unr-lcssa:                        ; preds = %cond.end.1
  br label %do.end.loopexit

do.end.loopexit:                                  ; preds = %do.end.loopexit.unr-lcssa, %do.body15.preheader.split
  br label %do.end

do.end:                                           ; preds = %do.end.loopexit, %middle.block314
  %36 = load i16** %prev93, align 8, !tbaa !62
  %arrayidx22 = getelementptr inbounds i16* %36, i64 %idx.ext
  %end.idx = add nuw nsw i64 %2, 1
  %n.vec = and i64 %3, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %arrayidx22.sum = sub i64 %idx.ext, %n.vec
  %rev.ptr.ind.end = getelementptr i16* %36, i64 %arrayidx22.sum
  %cast.crd = trunc i64 %n.vec to i32
  %rev.ind.end279 = sub i32 %0, %cast.crd
  br i1 %cmp.zero, label %middle.block, label %vector.ph

vector.ph:                                        ; preds = %do.end
  %broadcast.splatinsert305 = insertelement <4 x i32> undef, i32 %0, i32 0
  %broadcast.splat306 = shufflevector <4 x i32> %broadcast.splatinsert305, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %arrayidx22.sum386 = sub i64 %idx.ext, %index
  %.sum394 = add i64 %arrayidx22.sum386, -4
  %37 = getelementptr i16* %36, i64 %.sum394
  %38 = bitcast i16* %37 to <4 x i16>*
  %wide.load = load <4 x i16>* %38, align 2, !tbaa !81
  %reverse = shufflevector <4 x i16> %wide.load, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %.sum396 = add i64 %arrayidx22.sum386, -8
  %39 = getelementptr i16* %36, i64 %.sum396
  %40 = bitcast i16* %39 to <4 x i16>*
  %wide.load303 = load <4 x i16>* %40, align 2, !tbaa !81
  %reverse304 = shufflevector <4 x i16> %wide.load303, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %41 = zext <4 x i16> %reverse to <4 x i32>
  %42 = zext <4 x i16> %reverse304 to <4 x i32>
  %43 = icmp ult <4 x i32> %41, %broadcast.splat306
  %44 = icmp ult <4 x i32> %42, %broadcast.splat306
  %45 = sub <4 x i32> %41, %broadcast.splat306
  %46 = sub <4 x i32> %42, %broadcast.splat306
  %47 = trunc <4 x i32> %45 to <4 x i16>
  %48 = trunc <4 x i32> %46 to <4 x i16>
  %predphi = select <4 x i1> %43, <4 x i16> zeroinitializer, <4 x i16> %47
  %predphi307 = select <4 x i1> %44, <4 x i16> zeroinitializer, <4 x i16> %48
  %reverse308 = shufflevector <4 x i16> %predphi, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %49 = bitcast i16* %37 to <4 x i16>*
  store <4 x i16> %reverse308, <4 x i16>* %49, align 2, !tbaa !81
  %reverse309 = shufflevector <4 x i16> %predphi307, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %50 = bitcast i16* %39 to <4 x i16>*
  store <4 x i16> %reverse309, <4 x i16>* %50, align 2, !tbaa !81
  %index.next = add i64 %index, 8
  %51 = icmp eq i64 %index.next, %n.vec
  br i1 %51, label %middle.block.loopexit, label %vector.body, !llvm.loop !119

middle.block.loopexit:                            ; preds = %vector.body
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %do.end
  %resume.val = phi i16* [ %arrayidx22, %do.end ], [ %rev.ptr.ind.end, %middle.block.loopexit ]
  %resume.val277 = phi i32 [ %0, %do.end ], [ %rev.ind.end279, %middle.block.loopexit ]
  %new.indc.resume.val = phi i64 [ 0, %do.end ], [ %n.vec, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %end.idx, %new.indc.resume.val
  br i1 %cmp.n, label %do.end37, label %do.body23.preheader

do.body23.preheader:                              ; preds = %middle.block
  %xtraiter397 = and i32 %resume.val277, 1
  %lcmp.mod398 = icmp ne i32 %xtraiter397, 0
  %lcmp.overflow399 = icmp eq i32 %resume.val277, 0
  %lcmp.or400 = or i1 %lcmp.overflow399, %lcmp.mod398
  br i1 %lcmp.or400, label %do.body23.unr, label %do.body23.preheader.split

do.body23.unr:                                    ; preds = %do.body23.preheader
  %incdec.ptr24.unr = getelementptr inbounds i16* %resume.val, i64 -1
  %52 = load i16* %incdec.ptr24.unr, align 2, !tbaa !81
  %conv25.unr = zext i16 %52 to i32
  %cmp26.unr = icmp ult i32 %conv25.unr, %0
  br i1 %cmp26.unr, label %cond.end31.unr, label %cond.true28.unr

cond.true28.unr:                                  ; preds = %do.body23.unr
  %sub29.unr = sub i32 %conv25.unr, %0
  %phitmp272.unr = trunc i32 %sub29.unr to i16
  br label %cond.end31.unr

cond.end31.unr:                                   ; preds = %cond.true28.unr, %do.body23.unr
  %cond32.unr = phi i16 [ %phitmp272.unr, %cond.true28.unr ], [ 0, %do.body23.unr ]
  store i16 %cond32.unr, i16* %incdec.ptr24.unr, align 2, !tbaa !81
  %dec35.unr = add i32 %resume.val277, -1
  %tobool36.unr = icmp eq i32 %dec35.unr, 0
  br label %do.body23.preheader.split

do.body23.preheader.split:                        ; preds = %cond.end31.unr, %do.body23.preheader
  %p.1.unr = phi i16* [ %resume.val, %do.body23.preheader ], [ %incdec.ptr24.unr, %cond.end31.unr ]
  %n.1.unr = phi i32 [ %resume.val277, %do.body23.preheader ], [ %dec35.unr, %cond.end31.unr ]
  %53 = icmp ult i32 %resume.val277, 2
  br i1 %53, label %do.end37.loopexit, label %do.body23.preheader.split.split

do.body23.preheader.split.split:                  ; preds = %do.body23.preheader.split
  br label %do.body23

do.body23:                                        ; preds = %cond.end31.1, %do.body23.preheader.split.split
  %p.1 = phi i16* [ %p.1.unr, %do.body23.preheader.split.split ], [ %incdec.ptr24.1, %cond.end31.1 ]
  %n.1 = phi i32 [ %n.1.unr, %do.body23.preheader.split.split ], [ %dec35.1, %cond.end31.1 ]
  %incdec.ptr24 = getelementptr inbounds i16* %p.1, i64 -1
  %54 = load i16* %incdec.ptr24, align 2, !tbaa !81
  %conv25 = zext i16 %54 to i32
  %cmp26 = icmp ult i32 %conv25, %0
  br i1 %cmp26, label %cond.end31, label %cond.true28

cond.true28:                                      ; preds = %do.body23
  %sub29 = sub i32 %conv25, %0
  %phitmp272 = trunc i32 %sub29 to i16
  br label %cond.end31

cond.end31:                                       ; preds = %cond.true28, %do.body23
  %cond32 = phi i16 [ %phitmp272, %cond.true28 ], [ 0, %do.body23 ]
  store i16 %cond32, i16* %incdec.ptr24, align 2, !tbaa !81
  %dec35 = add i32 %n.1, -1
  %incdec.ptr24.1 = getelementptr inbounds i16* %incdec.ptr24, i64 -1
  %55 = load i16* %incdec.ptr24.1, align 2, !tbaa !81
  %conv25.1 = zext i16 %55 to i32
  %cmp26.1 = icmp ult i32 %conv25.1, %0
  br i1 %cmp26.1, label %cond.end31.1, label %cond.true28.1

do.end37.loopexit.unr-lcssa:                      ; preds = %cond.end31.1
  br label %do.end37.loopexit

do.end37.loopexit:                                ; preds = %do.end37.loopexit.unr-lcssa, %do.body23.preheader.split
  br label %do.end37

do.end37:                                         ; preds = %do.end37.loopexit, %middle.block
  %add38 = add i32 %conv3, %0
  br label %if.end

if.end:                                           ; preds = %do.end37, %do.body
  %56 = phi i32 [ %sub12, %do.end37 ], [ %7, %do.body ]
  %more.0 = phi i32 [ %add38, %do.end37 ], [ %conv3, %do.body ]
  %57 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_in = getelementptr inbounds %struct.z_stream_s.10* %57, i64 0, i32 1
  %58 = load i32* %avail_in, align 4, !tbaa !32
  %cmp39 = icmp eq i32 %58, 0
  br i1 %cmp39, label %do.end118, label %if.end42

if.end42:                                         ; preds = %if.end
  %59 = load i8** %window44, align 8, !tbaa !61
  %idx.ext46 = zext i32 %56 to i64
  %60 = load i32* %lookahead, align 4, !tbaa !93
  %idx.ext49 = zext i32 %60 to i64
  %add.ptr47.sum = add nuw nsw i64 %idx.ext49, %idx.ext46
  %add.ptr50 = getelementptr inbounds i8* %59, i64 %add.ptr47.sum
  %cmp.i = icmp ugt i32 %58, %more.0
  %size..i = select i1 %cmp.i, i32 %more.0, i32 %58
  %cmp1.i = icmp eq i32 %size..i, 0
  br i1 %cmp1.i, label %read_buf.exit, label %if.end3.i

if.end3.i:                                        ; preds = %if.end42
  %sub.i = sub i32 %58, %size..i
  store i32 %sub.i, i32* %avail_in, align 4, !tbaa !32
  %next_in.i = getelementptr inbounds %struct.z_stream_s.10* %57, i64 0, i32 0
  %61 = load i8** %next_in.i, align 8, !tbaa !37
  %conv.i = zext i32 %size..i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr50, i8* %61, i64 %conv.i, i32 1, i1 false) #4
  %state.i = getelementptr inbounds %struct.z_stream_s.10* %57, i64 0, i32 7
  %62 = load %struct.internal_state.11** %state.i, align 8, !tbaa !47
  %wrap.i = getelementptr inbounds %struct.internal_state.11* %62, i64 0, i32 6
  %63 = load i32* %wrap.i, align 4, !tbaa !52
  switch i32 %63, label %if.end18.i [
    i32 1, label %if.then7.i
    i32 2, label %if.then13.i
  ]

if.then7.i:                                       ; preds = %if.end3.i
  %adler.i = getelementptr inbounds %struct.z_stream_s.10* %57, i64 0, i32 12
  %64 = load i64* %adler.i, align 8, !tbaa !78
  %call.i = tail call i64 @adler32(i64 %64, i8* %add.ptr50, i32 %size..i) #4
  store i64 %call.i, i64* %adler.i, align 8, !tbaa !78
  br label %if.end18.i

if.then13.i:                                      ; preds = %if.end3.i
  %adler14.i = getelementptr inbounds %struct.z_stream_s.10* %57, i64 0, i32 12
  %65 = load i64* %adler14.i, align 8, !tbaa !78
  %call15.i = tail call i64 @crc32(i64 %65, i8* %add.ptr50, i32 %size..i) #4
  store i64 %call15.i, i64* %adler14.i, align 8, !tbaa !78
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then13.i, %if.then7.i, %if.end3.i
  %66 = load i8** %next_in.i, align 8, !tbaa !37
  %add.ptr.i = getelementptr inbounds i8* %66, i64 %conv.i
  store i8* %add.ptr.i, i8** %next_in.i, align 8, !tbaa !37
  %total_in.i = getelementptr inbounds %struct.z_stream_s.10* %57, i64 0, i32 2
  %67 = load i64* %total_in.i, align 8, !tbaa !74
  %add.i = add i64 %67, %conv.i
  store i64 %add.i, i64* %total_in.i, align 8, !tbaa !74
  %.pre275 = load i32* %lookahead, align 4, !tbaa !93
  br label %read_buf.exit

read_buf.exit:                                    ; preds = %if.end18.i, %if.end42
  %68 = phi i32 [ %.pre275, %if.end18.i ], [ %60, %if.end42 ]
  %retval.0.i = phi i32 [ %size..i, %if.end18.i ], [ 0, %if.end42 ]
  %add52 = add i32 %68, %retval.0.i
  store i32 %add52, i32* %lookahead, align 4, !tbaa !93
  %69 = load i32* %insert, align 4, !tbaa !94
  %add54 = add i32 %add52, %69
  %cmp55 = icmp ugt i32 %add54, 2
  br i1 %cmp55, label %if.then57, label %do.cond110

if.then57:                                        ; preds = %read_buf.exit
  %70 = load i32* %strstart, align 4, !tbaa !91
  %sub60 = sub i32 %70, %69
  %idxprom61 = zext i32 %sub60 to i64
  %71 = load i8** %window44, align 8, !tbaa !61
  %arrayidx63 = getelementptr inbounds i8* %71, i64 %idxprom61
  %72 = load i8* %arrayidx63, align 1, !tbaa !5
  %conv64 = zext i8 %72 to i32
  store i32 %conv64, i32* %ins_h, align 4, !tbaa !98
  %73 = load i32* %hash_shift, align 4, !tbaa !60
  %shl = shl i32 %conv64, %73
  %add66 = add i32 %sub60, 1
  %idxprom67 = zext i32 %add66 to i64
  %arrayidx69 = getelementptr inbounds i8* %71, i64 %idxprom67
  %74 = load i8* %arrayidx69, align 1, !tbaa !5
  %conv70 = zext i8 %74 to i32
  %xor = xor i32 %conv70, %shl
  %75 = load i32* %hash_mask, align 4, !tbaa !59
  %and = and i32 %xor, %75
  store i32 %and, i32* %ins_h, align 4, !tbaa !98
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then57
  %76 = phi i32 [ %and85, %while.body ], [ %and, %if.then57 ]
  %77 = phi i32 [ %dec101, %while.body ], [ %69, %if.then57 ]
  %str.0 = phi i32 [ %inc, %while.body ], [ %sub60, %if.then57 ]
  %tobool73 = icmp eq i32 %77, 0
  br i1 %tobool73, label %do.cond110.loopexit, label %while.body

while.body:                                       ; preds = %while.cond
  %shl76 = shl i32 %76, %73
  %sub78 = add i32 %str.0, 2
  %idxprom79 = zext i32 %sub78 to i64
  %arrayidx81 = getelementptr inbounds i8* %71, i64 %idxprom79
  %78 = load i8* %arrayidx81, align 1, !tbaa !5
  %conv82 = zext i8 %78 to i32
  %xor83 = xor i32 %conv82, %shl76
  %and85 = and i32 %xor83, %75
  store i32 %and85, i32* %ins_h, align 4, !tbaa !98
  %idxprom88 = zext i32 %and85 to i64
  %79 = load i16** %head89, align 8, !tbaa !63
  %arrayidx90 = getelementptr inbounds i16* %79, i64 %idxprom88
  %80 = load i16* %arrayidx90, align 2, !tbaa !81
  %81 = load i32* %w_mask, align 4, !tbaa !56
  %and91 = and i32 %81, %str.0
  %idxprom92 = zext i32 %and91 to i64
  %82 = load i16** %prev93, align 8, !tbaa !62
  %arrayidx94 = getelementptr inbounds i16* %82, i64 %idxprom92
  store i16 %80, i16* %arrayidx94, align 2, !tbaa !81
  %conv95 = trunc i32 %str.0 to i16
  store i16 %conv95, i16* %arrayidx90, align 2, !tbaa !81
  %inc = add i32 %str.0, 1
  %dec101 = add i32 %77, -1
  store i32 %dec101, i32* %insert, align 4, !tbaa !94
  %add104 = add i32 %add52, %dec101
  %cmp105 = icmp ult i32 %add104, 3
  br i1 %cmp105, label %do.cond110.loopexit, label %while.cond

do.cond110.loopexit:                              ; preds = %while.body, %while.cond
  br label %do.cond110

do.cond110:                                       ; preds = %do.cond110.loopexit, %read_buf.exit
  %cmp112 = icmp ult i32 %add52, 262
  br i1 %cmp112, label %land.rhs, label %do.end118

land.rhs:                                         ; preds = %do.cond110
  %83 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_in115 = getelementptr inbounds %struct.z_stream_s.10* %83, i64 0, i32 1
  %84 = load i32* %avail_in115, align 4, !tbaa !32
  %cmp116 = icmp eq i32 %84, 0
  br i1 %cmp116, label %do.end118, label %land.rhs.do.body_crit_edge

land.rhs.do.body_crit_edge:                       ; preds = %land.rhs
  %.pre274 = load i32* %w_size, align 4, !tbaa !55
  br label %do.body

do.end118:                                        ; preds = %land.rhs, %do.cond110, %if.end
  %high_water = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 58
  %85 = load i64* %high_water, align 8, !tbaa !64
  %86 = load i64* %window_size, align 8, !tbaa !80
  %cmp120 = icmp ugt i64 %86, %85
  br i1 %cmp120, label %if.then122, label %if.end171

if.then122:                                       ; preds = %do.end118
  %87 = load i32* %strstart, align 4, !tbaa !91
  %conv124 = zext i32 %87 to i64
  %88 = load i32* %lookahead, align 4, !tbaa !93
  %conv126 = zext i32 %88 to i64
  %add127 = add nuw nsw i64 %conv126, %conv124
  %cmp129 = icmp ult i64 %85, %add127
  br i1 %cmp129, label %if.then131, label %if.else

if.then131:                                       ; preds = %if.then122
  %sub133 = sub i64 %86, %add127
  %cmp134 = icmp ugt i64 %sub133, 258
  %.sub133 = select i1 %cmp134, i64 258, i64 %sub133
  %89 = load i8** %window44, align 8, !tbaa !61
  %add.ptr139 = getelementptr inbounds i8* %89, i64 %add127
  %conv141 = and i64 %.sub133, 4294967295
  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr139, i8 0, i64 %conv141, i32 1, i1 false)
  %add142 = add i64 %.sub133, %add127
  store i64 %add142, i64* %high_water, align 8, !tbaa !64
  br label %if.end171

if.else:                                          ; preds = %if.then122
  %add145 = add nuw nsw i64 %add127, 258
  %cmp146 = icmp ugt i64 %add145, %85
  br i1 %cmp146, label %if.then148, label %if.end171

if.then148:                                       ; preds = %if.else
  %sub151 = sub i64 %add145, %85
  %sub154 = sub i64 %86, %85
  %cmp155 = icmp ugt i64 %sub151, %sub154
  %sub154.sub151 = select i1 %cmp155, i64 %sub154, i64 %sub151
  %90 = load i8** %window44, align 8, !tbaa !61
  %add.ptr164 = getelementptr inbounds i8* %90, i64 %85
  %conv166 = and i64 %sub154.sub151, 4294967295
  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr164, i8 0, i64 %conv166, i32 1, i1 false)
  %91 = load i64* %high_water, align 8, !tbaa !64
  %add168 = add i64 %91, %sub154.sub151
  store i64 %add168, i64* %high_water, align 8, !tbaa !64
  br label %if.end171

if.end171:                                        ; preds = %if.then148, %if.else, %if.then131, %do.end118
  ret void

cond.true.1:                                      ; preds = %cond.end
  %sub19.1 = sub i32 %conv16.1, %0
  %phitmp.1 = trunc i32 %sub19.1 to i16
  br label %cond.end.1

cond.end.1:                                       ; preds = %cond.true.1, %cond.end
  %cond.1 = phi i16 [ %phitmp.1, %cond.true.1 ], [ 0, %cond.end ]
  store i16 %cond.1, i16* %incdec.ptr.1, align 2, !tbaa !81
  %dec.1 = add i32 %dec, -1
  %tobool.1 = icmp eq i32 %dec.1, 0
  br i1 %tobool.1, label %do.end.loopexit.unr-lcssa, label %do.body15, !llvm.loop !120

cond.true28.1:                                    ; preds = %cond.end31
  %sub29.1 = sub i32 %conv25.1, %0
  %phitmp272.1 = trunc i32 %sub29.1 to i16
  br label %cond.end31.1

cond.end31.1:                                     ; preds = %cond.true28.1, %cond.end31
  %cond32.1 = phi i16 [ %phitmp272.1, %cond.true28.1 ], [ 0, %cond.end31 ]
  store i16 %cond32.1, i16* %incdec.ptr24.1, align 2, !tbaa !81
  %dec35.1 = add i32 %dec35, -1
  %tobool36.1 = icmp eq i32 %dec35.1, 0
  br i1 %tobool36.1, label %do.end37.loopexit.unr-lcssa, label %do.body23, !llvm.loop !121
}

; Function Attrs: nounwind uwtable
define internal i32 @deflate_stored(%struct.internal_state.11* %s, i32 %flush) #3 {
entry:
  %pending_buf_size = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 3
  %0 = load i64* %pending_buf_size, align 8, !tbaa !67
  %sub = add i64 %0, -5
  %cmp = icmp ult i64 %sub, 65535
  %sub. = select i1 %cmp, i64 %sub, i64 65535
  %lookahead = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 29
  %strstart = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 27
  %block_start = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 23
  %w_size = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 11
  %window64 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 14
  %strm76 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 0
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %entry
  %1 = load i32* %lookahead, align 4, !tbaa !93
  %cmp3 = icmp ult i32 %1, 2
  br i1 %cmp3, label %if.then4, label %if.end14

if.then4:                                         ; preds = %for.cond
  tail call fastcc void @fill_window(%struct.internal_state.11* %s)
  %2 = load i32* %lookahead, align 4, !tbaa !93
  %3 = or i32 %2, %flush
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %return.loopexit, label %if.end9

if.end9:                                          ; preds = %if.then4
  %cmp6 = icmp eq i32 %2, 0
  br i1 %cmp6, label %for.end, label %if.end14

if.end14:                                         ; preds = %if.end9, %for.cond
  %5 = phi i32 [ %2, %if.end9 ], [ %1, %for.cond ]
  %6 = load i32* %strstart, align 4, !tbaa !91
  %add = add i32 %6, %5
  store i32 %add, i32* %strstart, align 4, !tbaa !91
  store i32 0, i32* %lookahead, align 4, !tbaa !93
  %7 = load i64* %block_start, align 8, !tbaa !92
  %add17 = add i64 %7, %sub.
  %cmp19 = icmp ne i32 %add, 0
  %conv = zext i32 %add to i64
  %cmp21 = icmp ult i64 %conv, %add17
  %or.cond = and i1 %cmp19, %cmp21
  br i1 %or.cond, label %if.end48, label %if.then23

if.then23:                                        ; preds = %if.end14
  %sub26 = sub i64 %conv, %add17
  %conv27 = trunc i64 %sub26 to i32
  store i32 %conv27, i32* %lookahead, align 4, !tbaa !93
  %conv29 = trunc i64 %add17 to i32
  store i32 %conv29, i32* %strstart, align 4, !tbaa !91
  %cmp32 = icmp sgt i64 %7, -1
  br i1 %cmp32, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.then23
  %idxprom = and i64 %7, 4294967295
  %8 = load i8** %window64, align 8, !tbaa !61
  %arrayidx = getelementptr inbounds i8* %8, i64 %idxprom
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then23
  %cond = phi i8* [ %arrayidx, %cond.true ], [ null, %if.then23 ]
  %conv37 = and i64 %add17, 4294967295
  %sub39 = sub nsw i64 %conv37, %7
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond, i64 %sub39, i32 0) #4
  %9 = load i32* %strstart, align 4, !tbaa !91
  %conv41 = zext i32 %9 to i64
  store i64 %conv41, i64* %block_start, align 8, !tbaa !92
  %10 = load %struct.z_stream_s.10** %strm76, align 8, !tbaa !48
  %state.i = getelementptr inbounds %struct.z_stream_s.10* %10, i64 0, i32 7
  %11 = load %struct.internal_state.11** %state.i, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %11) #4
  %pending.i = getelementptr inbounds %struct.internal_state.11* %11, i64 0, i32 5
  %12 = load i32* %pending.i, align 4, !tbaa !76
  %avail_out.i = getelementptr inbounds %struct.z_stream_s.10* %10, i64 0, i32 4
  %13 = load i32* %avail_out.i, align 4, !tbaa !33
  %cmp.i = icmp ugt i32 %12, %13
  %..i = select i1 %cmp.i, i32 %13, i32 %12
  %cmp2.i = icmp eq i32 %..i, 0
  br i1 %cmp2.i, label %flush_pending.exit, label %if.end4.i

if.end4.i:                                        ; preds = %cond.end
  %next_out.i = getelementptr inbounds %struct.z_stream_s.10* %10, i64 0, i32 3
  %14 = load i8** %next_out.i, align 8, !tbaa !34
  %pending_out.i = getelementptr inbounds %struct.internal_state.11* %11, i64 0, i32 4
  %15 = load i8** %pending_out.i, align 8, !tbaa !77
  %conv.i = zext i32 %..i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 %conv.i, i32 1, i1 false) #4
  %16 = load i8** %next_out.i, align 8, !tbaa !34
  %add.ptr.i = getelementptr inbounds i8* %16, i64 %conv.i
  store i8* %add.ptr.i, i8** %next_out.i, align 8, !tbaa !34
  %17 = load i8** %pending_out.i, align 8, !tbaa !77
  %add.ptr8.i = getelementptr inbounds i8* %17, i64 %conv.i
  store i8* %add.ptr8.i, i8** %pending_out.i, align 8, !tbaa !77
  %total_out.i = getelementptr inbounds %struct.z_stream_s.10* %10, i64 0, i32 5
  %18 = load i64* %total_out.i, align 8, !tbaa !112
  %add.i = add i64 %18, %conv.i
  store i64 %add.i, i64* %total_out.i, align 8, !tbaa !112
  %19 = load i32* %avail_out.i, align 4, !tbaa !33
  %sub.i = sub i32 %19, %..i
  store i32 %sub.i, i32* %avail_out.i, align 4, !tbaa !33
  %20 = load i32* %pending.i, align 4, !tbaa !76
  %sub12.i = sub i32 %20, %..i
  store i32 %sub12.i, i32* %pending.i, align 4, !tbaa !76
  %cmp14.i = icmp eq i32 %20, %..i
  br i1 %cmp14.i, label %if.then16.i, label %flush_pending.exit

if.then16.i:                                      ; preds = %if.end4.i
  %pending_buf.i = getelementptr inbounds %struct.internal_state.11* %11, i64 0, i32 2
  %21 = load i8** %pending_buf.i, align 8, !tbaa !66
  store i8* %21, i8** %pending_out.i, align 8, !tbaa !77
  br label %flush_pending.exit

flush_pending.exit:                               ; preds = %if.then16.i, %if.end4.i, %cond.end
  %22 = load %struct.z_stream_s.10** %strm76, align 8, !tbaa !48
  %avail_out = getelementptr inbounds %struct.z_stream_s.10* %22, i64 0, i32 4
  %23 = load i32* %avail_out, align 4, !tbaa !33
  %cmp44 = icmp eq i32 %23, 0
  br i1 %cmp44, label %return.loopexit, label %flush_pending.exit.if.end48_crit_edge

flush_pending.exit.if.end48_crit_edge:            ; preds = %flush_pending.exit
  %.pre = load i32* %strstart, align 4, !tbaa !91
  %.pre270 = load i64* %block_start, align 8, !tbaa !92
  br label %if.end48

if.end48:                                         ; preds = %flush_pending.exit.if.end48_crit_edge, %if.end14
  %24 = phi i64 [ %.pre270, %flush_pending.exit.if.end48_crit_edge ], [ %7, %if.end14 ]
  %25 = phi i32 [ %.pre, %flush_pending.exit.if.end48_crit_edge ], [ %add, %if.end14 ]
  %conv51 = trunc i64 %24 to i32
  %sub52 = sub i32 %25, %conv51
  %26 = load i32* %w_size, align 4, !tbaa !55
  %sub53 = add i32 %26, -262
  %cmp54 = icmp ult i32 %sub52, %sub53
  br i1 %cmp54, label %for.cond.backedge, label %if.then56

if.then56:                                        ; preds = %if.end48
  %cmp58 = icmp sgt i64 %24, -1
  br i1 %cmp58, label %cond.true60, label %cond.end67

cond.true60:                                      ; preds = %if.then56
  %idxprom63 = and i64 %24, 4294967295
  %27 = load i8** %window64, align 8, !tbaa !61
  %arrayidx65 = getelementptr inbounds i8* %27, i64 %idxprom63
  br label %cond.end67

cond.end67:                                       ; preds = %cond.true60, %if.then56
  %cond68 = phi i8* [ %arrayidx65, %cond.true60 ], [ null, %if.then56 ]
  %conv70 = zext i32 %25 to i64
  %sub72 = sub nsw i64 %conv70, %24
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond68, i64 %sub72, i32 0) #4
  %28 = load i32* %strstart, align 4, !tbaa !91
  %conv74 = zext i32 %28 to i64
  store i64 %conv74, i64* %block_start, align 8, !tbaa !92
  %29 = load %struct.z_stream_s.10** %strm76, align 8, !tbaa !48
  %state.i210 = getelementptr inbounds %struct.z_stream_s.10* %29, i64 0, i32 7
  %30 = load %struct.internal_state.11** %state.i210, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %30) #4
  %pending.i211 = getelementptr inbounds %struct.internal_state.11* %30, i64 0, i32 5
  %31 = load i32* %pending.i211, align 4, !tbaa !76
  %avail_out.i212 = getelementptr inbounds %struct.z_stream_s.10* %29, i64 0, i32 4
  %32 = load i32* %avail_out.i212, align 4, !tbaa !33
  %cmp.i213 = icmp ugt i32 %31, %32
  %..i214 = select i1 %cmp.i213, i32 %32, i32 %31
  %cmp2.i215 = icmp eq i32 %..i214, 0
  br i1 %cmp2.i215, label %flush_pending.exit229, label %if.end4.i226

if.end4.i226:                                     ; preds = %cond.end67
  %next_out.i216 = getelementptr inbounds %struct.z_stream_s.10* %29, i64 0, i32 3
  %33 = load i8** %next_out.i216, align 8, !tbaa !34
  %pending_out.i217 = getelementptr inbounds %struct.internal_state.11* %30, i64 0, i32 4
  %34 = load i8** %pending_out.i217, align 8, !tbaa !77
  %conv.i218 = zext i32 %..i214 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 %conv.i218, i32 1, i1 false) #4
  %35 = load i8** %next_out.i216, align 8, !tbaa !34
  %add.ptr.i219 = getelementptr inbounds i8* %35, i64 %conv.i218
  store i8* %add.ptr.i219, i8** %next_out.i216, align 8, !tbaa !34
  %36 = load i8** %pending_out.i217, align 8, !tbaa !77
  %add.ptr8.i220 = getelementptr inbounds i8* %36, i64 %conv.i218
  store i8* %add.ptr8.i220, i8** %pending_out.i217, align 8, !tbaa !77
  %total_out.i221 = getelementptr inbounds %struct.z_stream_s.10* %29, i64 0, i32 5
  %37 = load i64* %total_out.i221, align 8, !tbaa !112
  %add.i222 = add i64 %37, %conv.i218
  store i64 %add.i222, i64* %total_out.i221, align 8, !tbaa !112
  %38 = load i32* %avail_out.i212, align 4, !tbaa !33
  %sub.i223 = sub i32 %38, %..i214
  store i32 %sub.i223, i32* %avail_out.i212, align 4, !tbaa !33
  %39 = load i32* %pending.i211, align 4, !tbaa !76
  %sub12.i224 = sub i32 %39, %..i214
  store i32 %sub12.i224, i32* %pending.i211, align 4, !tbaa !76
  %cmp14.i225 = icmp eq i32 %39, %..i214
  br i1 %cmp14.i225, label %if.then16.i228, label %flush_pending.exit229

if.then16.i228:                                   ; preds = %if.end4.i226
  %pending_buf.i227 = getelementptr inbounds %struct.internal_state.11* %30, i64 0, i32 2
  %40 = load i8** %pending_buf.i227, align 8, !tbaa !66
  store i8* %40, i8** %pending_out.i217, align 8, !tbaa !77
  br label %flush_pending.exit229

flush_pending.exit229:                            ; preds = %if.then16.i228, %if.end4.i226, %cond.end67
  %41 = load %struct.z_stream_s.10** %strm76, align 8, !tbaa !48
  %avail_out78 = getelementptr inbounds %struct.z_stream_s.10* %41, i64 0, i32 4
  %42 = load i32* %avail_out78, align 4, !tbaa !33
  %cmp79 = icmp eq i32 %42, 0
  br i1 %cmp79, label %return.loopexit, label %for.cond.backedge

for.cond.backedge:                                ; preds = %flush_pending.exit229, %if.end48
  br label %for.cond

for.end:                                          ; preds = %if.end9
  %insert = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 55
  store i32 0, i32* %insert, align 4, !tbaa !94
  %cmp84 = icmp eq i32 %flush, 4
  br i1 %cmp84, label %if.then86, label %if.end113

if.then86:                                        ; preds = %for.end
  %43 = load i64* %block_start, align 8, !tbaa !92
  %cmp88 = icmp sgt i64 %43, -1
  br i1 %cmp88, label %cond.true90, label %cond.end97

cond.true90:                                      ; preds = %if.then86
  %idxprom93 = and i64 %43, 4294967295
  %44 = load i8** %window64, align 8, !tbaa !61
  %arrayidx95 = getelementptr inbounds i8* %44, i64 %idxprom93
  br label %cond.end97

cond.end97:                                       ; preds = %cond.true90, %if.then86
  %cond98 = phi i8* [ %arrayidx95, %cond.true90 ], [ null, %if.then86 ]
  %45 = load i32* %strstart, align 4, !tbaa !91
  %conv100 = zext i32 %45 to i64
  %sub102 = sub nsw i64 %conv100, %43
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond98, i64 %sub102, i32 1) #4
  %46 = load i32* %strstart, align 4, !tbaa !91
  %conv104 = zext i32 %46 to i64
  store i64 %conv104, i64* %block_start, align 8, !tbaa !92
  %47 = load %struct.z_stream_s.10** %strm76, align 8, !tbaa !48
  %state.i230 = getelementptr inbounds %struct.z_stream_s.10* %47, i64 0, i32 7
  %48 = load %struct.internal_state.11** %state.i230, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %48) #4
  %pending.i231 = getelementptr inbounds %struct.internal_state.11* %48, i64 0, i32 5
  %49 = load i32* %pending.i231, align 4, !tbaa !76
  %avail_out.i232 = getelementptr inbounds %struct.z_stream_s.10* %47, i64 0, i32 4
  %50 = load i32* %avail_out.i232, align 4, !tbaa !33
  %cmp.i233 = icmp ugt i32 %49, %50
  %..i234 = select i1 %cmp.i233, i32 %50, i32 %49
  %cmp2.i235 = icmp eq i32 %..i234, 0
  br i1 %cmp2.i235, label %flush_pending.exit249, label %if.end4.i246

if.end4.i246:                                     ; preds = %cond.end97
  %next_out.i236 = getelementptr inbounds %struct.z_stream_s.10* %47, i64 0, i32 3
  %51 = load i8** %next_out.i236, align 8, !tbaa !34
  %pending_out.i237 = getelementptr inbounds %struct.internal_state.11* %48, i64 0, i32 4
  %52 = load i8** %pending_out.i237, align 8, !tbaa !77
  %conv.i238 = zext i32 %..i234 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 %conv.i238, i32 1, i1 false) #4
  %53 = load i8** %next_out.i236, align 8, !tbaa !34
  %add.ptr.i239 = getelementptr inbounds i8* %53, i64 %conv.i238
  store i8* %add.ptr.i239, i8** %next_out.i236, align 8, !tbaa !34
  %54 = load i8** %pending_out.i237, align 8, !tbaa !77
  %add.ptr8.i240 = getelementptr inbounds i8* %54, i64 %conv.i238
  store i8* %add.ptr8.i240, i8** %pending_out.i237, align 8, !tbaa !77
  %total_out.i241 = getelementptr inbounds %struct.z_stream_s.10* %47, i64 0, i32 5
  %55 = load i64* %total_out.i241, align 8, !tbaa !112
  %add.i242 = add i64 %55, %conv.i238
  store i64 %add.i242, i64* %total_out.i241, align 8, !tbaa !112
  %56 = load i32* %avail_out.i232, align 4, !tbaa !33
  %sub.i243 = sub i32 %56, %..i234
  store i32 %sub.i243, i32* %avail_out.i232, align 4, !tbaa !33
  %57 = load i32* %pending.i231, align 4, !tbaa !76
  %sub12.i244 = sub i32 %57, %..i234
  store i32 %sub12.i244, i32* %pending.i231, align 4, !tbaa !76
  %cmp14.i245 = icmp eq i32 %57, %..i234
  br i1 %cmp14.i245, label %if.then16.i248, label %flush_pending.exit249

if.then16.i248:                                   ; preds = %if.end4.i246
  %pending_buf.i247 = getelementptr inbounds %struct.internal_state.11* %48, i64 0, i32 2
  %58 = load i8** %pending_buf.i247, align 8, !tbaa !66
  store i8* %58, i8** %pending_out.i237, align 8, !tbaa !77
  br label %flush_pending.exit249

flush_pending.exit249:                            ; preds = %if.then16.i248, %if.end4.i246, %cond.end97
  %59 = load %struct.z_stream_s.10** %strm76, align 8, !tbaa !48
  %avail_out108 = getelementptr inbounds %struct.z_stream_s.10* %59, i64 0, i32 4
  %60 = load i32* %avail_out108, align 4, !tbaa !33
  %cmp109 = icmp eq i32 %60, 0
  %. = select i1 %cmp109, i32 2, i32 3
  br label %return

if.end113:                                        ; preds = %for.end
  %61 = load i32* %strstart, align 4, !tbaa !91
  %conv115 = zext i32 %61 to i64
  %62 = load i64* %block_start, align 8, !tbaa !92
  %cmp117 = icmp sgt i64 %conv115, %62
  br i1 %cmp117, label %if.then119, label %if.end146

if.then119:                                       ; preds = %if.end113
  %cmp121 = icmp sgt i64 %62, -1
  br i1 %cmp121, label %cond.true123, label %cond.end130

cond.true123:                                     ; preds = %if.then119
  %idxprom126 = and i64 %62, 4294967295
  %63 = load i8** %window64, align 8, !tbaa !61
  %arrayidx128 = getelementptr inbounds i8* %63, i64 %idxprom126
  br label %cond.end130

cond.end130:                                      ; preds = %cond.true123, %if.then119
  %cond131 = phi i8* [ %arrayidx128, %cond.true123 ], [ null, %if.then119 ]
  %sub135 = sub nsw i64 %conv115, %62
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond131, i64 %sub135, i32 0) #4
  %64 = load i32* %strstart, align 4, !tbaa !91
  %conv137 = zext i32 %64 to i64
  store i64 %conv137, i64* %block_start, align 8, !tbaa !92
  %65 = load %struct.z_stream_s.10** %strm76, align 8, !tbaa !48
  %state.i250 = getelementptr inbounds %struct.z_stream_s.10* %65, i64 0, i32 7
  %66 = load %struct.internal_state.11** %state.i250, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %66) #4
  %pending.i251 = getelementptr inbounds %struct.internal_state.11* %66, i64 0, i32 5
  %67 = load i32* %pending.i251, align 4, !tbaa !76
  %avail_out.i252 = getelementptr inbounds %struct.z_stream_s.10* %65, i64 0, i32 4
  %68 = load i32* %avail_out.i252, align 4, !tbaa !33
  %cmp.i253 = icmp ugt i32 %67, %68
  %..i254 = select i1 %cmp.i253, i32 %68, i32 %67
  %cmp2.i255 = icmp eq i32 %..i254, 0
  br i1 %cmp2.i255, label %flush_pending.exit269, label %if.end4.i266

if.end4.i266:                                     ; preds = %cond.end130
  %next_out.i256 = getelementptr inbounds %struct.z_stream_s.10* %65, i64 0, i32 3
  %69 = load i8** %next_out.i256, align 8, !tbaa !34
  %pending_out.i257 = getelementptr inbounds %struct.internal_state.11* %66, i64 0, i32 4
  %70 = load i8** %pending_out.i257, align 8, !tbaa !77
  %conv.i258 = zext i32 %..i254 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 %conv.i258, i32 1, i1 false) #4
  %71 = load i8** %next_out.i256, align 8, !tbaa !34
  %add.ptr.i259 = getelementptr inbounds i8* %71, i64 %conv.i258
  store i8* %add.ptr.i259, i8** %next_out.i256, align 8, !tbaa !34
  %72 = load i8** %pending_out.i257, align 8, !tbaa !77
  %add.ptr8.i260 = getelementptr inbounds i8* %72, i64 %conv.i258
  store i8* %add.ptr8.i260, i8** %pending_out.i257, align 8, !tbaa !77
  %total_out.i261 = getelementptr inbounds %struct.z_stream_s.10* %65, i64 0, i32 5
  %73 = load i64* %total_out.i261, align 8, !tbaa !112
  %add.i262 = add i64 %73, %conv.i258
  store i64 %add.i262, i64* %total_out.i261, align 8, !tbaa !112
  %74 = load i32* %avail_out.i252, align 4, !tbaa !33
  %sub.i263 = sub i32 %74, %..i254
  store i32 %sub.i263, i32* %avail_out.i252, align 4, !tbaa !33
  %75 = load i32* %pending.i251, align 4, !tbaa !76
  %sub12.i264 = sub i32 %75, %..i254
  store i32 %sub12.i264, i32* %pending.i251, align 4, !tbaa !76
  %cmp14.i265 = icmp eq i32 %75, %..i254
  br i1 %cmp14.i265, label %if.then16.i268, label %flush_pending.exit269

if.then16.i268:                                   ; preds = %if.end4.i266
  %pending_buf.i267 = getelementptr inbounds %struct.internal_state.11* %66, i64 0, i32 2
  %76 = load i8** %pending_buf.i267, align 8, !tbaa !66
  store i8* %76, i8** %pending_out.i257, align 8, !tbaa !77
  br label %flush_pending.exit269

flush_pending.exit269:                            ; preds = %if.then16.i268, %if.end4.i266, %cond.end130
  %77 = load %struct.z_stream_s.10** %strm76, align 8, !tbaa !48
  %avail_out141 = getelementptr inbounds %struct.z_stream_s.10* %77, i64 0, i32 4
  %78 = load i32* %avail_out141, align 4, !tbaa !33
  %cmp142 = icmp eq i32 %78, 0
  br i1 %cmp142, label %return, label %if.end146

if.end146:                                        ; preds = %flush_pending.exit269, %if.end113
  br label %return

return.loopexit:                                  ; preds = %flush_pending.exit229, %flush_pending.exit, %if.then4
  br label %return

return:                                           ; preds = %return.loopexit, %if.end146, %flush_pending.exit269, %flush_pending.exit249
  %retval.0 = phi i32 [ 1, %if.end146 ], [ %., %flush_pending.exit249 ], [ 0, %flush_pending.exit269 ], [ 0, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @deflate_fast(%struct.internal_state.11* %s, i32 %flush) #3 {
entry:
  %lookahead = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 29
  %cmp3 = icmp eq i32 %flush, 0
  %ins_h = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 18
  %hash_shift = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 22
  %strstart = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 27
  %window = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 14
  %hash_mask = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 21
  %head = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 17
  %w_mask = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 13
  %prev = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 16
  %w_size = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 11
  %match_length = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 24
  %match_start = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 28
  %last_lit = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 50
  %d_buf = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 51
  %l_buf = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 48
  %lit_bufsize = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 49
  %max_lazy_match = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 32
  %block_start = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 23
  %strm = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 0
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %entry
  %0 = load i32* %lookahead, align 4, !tbaa !93
  %cmp = icmp ult i32 %0, 262
  br i1 %cmp, label %if.then, label %if.end28

if.then:                                          ; preds = %for.cond
  tail call fastcc void @fill_window(%struct.internal_state.11* %s)
  %1 = load i32* %lookahead, align 4, !tbaa !93
  %cmp2 = icmp ult i32 %1, 262
  %or.cond = and i1 %cmp2, %cmp3
  br i1 %or.cond, label %return.loopexit, label %if.end

if.end:                                           ; preds = %if.then
  %cmp6 = icmp eq i32 %1, 0
  br i1 %cmp6, label %for.end, label %if.end9

if.end9:                                          ; preds = %if.end
  %cmp11 = icmp ugt i32 %1, 2
  br i1 %cmp11, label %if.end28, label %if.end37thread-pre-split

if.end28:                                         ; preds = %if.end9, %for.cond
  %2 = load i32* %ins_h, align 4, !tbaa !98
  %3 = load i32* %hash_shift, align 4, !tbaa !60
  %shl = shl i32 %2, %3
  %4 = load i32* %strstart, align 4, !tbaa !91
  %add = add i32 %4, 2
  %idxprom = zext i32 %add to i64
  %5 = load i8** %window, align 8, !tbaa !61
  %arrayidx = getelementptr inbounds i8* %5, i64 %idxprom
  %6 = load i8* %arrayidx, align 1, !tbaa !5
  %conv = zext i8 %6 to i32
  %xor = xor i32 %conv, %shl
  %7 = load i32* %hash_mask, align 4, !tbaa !59
  %and = and i32 %xor, %7
  store i32 %and, i32* %ins_h, align 4, !tbaa !98
  %idxprom15 = zext i32 %and to i64
  %8 = load i16** %head, align 8, !tbaa !63
  %arrayidx16 = getelementptr inbounds i16* %8, i64 %idxprom15
  %9 = load i16* %arrayidx16, align 2, !tbaa !81
  %10 = load i32* %w_mask, align 4, !tbaa !56
  %and18 = and i32 %10, %4
  %idxprom19 = zext i32 %and18 to i64
  %11 = load i16** %prev, align 8, !tbaa !62
  %arrayidx20 = getelementptr inbounds i16* %11, i64 %idxprom19
  store i16 %9, i16* %arrayidx20, align 2, !tbaa !81
  %conv21 = zext i16 %9 to i32
  %conv23 = trunc i32 %4 to i16
  store i16 %conv23, i16* %arrayidx16, align 2, !tbaa !81
  %cmp29 = icmp eq i16 %9, 0
  br i1 %cmp29, label %if.end37thread-pre-split, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %if.end28
  %sub = sub i32 %4, %conv21
  %12 = load i32* %w_size, align 4, !tbaa !55
  %sub33 = add i32 %12, -262
  %cmp34 = icmp ugt i32 %sub, %sub33
  br i1 %cmp34, label %if.end37thread-pre-split, label %if.then36

if.then36:                                        ; preds = %land.lhs.true31
  %call = tail call fastcc i32 @longest_match(%struct.internal_state.11* %s, i32 %conv21)
  store i32 %call, i32* %match_length, align 4, !tbaa !96
  br label %if.end37

if.end37thread-pre-split:                         ; preds = %land.lhs.true31, %if.end28, %if.end9
  %.pr = load i32* %match_length, align 4, !tbaa !96
  br label %if.end37

if.end37:                                         ; preds = %if.end37thread-pre-split, %if.then36
  %13 = phi i32 [ %.pr, %if.end37thread-pre-split ], [ %call, %if.then36 ]
  %cmp39 = icmp ugt i32 %13, 2
  br i1 %cmp39, label %if.then41, label %if.else156

if.then41:                                        ; preds = %if.end37
  %sub43 = add i32 %13, 253
  %conv44 = trunc i32 %sub43 to i8
  %14 = load i32* %strstart, align 4, !tbaa !91
  %15 = load i32* %match_start, align 4, !tbaa !117
  %sub46 = sub i32 %14, %15
  %conv47 = trunc i32 %sub46 to i16
  %16 = load i32* %last_lit, align 4, !tbaa !113
  %idxprom48 = zext i32 %16 to i64
  %17 = load i16** %d_buf, align 8, !tbaa !69
  %arrayidx49 = getelementptr inbounds i16* %17, i64 %idxprom48
  store i16 %conv47, i16* %arrayidx49, align 2, !tbaa !81
  %inc = add i32 %16, 1
  store i32 %inc, i32* %last_lit, align 4, !tbaa !113
  %18 = load i8** %l_buf, align 8, !tbaa !70
  %arrayidx52 = getelementptr inbounds i8* %18, i64 %idxprom48
  store i8 %conv44, i8* %arrayidx52, align 1, !tbaa !5
  %dec = add i16 %conv47, -1
  %conv44.mask = and i32 %sub43, 255
  %idxprom53 = zext i32 %conv44.mask to i64
  %arrayidx54 = getelementptr inbounds [0 x i8]* bitcast ([256 x i8]* @_length_code to [0 x i8]*), i64 0, i64 %idxprom53
  %19 = load i8* %arrayidx54, align 1, !tbaa !5
  %conv55 = zext i8 %19 to i64
  %add56399 = or i64 %conv55, 256
  %add57 = add nuw nsw i64 %add56399, 1
  %idxprom58400 = and i64 %add57, 1023
  %freq = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 37, i64 %idxprom58400, i32 0, i32 0
  %20 = load i16* %freq, align 2, !tbaa !81
  %inc60 = add i16 %20, 1
  store i16 %inc60, i16* %freq, align 2, !tbaa !81
  %cmp62 = icmp ult i16 %dec, 256
  br i1 %cmp62, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then41
  %idxprom64 = zext i16 %dec to i64
  br label %cond.end

cond.false:                                       ; preds = %if.then41
  %conv61 = zext i16 %dec to i32
  %shr401 = lshr i32 %conv61, 7
  %add68 = add nuw nsw i32 %shr401, 256
  %idxprom69402 = zext i32 %add68 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %idxprom64.pn = phi i64 [ %idxprom64, %cond.true ], [ %idxprom69402, %cond.false ]
  %.sink.in = getelementptr inbounds [0 x i8]* bitcast ([512 x i8]* @_dist_code to [0 x i8]*), i64 0, i64 %idxprom64.pn
  %.sink = load i8* %.sink.in, align 1
  %idxprom72 = zext i8 %.sink to i64
  %freq75 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 38, i64 %idxprom72, i32 0, i32 0
  %21 = load i16* %freq75, align 2, !tbaa !81
  %inc76 = add i16 %21, 1
  store i16 %inc76, i16* %freq75, align 2, !tbaa !81
  %22 = load i32* %last_lit, align 4, !tbaa !113
  %23 = load i32* %lit_bufsize, align 4, !tbaa !65
  %sub78 = add i32 %23, -1
  %cmp79 = icmp eq i32 %22, %sub78
  %conv80 = zext i1 %cmp79 to i32
  %24 = load i32* %match_length, align 4, !tbaa !96
  %25 = load i32* %lookahead, align 4, !tbaa !93
  %sub83 = sub i32 %25, %24
  store i32 %sub83, i32* %lookahead, align 4, !tbaa !93
  %26 = load i32* %max_lazy_match, align 4, !tbaa !84
  %cmp85 = icmp ule i32 %24, %26
  %cmp89 = icmp ugt i32 %sub83, 2
  %or.cond403 = and i1 %cmp85, %cmp89
  br i1 %or.cond403, label %if.then91, label %if.else

if.then91:                                        ; preds = %cond.end
  %dec93 = add i32 %24, -1
  store i32 %dec93, i32* %match_length, align 4, !tbaa !96
  %.pre = load i32* %strstart, align 4, !tbaa !91
  %.pre447 = load i32* %ins_h, align 4, !tbaa !98
  %.pre448 = load i32* %hash_shift, align 4, !tbaa !60
  %.pre449 = load i8** %window, align 8, !tbaa !61
  %.pre450 = load i32* %hash_mask, align 4, !tbaa !59
  %.pre451 = load i16** %head, align 8, !tbaa !63
  %.pre452 = load i32* %w_mask, align 4, !tbaa !56
  %.pre453 = load i16** %prev, align 8, !tbaa !62
  br label %do.body

do.body:                                          ; preds = %do.body, %if.then91
  %27 = phi i32 [ %dec127, %do.body ], [ %dec93, %if.then91 ]
  %28 = phi i32 [ %and107, %do.body ], [ %.pre447, %if.then91 ]
  %29 = phi i32 [ %inc95, %do.body ], [ %.pre, %if.then91 ]
  %inc95 = add i32 %29, 1
  store i32 %inc95, i32* %strstart, align 4, !tbaa !91
  %shl98 = shl i32 %28, %.pre448
  %add100 = add i32 %29, 3
  %idxprom101 = zext i32 %add100 to i64
  %arrayidx103 = getelementptr inbounds i8* %.pre449, i64 %idxprom101
  %30 = load i8* %arrayidx103, align 1, !tbaa !5
  %conv104 = zext i8 %30 to i32
  %xor105 = xor i32 %conv104, %shl98
  %and107 = and i32 %xor105, %.pre450
  store i32 %and107, i32* %ins_h, align 4, !tbaa !98
  %idxprom110 = zext i32 %and107 to i64
  %arrayidx112 = getelementptr inbounds i16* %.pre451, i64 %idxprom110
  %31 = load i16* %arrayidx112, align 2, !tbaa !81
  %and115 = and i32 %.pre452, %inc95
  %idxprom116 = zext i32 %and115 to i64
  %arrayidx118 = getelementptr inbounds i16* %.pre453, i64 %idxprom116
  store i16 %31, i16* %arrayidx118, align 2, !tbaa !81
  %conv121 = trunc i32 %inc95 to i16
  store i16 %conv121, i16* %arrayidx112, align 2, !tbaa !81
  %dec127 = add i32 %27, -1
  store i32 %dec127, i32* %match_length, align 4, !tbaa !96
  %cmp128 = icmp eq i32 %dec127, 0
  br i1 %cmp128, label %do.end, label %do.body

do.end:                                           ; preds = %do.body
  %.lcssa = phi i32 [ %29, %do.body ]
  %inc131 = add i32 %.lcssa, 2
  store i32 %inc131, i32* %strstart, align 4, !tbaa !91
  br label %if.end185

if.else:                                          ; preds = %cond.end
  %32 = load i32* %strstart, align 4, !tbaa !91
  %add134 = add i32 %32, %24
  store i32 %add134, i32* %strstart, align 4, !tbaa !91
  store i32 0, i32* %match_length, align 4, !tbaa !96
  %idxprom137 = zext i32 %add134 to i64
  %33 = load i8** %window, align 8, !tbaa !61
  %arrayidx139 = getelementptr inbounds i8* %33, i64 %idxprom137
  %34 = load i8* %arrayidx139, align 1, !tbaa !5
  %conv140 = zext i8 %34 to i32
  store i32 %conv140, i32* %ins_h, align 4, !tbaa !98
  %35 = load i32* %hash_shift, align 4, !tbaa !60
  %shl144 = shl i32 %conv140, %35
  %add146 = add i32 %add134, 1
  %idxprom147 = zext i32 %add146 to i64
  %arrayidx149 = getelementptr inbounds i8* %33, i64 %idxprom147
  %36 = load i8* %arrayidx149, align 1, !tbaa !5
  %conv150 = zext i8 %36 to i32
  %xor151 = xor i32 %conv150, %shl144
  %37 = load i32* %hash_mask, align 4, !tbaa !59
  %and153 = and i32 %xor151, %37
  store i32 %and153, i32* %ins_h, align 4, !tbaa !98
  br label %if.end185

if.else156:                                       ; preds = %if.end37
  %38 = load i32* %strstart, align 4, !tbaa !91
  %idxprom158 = zext i32 %38 to i64
  %39 = load i8** %window, align 8, !tbaa !61
  %arrayidx160 = getelementptr inbounds i8* %39, i64 %idxprom158
  %40 = load i8* %arrayidx160, align 1, !tbaa !5
  %41 = load i32* %last_lit, align 4, !tbaa !113
  %idxprom162 = zext i32 %41 to i64
  %42 = load i16** %d_buf, align 8, !tbaa !69
  %arrayidx164 = getelementptr inbounds i16* %42, i64 %idxprom162
  store i16 0, i16* %arrayidx164, align 2, !tbaa !81
  %inc166 = add i32 %41, 1
  store i32 %inc166, i32* %last_lit, align 4, !tbaa !113
  %43 = load i8** %l_buf, align 8, !tbaa !70
  %arrayidx169 = getelementptr inbounds i8* %43, i64 %idxprom162
  store i8 %40, i8* %arrayidx169, align 1, !tbaa !5
  %idxprom170 = zext i8 %40 to i64
  %freq174 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 37, i64 %idxprom170, i32 0, i32 0
  %44 = load i16* %freq174, align 2, !tbaa !81
  %inc175 = add i16 %44, 1
  store i16 %inc175, i16* %freq174, align 2, !tbaa !81
  %45 = load i32* %last_lit, align 4, !tbaa !113
  %46 = load i32* %lit_bufsize, align 4, !tbaa !65
  %sub178 = add i32 %46, -1
  %cmp179 = icmp eq i32 %45, %sub178
  %conv180 = zext i1 %cmp179 to i32
  %47 = load i32* %lookahead, align 4, !tbaa !93
  %dec182 = add i32 %47, -1
  store i32 %dec182, i32* %lookahead, align 4, !tbaa !93
  %48 = load i32* %strstart, align 4, !tbaa !91
  %inc184 = add i32 %48, 1
  store i32 %inc184, i32* %strstart, align 4, !tbaa !91
  br label %if.end185

if.end185:                                        ; preds = %if.else156, %if.else, %do.end
  %49 = phi i32 [ %inc131, %do.end ], [ %add134, %if.else ], [ %inc184, %if.else156 ]
  %bflush.0 = phi i32 [ %conv80, %do.end ], [ %conv80, %if.else ], [ %conv180, %if.else156 ]
  %tobool = icmp eq i32 %bflush.0, 0
  br i1 %tobool, label %for.cond.backedge, label %if.then186

if.then186:                                       ; preds = %if.end185
  %50 = load i64* %block_start, align 8, !tbaa !92
  %cmp187 = icmp sgt i64 %50, -1
  br i1 %cmp187, label %cond.true189, label %cond.end196

cond.true189:                                     ; preds = %if.then186
  %idxprom192 = and i64 %50, 4294967295
  %51 = load i8** %window, align 8, !tbaa !61
  %arrayidx194 = getelementptr inbounds i8* %51, i64 %idxprom192
  br label %cond.end196

cond.end196:                                      ; preds = %cond.true189, %if.then186
  %cond197 = phi i8* [ %arrayidx194, %cond.true189 ], [ null, %if.then186 ]
  %conv199 = zext i32 %49 to i64
  %sub201 = sub nsw i64 %conv199, %50
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond197, i64 %sub201, i32 0) #4
  %52 = load i32* %strstart, align 4, !tbaa !91
  %conv203 = zext i32 %52 to i64
  store i64 %conv203, i64* %block_start, align 8, !tbaa !92
  %53 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %state.i = getelementptr inbounds %struct.z_stream_s.10* %53, i64 0, i32 7
  %54 = load %struct.internal_state.11** %state.i, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %54) #4
  %pending.i = getelementptr inbounds %struct.internal_state.11* %54, i64 0, i32 5
  %55 = load i32* %pending.i, align 4, !tbaa !76
  %avail_out.i = getelementptr inbounds %struct.z_stream_s.10* %53, i64 0, i32 4
  %56 = load i32* %avail_out.i, align 4, !tbaa !33
  %cmp.i = icmp ugt i32 %55, %56
  %..i = select i1 %cmp.i, i32 %56, i32 %55
  %cmp2.i = icmp eq i32 %..i, 0
  br i1 %cmp2.i, label %flush_pending.exit, label %if.end4.i

if.end4.i:                                        ; preds = %cond.end196
  %next_out.i = getelementptr inbounds %struct.z_stream_s.10* %53, i64 0, i32 3
  %57 = load i8** %next_out.i, align 8, !tbaa !34
  %pending_out.i = getelementptr inbounds %struct.internal_state.11* %54, i64 0, i32 4
  %58 = load i8** %pending_out.i, align 8, !tbaa !77
  %conv.i = zext i32 %..i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 %conv.i, i32 1, i1 false) #4
  %59 = load i8** %next_out.i, align 8, !tbaa !34
  %add.ptr.i = getelementptr inbounds i8* %59, i64 %conv.i
  store i8* %add.ptr.i, i8** %next_out.i, align 8, !tbaa !34
  %60 = load i8** %pending_out.i, align 8, !tbaa !77
  %add.ptr8.i = getelementptr inbounds i8* %60, i64 %conv.i
  store i8* %add.ptr8.i, i8** %pending_out.i, align 8, !tbaa !77
  %total_out.i = getelementptr inbounds %struct.z_stream_s.10* %53, i64 0, i32 5
  %61 = load i64* %total_out.i, align 8, !tbaa !112
  %add.i = add i64 %61, %conv.i
  store i64 %add.i, i64* %total_out.i, align 8, !tbaa !112
  %62 = load i32* %avail_out.i, align 4, !tbaa !33
  %sub.i = sub i32 %62, %..i
  store i32 %sub.i, i32* %avail_out.i, align 4, !tbaa !33
  %63 = load i32* %pending.i, align 4, !tbaa !76
  %sub12.i = sub i32 %63, %..i
  store i32 %sub12.i, i32* %pending.i, align 4, !tbaa !76
  %cmp14.i = icmp eq i32 %63, %..i
  br i1 %cmp14.i, label %if.then16.i, label %flush_pending.exit

if.then16.i:                                      ; preds = %if.end4.i
  %pending_buf.i = getelementptr inbounds %struct.internal_state.11* %54, i64 0, i32 2
  %64 = load i8** %pending_buf.i, align 8, !tbaa !66
  store i8* %64, i8** %pending_out.i, align 8, !tbaa !77
  br label %flush_pending.exit

flush_pending.exit:                               ; preds = %if.then16.i, %if.end4.i, %cond.end196
  %65 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_out = getelementptr inbounds %struct.z_stream_s.10* %65, i64 0, i32 4
  %66 = load i32* %avail_out, align 4, !tbaa !33
  %cmp206 = icmp eq i32 %66, 0
  br i1 %cmp206, label %return.loopexit, label %for.cond.backedge

for.cond.backedge:                                ; preds = %flush_pending.exit, %if.end185
  br label %for.cond

for.end:                                          ; preds = %if.end
  %67 = load i32* %strstart, align 4, !tbaa !91
  %cmp212 = icmp ult i32 %67, 2
  %. = select i1 %cmp212, i32 %67, i32 2
  %insert = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 55
  store i32 %., i32* %insert, align 4, !tbaa !94
  %cmp219 = icmp eq i32 %flush, 4
  br i1 %cmp219, label %if.then221, label %if.end248

if.then221:                                       ; preds = %for.end
  %68 = load i64* %block_start, align 8, !tbaa !92
  %cmp223 = icmp sgt i64 %68, -1
  br i1 %cmp223, label %cond.true225, label %cond.end232

cond.true225:                                     ; preds = %if.then221
  %idxprom228 = and i64 %68, 4294967295
  %69 = load i8** %window, align 8, !tbaa !61
  %arrayidx230 = getelementptr inbounds i8* %69, i64 %idxprom228
  br label %cond.end232

cond.end232:                                      ; preds = %cond.true225, %if.then221
  %cond233 = phi i8* [ %arrayidx230, %cond.true225 ], [ null, %if.then221 ]
  %conv235 = zext i32 %67 to i64
  %sub237 = sub nsw i64 %conv235, %68
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond233, i64 %sub237, i32 1) #4
  %70 = load i32* %strstart, align 4, !tbaa !91
  %conv239 = zext i32 %70 to i64
  store i64 %conv239, i64* %block_start, align 8, !tbaa !92
  %71 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %state.i405 = getelementptr inbounds %struct.z_stream_s.10* %71, i64 0, i32 7
  %72 = load %struct.internal_state.11** %state.i405, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %72) #4
  %pending.i406 = getelementptr inbounds %struct.internal_state.11* %72, i64 0, i32 5
  %73 = load i32* %pending.i406, align 4, !tbaa !76
  %avail_out.i407 = getelementptr inbounds %struct.z_stream_s.10* %71, i64 0, i32 4
  %74 = load i32* %avail_out.i407, align 4, !tbaa !33
  %cmp.i408 = icmp ugt i32 %73, %74
  %..i409 = select i1 %cmp.i408, i32 %74, i32 %73
  %cmp2.i410 = icmp eq i32 %..i409, 0
  br i1 %cmp2.i410, label %flush_pending.exit424, label %if.end4.i421

if.end4.i421:                                     ; preds = %cond.end232
  %next_out.i411 = getelementptr inbounds %struct.z_stream_s.10* %71, i64 0, i32 3
  %75 = load i8** %next_out.i411, align 8, !tbaa !34
  %pending_out.i412 = getelementptr inbounds %struct.internal_state.11* %72, i64 0, i32 4
  %76 = load i8** %pending_out.i412, align 8, !tbaa !77
  %conv.i413 = zext i32 %..i409 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 %conv.i413, i32 1, i1 false) #4
  %77 = load i8** %next_out.i411, align 8, !tbaa !34
  %add.ptr.i414 = getelementptr inbounds i8* %77, i64 %conv.i413
  store i8* %add.ptr.i414, i8** %next_out.i411, align 8, !tbaa !34
  %78 = load i8** %pending_out.i412, align 8, !tbaa !77
  %add.ptr8.i415 = getelementptr inbounds i8* %78, i64 %conv.i413
  store i8* %add.ptr8.i415, i8** %pending_out.i412, align 8, !tbaa !77
  %total_out.i416 = getelementptr inbounds %struct.z_stream_s.10* %71, i64 0, i32 5
  %79 = load i64* %total_out.i416, align 8, !tbaa !112
  %add.i417 = add i64 %79, %conv.i413
  store i64 %add.i417, i64* %total_out.i416, align 8, !tbaa !112
  %80 = load i32* %avail_out.i407, align 4, !tbaa !33
  %sub.i418 = sub i32 %80, %..i409
  store i32 %sub.i418, i32* %avail_out.i407, align 4, !tbaa !33
  %81 = load i32* %pending.i406, align 4, !tbaa !76
  %sub12.i419 = sub i32 %81, %..i409
  store i32 %sub12.i419, i32* %pending.i406, align 4, !tbaa !76
  %cmp14.i420 = icmp eq i32 %81, %..i409
  br i1 %cmp14.i420, label %if.then16.i423, label %flush_pending.exit424

if.then16.i423:                                   ; preds = %if.end4.i421
  %pending_buf.i422 = getelementptr inbounds %struct.internal_state.11* %72, i64 0, i32 2
  %82 = load i8** %pending_buf.i422, align 8, !tbaa !66
  store i8* %82, i8** %pending_out.i412, align 8, !tbaa !77
  br label %flush_pending.exit424

flush_pending.exit424:                            ; preds = %if.then16.i423, %if.end4.i421, %cond.end232
  %83 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_out243 = getelementptr inbounds %struct.z_stream_s.10* %83, i64 0, i32 4
  %84 = load i32* %avail_out243, align 4, !tbaa !33
  %cmp244 = icmp eq i32 %84, 0
  %.404 = select i1 %cmp244, i32 2, i32 3
  br label %return

if.end248:                                        ; preds = %for.end
  %85 = load i32* %last_lit, align 4, !tbaa !113
  %tobool250 = icmp eq i32 %85, 0
  br i1 %tobool250, label %if.end278, label %if.then251

if.then251:                                       ; preds = %if.end248
  %86 = load i64* %block_start, align 8, !tbaa !92
  %cmp253 = icmp sgt i64 %86, -1
  br i1 %cmp253, label %cond.true255, label %cond.end262

cond.true255:                                     ; preds = %if.then251
  %idxprom258 = and i64 %86, 4294967295
  %87 = load i8** %window, align 8, !tbaa !61
  %arrayidx260 = getelementptr inbounds i8* %87, i64 %idxprom258
  br label %cond.end262

cond.end262:                                      ; preds = %cond.true255, %if.then251
  %cond263 = phi i8* [ %arrayidx260, %cond.true255 ], [ null, %if.then251 ]
  %conv265 = zext i32 %67 to i64
  %sub267 = sub nsw i64 %conv265, %86
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond263, i64 %sub267, i32 0) #4
  %88 = load i32* %strstart, align 4, !tbaa !91
  %conv269 = zext i32 %88 to i64
  store i64 %conv269, i64* %block_start, align 8, !tbaa !92
  %89 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %state.i425 = getelementptr inbounds %struct.z_stream_s.10* %89, i64 0, i32 7
  %90 = load %struct.internal_state.11** %state.i425, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %90) #4
  %pending.i426 = getelementptr inbounds %struct.internal_state.11* %90, i64 0, i32 5
  %91 = load i32* %pending.i426, align 4, !tbaa !76
  %avail_out.i427 = getelementptr inbounds %struct.z_stream_s.10* %89, i64 0, i32 4
  %92 = load i32* %avail_out.i427, align 4, !tbaa !33
  %cmp.i428 = icmp ugt i32 %91, %92
  %..i429 = select i1 %cmp.i428, i32 %92, i32 %91
  %cmp2.i430 = icmp eq i32 %..i429, 0
  br i1 %cmp2.i430, label %flush_pending.exit444, label %if.end4.i441

if.end4.i441:                                     ; preds = %cond.end262
  %next_out.i431 = getelementptr inbounds %struct.z_stream_s.10* %89, i64 0, i32 3
  %93 = load i8** %next_out.i431, align 8, !tbaa !34
  %pending_out.i432 = getelementptr inbounds %struct.internal_state.11* %90, i64 0, i32 4
  %94 = load i8** %pending_out.i432, align 8, !tbaa !77
  %conv.i433 = zext i32 %..i429 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 %conv.i433, i32 1, i1 false) #4
  %95 = load i8** %next_out.i431, align 8, !tbaa !34
  %add.ptr.i434 = getelementptr inbounds i8* %95, i64 %conv.i433
  store i8* %add.ptr.i434, i8** %next_out.i431, align 8, !tbaa !34
  %96 = load i8** %pending_out.i432, align 8, !tbaa !77
  %add.ptr8.i435 = getelementptr inbounds i8* %96, i64 %conv.i433
  store i8* %add.ptr8.i435, i8** %pending_out.i432, align 8, !tbaa !77
  %total_out.i436 = getelementptr inbounds %struct.z_stream_s.10* %89, i64 0, i32 5
  %97 = load i64* %total_out.i436, align 8, !tbaa !112
  %add.i437 = add i64 %97, %conv.i433
  store i64 %add.i437, i64* %total_out.i436, align 8, !tbaa !112
  %98 = load i32* %avail_out.i427, align 4, !tbaa !33
  %sub.i438 = sub i32 %98, %..i429
  store i32 %sub.i438, i32* %avail_out.i427, align 4, !tbaa !33
  %99 = load i32* %pending.i426, align 4, !tbaa !76
  %sub12.i439 = sub i32 %99, %..i429
  store i32 %sub12.i439, i32* %pending.i426, align 4, !tbaa !76
  %cmp14.i440 = icmp eq i32 %99, %..i429
  br i1 %cmp14.i440, label %if.then16.i443, label %flush_pending.exit444

if.then16.i443:                                   ; preds = %if.end4.i441
  %pending_buf.i442 = getelementptr inbounds %struct.internal_state.11* %90, i64 0, i32 2
  %100 = load i8** %pending_buf.i442, align 8, !tbaa !66
  store i8* %100, i8** %pending_out.i432, align 8, !tbaa !77
  br label %flush_pending.exit444

flush_pending.exit444:                            ; preds = %if.then16.i443, %if.end4.i441, %cond.end262
  %101 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_out273 = getelementptr inbounds %struct.z_stream_s.10* %101, i64 0, i32 4
  %102 = load i32* %avail_out273, align 4, !tbaa !33
  %cmp274 = icmp eq i32 %102, 0
  br i1 %cmp274, label %return, label %if.end278

if.end278:                                        ; preds = %flush_pending.exit444, %if.end248
  br label %return

return.loopexit:                                  ; preds = %flush_pending.exit, %if.then
  br label %return

return:                                           ; preds = %return.loopexit, %if.end278, %flush_pending.exit444, %flush_pending.exit424
  %retval.0 = phi i32 [ 1, %if.end278 ], [ %.404, %flush_pending.exit424 ], [ 0, %flush_pending.exit444 ], [ 0, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @deflate_slow(%struct.internal_state.11* %s, i32 %flush) #3 {
entry:
  %lookahead = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 29
  %cmp3 = icmp eq i32 %flush, 0
  %ins_h = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 18
  %hash_shift = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 22
  %strstart = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 27
  %window = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 14
  %hash_mask = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 21
  %head = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 17
  %w_mask = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 13
  %prev = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 16
  %match_length = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 24
  %prev_length = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 30
  %match_start = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 28
  %prev_match = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 25
  %last_lit = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 50
  %d_buf = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 51
  %l_buf = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 48
  %lit_bufsize = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 49
  %match_available = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 26
  %block_start = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 23
  %strm = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 0
  %max_lazy_match = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 32
  %w_size = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 11
  %strategy = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 34
  br label %for.condthread-pre-split

for.condthread-pre-split:                         ; preds = %for.condthread-pre-split.backedge, %entry
  %.pr = load i32* %lookahead, align 4, !tbaa !93
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %for.condthread-pre-split
  %0 = phi i32 [ %.pr, %for.condthread-pre-split ], [ %.be, %for.cond.backedge ]
  %cmp = icmp ult i32 %0, 262
  br i1 %cmp, label %if.then, label %if.end28

if.then:                                          ; preds = %for.cond
  tail call fastcc void @fill_window(%struct.internal_state.11* %s)
  %1 = load i32* %lookahead, align 4, !tbaa !93
  %cmp2 = icmp ult i32 %1, 262
  %or.cond = and i1 %cmp2, %cmp3
  br i1 %or.cond, label %return.loopexit, label %if.end

if.end:                                           ; preds = %if.then
  %cmp6 = icmp eq i32 %1, 0
  br i1 %cmp6, label %for.end, label %if.end9

if.end9:                                          ; preds = %if.end
  %cmp11 = icmp ugt i32 %1, 2
  br i1 %cmp11, label %if.end28, label %if.end28.thread

if.end28.thread:                                  ; preds = %if.end9
  %2 = load i32* %match_length, align 4, !tbaa !96
  store i32 %2, i32* %prev_length, align 4, !tbaa !95
  %3 = load i32* %match_start, align 4, !tbaa !117
  store i32 %3, i32* %prev_match, align 4, !tbaa !122
  store i32 2, i32* %match_length, align 4, !tbaa !96
  br label %if.end61thread-pre-split

if.end28:                                         ; preds = %if.end9, %for.cond
  %4 = load i32* %ins_h, align 4, !tbaa !98
  %5 = load i32* %hash_shift, align 4, !tbaa !60
  %shl = shl i32 %4, %5
  %6 = load i32* %strstart, align 4, !tbaa !91
  %add = add i32 %6, 2
  %idxprom = zext i32 %add to i64
  %7 = load i8** %window, align 8, !tbaa !61
  %arrayidx = getelementptr inbounds i8* %7, i64 %idxprom
  %8 = load i8* %arrayidx, align 1, !tbaa !5
  %conv = zext i8 %8 to i32
  %xor = xor i32 %conv, %shl
  %9 = load i32* %hash_mask, align 4, !tbaa !59
  %and = and i32 %xor, %9
  store i32 %and, i32* %ins_h, align 4, !tbaa !98
  %idxprom15 = zext i32 %and to i64
  %10 = load i16** %head, align 8, !tbaa !63
  %arrayidx16 = getelementptr inbounds i16* %10, i64 %idxprom15
  %11 = load i16* %arrayidx16, align 2, !tbaa !81
  %12 = load i32* %w_mask, align 4, !tbaa !56
  %and18 = and i32 %12, %6
  %idxprom19 = zext i32 %and18 to i64
  %13 = load i16** %prev, align 8, !tbaa !62
  %arrayidx20 = getelementptr inbounds i16* %13, i64 %idxprom19
  store i16 %11, i16* %arrayidx20, align 2, !tbaa !81
  %conv21 = zext i16 %11 to i32
  %conv23 = trunc i32 %6 to i16
  store i16 %conv23, i16* %arrayidx16, align 2, !tbaa !81
  %14 = load i32* %match_length, align 4, !tbaa !96
  store i32 %14, i32* %prev_length, align 4, !tbaa !95
  %15 = load i32* %match_start, align 4, !tbaa !117
  store i32 %15, i32* %prev_match, align 4, !tbaa !122
  store i32 2, i32* %match_length, align 4, !tbaa !96
  %cmp30 = icmp eq i16 %11, 0
  br i1 %cmp30, label %if.end61thread-pre-split, label %land.lhs.true32

land.lhs.true32:                                  ; preds = %if.end28
  %16 = load i32* %max_lazy_match, align 4, !tbaa !84
  %cmp34 = icmp ult i32 %14, %16
  br i1 %cmp34, label %land.lhs.true36, label %if.end61

land.lhs.true36:                                  ; preds = %land.lhs.true32
  %17 = load i32* %strstart, align 4, !tbaa !91
  %sub = sub i32 %17, %conv21
  %18 = load i32* %w_size, align 4, !tbaa !55
  %sub38 = add i32 %18, -262
  %cmp39 = icmp ugt i32 %sub, %sub38
  br i1 %cmp39, label %if.end61thread-pre-split, label %if.then41

if.then41:                                        ; preds = %land.lhs.true36
  %call = tail call fastcc i32 @longest_match(%struct.internal_state.11* %s, i32 %conv21)
  store i32 %call, i32* %match_length, align 4, !tbaa !96
  %cmp44 = icmp ult i32 %call, 6
  br i1 %cmp44, label %land.lhs.true46, label %if.end61thread-pre-split

land.lhs.true46:                                  ; preds = %if.then41
  %19 = load i32* %strategy, align 4, !tbaa !72
  %cmp47 = icmp eq i32 %19, 1
  br i1 %cmp47, label %if.then58, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true46
  %cmp50 = icmp eq i32 %call, 3
  br i1 %cmp50, label %land.lhs.true52, label %if.end61thread-pre-split

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %20 = load i32* %strstart, align 4, !tbaa !91
  %21 = load i32* %match_start, align 4, !tbaa !117
  %sub55 = sub i32 %20, %21
  %cmp56 = icmp ugt i32 %sub55, 4096
  br i1 %cmp56, label %if.then58, label %if.end61thread-pre-split

if.then58:                                        ; preds = %land.lhs.true52, %land.lhs.true46
  store i32 2, i32* %match_length, align 4, !tbaa !96
  br label %if.end61thread-pre-split

if.end61thread-pre-split:                         ; preds = %if.then58, %land.lhs.true52, %lor.lhs.false, %if.then41, %land.lhs.true36, %if.end28, %if.end28.thread
  %22 = phi i32 [ 2, %if.then58 ], [ 3, %land.lhs.true52 ], [ %call, %lor.lhs.false ], [ %call, %if.then41 ], [ 2, %if.end28 ], [ 2, %land.lhs.true36 ], [ 2, %if.end28.thread ]
  %.pr575 = load i32* %prev_length, align 4, !tbaa !95
  br label %if.end61

if.end61:                                         ; preds = %if.end61thread-pre-split, %land.lhs.true32
  %23 = phi i32 [ %22, %if.end61thread-pre-split ], [ 2, %land.lhs.true32 ]
  %24 = phi i32 [ %.pr575, %if.end61thread-pre-split ], [ %14, %land.lhs.true32 ]
  %cmp63 = icmp ult i32 %24, 3
  %cmp68 = icmp ugt i32 %23, %24
  %or.cond578 = or i1 %cmp63, %cmp68
  br i1 %or.cond578, label %if.else, label %if.then70

if.then70:                                        ; preds = %if.end61
  %.lcssa = phi i32 [ %24, %if.end61 ]
  %25 = load i32* %strstart, align 4, !tbaa !91
  %26 = load i32* %lookahead, align 4, !tbaa !93
  %add73 = add i32 %25, -3
  %sub74 = add i32 %add73, %26
  %sub76 = add i32 %.lcssa, 253
  %conv77 = trunc i32 %sub76 to i8
  %sub79 = add i32 %25, 65535
  %27 = load i32* %prev_match, align 4, !tbaa !122
  %sub81 = sub i32 %sub79, %27
  %conv82 = trunc i32 %sub81 to i16
  %28 = load i32* %last_lit, align 4, !tbaa !113
  %idxprom83 = zext i32 %28 to i64
  %29 = load i16** %d_buf, align 8, !tbaa !69
  %arrayidx84 = getelementptr inbounds i16* %29, i64 %idxprom83
  store i16 %conv82, i16* %arrayidx84, align 2, !tbaa !81
  %inc = add i32 %28, 1
  store i32 %inc, i32* %last_lit, align 4, !tbaa !113
  %30 = load i8** %l_buf, align 8, !tbaa !70
  %arrayidx87 = getelementptr inbounds i8* %30, i64 %idxprom83
  store i8 %conv77, i8* %arrayidx87, align 1, !tbaa !5
  %dec = add i16 %conv82, -1
  %conv77.mask = and i32 %sub76, 255
  %idxprom88 = zext i32 %conv77.mask to i64
  %arrayidx89 = getelementptr inbounds [0 x i8]* bitcast ([256 x i8]* @_length_code to [0 x i8]*), i64 0, i64 %idxprom88
  %31 = load i8* %arrayidx89, align 1, !tbaa !5
  %conv90 = zext i8 %31 to i64
  %add91509 = or i64 %conv90, 256
  %add92 = add nuw nsw i64 %add91509, 1
  %idxprom93510 = and i64 %add92, 1023
  %freq = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 37, i64 %idxprom93510, i32 0, i32 0
  %32 = load i16* %freq, align 2, !tbaa !81
  %inc95 = add i16 %32, 1
  store i16 %inc95, i16* %freq, align 2, !tbaa !81
  %cmp97 = icmp ult i16 %dec, 256
  br i1 %cmp97, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then70
  %idxprom99 = zext i16 %dec to i64
  br label %cond.end

cond.false:                                       ; preds = %if.then70
  %conv96 = zext i16 %dec to i32
  %shr511 = lshr i32 %conv96, 7
  %add103 = add nuw nsw i32 %shr511, 256
  %idxprom104512 = zext i32 %add103 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %idxprom99.pn = phi i64 [ %idxprom99, %cond.true ], [ %idxprom104512, %cond.false ]
  %.sink.in = getelementptr inbounds [0 x i8]* bitcast ([512 x i8]* @_dist_code to [0 x i8]*), i64 0, i64 %idxprom99.pn
  %.sink = load i8* %.sink.in, align 1
  %idxprom107 = zext i8 %.sink to i64
  %freq110 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 38, i64 %idxprom107, i32 0, i32 0
  %33 = load i16* %freq110, align 2, !tbaa !81
  %inc111 = add i16 %33, 1
  store i16 %inc111, i16* %freq110, align 2, !tbaa !81
  %34 = load i32* %last_lit, align 4, !tbaa !113
  %35 = load i32* %lit_bufsize, align 4, !tbaa !65
  %sub113 = add i32 %35, -1
  %36 = load i32* %prev_length, align 4, !tbaa !95
  %37 = load i32* %lookahead, align 4, !tbaa !93
  %sub117.neg = sub i32 1, %36
  %sub119 = add i32 %sub117.neg, %37
  store i32 %sub119, i32* %lookahead, align 4, !tbaa !93
  %sub121 = add i32 %36, -2
  store i32 %sub121, i32* %prev_length, align 4, !tbaa !95
  %.pre = load i32* %strstart, align 4, !tbaa !91
  br label %do.body

do.body:                                          ; preds = %do.cond, %cond.end
  %38 = phi i32 [ %dec159, %do.cond ], [ %sub121, %cond.end ]
  %39 = phi i32 [ %inc123, %do.cond ], [ %.pre, %cond.end ]
  %inc123 = add i32 %39, 1
  store i32 %inc123, i32* %strstart, align 4, !tbaa !91
  %cmp124 = icmp ugt i32 %inc123, %sub74
  br i1 %cmp124, label %do.cond, label %if.then126

if.then126:                                       ; preds = %do.body
  %40 = load i32* %ins_h, align 4, !tbaa !98
  %41 = load i32* %hash_shift, align 4, !tbaa !60
  %shl129 = shl i32 %40, %41
  %add131 = add i32 %39, 3
  %idxprom132 = zext i32 %add131 to i64
  %42 = load i8** %window, align 8, !tbaa !61
  %arrayidx134 = getelementptr inbounds i8* %42, i64 %idxprom132
  %43 = load i8* %arrayidx134, align 1, !tbaa !5
  %conv135 = zext i8 %43 to i32
  %xor136 = xor i32 %conv135, %shl129
  %44 = load i32* %hash_mask, align 4, !tbaa !59
  %and138 = and i32 %xor136, %44
  store i32 %and138, i32* %ins_h, align 4, !tbaa !98
  %idxprom141 = zext i32 %and138 to i64
  %45 = load i16** %head, align 8, !tbaa !63
  %arrayidx143 = getelementptr inbounds i16* %45, i64 %idxprom141
  %46 = load i16* %arrayidx143, align 2, !tbaa !81
  %47 = load i32* %w_mask, align 4, !tbaa !56
  %and146 = and i32 %47, %inc123
  %idxprom147 = zext i32 %and146 to i64
  %48 = load i16** %prev, align 8, !tbaa !62
  %arrayidx149 = getelementptr inbounds i16* %48, i64 %idxprom147
  store i16 %46, i16* %arrayidx149, align 2, !tbaa !81
  %conv152 = trunc i32 %inc123 to i16
  store i16 %conv152, i16* %arrayidx143, align 2, !tbaa !81
  br label %do.cond

do.cond:                                          ; preds = %if.then126, %do.body
  %dec159 = add i32 %38, -1
  store i32 %dec159, i32* %prev_length, align 4, !tbaa !95
  %cmp160 = icmp eq i32 %dec159, 0
  br i1 %cmp160, label %do.end, label %do.body

do.end:                                           ; preds = %do.cond
  %.lcssa582 = phi i32 [ %39, %do.cond ]
  %cmp114 = icmp eq i32 %34, %sub113
  store i32 0, i32* %match_available, align 4, !tbaa !97
  store i32 2, i32* %match_length, align 4, !tbaa !96
  %inc164 = add i32 %.lcssa582, 2
  store i32 %inc164, i32* %strstart, align 4, !tbaa !91
  br i1 %cmp114, label %if.then165, label %for.condthread-pre-split.backedge

if.then165:                                       ; preds = %do.end
  %49 = load i64* %block_start, align 8, !tbaa !92
  %cmp166 = icmp sgt i64 %49, -1
  br i1 %cmp166, label %cond.true168, label %cond.end175

cond.true168:                                     ; preds = %if.then165
  %idxprom171 = and i64 %49, 4294967295
  %50 = load i8** %window, align 8, !tbaa !61
  %arrayidx173 = getelementptr inbounds i8* %50, i64 %idxprom171
  br label %cond.end175

cond.end175:                                      ; preds = %cond.true168, %if.then165
  %cond176 = phi i8* [ %arrayidx173, %cond.true168 ], [ null, %if.then165 ]
  %conv178 = zext i32 %inc164 to i64
  %sub180 = sub nsw i64 %conv178, %49
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond176, i64 %sub180, i32 0) #4
  %51 = load i32* %strstart, align 4, !tbaa !91
  %conv182 = zext i32 %51 to i64
  store i64 %conv182, i64* %block_start, align 8, !tbaa !92
  %52 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %state.i = getelementptr inbounds %struct.z_stream_s.10* %52, i64 0, i32 7
  %53 = load %struct.internal_state.11** %state.i, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %53) #4
  %pending.i = getelementptr inbounds %struct.internal_state.11* %53, i64 0, i32 5
  %54 = load i32* %pending.i, align 4, !tbaa !76
  %avail_out.i = getelementptr inbounds %struct.z_stream_s.10* %52, i64 0, i32 4
  %55 = load i32* %avail_out.i, align 4, !tbaa !33
  %cmp.i = icmp ugt i32 %54, %55
  %..i = select i1 %cmp.i, i32 %55, i32 %54
  %cmp2.i = icmp eq i32 %..i, 0
  br i1 %cmp2.i, label %flush_pending.exit, label %if.end4.i

if.end4.i:                                        ; preds = %cond.end175
  %next_out.i = getelementptr inbounds %struct.z_stream_s.10* %52, i64 0, i32 3
  %56 = load i8** %next_out.i, align 8, !tbaa !34
  %pending_out.i = getelementptr inbounds %struct.internal_state.11* %53, i64 0, i32 4
  %57 = load i8** %pending_out.i, align 8, !tbaa !77
  %conv.i = zext i32 %..i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 %conv.i, i32 1, i1 false) #4
  %58 = load i8** %next_out.i, align 8, !tbaa !34
  %add.ptr.i = getelementptr inbounds i8* %58, i64 %conv.i
  store i8* %add.ptr.i, i8** %next_out.i, align 8, !tbaa !34
  %59 = load i8** %pending_out.i, align 8, !tbaa !77
  %add.ptr8.i = getelementptr inbounds i8* %59, i64 %conv.i
  store i8* %add.ptr8.i, i8** %pending_out.i, align 8, !tbaa !77
  %total_out.i = getelementptr inbounds %struct.z_stream_s.10* %52, i64 0, i32 5
  %60 = load i64* %total_out.i, align 8, !tbaa !112
  %add.i = add i64 %60, %conv.i
  store i64 %add.i, i64* %total_out.i, align 8, !tbaa !112
  %61 = load i32* %avail_out.i, align 4, !tbaa !33
  %sub.i = sub i32 %61, %..i
  store i32 %sub.i, i32* %avail_out.i, align 4, !tbaa !33
  %62 = load i32* %pending.i, align 4, !tbaa !76
  %sub12.i = sub i32 %62, %..i
  store i32 %sub12.i, i32* %pending.i, align 4, !tbaa !76
  %cmp14.i = icmp eq i32 %62, %..i
  br i1 %cmp14.i, label %if.then16.i, label %flush_pending.exit

if.then16.i:                                      ; preds = %if.end4.i
  %pending_buf.i = getelementptr inbounds %struct.internal_state.11* %53, i64 0, i32 2
  %63 = load i8** %pending_buf.i, align 8, !tbaa !66
  store i8* %63, i8** %pending_out.i, align 8, !tbaa !77
  br label %flush_pending.exit

flush_pending.exit:                               ; preds = %if.then16.i, %if.end4.i, %cond.end175
  %64 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_out = getelementptr inbounds %struct.z_stream_s.10* %64, i64 0, i32 4
  %65 = load i32* %avail_out, align 4, !tbaa !33
  %cmp185 = icmp eq i32 %65, 0
  br i1 %cmp185, label %return.loopexit581, label %for.condthread-pre-split.backedge

for.condthread-pre-split.backedge:                ; preds = %flush_pending.exit, %do.end
  br label %for.condthread-pre-split

if.else:                                          ; preds = %if.end61
  %66 = load i32* %match_available, align 4, !tbaa !97
  %tobool191 = icmp eq i32 %66, 0
  br i1 %tobool191, label %if.else251, label %if.then192

if.then192:                                       ; preds = %if.else
  %67 = load i32* %strstart, align 4, !tbaa !91
  %sub194 = add i32 %67, -1
  %idxprom195 = zext i32 %sub194 to i64
  %68 = load i8** %window, align 8, !tbaa !61
  %arrayidx197 = getelementptr inbounds i8* %68, i64 %idxprom195
  %69 = load i8* %arrayidx197, align 1, !tbaa !5
  %70 = load i32* %last_lit, align 4, !tbaa !113
  %idxprom199 = zext i32 %70 to i64
  %71 = load i16** %d_buf, align 8, !tbaa !69
  %arrayidx201 = getelementptr inbounds i16* %71, i64 %idxprom199
  store i16 0, i16* %arrayidx201, align 2, !tbaa !81
  %inc203 = add i32 %70, 1
  store i32 %inc203, i32* %last_lit, align 4, !tbaa !113
  %72 = load i8** %l_buf, align 8, !tbaa !70
  %arrayidx206 = getelementptr inbounds i8* %72, i64 %idxprom199
  store i8 %69, i8* %arrayidx206, align 1, !tbaa !5
  %idxprom207 = zext i8 %69 to i64
  %freq211 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 37, i64 %idxprom207, i32 0, i32 0
  %73 = load i16* %freq211, align 2, !tbaa !81
  %inc212 = add i16 %73, 1
  store i16 %inc212, i16* %freq211, align 2, !tbaa !81
  %74 = load i32* %last_lit, align 4, !tbaa !113
  %75 = load i32* %lit_bufsize, align 4, !tbaa !65
  %sub215 = add i32 %75, -1
  %cmp216 = icmp eq i32 %74, %sub215
  br i1 %cmp216, label %if.then219, label %if.end240

if.then219:                                       ; preds = %if.then192
  %76 = load i64* %block_start, align 8, !tbaa !92
  %cmp221 = icmp sgt i64 %76, -1
  br i1 %cmp221, label %cond.true223, label %cond.end230

cond.true223:                                     ; preds = %if.then219
  %idxprom226 = and i64 %76, 4294967295
  %77 = load i8** %window, align 8, !tbaa !61
  %arrayidx228 = getelementptr inbounds i8* %77, i64 %idxprom226
  br label %cond.end230

cond.end230:                                      ; preds = %cond.true223, %if.then219
  %cond231 = phi i8* [ %arrayidx228, %cond.true223 ], [ null, %if.then219 ]
  %78 = load i32* %strstart, align 4, !tbaa !91
  %conv233 = zext i32 %78 to i64
  %sub235 = sub nsw i64 %conv233, %76
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond231, i64 %sub235, i32 0) #4
  %79 = load i32* %strstart, align 4, !tbaa !91
  %conv237 = zext i32 %79 to i64
  store i64 %conv237, i64* %block_start, align 8, !tbaa !92
  %80 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %state.i514 = getelementptr inbounds %struct.z_stream_s.10* %80, i64 0, i32 7
  %81 = load %struct.internal_state.11** %state.i514, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %81) #4
  %pending.i515 = getelementptr inbounds %struct.internal_state.11* %81, i64 0, i32 5
  %82 = load i32* %pending.i515, align 4, !tbaa !76
  %avail_out.i516 = getelementptr inbounds %struct.z_stream_s.10* %80, i64 0, i32 4
  %83 = load i32* %avail_out.i516, align 4, !tbaa !33
  %cmp.i517 = icmp ugt i32 %82, %83
  %..i518 = select i1 %cmp.i517, i32 %83, i32 %82
  %cmp2.i519 = icmp eq i32 %..i518, 0
  br i1 %cmp2.i519, label %if.end240, label %if.end4.i530

if.end4.i530:                                     ; preds = %cond.end230
  %next_out.i520 = getelementptr inbounds %struct.z_stream_s.10* %80, i64 0, i32 3
  %84 = load i8** %next_out.i520, align 8, !tbaa !34
  %pending_out.i521 = getelementptr inbounds %struct.internal_state.11* %81, i64 0, i32 4
  %85 = load i8** %pending_out.i521, align 8, !tbaa !77
  %conv.i522 = zext i32 %..i518 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 %conv.i522, i32 1, i1 false) #4
  %86 = load i8** %next_out.i520, align 8, !tbaa !34
  %add.ptr.i523 = getelementptr inbounds i8* %86, i64 %conv.i522
  store i8* %add.ptr.i523, i8** %next_out.i520, align 8, !tbaa !34
  %87 = load i8** %pending_out.i521, align 8, !tbaa !77
  %add.ptr8.i524 = getelementptr inbounds i8* %87, i64 %conv.i522
  store i8* %add.ptr8.i524, i8** %pending_out.i521, align 8, !tbaa !77
  %total_out.i525 = getelementptr inbounds %struct.z_stream_s.10* %80, i64 0, i32 5
  %88 = load i64* %total_out.i525, align 8, !tbaa !112
  %add.i526 = add i64 %88, %conv.i522
  store i64 %add.i526, i64* %total_out.i525, align 8, !tbaa !112
  %89 = load i32* %avail_out.i516, align 4, !tbaa !33
  %sub.i527 = sub i32 %89, %..i518
  store i32 %sub.i527, i32* %avail_out.i516, align 4, !tbaa !33
  %90 = load i32* %pending.i515, align 4, !tbaa !76
  %sub12.i528 = sub i32 %90, %..i518
  store i32 %sub12.i528, i32* %pending.i515, align 4, !tbaa !76
  %cmp14.i529 = icmp eq i32 %90, %..i518
  br i1 %cmp14.i529, label %if.then16.i532, label %if.end240

if.then16.i532:                                   ; preds = %if.end4.i530
  %pending_buf.i531 = getelementptr inbounds %struct.internal_state.11* %81, i64 0, i32 2
  %91 = load i8** %pending_buf.i531, align 8, !tbaa !66
  store i8* %91, i8** %pending_out.i521, align 8, !tbaa !77
  br label %if.end240

if.end240:                                        ; preds = %if.then16.i532, %if.end4.i530, %cond.end230, %if.then192
  %92 = load i32* %strstart, align 4, !tbaa !91
  %inc242 = add i32 %92, 1
  store i32 %inc242, i32* %strstart, align 4, !tbaa !91
  %93 = load i32* %lookahead, align 4, !tbaa !93
  %dec244 = add i32 %93, -1
  store i32 %dec244, i32* %lookahead, align 4, !tbaa !93
  %94 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_out246 = getelementptr inbounds %struct.z_stream_s.10* %94, i64 0, i32 4
  %95 = load i32* %avail_out246, align 4, !tbaa !33
  %cmp247 = icmp eq i32 %95, 0
  br i1 %cmp247, label %return.loopexit, label %for.cond.backedge

if.else251:                                       ; preds = %if.else
  store i32 1, i32* %match_available, align 4, !tbaa !97
  %96 = load i32* %strstart, align 4, !tbaa !91
  %inc254 = add i32 %96, 1
  store i32 %inc254, i32* %strstart, align 4, !tbaa !91
  %97 = load i32* %lookahead, align 4, !tbaa !93
  %dec256 = add i32 %97, -1
  store i32 %dec256, i32* %lookahead, align 4, !tbaa !93
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.else251, %if.end240
  %.be = phi i32 [ %dec244, %if.end240 ], [ %dec256, %if.else251 ]
  br label %for.cond

for.end:                                          ; preds = %if.end
  %98 = load i32* %match_available, align 4, !tbaa !97
  %tobool260 = icmp eq i32 %98, 0
  br i1 %tobool260, label %if.end289, label %if.then261

if.then261:                                       ; preds = %for.end
  %99 = load i32* %strstart, align 4, !tbaa !91
  %sub264 = add i32 %99, -1
  %idxprom265 = zext i32 %sub264 to i64
  %100 = load i8** %window, align 8, !tbaa !61
  %arrayidx267 = getelementptr inbounds i8* %100, i64 %idxprom265
  %101 = load i8* %arrayidx267, align 1, !tbaa !5
  %102 = load i32* %last_lit, align 4, !tbaa !113
  %idxprom269 = zext i32 %102 to i64
  %103 = load i16** %d_buf, align 8, !tbaa !69
  %arrayidx271 = getelementptr inbounds i16* %103, i64 %idxprom269
  store i16 0, i16* %arrayidx271, align 2, !tbaa !81
  %inc273 = add i32 %102, 1
  store i32 %inc273, i32* %last_lit, align 4, !tbaa !113
  %104 = load i8** %l_buf, align 8, !tbaa !70
  %arrayidx276 = getelementptr inbounds i8* %104, i64 %idxprom269
  store i8 %101, i8* %arrayidx276, align 1, !tbaa !5
  %idxprom277 = zext i8 %101 to i64
  %freq281 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 37, i64 %idxprom277, i32 0, i32 0
  %105 = load i16* %freq281, align 2, !tbaa !81
  %inc282 = add i16 %105, 1
  store i16 %inc282, i16* %freq281, align 2, !tbaa !81
  store i32 0, i32* %match_available, align 4, !tbaa !97
  br label %if.end289

if.end289:                                        ; preds = %if.then261, %for.end
  %106 = load i32* %strstart, align 4, !tbaa !91
  %cmp291 = icmp ult i32 %106, 2
  %. = select i1 %cmp291, i32 %106, i32 2
  %insert = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 55
  store i32 %., i32* %insert, align 4, !tbaa !94
  %cmp298 = icmp eq i32 %flush, 4
  br i1 %cmp298, label %if.then300, label %if.end327

if.then300:                                       ; preds = %if.end289
  %107 = load i64* %block_start, align 8, !tbaa !92
  %cmp302 = icmp sgt i64 %107, -1
  br i1 %cmp302, label %cond.true304, label %cond.end311

cond.true304:                                     ; preds = %if.then300
  %idxprom307 = and i64 %107, 4294967295
  %108 = load i8** %window, align 8, !tbaa !61
  %arrayidx309 = getelementptr inbounds i8* %108, i64 %idxprom307
  br label %cond.end311

cond.end311:                                      ; preds = %cond.true304, %if.then300
  %cond312 = phi i8* [ %arrayidx309, %cond.true304 ], [ null, %if.then300 ]
  %conv314 = zext i32 %106 to i64
  %sub316 = sub nsw i64 %conv314, %107
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond312, i64 %sub316, i32 1) #4
  %109 = load i32* %strstart, align 4, !tbaa !91
  %conv318 = zext i32 %109 to i64
  store i64 %conv318, i64* %block_start, align 8, !tbaa !92
  %110 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %state.i534 = getelementptr inbounds %struct.z_stream_s.10* %110, i64 0, i32 7
  %111 = load %struct.internal_state.11** %state.i534, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %111) #4
  %pending.i535 = getelementptr inbounds %struct.internal_state.11* %111, i64 0, i32 5
  %112 = load i32* %pending.i535, align 4, !tbaa !76
  %avail_out.i536 = getelementptr inbounds %struct.z_stream_s.10* %110, i64 0, i32 4
  %113 = load i32* %avail_out.i536, align 4, !tbaa !33
  %cmp.i537 = icmp ugt i32 %112, %113
  %..i538 = select i1 %cmp.i537, i32 %113, i32 %112
  %cmp2.i539 = icmp eq i32 %..i538, 0
  br i1 %cmp2.i539, label %flush_pending.exit553, label %if.end4.i550

if.end4.i550:                                     ; preds = %cond.end311
  %next_out.i540 = getelementptr inbounds %struct.z_stream_s.10* %110, i64 0, i32 3
  %114 = load i8** %next_out.i540, align 8, !tbaa !34
  %pending_out.i541 = getelementptr inbounds %struct.internal_state.11* %111, i64 0, i32 4
  %115 = load i8** %pending_out.i541, align 8, !tbaa !77
  %conv.i542 = zext i32 %..i538 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 %conv.i542, i32 1, i1 false) #4
  %116 = load i8** %next_out.i540, align 8, !tbaa !34
  %add.ptr.i543 = getelementptr inbounds i8* %116, i64 %conv.i542
  store i8* %add.ptr.i543, i8** %next_out.i540, align 8, !tbaa !34
  %117 = load i8** %pending_out.i541, align 8, !tbaa !77
  %add.ptr8.i544 = getelementptr inbounds i8* %117, i64 %conv.i542
  store i8* %add.ptr8.i544, i8** %pending_out.i541, align 8, !tbaa !77
  %total_out.i545 = getelementptr inbounds %struct.z_stream_s.10* %110, i64 0, i32 5
  %118 = load i64* %total_out.i545, align 8, !tbaa !112
  %add.i546 = add i64 %118, %conv.i542
  store i64 %add.i546, i64* %total_out.i545, align 8, !tbaa !112
  %119 = load i32* %avail_out.i536, align 4, !tbaa !33
  %sub.i547 = sub i32 %119, %..i538
  store i32 %sub.i547, i32* %avail_out.i536, align 4, !tbaa !33
  %120 = load i32* %pending.i535, align 4, !tbaa !76
  %sub12.i548 = sub i32 %120, %..i538
  store i32 %sub12.i548, i32* %pending.i535, align 4, !tbaa !76
  %cmp14.i549 = icmp eq i32 %120, %..i538
  br i1 %cmp14.i549, label %if.then16.i552, label %flush_pending.exit553

if.then16.i552:                                   ; preds = %if.end4.i550
  %pending_buf.i551 = getelementptr inbounds %struct.internal_state.11* %111, i64 0, i32 2
  %121 = load i8** %pending_buf.i551, align 8, !tbaa !66
  store i8* %121, i8** %pending_out.i541, align 8, !tbaa !77
  br label %flush_pending.exit553

flush_pending.exit553:                            ; preds = %if.then16.i552, %if.end4.i550, %cond.end311
  %122 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_out322 = getelementptr inbounds %struct.z_stream_s.10* %122, i64 0, i32 4
  %123 = load i32* %avail_out322, align 4, !tbaa !33
  %cmp323 = icmp eq i32 %123, 0
  %.513 = select i1 %cmp323, i32 2, i32 3
  br label %return

if.end327:                                        ; preds = %if.end289
  %124 = load i32* %last_lit, align 4, !tbaa !113
  %tobool329 = icmp eq i32 %124, 0
  br i1 %tobool329, label %if.end357, label %if.then330

if.then330:                                       ; preds = %if.end327
  %125 = load i64* %block_start, align 8, !tbaa !92
  %cmp332 = icmp sgt i64 %125, -1
  br i1 %cmp332, label %cond.true334, label %cond.end341

cond.true334:                                     ; preds = %if.then330
  %idxprom337 = and i64 %125, 4294967295
  %126 = load i8** %window, align 8, !tbaa !61
  %arrayidx339 = getelementptr inbounds i8* %126, i64 %idxprom337
  br label %cond.end341

cond.end341:                                      ; preds = %cond.true334, %if.then330
  %cond342 = phi i8* [ %arrayidx339, %cond.true334 ], [ null, %if.then330 ]
  %conv344 = zext i32 %106 to i64
  %sub346 = sub nsw i64 %conv344, %125
  tail call void bitcast (void (%struct.internal_state.23*, i8*, i64, i32)* @_tr_flush_block to void (%struct.internal_state.11*, i8*, i64, i32)*)(%struct.internal_state.11* %s, i8* %cond342, i64 %sub346, i32 0) #4
  %127 = load i32* %strstart, align 4, !tbaa !91
  %conv348 = zext i32 %127 to i64
  store i64 %conv348, i64* %block_start, align 8, !tbaa !92
  %128 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %state.i554 = getelementptr inbounds %struct.z_stream_s.10* %128, i64 0, i32 7
  %129 = load %struct.internal_state.11** %state.i554, align 8, !tbaa !47
  tail call void bitcast (void (%struct.internal_state.23*)* @_tr_flush_bits to void (%struct.internal_state.11*)*)(%struct.internal_state.11* %129) #4
  %pending.i555 = getelementptr inbounds %struct.internal_state.11* %129, i64 0, i32 5
  %130 = load i32* %pending.i555, align 4, !tbaa !76
  %avail_out.i556 = getelementptr inbounds %struct.z_stream_s.10* %128, i64 0, i32 4
  %131 = load i32* %avail_out.i556, align 4, !tbaa !33
  %cmp.i557 = icmp ugt i32 %130, %131
  %..i558 = select i1 %cmp.i557, i32 %131, i32 %130
  %cmp2.i559 = icmp eq i32 %..i558, 0
  br i1 %cmp2.i559, label %flush_pending.exit573, label %if.end4.i570

if.end4.i570:                                     ; preds = %cond.end341
  %next_out.i560 = getelementptr inbounds %struct.z_stream_s.10* %128, i64 0, i32 3
  %132 = load i8** %next_out.i560, align 8, !tbaa !34
  %pending_out.i561 = getelementptr inbounds %struct.internal_state.11* %129, i64 0, i32 4
  %133 = load i8** %pending_out.i561, align 8, !tbaa !77
  %conv.i562 = zext i32 %..i558 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 %conv.i562, i32 1, i1 false) #4
  %134 = load i8** %next_out.i560, align 8, !tbaa !34
  %add.ptr.i563 = getelementptr inbounds i8* %134, i64 %conv.i562
  store i8* %add.ptr.i563, i8** %next_out.i560, align 8, !tbaa !34
  %135 = load i8** %pending_out.i561, align 8, !tbaa !77
  %add.ptr8.i564 = getelementptr inbounds i8* %135, i64 %conv.i562
  store i8* %add.ptr8.i564, i8** %pending_out.i561, align 8, !tbaa !77
  %total_out.i565 = getelementptr inbounds %struct.z_stream_s.10* %128, i64 0, i32 5
  %136 = load i64* %total_out.i565, align 8, !tbaa !112
  %add.i566 = add i64 %136, %conv.i562
  store i64 %add.i566, i64* %total_out.i565, align 8, !tbaa !112
  %137 = load i32* %avail_out.i556, align 4, !tbaa !33
  %sub.i567 = sub i32 %137, %..i558
  store i32 %sub.i567, i32* %avail_out.i556, align 4, !tbaa !33
  %138 = load i32* %pending.i555, align 4, !tbaa !76
  %sub12.i568 = sub i32 %138, %..i558
  store i32 %sub12.i568, i32* %pending.i555, align 4, !tbaa !76
  %cmp14.i569 = icmp eq i32 %138, %..i558
  br i1 %cmp14.i569, label %if.then16.i572, label %flush_pending.exit573

if.then16.i572:                                   ; preds = %if.end4.i570
  %pending_buf.i571 = getelementptr inbounds %struct.internal_state.11* %129, i64 0, i32 2
  %139 = load i8** %pending_buf.i571, align 8, !tbaa !66
  store i8* %139, i8** %pending_out.i561, align 8, !tbaa !77
  br label %flush_pending.exit573

flush_pending.exit573:                            ; preds = %if.then16.i572, %if.end4.i570, %cond.end341
  %140 = load %struct.z_stream_s.10** %strm, align 8, !tbaa !48
  %avail_out352 = getelementptr inbounds %struct.z_stream_s.10* %140, i64 0, i32 4
  %141 = load i32* %avail_out352, align 4, !tbaa !33
  %cmp353 = icmp eq i32 %141, 0
  br i1 %cmp353, label %return, label %if.end357

if.end357:                                        ; preds = %flush_pending.exit573, %if.end327
  br label %return

return.loopexit:                                  ; preds = %if.end240, %if.then
  br label %return

return.loopexit581:                               ; preds = %flush_pending.exit
  br label %return

return:                                           ; preds = %return.loopexit581, %return.loopexit, %if.end357, %flush_pending.exit573, %flush_pending.exit553
  %retval.0 = phi i32 [ 1, %if.end357 ], [ %.513, %flush_pending.exit553 ], [ 0, %flush_pending.exit573 ], [ 0, %return.loopexit ], [ 0, %return.loopexit581 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @longest_match(%struct.internal_state.11* nocapture %s, i32 %cur_match) #3 {
entry:
  %max_chain_length = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 31
  %0 = load i32* %max_chain_length, align 4, !tbaa !90
  %window = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 14
  %1 = load i8** %window, align 8, !tbaa !61
  %strstart = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 27
  %2 = load i32* %strstart, align 4, !tbaa !91
  %idx.ext = zext i32 %2 to i64
  %add.ptr = getelementptr inbounds i8* %1, i64 %idx.ext
  %prev_length = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 30
  %3 = load i32* %prev_length, align 4, !tbaa !95
  %nice_match1 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 36
  %4 = load i32* %nice_match1, align 4, !tbaa !88
  %w_size = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 11
  %5 = load i32* %w_size, align 4, !tbaa !55
  %sub = add i32 %5, -262
  %cmp = icmp ugt i32 %2, %sub
  %sub6 = sub i32 %2, %sub
  %sub6. = select i1 %cmp, i32 %sub6, i32 0
  %prev7 = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 16
  %6 = load i16** %prev7, align 8, !tbaa !62
  %w_mask = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 13
  %7 = load i32* %w_mask, align 4, !tbaa !56
  %add.ptr11.sum = add nuw nsw i64 %idx.ext, 258
  %add.ptr12 = getelementptr inbounds i8* %1, i64 %add.ptr11.sum
  %sub13 = add nsw i32 %3, -1
  %idxprom = sext i32 %sub13 to i64
  %add.ptr.sum = add nsw i64 %idxprom, %idx.ext
  %arrayidx = getelementptr inbounds i8* %1, i64 %add.ptr.sum
  %8 = load i8* %arrayidx, align 1, !tbaa !5
  %idxprom14 = sext i32 %3 to i64
  %add.ptr.sum213 = add nsw i64 %idxprom14, %idx.ext
  %arrayidx15 = getelementptr inbounds i8* %1, i64 %add.ptr.sum213
  %9 = load i8* %arrayidx15, align 1, !tbaa !5
  %good_match = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 35
  %10 = load i32* %good_match, align 4, !tbaa !86
  %cmp17 = icmp ult i32 %3, %10
  %shr = lshr i32 %0, 2
  %chain_length.0 = select i1 %cmp17, i32 %0, i32 %shr
  %lookahead = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 29
  %11 = load i32* %lookahead, align 4, !tbaa !93
  %cmp18 = icmp ugt i32 %4, %11
  %. = select i1 %cmp18, i32 %11, i32 %4
  %match_start = getelementptr inbounds %struct.internal_state.11* %s, i64 0, i32 28
  %add.ptr.sum217 = add nuw nsw i64 %idx.ext, 1
  %arrayidx44 = getelementptr inbounds i8* %1, i64 %add.ptr.sum217
  %add.ptr.sum218 = add nuw nsw i64 %idx.ext, 2
  %add.ptr50 = getelementptr inbounds i8* %1, i64 %add.ptr.sum218
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr12 to i64
  br label %do.body

do.body:                                          ; preds = %land.rhs131, %entry
  %best_len.0 = phi i32 [ %best_len.1, %land.rhs131 ], [ %3, %entry ]
  %chain_length.1 = phi i32 [ %dec, %land.rhs131 ], [ %chain_length.0, %entry ]
  %cur_match.addr.0 = phi i32 [ %conv128, %land.rhs131 ], [ %cur_match, %entry ]
  %scan_end1.0 = phi i8 [ %scan_end1.1, %land.rhs131 ], [ %8, %entry ]
  %scan_end.0 = phi i8 [ %scan_end.1, %land.rhs131 ], [ %9, %entry ]
  %idx.ext23 = zext i32 %cur_match.addr.0 to i64
  %add.ptr24 = getelementptr inbounds i8* %1, i64 %idx.ext23
  %idxprom25 = sext i32 %best_len.0 to i64
  %add.ptr24.sum = add nsw i64 %idx.ext23, %idxprom25
  %arrayidx26 = getelementptr inbounds i8* %1, i64 %add.ptr24.sum
  %12 = load i8* %arrayidx26, align 1, !tbaa !5
  %cmp28 = icmp eq i8 %12, %scan_end.0
  br i1 %cmp28, label %lor.lhs.false, label %do.cond125

lor.lhs.false:                                    ; preds = %do.body
  %sub30 = add nsw i32 %best_len.0, -1
  %idxprom31 = sext i32 %sub30 to i64
  %add.ptr24.sum214 = add nsw i64 %idx.ext23, %idxprom31
  %arrayidx32 = getelementptr inbounds i8* %1, i64 %add.ptr24.sum214
  %13 = load i8* %arrayidx32, align 1, !tbaa !5
  %cmp35 = icmp eq i8 %13, %scan_end1.0
  br i1 %cmp35, label %lor.lhs.false37, label %do.cond125

lor.lhs.false37:                                  ; preds = %lor.lhs.false
  %14 = load i8* %add.ptr24, align 1, !tbaa !5
  %15 = load i8* %add.ptr, align 1, !tbaa !5
  %cmp40 = icmp eq i8 %14, %15
  br i1 %cmp40, label %lor.lhs.false42, label %do.cond125

lor.lhs.false42:                                  ; preds = %lor.lhs.false37
  %add.ptr24.sum215 = add nuw nsw i64 %idx.ext23, 1
  %incdec.ptr = getelementptr inbounds i8* %1, i64 %add.ptr24.sum215
  %16 = load i8* %incdec.ptr, align 1, !tbaa !5
  %17 = load i8* %arrayidx44, align 1, !tbaa !5
  %cmp46 = icmp eq i8 %16, %17
  br i1 %cmp46, label %if.end49, label %do.cond125

if.end49:                                         ; preds = %lor.lhs.false42
  %incdec.ptr.sum = add nuw nsw i64 %idx.ext23, 2
  %incdec.ptr51 = getelementptr inbounds i8* %1, i64 %incdec.ptr.sum
  br label %do.cond

do.cond:                                          ; preds = %land.lhs.true100, %if.end49
  %match.0 = phi i8* [ %incdec.ptr51, %if.end49 ], [ %incdec.ptr103, %land.lhs.true100 ]
  %scan.1 = phi i8* [ %add.ptr50, %if.end49 ], [ %incdec.ptr101, %land.lhs.true100 ]
  %incdec.ptr53 = getelementptr inbounds i8* %scan.1, i64 1
  %18 = load i8* %incdec.ptr53, align 1, !tbaa !5
  %incdec.ptr55 = getelementptr inbounds i8* %match.0, i64 1
  %19 = load i8* %incdec.ptr55, align 1, !tbaa !5
  %cmp57 = icmp eq i8 %18, %19
  br i1 %cmp57, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %do.cond
  %incdec.ptr59 = getelementptr inbounds i8* %scan.1, i64 2
  %20 = load i8* %incdec.ptr59, align 1, !tbaa !5
  %incdec.ptr61 = getelementptr inbounds i8* %match.0, i64 2
  %21 = load i8* %incdec.ptr61, align 1, !tbaa !5
  %cmp63 = icmp eq i8 %20, %21
  br i1 %cmp63, label %land.lhs.true65, label %do.end

land.lhs.true65:                                  ; preds = %land.lhs.true
  %incdec.ptr66 = getelementptr inbounds i8* %scan.1, i64 3
  %22 = load i8* %incdec.ptr66, align 1, !tbaa !5
  %incdec.ptr68 = getelementptr inbounds i8* %match.0, i64 3
  %23 = load i8* %incdec.ptr68, align 1, !tbaa !5
  %cmp70 = icmp eq i8 %22, %23
  br i1 %cmp70, label %land.lhs.true72, label %do.end

land.lhs.true72:                                  ; preds = %land.lhs.true65
  %incdec.ptr73 = getelementptr inbounds i8* %scan.1, i64 4
  %24 = load i8* %incdec.ptr73, align 1, !tbaa !5
  %incdec.ptr75 = getelementptr inbounds i8* %match.0, i64 4
  %25 = load i8* %incdec.ptr75, align 1, !tbaa !5
  %cmp77 = icmp eq i8 %24, %25
  br i1 %cmp77, label %land.lhs.true79, label %do.end

land.lhs.true79:                                  ; preds = %land.lhs.true72
  %incdec.ptr80 = getelementptr inbounds i8* %scan.1, i64 5
  %26 = load i8* %incdec.ptr80, align 1, !tbaa !5
  %incdec.ptr82 = getelementptr inbounds i8* %match.0, i64 5
  %27 = load i8* %incdec.ptr82, align 1, !tbaa !5
  %cmp84 = icmp eq i8 %26, %27
  br i1 %cmp84, label %land.lhs.true86, label %do.end

land.lhs.true86:                                  ; preds = %land.lhs.true79
  %incdec.ptr87 = getelementptr inbounds i8* %scan.1, i64 6
  %28 = load i8* %incdec.ptr87, align 1, !tbaa !5
  %incdec.ptr89 = getelementptr inbounds i8* %match.0, i64 6
  %29 = load i8* %incdec.ptr89, align 1, !tbaa !5
  %cmp91 = icmp eq i8 %28, %29
  br i1 %cmp91, label %land.lhs.true93, label %do.end

land.lhs.true93:                                  ; preds = %land.lhs.true86
  %incdec.ptr94 = getelementptr inbounds i8* %scan.1, i64 7
  %30 = load i8* %incdec.ptr94, align 1, !tbaa !5
  %incdec.ptr96 = getelementptr inbounds i8* %match.0, i64 7
  %31 = load i8* %incdec.ptr96, align 1, !tbaa !5
  %cmp98 = icmp eq i8 %30, %31
  br i1 %cmp98, label %land.lhs.true100, label %do.end

land.lhs.true100:                                 ; preds = %land.lhs.true93
  %incdec.ptr101 = getelementptr inbounds i8* %scan.1, i64 8
  %32 = load i8* %incdec.ptr101, align 1, !tbaa !5
  %incdec.ptr103 = getelementptr inbounds i8* %match.0, i64 8
  %33 = load i8* %incdec.ptr103, align 1, !tbaa !5
  %cmp105 = icmp eq i8 %32, %33
  %cmp107 = icmp ult i8* %incdec.ptr101, %add.ptr12
  %or.cond = and i1 %cmp105, %cmp107
  br i1 %or.cond, label %do.cond, label %do.end

do.end:                                           ; preds = %land.lhs.true100, %land.lhs.true93, %land.lhs.true86, %land.lhs.true79, %land.lhs.true72, %land.lhs.true65, %land.lhs.true, %do.cond
  %scan.2 = phi i8* [ %incdec.ptr101, %land.lhs.true100 ], [ %incdec.ptr94, %land.lhs.true93 ], [ %incdec.ptr87, %land.lhs.true86 ], [ %incdec.ptr80, %land.lhs.true79 ], [ %incdec.ptr73, %land.lhs.true72 ], [ %incdec.ptr66, %land.lhs.true65 ], [ %incdec.ptr59, %land.lhs.true ], [ %incdec.ptr53, %do.cond ]
  %sub.ptr.rhs.cast = ptrtoint i8* %scan.2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv109 = trunc i64 %sub.ptr.sub to i32
  %sub110 = sub nsw i32 258, %conv109
  %cmp112 = icmp sgt i32 %sub110, %best_len.0
  br i1 %cmp112, label %if.then114, label %do.cond125

if.then114:                                       ; preds = %do.end
  store i32 %cur_match.addr.0, i32* %match_start, align 4, !tbaa !117
  %cmp115 = icmp slt i32 %sub110, %.
  br i1 %cmp115, label %if.end118, label %do.end135

if.end118:                                        ; preds = %if.then114
  %sub119 = add nsw i32 %sub110, -1
  %idxprom120 = sext i32 %sub119 to i64
  %add.ptr111.sum = add nsw i64 %idxprom120, %idx.ext
  %arrayidx121 = getelementptr inbounds i8* %1, i64 %add.ptr111.sum
  %34 = load i8* %arrayidx121, align 1, !tbaa !5
  %idxprom122 = sext i32 %sub110 to i64
  %add.ptr111.sum216 = add nsw i64 %idxprom122, %idx.ext
  %arrayidx123 = getelementptr inbounds i8* %1, i64 %add.ptr111.sum216
  %35 = load i8* %arrayidx123, align 1, !tbaa !5
  br label %do.cond125

do.cond125:                                       ; preds = %if.end118, %do.end, %lor.lhs.false42, %lor.lhs.false37, %lor.lhs.false, %do.body
  %best_len.1 = phi i32 [ %best_len.0, %do.body ], [ %best_len.0, %lor.lhs.false ], [ %best_len.0, %lor.lhs.false37 ], [ %best_len.0, %lor.lhs.false42 ], [ %sub110, %if.end118 ], [ %best_len.0, %do.end ]
  %scan_end1.1 = phi i8 [ %scan_end1.0, %do.body ], [ %scan_end1.0, %lor.lhs.false ], [ %scan_end1.0, %lor.lhs.false37 ], [ %scan_end1.0, %lor.lhs.false42 ], [ %34, %if.end118 ], [ %scan_end1.0, %do.end ]
  %scan_end.1 = phi i8 [ %scan_end.0, %do.body ], [ %scan_end.0, %lor.lhs.false ], [ %scan_end.0, %lor.lhs.false37 ], [ %scan_end.0, %lor.lhs.false42 ], [ %35, %if.end118 ], [ %scan_end.0, %do.end ]
  %and = and i32 %cur_match.addr.0, %7
  %idxprom126 = zext i32 %and to i64
  %arrayidx127 = getelementptr inbounds i16* %6, i64 %idxprom126
  %36 = load i16* %arrayidx127, align 2, !tbaa !81
  %conv128 = zext i16 %36 to i32
  %cmp129 = icmp ugt i32 %conv128, %sub6.
  br i1 %cmp129, label %land.rhs131, label %do.end135

land.rhs131:                                      ; preds = %do.cond125
  %dec = add i32 %chain_length.1, -1
  %cmp132 = icmp eq i32 %dec, 0
  br i1 %cmp132, label %do.end135, label %do.body

do.end135:                                        ; preds = %land.rhs131, %do.cond125, %if.then114
  %best_len.2 = phi i32 [ %best_len.1, %land.rhs131 ], [ %best_len.1, %do.cond125 ], [ %sub110, %if.then114 ]
  %cmp137 = icmp ugt i32 %best_len.2, %11
  %.best_len.2 = select i1 %cmp137, i32 %11, i32 %best_len.2
  ret i32 %.best_len.2
}

; Function Attrs: nounwind uwtable
define i32 @inflateResetKeep(%struct.z_stream_s* %strm) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %total = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 7
  store i64 0, i64* %total, align 8, !tbaa !123
  %total_out = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 5
  %total_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 2
  store i64 0, i64* %total_in, align 8, !tbaa !74
  %wrap = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 2
  %2 = bitcast i64* %total_out to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 16, i32 8, i1 false)
  %3 = load i32* %wrap, align 4, !tbaa !125
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %and = and i32 %3, 1
  %conv28 = zext i32 %and to i64
  %adler = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 12
  store i64 %conv28, i64* %adler, align 8, !tbaa !78
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %mode = bitcast %struct.internal_state* %0 to i32*
  store i32 0, i32* %mode, align 4, !tbaa !126
  %last = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 1
  store i32 0, i32* %last, align 4, !tbaa !127
  %havedict = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 3
  store i32 0, i32* %havedict, align 4, !tbaa !128
  %dmax = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 5
  store i32 32768, i32* %dmax, align 4, !tbaa !129
  %head = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 8
  store %struct.gz_header_s* null, %struct.gz_header_s** %head, align 8, !tbaa !130
  %hold = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 14
  store i64 0, i64* %hold, align 8, !tbaa !131
  %bits = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 15
  store i32 0, i32* %bits, align 4, !tbaa !132
  %arraydecay = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 30, i64 0
  %next = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 27
  store %struct.code* %arraydecay, %struct.code** %next, align 8, !tbaa !133
  %distcode = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 20
  store %struct.code* %arraydecay, %struct.code** %distcode, align 8, !tbaa !134
  %lencode = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 19
  store %struct.code* %arraydecay, %struct.code** %lencode, align 8, !tbaa !135
  %sane = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 31
  store i32 1, i32* %sane, align 4, !tbaa !136
  %back = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 32
  store i32 -1, i32* %back, align 4, !tbaa !137
  br label %return

return:                                           ; preds = %if.end6, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -2, %lor.lhs.false ], [ -2, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateReset(%struct.z_stream_s* %strm) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %wsize = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 10
  store i32 0, i32* %wsize, align 4, !tbaa !138
  %whave = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 11
  store i32 0, i32* %whave, align 4, !tbaa !139
  %wnext = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 12
  store i32 0, i32* %wnext, align 4, !tbaa !140
  %total.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 7
  store i64 0, i64* %total.i, align 8, !tbaa !123
  %total_out.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 5
  %total_in.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 2
  store i64 0, i64* %total_in.i, align 8, !tbaa !74
  %wrap.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 2
  %2 = bitcast i64* %total_out.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 16, i32 8, i1 false) #4
  %3 = load i32* %wrap.i, align 4, !tbaa !125
  %tobool.i = icmp eq i32 %3, 0
  br i1 %tobool.i, label %if.end6.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %and.i = and i32 %3, 1
  %conv28.i = zext i32 %and.i to i64
  %adler.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 12
  store i64 %conv28.i, i64* %adler.i, align 8, !tbaa !78
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %if.end.i
  %mode.i = bitcast %struct.internal_state* %0 to i32*
  store i32 0, i32* %mode.i, align 4, !tbaa !126
  %last.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 1
  store i32 0, i32* %last.i, align 4, !tbaa !127
  %havedict.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 3
  store i32 0, i32* %havedict.i, align 4, !tbaa !128
  %dmax.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 5
  store i32 32768, i32* %dmax.i, align 4, !tbaa !129
  %head.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 8
  store %struct.gz_header_s* null, %struct.gz_header_s** %head.i, align 8, !tbaa !130
  %hold.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 14
  store i64 0, i64* %hold.i, align 8, !tbaa !131
  %bits.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 15
  store i32 0, i32* %bits.i, align 4, !tbaa !132
  %arraydecay.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 30, i64 0
  %next.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 27
  store %struct.code* %arraydecay.i, %struct.code** %next.i, align 8, !tbaa !133
  %distcode.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 20
  store %struct.code* %arraydecay.i, %struct.code** %distcode.i, align 8, !tbaa !134
  %lencode.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 19
  store %struct.code* %arraydecay.i, %struct.code** %lencode.i, align 8, !tbaa !135
  %sane.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 31
  store i32 1, i32* %sane.i, align 4, !tbaa !136
  %back.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 32
  store i32 -1, i32* %back.i, align 4, !tbaa !137
  br label %return

return:                                           ; preds = %if.end6.i, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -2, %lor.lhs.false ], [ -2, %entry ], [ 0, %if.end6.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateReset2(%struct.z_stream_s* %strm, i32 %windowBits) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %cmp4 = icmp slt i32 %windowBits, 0
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %sub = sub nsw i32 0, %windowBits
  br label %if.end9

if.else:                                          ; preds = %if.end
  %shr = ashr i32 %windowBits, 4
  %add = add nsw i32 %shr, 1
  %cmp6 = icmp slt i32 %windowBits, 48
  %and = and i32 %windowBits, 15
  %and.windowBits = select i1 %cmp6, i32 %and, i32 %windowBits
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  %windowBits.addr.0 = phi i32 [ %sub, %if.then5 ], [ %and.windowBits, %if.else ]
  %wrap.0 = phi i32 [ 0, %if.then5 ], [ %add, %if.else ]
  %tobool = icmp eq i32 %windowBits.addr.0, 0
  %2 = and i32 %windowBits.addr.0, -8
  %3 = icmp eq i32 %2, 8
  %or.cond = or i1 %tobool, %3
  br i1 %or.cond, label %if.end14, label %return

if.end14:                                         ; preds = %if.end9
  %window = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 13
  %4 = load i8** %window, align 8, !tbaa !141
  %cmp15 = icmp eq i8* %4, null
  %wbits23.pre = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 9
  br i1 %cmp15, label %lor.lhs.false.i, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %if.end14
  %5 = load i32* %wbits23.pre, align 4, !tbaa !142
  %cmp17 = icmp eq i32 %5, %windowBits.addr.0
  br i1 %cmp17, label %lor.lhs.false.i, label %if.then18

if.then18:                                        ; preds = %land.lhs.true16
  %zfree = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 9
  %6 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %opaque = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 10
  %7 = load i8** %opaque, align 8, !tbaa !45
  tail call void %6(i8* %7, i8* %4) #4
  store i8* null, i8** %window, align 8, !tbaa !141
  br label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then18, %land.lhs.true16, %if.end14
  %wrap22 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 2
  store i32 %wrap.0, i32* %wrap22, align 4, !tbaa !125
  store i32 %windowBits.addr.0, i32* %wbits23.pre, align 4, !tbaa !142
  %8 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2.i = icmp eq %struct.internal_state* %8, null
  br i1 %cmp2.i, label %return, label %if.end.i.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i
  %9 = bitcast %struct.internal_state* %8 to %struct.inflate_state*
  %wsize.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 10
  store i32 0, i32* %wsize.i, align 4, !tbaa !138
  %whave.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 11
  store i32 0, i32* %whave.i, align 4, !tbaa !139
  %wnext.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 12
  store i32 0, i32* %wnext.i, align 4, !tbaa !140
  %total.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 7
  store i64 0, i64* %total.i.i, align 8, !tbaa !123
  %total_out.i.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 5
  %total_in.i.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 2
  store i64 0, i64* %total_in.i.i, align 8, !tbaa !74
  %wrap.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 2
  %10 = bitcast i64* %total_out.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 16, i32 8, i1 false) #4
  %11 = load i32* %wrap.i.i, align 4, !tbaa !125
  %tobool.i.i = icmp eq i32 %11, 0
  br i1 %tobool.i.i, label %if.end6.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  %and.i.i = and i32 %11, 1
  %conv28.i.i = zext i32 %and.i.i to i64
  %adler.i.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 12
  store i64 %conv28.i.i, i64* %adler.i.i, align 8, !tbaa !78
  br label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.then4.i.i, %if.end.i.i
  %mode.i.i = bitcast %struct.internal_state* %8 to i32*
  store i32 0, i32* %mode.i.i, align 4, !tbaa !126
  %last.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 1
  store i32 0, i32* %last.i.i, align 4, !tbaa !127
  %havedict.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 3
  store i32 0, i32* %havedict.i.i, align 4, !tbaa !128
  %dmax.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 5
  store i32 32768, i32* %dmax.i.i, align 4, !tbaa !129
  %head.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 8
  store %struct.gz_header_s* null, %struct.gz_header_s** %head.i.i, align 8, !tbaa !130
  %hold.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 14
  store i64 0, i64* %hold.i.i, align 8, !tbaa !131
  %bits.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 15
  store i32 0, i32* %bits.i.i, align 4, !tbaa !132
  %arraydecay.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 30, i64 0
  %next.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 27
  store %struct.code* %arraydecay.i.i, %struct.code** %next.i.i, align 8, !tbaa !133
  %distcode.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 20
  store %struct.code* %arraydecay.i.i, %struct.code** %distcode.i.i, align 8, !tbaa !134
  %lencode.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 19
  store %struct.code* %arraydecay.i.i, %struct.code** %lencode.i.i, align 8, !tbaa !135
  %sane.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 31
  store i32 1, i32* %sane.i.i, align 4, !tbaa !136
  %back.i.i = getelementptr inbounds %struct.inflate_state* %9, i64 0, i32 32
  store i32 -1, i32* %back.i.i, align 4, !tbaa !137
  br label %return

return:                                           ; preds = %if.end6.i.i, %lor.lhs.false.i, %if.end9, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %if.end9 ], [ -2, %lor.lhs.false.i ], [ 0, %if.end6.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateInit2_(%struct.z_stream_s* %strm, i32 %windowBits, i8* readonly %version, i32 %stream_size) #3 {
entry:
  %cmp = icmp eq i8* %version, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8* %version, align 1, !tbaa !5
  %cmp2 = icmp ne i8 %0, 49
  %cmp5 = icmp ne i32 %stream_size, 112
  %or.cond = or i1 %cmp2, %cmp5
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %cmp7 = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp7, label %return, label %if.end10

if.end10:                                         ; preds = %if.end
  %msg = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 6
  store i8* null, i8** %msg, align 8, !tbaa !38
  %zalloc = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 8
  %1 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %cmp11 = icmp eq i8* (i8*, i32, i32)* %1, null
  br i1 %cmp11, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end10
  store i8* (i8*, i32, i32)* @zcalloc, i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %opaque = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 10
  store i8* null, i8** %opaque, align 8, !tbaa !45
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end10
  %2 = phi i8* (i8*, i32, i32)* [ @zcalloc, %if.then13 ], [ %1, %if.end10 ]
  %zfree = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 9
  %3 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %cmp16 = icmp eq void (i8*, i8*)* %3, null
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end15
  store void (i8*, i8*)* @zcfree, void (i8*, i8*)** %zfree, align 8, !tbaa !46
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end15
  %opaque22 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 10
  %4 = load i8** %opaque22, align 8, !tbaa !45
  %call = tail call i8* %2(i8* %4, i32 1, i32 7152) #4
  %cmp23 = icmp eq i8* %call, null
  br i1 %cmp23, label %return, label %if.end26

if.end26:                                         ; preds = %if.end20
  %5 = bitcast i8* %call to %struct.internal_state*
  %state27 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  store %struct.internal_state* %5, %struct.internal_state** %state27, align 8, !tbaa !47
  %window = getelementptr inbounds i8* %call, i64 64
  %6 = bitcast i8* %window to i8**
  store i8* null, i8** %6, align 8, !tbaa !141
  %call28 = tail call i32 @inflateReset2(%struct.z_stream_s* %strm, i32 %windowBits)
  %cmp29 = icmp eq i32 %call28, 0
  br i1 %cmp29, label %return, label %if.then31

if.then31:                                        ; preds = %if.end26
  %7 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %8 = load i8** %opaque22, align 8, !tbaa !45
  tail call void %7(i8* %8, i8* %call) #4
  store %struct.internal_state* null, %struct.internal_state** %state27, align 8, !tbaa !47
  br label %return

return:                                           ; preds = %if.then31, %if.end26, %if.end20, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -6, %lor.lhs.false ], [ -6, %entry ], [ -2, %if.end ], [ -4, %if.end20 ], [ 0, %if.end26 ], [ %call28, %if.then31 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateInit_(%struct.z_stream_s* %strm, i8* readonly %version, i32 %stream_size) #3 {
entry:
  %cmp.i = icmp eq i8* %version, null
  br i1 %cmp.i, label %inflateInit2_.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %0 = load i8* %version, align 1, !tbaa !5
  %cmp2.i = icmp ne i8 %0, 49
  %cmp5.i = icmp ne i32 %stream_size, 112
  %or.cond.i = or i1 %cmp2.i, %cmp5.i
  br i1 %or.cond.i, label %inflateInit2_.exit, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %cmp7.i = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp7.i, label %inflateInit2_.exit, label %if.end10.i

if.end10.i:                                       ; preds = %if.end.i
  %msg.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 6
  store i8* null, i8** %msg.i, align 8, !tbaa !38
  %zalloc.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 8
  %1 = load i8* (i8*, i32, i32)** %zalloc.i, align 8, !tbaa !44
  %cmp11.i = icmp eq i8* (i8*, i32, i32)* %1, null
  br i1 %cmp11.i, label %if.then13.i, label %if.end15.i

if.then13.i:                                      ; preds = %if.end10.i
  store i8* (i8*, i32, i32)* @zcalloc, i8* (i8*, i32, i32)** %zalloc.i, align 8, !tbaa !44
  %opaque.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 10
  store i8* null, i8** %opaque.i, align 8, !tbaa !45
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then13.i, %if.end10.i
  %2 = phi i8* (i8*, i32, i32)* [ @zcalloc, %if.then13.i ], [ %1, %if.end10.i ]
  %zfree.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 9
  %3 = load void (i8*, i8*)** %zfree.i, align 8, !tbaa !46
  %cmp16.i = icmp eq void (i8*, i8*)* %3, null
  br i1 %cmp16.i, label %if.then18.i, label %if.end20.i

if.then18.i:                                      ; preds = %if.end15.i
  store void (i8*, i8*)* @zcfree, void (i8*, i8*)** %zfree.i, align 8, !tbaa !46
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then18.i, %if.end15.i
  %opaque22.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 10
  %4 = load i8** %opaque22.i, align 8, !tbaa !45
  %call.i = tail call i8* %2(i8* %4, i32 1, i32 7152) #4
  %cmp23.i = icmp eq i8* %call.i, null
  br i1 %cmp23.i, label %inflateInit2_.exit, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.end20.i
  %5 = bitcast i8* %call.i to %struct.internal_state*
  %state27.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  store %struct.internal_state* %5, %struct.internal_state** %state27.i, align 8, !tbaa !47
  %window.i = getelementptr inbounds i8* %call.i, i64 64
  %6 = bitcast i8* %window.i to i8**
  store i8* null, i8** %6, align 8, !tbaa !141
  %wbits23.pre.i = getelementptr inbounds i8* %call.i, i64 48
  %7 = bitcast i8* %wbits23.pre.i to i32*
  %wrap22.i = getelementptr inbounds i8* %call.i, i64 8
  %8 = bitcast i8* %wrap22.i to i32*
  store i32 1, i32* %8, align 4, !tbaa !125
  store i32 15, i32* %7, align 4, !tbaa !142
  %wsize.i.i = getelementptr inbounds i8* %call.i, i64 52
  %9 = bitcast i8* %wsize.i.i to i32*
  store i32 0, i32* %9, align 4, !tbaa !138
  %whave.i.i = getelementptr inbounds i8* %call.i, i64 56
  %10 = bitcast i8* %whave.i.i to i32*
  store i32 0, i32* %10, align 4, !tbaa !139
  %wnext.i.i = getelementptr inbounds i8* %call.i, i64 60
  %11 = bitcast i8* %wnext.i.i to i32*
  store i32 0, i32* %11, align 4, !tbaa !140
  %total.i.i.i = getelementptr inbounds i8* %call.i, i64 32
  %12 = bitcast i8* %total.i.i.i to i64*
  store i64 0, i64* %12, align 8, !tbaa !123
  %total_out.i.i.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 5
  %total_in.i.i.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 2
  store i64 0, i64* %total_in.i.i.i, align 8, !tbaa !74
  %13 = bitcast i64* %total_out.i.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 16, i32 8, i1 false) #4
  %14 = load i32* %8, align 4, !tbaa !125
  %tobool.i.i.i = icmp eq i32 %14, 0
  br i1 %tobool.i.i.i, label %inflateReset2.exit, label %if.then4.i.i.i

if.then4.i.i.i:                                   ; preds = %if.end.i.i.i
  %and.i.i.i = and i32 %14, 1
  %conv28.i.i.i = zext i32 %and.i.i.i to i64
  %adler.i.i.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 12
  store i64 %conv28.i.i.i, i64* %adler.i.i.i, align 8, !tbaa !78
  br label %inflateReset2.exit

inflateReset2.exit:                               ; preds = %if.then4.i.i.i, %if.end.i.i.i
  %mode.i.i.i = bitcast i8* %call.i to i32*
  store i32 0, i32* %mode.i.i.i, align 4, !tbaa !126
  %last.i.i.i = getelementptr inbounds i8* %call.i, i64 4
  %15 = bitcast i8* %last.i.i.i to i32*
  store i32 0, i32* %15, align 4, !tbaa !127
  %havedict.i.i.i = getelementptr inbounds i8* %call.i, i64 12
  %16 = bitcast i8* %havedict.i.i.i to i32*
  store i32 0, i32* %16, align 4, !tbaa !128
  %dmax.i.i.i = getelementptr inbounds i8* %call.i, i64 20
  %17 = bitcast i8* %dmax.i.i.i to i32*
  store i32 32768, i32* %17, align 4, !tbaa !129
  %head.i.i.i = getelementptr inbounds i8* %call.i, i64 40
  %18 = bitcast i8* %head.i.i.i to %struct.gz_header_s**
  store %struct.gz_header_s* null, %struct.gz_header_s** %18, align 8, !tbaa !130
  %hold.i.i.i = getelementptr inbounds i8* %call.i, i64 72
  %19 = bitcast i8* %hold.i.i.i to i64*
  store i64 0, i64* %19, align 8, !tbaa !131
  %bits.i.i.i = getelementptr inbounds i8* %call.i, i64 80
  %20 = bitcast i8* %bits.i.i.i to i32*
  store i32 0, i32* %20, align 4, !tbaa !132
  %arraydecay.i.i.i = getelementptr inbounds i8* %call.i, i64 1360
  %21 = bitcast i8* %arraydecay.i.i.i to %struct.code*
  %next.i.i.i = getelementptr inbounds i8* %call.i, i64 136
  %22 = bitcast i8* %next.i.i.i to %struct.code**
  store %struct.code* %21, %struct.code** %22, align 8, !tbaa !133
  %distcode.i.i.i = getelementptr inbounds i8* %call.i, i64 104
  %23 = bitcast i8* %distcode.i.i.i to %struct.code**
  store %struct.code* %21, %struct.code** %23, align 8, !tbaa !134
  %lencode.i.i.i = getelementptr inbounds i8* %call.i, i64 96
  %24 = bitcast i8* %lencode.i.i.i to %struct.code**
  store %struct.code* %21, %struct.code** %24, align 8, !tbaa !135
  %sane.i.i.i = getelementptr inbounds i8* %call.i, i64 7136
  %25 = bitcast i8* %sane.i.i.i to i32*
  store i32 1, i32* %25, align 4, !tbaa !136
  %back.i.i.i = getelementptr inbounds i8* %call.i, i64 7140
  %26 = bitcast i8* %back.i.i.i to i32*
  store i32 -1, i32* %26, align 4, !tbaa !137
  br label %inflateInit2_.exit

inflateInit2_.exit:                               ; preds = %inflateReset2.exit, %if.end20.i, %if.end.i, %lor.lhs.false.i, %entry
  %retval.0.i = phi i32 [ -6, %lor.lhs.false.i ], [ -6, %entry ], [ -2, %if.end.i ], [ -4, %if.end20.i ], [ 0, %inflateReset2.exit ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind uwtable
define i32 @inflatePrime(%struct.z_stream_s* readonly %strm, i32 %bits, i32 %value) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %cmp4 = icmp slt i32 %bits, 0
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  %hold = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 14
  store i64 0, i64* %hold, align 8, !tbaa !131
  %bits6 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 15
  store i32 0, i32* %bits6, align 4, !tbaa !132
  br label %return

if.end7:                                          ; preds = %if.end
  %cmp8 = icmp sgt i32 %bits, 16
  br i1 %cmp8, label %return, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %if.end7
  %bits10 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 15
  %2 = load i32* %bits10, align 4, !tbaa !132
  %add = add i32 %2, %bits
  %cmp11 = icmp ugt i32 %add, 32
  br i1 %cmp11, label %return, label %if.end13

if.end13:                                         ; preds = %lor.lhs.false9
  %sh_prom = zext i32 %bits to i64
  %shl = shl i64 1, %sh_prom
  %sub = add nsw i64 %shl, 4294967295
  %conv34 = zext i32 %value to i64
  %and = and i64 %sub, %conv34
  %conv14 = trunc i64 %and to i32
  %shl16 = shl i32 %conv14, %2
  %conv17 = sext i32 %shl16 to i64
  %hold18 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 14
  %3 = load i64* %hold18, align 8, !tbaa !131
  %add19 = add i64 %3, %conv17
  store i64 %add19, i64* %hold18, align 8, !tbaa !131
  store i32 %add, i32* %bits10, align 4, !tbaa !132
  br label %return

return:                                           ; preds = %if.end13, %lor.lhs.false9, %if.end7, %if.then5, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.then5 ], [ 0, %if.end13 ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %lor.lhs.false9 ], [ -2, %if.end7 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflate(%struct.z_stream_s* %strm, i32 %flush) #3 {
entry:
  %hbuf = alloca [4 x i8], align 1
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %next_out = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 3
  %1 = load i8** %next_out, align 8, !tbaa !34
  %cmp4 = icmp eq i8* %1, null
  br i1 %cmp4, label %return, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %next_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 0
  %2 = load i8** %next_in, align 8, !tbaa !37
  %cmp6 = icmp eq i8* %2, null
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false5
  %avail_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 1
  %3 = load i32* %avail_in, align 4, !tbaa !32
  %cmp7 = icmp eq i32 %3, 0
  br i1 %cmp7, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false5
  %4 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %mode = bitcast %struct.internal_state* %0 to i32*
  %5 = load i32* %mode, align 4, !tbaa !126
  %cmp9 = icmp eq i32 %5, 11
  br i1 %cmp9, label %if.then10, label %do.body

if.then10:                                        ; preds = %if.end
  store i32 12, i32* %mode, align 4, !tbaa !126
  br label %do.body

do.body:                                          ; preds = %if.then10, %if.end
  %6 = phi i32 [ %5, %if.end ], [ 12, %if.then10 ]
  %avail_out = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 4
  %7 = load i32* %avail_out, align 4, !tbaa !33
  %avail_in15 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 1
  %8 = load i32* %avail_in15, align 4, !tbaa !32
  %hold16 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 14
  %9 = load i64* %hold16, align 8, !tbaa !131
  %bits17 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 15
  %10 = load i32* %bits17, align 4, !tbaa !132
  %wrap = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 2
  %check = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 6
  %arrayidx = getelementptr inbounds [4 x i8]* %hbuf, i64 0, i64 0
  %arrayidx40 = getelementptr inbounds [4 x i8]* %hbuf, i64 0, i64 1
  %flags = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 4
  %head = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 8
  %msg = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 6
  %wbits = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 9
  %dmax = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 5
  %adler = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 12
  %length = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 16
  %havedict = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 3
  %flush.off = add i32 %flush, -5
  %11 = icmp ult i32 %flush.off, 2
  %last638 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 1
  %lencode.i = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 19
  %lenbits.i = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 21
  %distcode.i = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 20
  %distbits.i = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 22
  %cmp687 = icmp eq i32 %flush, 6
  %back = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 32
  %extra1386 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 18
  %was = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 33
  %offset1592 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 17
  %whave = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 11
  %sane = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 31
  %wnext = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 12
  %window = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 13
  %wsize = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 10
  %total_out = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 5
  %total = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 7
  %arrayidx207 = getelementptr inbounds [4 x i8]* %hbuf, i64 0, i64 2
  %arrayidx210 = getelementptr inbounds [4 x i8]* %hbuf, i64 0, i64 3
  %have920 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 26
  %nlen921 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 24
  %ndist922 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 25
  %arrayidx1163 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 256
  %arraydecay1172 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 30, i64 0
  %next1173 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 27
  %arraydecay1178 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 0
  %arraydecay1183 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 29, i64 0
  %ncode848 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 23
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %do.body
  %12 = phi i32 [ %6, %do.body ], [ %.pre, %for.cond.backedge ]
  %next.0 = phi i8* [ %2, %do.body ], [ %next.0.be, %for.cond.backedge ]
  %put.0 = phi i8* [ %1, %do.body ], [ %put.0.be, %for.cond.backedge ]
  %have.0 = phi i32 [ %8, %do.body ], [ %have.0.be, %for.cond.backedge ]
  %left.0 = phi i32 [ %7, %do.body ], [ %left.0.be, %for.cond.backedge ]
  %hold.0 = phi i64 [ %9, %do.body ], [ %hold.0.be, %for.cond.backedge ]
  %bits.0 = phi i32 [ %10, %do.body ], [ %bits.0.be, %for.cond.backedge ]
  %out.0 = phi i32 [ %7, %do.body ], [ %out.0.be, %for.cond.backedge ]
  %ret.0 = phi i32 [ 0, %do.body ], [ %ret.0.be, %for.cond.backedge ]
  switch i32 %12, label %return.loopexit3928 [
    i32 0, label %sw.bb
    i32 1, label %while.cond104.preheader
    i32 2, label %while.cond170.preheader
    i32 3, label %while.cond222.preheader
    i32 4, label %sw.bb271
    i32 5, label %sw.bb331
    i32 6, label %sw.bb389
    i32 7, label %sw.bb451
    i32 8, label %sw.bb517
    i32 9, label %while.cond573.preheader
    i32 10, label %sw.bb611
    i32 11, label %sw.bb629
    i32 12, label %sw.bb637
    i32 13, label %do.body707
    i32 14, label %sw.bb756
    i32 15, label %sw.bb758
    i32 16, label %while.cond787.preheader
    i32 17, label %while.cond846.preheader
    i32 18, label %for.cond.while.cond919.preheader_crit_edge
    i32 19, label %sw.bb1212
    i32 20, label %sw.bb1214
    i32 21, label %for.cond.sw.bb1388_crit_edge
    i32 22, label %for.cond1437.preheader
    i32 23, label %for.cond.sw.bb1560_crit_edge
    i32 24, label %sw.bb1607
    i32 25, label %sw.bb1675
    i32 26, label %sw.bb1685
    i32 27, label %sw.bb1766
    i32 28, label %do.body1813.loopexit4553
    i32 29, label %do.body1813.loopexit3929
    i32 30, label %return.loopexit
  ]

for.cond.sw.bb1560_crit_edge:                     ; preds = %for.cond
  %.pre3898 = load i32* %extra1386, align 4, !tbaa !143
  br label %sw.bb1560

for.cond.sw.bb1388_crit_edge:                     ; preds = %for.cond
  %.pre3895 = load i32* %extra1386, align 4, !tbaa !143
  br label %sw.bb1388

for.cond.while.cond919.preheader_crit_edge:       ; preds = %for.cond
  %.pre3891 = load i32* %have920, align 4, !tbaa !144
  br label %while.cond919.preheader

while.cond787.preheader:                          ; preds = %for.cond
  %cmp7883216 = icmp ult i32 %bits.0, 14
  br i1 %cmp7883216, label %do.body791.lr.ph, label %do.end807

do.body791.lr.ph:                                 ; preds = %while.cond787.preheader
  %13 = zext i32 %bits.0 to i64
  br label %do.body791

while.cond573.preheader:                          ; preds = %for.cond
  %cmp5743441 = icmp ult i32 %bits.0, 32
  br i1 %cmp5743441, label %do.body577.lr.ph, label %do.end593

do.body577.lr.ph:                                 ; preds = %while.cond573.preheader
  %14 = zext i32 %bits.0 to i64
  br label %do.body577

while.cond104.preheader:                          ; preds = %for.cond
  %cmp1053458 = icmp ult i32 %bits.0, 16
  br i1 %cmp1053458, label %do.body108.lr.ph, label %do.end122

do.body108.lr.ph:                                 ; preds = %while.cond104.preheader
  %15 = zext i32 %bits.0 to i64
  br label %do.body108

sw.bb:                                            ; preds = %for.cond
  %16 = load i32* %wrap, align 4, !tbaa !125
  %cmp19 = icmp eq i32 %16, 0
  br i1 %cmp19, label %if.then20, label %while.cond.preheader

while.cond.preheader:                             ; preds = %sw.bb
  %cmp243500 = icmp ult i32 %bits.0, 16
  br i1 %cmp243500, label %do.body25.lr.ph, label %do.end31

do.body25.lr.ph:                                  ; preds = %while.cond.preheader
  %17 = zext i32 %bits.0 to i64
  br label %do.body25

if.then20:                                        ; preds = %sw.bb
  store i32 12, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

do.body25:                                        ; preds = %if.end28, %do.body25.lr.ph
  %indvars.iv3883 = phi i64 [ %17, %do.body25.lr.ph ], [ %indvars.iv.next3884, %if.end28 ]
  %bits.13504 = phi i32 [ %bits.0, %do.body25.lr.ph ], [ %add29, %if.end28 ]
  %hold.13503 = phi i64 [ %hold.0, %do.body25.lr.ph ], [ %add, %if.end28 ]
  %have.13502 = phi i32 [ %have.0, %do.body25.lr.ph ], [ %dec, %if.end28 ]
  %next.13501 = phi i8* [ %next.0, %do.body25.lr.ph ], [ %incdec.ptr, %if.end28 ]
  %cmp26 = icmp eq i32 %have.13502, 0
  br i1 %cmp26, label %do.body1813.loopexit2780, label %if.end28

if.end28:                                         ; preds = %do.body25
  %dec = add i32 %have.13502, -1
  %incdec.ptr = getelementptr inbounds i8* %next.13501, i64 1
  %18 = load i8* %next.13501, align 1, !tbaa !5
  %conv = zext i8 %18 to i64
  %shl = shl i64 %conv, %indvars.iv3883
  %add = add i64 %shl, %hold.13503
  %add29 = add i32 %bits.13504, 8
  %cmp24 = icmp ult i32 %add29, 16
  %indvars.iv.next3884 = add nuw nsw i64 %indvars.iv3883, 8
  br i1 %cmp24, label %do.body25, label %do.end31.loopexit

do.end31.loopexit:                                ; preds = %if.end28
  %add29.lcssa = phi i32 [ %add29, %if.end28 ]
  %add.lcssa = phi i64 [ %add, %if.end28 ]
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %if.end28 ]
  %dec.lcssa = phi i32 [ %dec, %if.end28 ]
  br label %do.end31

do.end31:                                         ; preds = %do.end31.loopexit, %while.cond.preheader
  %bits.1.lcssa = phi i32 [ %bits.0, %while.cond.preheader ], [ %add29.lcssa, %do.end31.loopexit ]
  %hold.1.lcssa = phi i64 [ %hold.0, %while.cond.preheader ], [ %add.lcssa, %do.end31.loopexit ]
  %have.1.lcssa = phi i32 [ %have.0, %while.cond.preheader ], [ %dec.lcssa, %do.end31.loopexit ]
  %next.1.lcssa = phi i8* [ %next.0, %while.cond.preheader ], [ %incdec.ptr.lcssa, %do.end31.loopexit ]
  %and = and i32 %16, 2
  %tobool = icmp ne i32 %and, 0
  %cmp34 = icmp eq i64 %hold.1.lcssa, 35615
  %or.cond = and i1 %tobool, %cmp34
  br i1 %or.cond, label %if.then36, label %if.end48

if.then36:                                        ; preds = %do.end31
  %call = call i64 @crc32(i64 0, i8* null, i32 0) #4
  store i64 %call, i64* %check, align 8, !tbaa !145
  store i8 31, i8* %arrayidx, align 1, !tbaa !5
  store i8 -117, i8* %arrayidx40, align 1, !tbaa !5
  %call42 = call i64 @crc32(i64 %call, i8* %arrayidx, i32 2) #4
  store i64 %call42, i64* %check, align 8, !tbaa !145
  store i32 1, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end48:                                         ; preds = %do.end31
  store i32 0, i32* %flags, align 4, !tbaa !146
  %19 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp49 = icmp eq %struct.gz_header_s* %19, null
  br i1 %cmp49, label %if.end53, label %if.then51

if.then51:                                        ; preds = %if.end48
  %done = getelementptr inbounds %struct.gz_header_s* %19, i64 0, i32 12
  store i32 -1, i32* %done, align 4, !tbaa !147
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %if.end48
  %and55 = and i32 %16, 1
  %tobool56 = icmp eq i32 %and55, 0
  br i1 %tobool56, label %if.then65, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %if.end53
  %and59 = shl i64 %hold.1.lcssa, 8
  %shl60 = and i64 %and59, 65280
  %shr62 = lshr i64 %hold.1.lcssa, 8
  %add63 = add nuw nsw i64 %shl60, %shr62
  %rem = urem i64 %add63, 31
  %tobool64 = icmp eq i64 %rem, 0
  br i1 %tobool64, label %if.end67, label %if.then65

if.then65:                                        ; preds = %lor.lhs.false57, %if.end53
  store i8* getelementptr inbounds ([23 x i8]* @.str156, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end67:                                         ; preds = %lor.lhs.false57
  %and69 = and i64 %hold.1.lcssa, 15
  %cmp70 = icmp eq i64 %and69, 8
  br i1 %cmp70, label %do.body76, label %if.then72

if.then72:                                        ; preds = %if.end67
  store i8* getelementptr inbounds ([27 x i8]* @.str257, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

do.body76:                                        ; preds = %if.end67
  %shr77 = lshr i64 %hold.1.lcssa, 4
  %sub = add i32 %bits.1.lcssa, -4
  %conv79 = trunc i64 %shr77 to i32
  %and80 = and i32 %conv79, 15
  %add81 = add nuw nsw i32 %and80, 8
  %20 = load i32* %wbits, align 4, !tbaa !142
  %cmp82 = icmp eq i32 %20, 0
  br i1 %cmp82, label %if.then84, label %if.else

if.then84:                                        ; preds = %do.body76
  store i32 %add81, i32* %wbits, align 4, !tbaa !142
  br label %if.end93

if.else:                                          ; preds = %do.body76
  %cmp87 = icmp ugt i32 %add81, %20
  br i1 %cmp87, label %if.then89, label %if.end93

if.then89:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([20 x i8]* @.str358, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end93:                                         ; preds = %if.else, %if.then84
  %shl94 = shl i32 1, %add81
  store i32 %shl94, i32* %dmax, align 4, !tbaa !129
  %call95 = call i64 @adler32(i64 0, i8* null, i32 0) #4
  store i64 %call95, i64* %check, align 8, !tbaa !145
  store i64 %call95, i64* %adler, align 8, !tbaa !78
  %21 = lshr i64 %hold.1.lcssa, 12
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 2
  %24 = xor i32 %23, 11
  store i32 %24, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

do.body108:                                       ; preds = %if.end112, %do.body108.lr.ph
  %indvars.iv3868 = phi i64 [ %15, %do.body108.lr.ph ], [ %indvars.iv.next3869, %if.end112 ]
  %bits.23462 = phi i32 [ %bits.0, %do.body108.lr.ph ], [ %add119, %if.end112 ]
  %hold.23461 = phi i64 [ %hold.0, %do.body108.lr.ph ], [ %add118, %if.end112 ]
  %have.23460 = phi i32 [ %have.0, %do.body108.lr.ph ], [ %dec113, %if.end112 ]
  %next.23459 = phi i8* [ %next.0, %do.body108.lr.ph ], [ %incdec.ptr114, %if.end112 ]
  %cmp109 = icmp eq i32 %have.23460, 0
  br i1 %cmp109, label %do.body1813.loopexit2785, label %if.end112

if.end112:                                        ; preds = %do.body108
  %dec113 = add i32 %have.23460, -1
  %incdec.ptr114 = getelementptr inbounds i8* %next.23459, i64 1
  %25 = load i8* %next.23459, align 1, !tbaa !5
  %conv115 = zext i8 %25 to i64
  %shl117 = shl i64 %conv115, %indvars.iv3868
  %add118 = add i64 %shl117, %hold.23461
  %add119 = add i32 %bits.23462, 8
  %cmp105 = icmp ult i32 %add119, 16
  %indvars.iv.next3869 = add nuw nsw i64 %indvars.iv3868, 8
  br i1 %cmp105, label %do.body108, label %do.end122.loopexit

do.end122.loopexit:                               ; preds = %if.end112
  %add119.lcssa = phi i32 [ %add119, %if.end112 ]
  %add118.lcssa = phi i64 [ %add118, %if.end112 ]
  %incdec.ptr114.lcssa = phi i8* [ %incdec.ptr114, %if.end112 ]
  %dec113.lcssa = phi i32 [ %dec113, %if.end112 ]
  br label %do.end122

do.end122:                                        ; preds = %do.end122.loopexit, %while.cond104.preheader
  %bits.2.lcssa = phi i32 [ %bits.0, %while.cond104.preheader ], [ %add119.lcssa, %do.end122.loopexit ]
  %hold.2.lcssa = phi i64 [ %hold.0, %while.cond104.preheader ], [ %add118.lcssa, %do.end122.loopexit ]
  %have.2.lcssa = phi i32 [ %have.0, %while.cond104.preheader ], [ %dec113.lcssa, %do.end122.loopexit ]
  %next.2.lcssa = phi i8* [ %next.0, %while.cond104.preheader ], [ %incdec.ptr114.lcssa, %do.end122.loopexit ]
  %conv123 = trunc i64 %hold.2.lcssa to i32
  store i32 %conv123, i32* %flags, align 4, !tbaa !146
  %and126 = and i32 %conv123, 255
  %cmp127 = icmp eq i32 %and126, 8
  br i1 %cmp127, label %if.end132, label %if.then129

if.then129:                                       ; preds = %do.end122
  store i8* getelementptr inbounds ([27 x i8]* @.str257, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end132:                                        ; preds = %do.end122
  %and134 = and i32 %conv123, 57344
  %tobool135 = icmp eq i32 %and134, 0
  br i1 %tobool135, label %if.end139, label %if.then136

if.then136:                                       ; preds = %if.end132
  store i8* getelementptr inbounds ([25 x i8]* @.str459, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end139:                                        ; preds = %if.end132
  %26 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp141 = icmp eq %struct.gz_header_s* %26, null
  br i1 %cmp141, label %if.end148, label %if.then143

if.then143:                                       ; preds = %if.end139
  %shr144 = lshr i64 %hold.2.lcssa, 8
  %shr144.tr = trunc i64 %shr144 to i32
  %conv146 = and i32 %shr144.tr, 1
  %text = getelementptr inbounds %struct.gz_header_s* %26, i64 0, i32 0
  store i32 %conv146, i32* %text, align 4, !tbaa !102
  br label %if.end148

if.end148:                                        ; preds = %if.then143, %if.end139
  %and150 = and i32 %conv123, 512
  %tobool151 = icmp eq i32 %and150, 0
  br i1 %tobool151, label %while.cond170.preheader.thread, label %do.body153

do.body153:                                       ; preds = %if.end148
  %conv154 = trunc i64 %hold.2.lcssa to i8
  store i8 %conv154, i8* %arrayidx, align 1, !tbaa !5
  %shr156 = lshr i64 %hold.2.lcssa, 8
  %conv157 = trunc i64 %shr156 to i8
  store i8 %conv157, i8* %arrayidx40, align 1, !tbaa !5
  %27 = load i64* %check, align 8, !tbaa !145
  %call161 = call i64 @crc32(i64 %27, i8* %arrayidx, i32 2) #4
  store i64 %call161, i64* %check, align 8, !tbaa !145
  br label %while.cond170.preheader.thread

while.cond170.preheader.thread:                   ; preds = %do.body153, %if.end148
  store i32 2, i32* %mode, align 4, !tbaa !126
  br label %do.body174.lr.ph

while.cond170.preheader:                          ; preds = %for.cond
  %cmp1713467 = icmp ult i32 %bits.0, 32
  br i1 %cmp1713467, label %do.body174.lr.ph, label %do.end188

do.body174.lr.ph:                                 ; preds = %while.cond170.preheader, %while.cond170.preheader.thread
  %bits.3.ph3906 = phi i32 [ 0, %while.cond170.preheader.thread ], [ %bits.0, %while.cond170.preheader ]
  %hold.3.ph3905 = phi i64 [ 0, %while.cond170.preheader.thread ], [ %hold.0, %while.cond170.preheader ]
  %have.3.ph3904 = phi i32 [ %have.2.lcssa, %while.cond170.preheader.thread ], [ %have.0, %while.cond170.preheader ]
  %next.3.ph3903 = phi i8* [ %next.2.lcssa, %while.cond170.preheader.thread ], [ %next.0, %while.cond170.preheader ]
  %28 = zext i32 %bits.3.ph3906 to i64
  br label %do.body174

do.body174:                                       ; preds = %if.end178, %do.body174.lr.ph
  %indvars.iv3871 = phi i64 [ %28, %do.body174.lr.ph ], [ %indvars.iv.next3872, %if.end178 ]
  %bits.33471 = phi i32 [ %bits.3.ph3906, %do.body174.lr.ph ], [ %add185, %if.end178 ]
  %hold.33470 = phi i64 [ %hold.3.ph3905, %do.body174.lr.ph ], [ %add184, %if.end178 ]
  %have.33469 = phi i32 [ %have.3.ph3904, %do.body174.lr.ph ], [ %dec179, %if.end178 ]
  %next.33468 = phi i8* [ %next.3.ph3903, %do.body174.lr.ph ], [ %incdec.ptr180, %if.end178 ]
  %cmp175 = icmp eq i32 %have.33469, 0
  br i1 %cmp175, label %do.body1813.loopexit2784, label %if.end178

if.end178:                                        ; preds = %do.body174
  %dec179 = add i32 %have.33469, -1
  %incdec.ptr180 = getelementptr inbounds i8* %next.33468, i64 1
  %29 = load i8* %next.33468, align 1, !tbaa !5
  %conv181 = zext i8 %29 to i64
  %shl183 = shl i64 %conv181, %indvars.iv3871
  %add184 = add i64 %shl183, %hold.33470
  %add185 = add i32 %bits.33471, 8
  %cmp171 = icmp ult i32 %add185, 32
  %indvars.iv.next3872 = add nuw nsw i64 %indvars.iv3871, 8
  br i1 %cmp171, label %do.body174, label %do.end188.loopexit

do.end188.loopexit:                               ; preds = %if.end178
  %add184.lcssa = phi i64 [ %add184, %if.end178 ]
  %incdec.ptr180.lcssa = phi i8* [ %incdec.ptr180, %if.end178 ]
  %dec179.lcssa = phi i32 [ %dec179, %if.end178 ]
  br label %do.end188

do.end188:                                        ; preds = %do.end188.loopexit, %while.cond170.preheader
  %hold.3.lcssa = phi i64 [ %hold.0, %while.cond170.preheader ], [ %add184.lcssa, %do.end188.loopexit ]
  %have.3.lcssa = phi i32 [ %have.0, %while.cond170.preheader ], [ %dec179.lcssa, %do.end188.loopexit ]
  %next.3.lcssa = phi i8* [ %next.0, %while.cond170.preheader ], [ %incdec.ptr180.lcssa, %do.end188.loopexit ]
  %30 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp190 = icmp eq %struct.gz_header_s* %30, null
  br i1 %cmp190, label %if.end194, label %if.then192

if.then192:                                       ; preds = %do.end188
  %time = getelementptr inbounds %struct.gz_header_s* %30, i64 0, i32 1
  store i64 %hold.3.lcssa, i64* %time, align 8, !tbaa !108
  br label %if.end194

if.end194:                                        ; preds = %if.then192, %do.end188
  %31 = load i32* %flags, align 4, !tbaa !146
  %and196 = and i32 %31, 512
  %tobool197 = icmp eq i32 %and196, 0
  br i1 %tobool197, label %while.cond222.preheader.thread, label %do.body199

do.body199:                                       ; preds = %if.end194
  %conv200 = trunc i64 %hold.3.lcssa to i8
  store i8 %conv200, i8* %arrayidx, align 1, !tbaa !5
  %shr202 = lshr i64 %hold.3.lcssa, 8
  %conv203 = trunc i64 %shr202 to i8
  store i8 %conv203, i8* %arrayidx40, align 1, !tbaa !5
  %shr205 = lshr i64 %hold.3.lcssa, 16
  %conv206 = trunc i64 %shr205 to i8
  store i8 %conv206, i8* %arrayidx207, align 1, !tbaa !5
  %shr208 = lshr i64 %hold.3.lcssa, 24
  %conv209 = trunc i64 %shr208 to i8
  store i8 %conv209, i8* %arrayidx210, align 1, !tbaa !5
  %32 = load i64* %check, align 8, !tbaa !145
  %call213 = call i64 @crc32(i64 %32, i8* %arrayidx, i32 4) #4
  store i64 %call213, i64* %check, align 8, !tbaa !145
  br label %while.cond222.preheader.thread

while.cond222.preheader.thread:                   ; preds = %do.body199, %if.end194
  store i32 3, i32* %mode, align 4, !tbaa !126
  br label %do.body226.lr.ph

while.cond222.preheader:                          ; preds = %for.cond
  %cmp2233475 = icmp ult i32 %bits.0, 16
  br i1 %cmp2233475, label %do.body226.lr.ph, label %do.end240

do.body226.lr.ph:                                 ; preds = %while.cond222.preheader, %while.cond222.preheader.thread
  %bits.4.ph3911 = phi i32 [ 0, %while.cond222.preheader.thread ], [ %bits.0, %while.cond222.preheader ]
  %hold.4.ph3910 = phi i64 [ 0, %while.cond222.preheader.thread ], [ %hold.0, %while.cond222.preheader ]
  %have.4.ph3909 = phi i32 [ %have.3.lcssa, %while.cond222.preheader.thread ], [ %have.0, %while.cond222.preheader ]
  %next.4.ph3908 = phi i8* [ %next.3.lcssa, %while.cond222.preheader.thread ], [ %next.0, %while.cond222.preheader ]
  %33 = zext i32 %bits.4.ph3911 to i64
  br label %do.body226

do.body226:                                       ; preds = %if.end230, %do.body226.lr.ph
  %indvars.iv3874 = phi i64 [ %33, %do.body226.lr.ph ], [ %indvars.iv.next3875, %if.end230 ]
  %bits.43479 = phi i32 [ %bits.4.ph3911, %do.body226.lr.ph ], [ %add237, %if.end230 ]
  %hold.43478 = phi i64 [ %hold.4.ph3910, %do.body226.lr.ph ], [ %add236, %if.end230 ]
  %have.43477 = phi i32 [ %have.4.ph3909, %do.body226.lr.ph ], [ %dec231, %if.end230 ]
  %next.43476 = phi i8* [ %next.4.ph3908, %do.body226.lr.ph ], [ %incdec.ptr232, %if.end230 ]
  %cmp227 = icmp eq i32 %have.43477, 0
  br i1 %cmp227, label %do.body1813.loopexit2783, label %if.end230

if.end230:                                        ; preds = %do.body226
  %dec231 = add i32 %have.43477, -1
  %incdec.ptr232 = getelementptr inbounds i8* %next.43476, i64 1
  %34 = load i8* %next.43476, align 1, !tbaa !5
  %conv233 = zext i8 %34 to i64
  %shl235 = shl i64 %conv233, %indvars.iv3874
  %add236 = add i64 %shl235, %hold.43478
  %add237 = add i32 %bits.43479, 8
  %cmp223 = icmp ult i32 %add237, 16
  %indvars.iv.next3875 = add nuw nsw i64 %indvars.iv3874, 8
  br i1 %cmp223, label %do.body226, label %do.end240.loopexit

do.end240.loopexit:                               ; preds = %if.end230
  %add236.lcssa = phi i64 [ %add236, %if.end230 ]
  %incdec.ptr232.lcssa = phi i8* [ %incdec.ptr232, %if.end230 ]
  %dec231.lcssa = phi i32 [ %dec231, %if.end230 ]
  br label %do.end240

do.end240:                                        ; preds = %do.end240.loopexit, %while.cond222.preheader
  %hold.4.lcssa = phi i64 [ %hold.0, %while.cond222.preheader ], [ %add236.lcssa, %do.end240.loopexit ]
  %have.4.lcssa = phi i32 [ %have.0, %while.cond222.preheader ], [ %dec231.lcssa, %do.end240.loopexit ]
  %next.4.lcssa = phi i8* [ %next.0, %while.cond222.preheader ], [ %incdec.ptr232.lcssa, %do.end240.loopexit ]
  %35 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp242 = icmp eq %struct.gz_header_s* %35, null
  br i1 %cmp242, label %if.end251, label %if.then244

if.then244:                                       ; preds = %do.end240
  %hold.4.tr = trunc i64 %hold.4.lcssa to i32
  %conv246 = and i32 %hold.4.tr, 255
  %xflags = getelementptr inbounds %struct.gz_header_s* %35, i64 0, i32 2
  store i32 %conv246, i32* %xflags, align 4, !tbaa !148
  %shr248 = lshr i64 %hold.4.lcssa, 8
  %conv249 = trunc i64 %shr248 to i32
  %os = getelementptr inbounds %struct.gz_header_s* %35, i64 0, i32 3
  store i32 %conv249, i32* %os, align 4, !tbaa !109
  br label %if.end251

if.end251:                                        ; preds = %if.then244, %do.end240
  %36 = load i32* %flags, align 4, !tbaa !146
  %and253 = and i32 %36, 512
  %tobool254 = icmp eq i32 %and253, 0
  br i1 %tobool254, label %do.body268, label %do.body256

do.body256:                                       ; preds = %if.end251
  %conv257 = trunc i64 %hold.4.lcssa to i8
  store i8 %conv257, i8* %arrayidx, align 1, !tbaa !5
  %shr259 = lshr i64 %hold.4.lcssa, 8
  %conv260 = trunc i64 %shr259 to i8
  store i8 %conv260, i8* %arrayidx40, align 1, !tbaa !5
  %37 = load i64* %check, align 8, !tbaa !145
  %call264 = call i64 @crc32(i64 %37, i8* %arrayidx, i32 2) #4
  store i64 %call264, i64* %check, align 8, !tbaa !145
  br label %do.body268

do.body268:                                       ; preds = %do.body256, %if.end251
  store i32 4, i32* %mode, align 4, !tbaa !126
  br label %sw.bb271

sw.bb271:                                         ; preds = %do.body268, %for.cond
  %next.5 = phi i8* [ %next.0, %for.cond ], [ %next.4.lcssa, %do.body268 ]
  %have.5 = phi i32 [ %have.0, %for.cond ], [ %have.4.lcssa, %do.body268 ]
  %hold.5 = phi i64 [ %hold.0, %for.cond ], [ 0, %do.body268 ]
  %bits.5 = phi i32 [ %bits.0, %for.cond ], [ 0, %do.body268 ]
  %38 = load i32* %flags, align 4, !tbaa !146
  %and273 = and i32 %38, 1024
  %tobool274 = icmp eq i32 %and273, 0
  br i1 %tobool274, label %if.else322, label %while.cond277.preheader

while.cond277.preheader:                          ; preds = %sw.bb271
  %cmp2783483 = icmp ult i32 %bits.5, 16
  br i1 %cmp2783483, label %do.body281.lr.ph, label %do.end295

do.body281.lr.ph:                                 ; preds = %while.cond277.preheader
  %39 = zext i32 %bits.5 to i64
  br label %do.body281

do.body281:                                       ; preds = %if.end285, %do.body281.lr.ph
  %indvars.iv3877 = phi i64 [ %39, %do.body281.lr.ph ], [ %indvars.iv.next3878, %if.end285 ]
  %bits.63487 = phi i32 [ %bits.5, %do.body281.lr.ph ], [ %add292, %if.end285 ]
  %hold.63486 = phi i64 [ %hold.5, %do.body281.lr.ph ], [ %add291, %if.end285 ]
  %have.63485 = phi i32 [ %have.5, %do.body281.lr.ph ], [ %dec286, %if.end285 ]
  %next.63484 = phi i8* [ %next.5, %do.body281.lr.ph ], [ %incdec.ptr287, %if.end285 ]
  %cmp282 = icmp eq i32 %have.63485, 0
  br i1 %cmp282, label %do.body1813.loopexit2782, label %if.end285

if.end285:                                        ; preds = %do.body281
  %dec286 = add i32 %have.63485, -1
  %incdec.ptr287 = getelementptr inbounds i8* %next.63484, i64 1
  %40 = load i8* %next.63484, align 1, !tbaa !5
  %conv288 = zext i8 %40 to i64
  %shl290 = shl i64 %conv288, %indvars.iv3877
  %add291 = add i64 %shl290, %hold.63486
  %add292 = add i32 %bits.63487, 8
  %cmp278 = icmp ult i32 %add292, 16
  %indvars.iv.next3878 = add nuw nsw i64 %indvars.iv3877, 8
  br i1 %cmp278, label %do.body281, label %do.end295.loopexit

do.end295.loopexit:                               ; preds = %if.end285
  %add291.lcssa = phi i64 [ %add291, %if.end285 ]
  %incdec.ptr287.lcssa = phi i8* [ %incdec.ptr287, %if.end285 ]
  %dec286.lcssa = phi i32 [ %dec286, %if.end285 ]
  br label %do.end295

do.end295:                                        ; preds = %do.end295.loopexit, %while.cond277.preheader
  %hold.6.lcssa = phi i64 [ %hold.5, %while.cond277.preheader ], [ %add291.lcssa, %do.end295.loopexit ]
  %have.6.lcssa = phi i32 [ %have.5, %while.cond277.preheader ], [ %dec286.lcssa, %do.end295.loopexit ]
  %next.6.lcssa = phi i8* [ %next.5, %while.cond277.preheader ], [ %incdec.ptr287.lcssa, %do.end295.loopexit ]
  %conv296 = trunc i64 %hold.6.lcssa to i32
  store i32 %conv296, i32* %length, align 4, !tbaa !149
  %41 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp298 = icmp eq %struct.gz_header_s* %41, null
  br i1 %cmp298, label %if.end303, label %if.then300

if.then300:                                       ; preds = %do.end295
  %extra_len = getelementptr inbounds %struct.gz_header_s* %41, i64 0, i32 5
  store i32 %conv296, i32* %extra_len, align 4, !tbaa !110
  br label %if.end303

if.end303:                                        ; preds = %if.then300, %do.end295
  %and305 = and i32 %38, 512
  %tobool306 = icmp eq i32 %and305, 0
  br i1 %tobool306, label %if.end329, label %do.body308

do.body308:                                       ; preds = %if.end303
  %conv309 = trunc i64 %hold.6.lcssa to i8
  store i8 %conv309, i8* %arrayidx, align 1, !tbaa !5
  %shr311 = lshr i64 %hold.6.lcssa, 8
  %conv312 = trunc i64 %shr311 to i8
  store i8 %conv312, i8* %arrayidx40, align 1, !tbaa !5
  %42 = load i64* %check, align 8, !tbaa !145
  %call316 = call i64 @crc32(i64 %42, i8* %arrayidx, i32 2) #4
  store i64 %call316, i64* %check, align 8, !tbaa !145
  br label %if.end329

if.else322:                                       ; preds = %sw.bb271
  %43 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp324 = icmp eq %struct.gz_header_s* %43, null
  br i1 %cmp324, label %if.end329, label %if.then326

if.then326:                                       ; preds = %if.else322
  %extra = getelementptr inbounds %struct.gz_header_s* %43, i64 0, i32 4
  store i8* null, i8** %extra, align 8, !tbaa !105
  br label %if.end329

if.end329:                                        ; preds = %if.then326, %if.else322, %do.body308, %if.end303
  %next.7 = phi i8* [ %next.5, %if.then326 ], [ %next.5, %if.else322 ], [ %next.6.lcssa, %if.end303 ], [ %next.6.lcssa, %do.body308 ]
  %have.7 = phi i32 [ %have.5, %if.then326 ], [ %have.5, %if.else322 ], [ %have.6.lcssa, %if.end303 ], [ %have.6.lcssa, %do.body308 ]
  %hold.7 = phi i64 [ %hold.5, %if.then326 ], [ %hold.5, %if.else322 ], [ 0, %if.end303 ], [ 0, %do.body308 ]
  %bits.7 = phi i32 [ %bits.5, %if.then326 ], [ %bits.5, %if.else322 ], [ 0, %if.end303 ], [ 0, %do.body308 ]
  store i32 5, i32* %mode, align 4, !tbaa !126
  br label %sw.bb331

sw.bb331:                                         ; preds = %if.end329, %for.cond
  %next.8 = phi i8* [ %next.0, %for.cond ], [ %next.7, %if.end329 ]
  %have.8 = phi i32 [ %have.0, %for.cond ], [ %have.7, %if.end329 ]
  %hold.8 = phi i64 [ %hold.0, %for.cond ], [ %hold.7, %if.end329 ]
  %bits.8 = phi i32 [ %bits.0, %for.cond ], [ %bits.7, %if.end329 ]
  %44 = load i32* %flags, align 4, !tbaa !146
  %and333 = and i32 %44, 1024
  %tobool334 = icmp eq i32 %and333, 0
  br i1 %tobool334, label %if.end386, label %if.then335

if.then335:                                       ; preds = %sw.bb331
  %45 = load i32* %length, align 4, !tbaa !149
  %cmp337 = icmp ugt i32 %45, %have.8
  %have.8. = select i1 %cmp337, i32 %have.8, i32 %45
  %tobool341 = icmp eq i32 %have.8., 0
  br i1 %tobool341, label %if.end381, label %if.then342

if.then342:                                       ; preds = %if.then335
  %46 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp344 = icmp eq %struct.gz_header_s* %46, null
  br i1 %cmp344, label %if.end367, label %land.lhs.true346

land.lhs.true346:                                 ; preds = %if.then342
  %extra348 = getelementptr inbounds %struct.gz_header_s* %46, i64 0, i32 4
  %47 = load i8** %extra348, align 8, !tbaa !105
  %cmp349 = icmp eq i8* %47, null
  br i1 %cmp349, label %if.end367, label %if.then351

if.then351:                                       ; preds = %land.lhs.true346
  %extra_len353 = getelementptr inbounds %struct.gz_header_s* %46, i64 0, i32 5
  %48 = load i32* %extra_len353, align 4, !tbaa !110
  %sub355 = sub i32 %48, %45
  %idx.ext = zext i32 %sub355 to i64
  %add.ptr = getelementptr inbounds i8* %47, i64 %idx.ext
  %add358 = add i32 %sub355, %have.8.
  %extra_max = getelementptr inbounds %struct.gz_header_s* %46, i64 0, i32 6
  %49 = load i32* %extra_max, align 4, !tbaa !150
  %cmp360 = icmp ugt i32 %add358, %49
  %sub364 = sub i32 %49, %sub355
  %cond365 = select i1 %cmp360, i32 %sub364, i32 %have.8.
  %conv366 = zext i32 %cond365 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %next.8, i64 %conv366, i32 1, i1 false)
  %.pre3888 = load i32* %flags, align 4, !tbaa !146
  br label %if.end367

if.end367:                                        ; preds = %if.then351, %land.lhs.true346, %if.then342
  %50 = phi i32 [ %44, %land.lhs.true346 ], [ %44, %if.then342 ], [ %.pre3888, %if.then351 ]
  %and369 = and i32 %50, 512
  %tobool370 = icmp eq i32 %and369, 0
  br i1 %tobool370, label %if.end375, label %if.then371

if.then371:                                       ; preds = %if.end367
  %51 = load i64* %check, align 8, !tbaa !145
  %call373 = call i64 @crc32(i64 %51, i8* %next.8, i32 %have.8.) #4
  store i64 %call373, i64* %check, align 8, !tbaa !145
  br label %if.end375

if.end375:                                        ; preds = %if.then371, %if.end367
  %sub376 = sub i32 %have.8, %have.8.
  %idx.ext377 = zext i32 %have.8. to i64
  %add.ptr378 = getelementptr inbounds i8* %next.8, i64 %idx.ext377
  %52 = load i32* %length, align 4, !tbaa !149
  %sub380 = sub i32 %52, %have.8.
  store i32 %sub380, i32* %length, align 4, !tbaa !149
  br label %if.end381

if.end381:                                        ; preds = %if.end375, %if.then335
  %53 = phi i32 [ %45, %if.then335 ], [ %sub380, %if.end375 ]
  %next.9 = phi i8* [ %next.8, %if.then335 ], [ %add.ptr378, %if.end375 ]
  %have.9 = phi i32 [ %have.8, %if.then335 ], [ %sub376, %if.end375 ]
  %tobool383 = icmp eq i32 %53, 0
  br i1 %tobool383, label %if.end386, label %do.body1813.loopexit4553

if.end386:                                        ; preds = %if.end381, %sw.bb331
  %next.10 = phi i8* [ %next.9, %if.end381 ], [ %next.8, %sw.bb331 ]
  %have.10 = phi i32 [ %have.9, %if.end381 ], [ %have.8, %sw.bb331 ]
  store i32 0, i32* %length, align 4, !tbaa !149
  store i32 6, i32* %mode, align 4, !tbaa !126
  br label %sw.bb389

sw.bb389:                                         ; preds = %if.end386, %for.cond
  %next.11 = phi i8* [ %next.0, %for.cond ], [ %next.10, %if.end386 ]
  %have.11 = phi i32 [ %have.0, %for.cond ], [ %have.10, %if.end386 ]
  %hold.9 = phi i64 [ %hold.0, %for.cond ], [ %hold.8, %if.end386 ]
  %bits.9 = phi i32 [ %bits.0, %for.cond ], [ %bits.8, %if.end386 ]
  %54 = load i32* %flags, align 4, !tbaa !146
  %and391 = and i32 %54, 2048
  %tobool392 = icmp eq i32 %and391, 0
  br i1 %tobool392, label %if.else440, label %if.then393

if.then393:                                       ; preds = %sw.bb389
  %cmp394 = icmp eq i32 %have.11, 0
  br i1 %cmp394, label %do.body1813.loopexit4553, label %do.body398.preheader

do.body398.preheader:                             ; preds = %if.then393
  br label %do.body398

do.body398:                                       ; preds = %do.cond, %do.body398.preheader
  %copy.1 = phi i32 [ %inc, %do.cond ], [ 0, %do.body398.preheader ]
  %inc = add i32 %copy.1, 1
  %idxprom = zext i32 %copy.1 to i64
  %arrayidx399 = getelementptr inbounds i8* %next.11, i64 %idxprom
  %55 = load i8* %arrayidx399, align 1, !tbaa !5
  %56 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp402 = icmp eq %struct.gz_header_s* %56, null
  br i1 %cmp402, label %do.cond, label %land.lhs.true404

land.lhs.true404:                                 ; preds = %do.body398
  %name = getelementptr inbounds %struct.gz_header_s* %56, i64 0, i32 7
  %57 = load i8** %name, align 8, !tbaa !106
  %cmp406 = icmp eq i8* %57, null
  br i1 %cmp406, label %do.cond, label %land.lhs.true408

land.lhs.true408:                                 ; preds = %land.lhs.true404
  %58 = load i32* %length, align 4, !tbaa !149
  %name_max = getelementptr inbounds %struct.gz_header_s* %56, i64 0, i32 8
  %59 = load i32* %name_max, align 4, !tbaa !151
  %cmp411 = icmp ult i32 %58, %59
  br i1 %cmp411, label %if.then413, label %do.cond

if.then413:                                       ; preds = %land.lhs.true408
  %inc416 = add i32 %58, 1
  store i32 %inc416, i32* %length, align 4, !tbaa !149
  %idxprom417 = zext i32 %58 to i64
  %arrayidx420 = getelementptr inbounds i8* %57, i64 %idxprom417
  store i8 %55, i8* %arrayidx420, align 1, !tbaa !5
  br label %do.cond

do.cond:                                          ; preds = %if.then413, %land.lhs.true408, %land.lhs.true404, %do.body398
  %tobool422 = icmp ne i8 %55, 0
  %cmp423 = icmp ugt i32 %have.11, %inc
  %or.cond2771 = and i1 %tobool422, %cmp423
  br i1 %or.cond2771, label %do.body398, label %do.end425

do.end425:                                        ; preds = %do.cond
  %tobool422.lcssa = phi i1 [ %tobool422, %do.cond ]
  %inc.lcssa = phi i32 [ %inc, %do.cond ]
  %60 = load i32* %flags, align 4, !tbaa !146
  %and427 = and i32 %60, 512
  %tobool428 = icmp eq i32 %and427, 0
  br i1 %tobool428, label %if.end433, label %if.then429

if.then429:                                       ; preds = %do.end425
  %61 = load i64* %check, align 8, !tbaa !145
  %call431 = call i64 @crc32(i64 %61, i8* %next.11, i32 %inc.lcssa) #4
  store i64 %call431, i64* %check, align 8, !tbaa !145
  br label %if.end433

if.end433:                                        ; preds = %if.then429, %do.end425
  %sub434 = sub i32 %have.11, %inc.lcssa
  %idx.ext435 = zext i32 %inc.lcssa to i64
  %add.ptr436 = getelementptr inbounds i8* %next.11, i64 %idx.ext435
  br i1 %tobool422.lcssa, label %do.body1813.loopexit4553, label %if.end448

if.else440:                                       ; preds = %sw.bb389
  %62 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp442 = icmp eq %struct.gz_header_s* %62, null
  br i1 %cmp442, label %if.end448, label %if.then444

if.then444:                                       ; preds = %if.else440
  %name446 = getelementptr inbounds %struct.gz_header_s* %62, i64 0, i32 7
  store i8* null, i8** %name446, align 8, !tbaa !106
  br label %if.end448

if.end448:                                        ; preds = %if.then444, %if.else440, %if.end433
  %next.12 = phi i8* [ %add.ptr436, %if.end433 ], [ %next.11, %if.then444 ], [ %next.11, %if.else440 ]
  %have.12 = phi i32 [ %sub434, %if.end433 ], [ %have.11, %if.then444 ], [ %have.11, %if.else440 ]
  store i32 0, i32* %length, align 4, !tbaa !149
  store i32 7, i32* %mode, align 4, !tbaa !126
  br label %sw.bb451

sw.bb451:                                         ; preds = %if.end448, %for.cond
  %next.13 = phi i8* [ %next.0, %for.cond ], [ %next.12, %if.end448 ]
  %have.13 = phi i32 [ %have.0, %for.cond ], [ %have.12, %if.end448 ]
  %hold.10 = phi i64 [ %hold.0, %for.cond ], [ %hold.9, %if.end448 ]
  %bits.10 = phi i32 [ %bits.0, %for.cond ], [ %bits.9, %if.end448 ]
  %63 = load i32* %flags, align 4, !tbaa !146
  %and453 = and i32 %63, 4096
  %tobool454 = icmp eq i32 %and453, 0
  br i1 %tobool454, label %if.else507, label %if.then455

if.then455:                                       ; preds = %sw.bb451
  %cmp456 = icmp eq i32 %have.13, 0
  br i1 %cmp456, label %do.body1813.loopexit4553, label %do.body460.preheader

do.body460.preheader:                             ; preds = %if.then455
  br label %do.body460

do.body460:                                       ; preds = %do.cond486, %do.body460.preheader
  %copy.2 = phi i32 [ %inc461, %do.cond486 ], [ 0, %do.body460.preheader ]
  %inc461 = add i32 %copy.2, 1
  %idxprom462 = zext i32 %copy.2 to i64
  %arrayidx463 = getelementptr inbounds i8* %next.13, i64 %idxprom462
  %64 = load i8* %arrayidx463, align 1, !tbaa !5
  %65 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp466 = icmp eq %struct.gz_header_s* %65, null
  br i1 %cmp466, label %do.cond486, label %land.lhs.true468

land.lhs.true468:                                 ; preds = %do.body460
  %comment = getelementptr inbounds %struct.gz_header_s* %65, i64 0, i32 9
  %66 = load i8** %comment, align 8, !tbaa !107
  %cmp470 = icmp eq i8* %66, null
  br i1 %cmp470, label %do.cond486, label %land.lhs.true472

land.lhs.true472:                                 ; preds = %land.lhs.true468
  %67 = load i32* %length, align 4, !tbaa !149
  %comm_max = getelementptr inbounds %struct.gz_header_s* %65, i64 0, i32 10
  %68 = load i32* %comm_max, align 4, !tbaa !152
  %cmp475 = icmp ult i32 %67, %68
  br i1 %cmp475, label %if.then477, label %do.cond486

if.then477:                                       ; preds = %land.lhs.true472
  %inc480 = add i32 %67, 1
  store i32 %inc480, i32* %length, align 4, !tbaa !149
  %idxprom481 = zext i32 %67 to i64
  %arrayidx484 = getelementptr inbounds i8* %66, i64 %idxprom481
  store i8 %64, i8* %arrayidx484, align 1, !tbaa !5
  br label %do.cond486

do.cond486:                                       ; preds = %if.then477, %land.lhs.true472, %land.lhs.true468, %do.body460
  %tobool487 = icmp ne i8 %64, 0
  %cmp489 = icmp ugt i32 %have.13, %inc461
  %or.cond2772 = and i1 %tobool487, %cmp489
  br i1 %or.cond2772, label %do.body460, label %do.end492

do.end492:                                        ; preds = %do.cond486
  %tobool487.lcssa = phi i1 [ %tobool487, %do.cond486 ]
  %inc461.lcssa = phi i32 [ %inc461, %do.cond486 ]
  %69 = load i32* %flags, align 4, !tbaa !146
  %and494 = and i32 %69, 512
  %tobool495 = icmp eq i32 %and494, 0
  br i1 %tobool495, label %if.end500, label %if.then496

if.then496:                                       ; preds = %do.end492
  %70 = load i64* %check, align 8, !tbaa !145
  %call498 = call i64 @crc32(i64 %70, i8* %next.13, i32 %inc461.lcssa) #4
  store i64 %call498, i64* %check, align 8, !tbaa !145
  br label %if.end500

if.end500:                                        ; preds = %if.then496, %do.end492
  %sub501 = sub i32 %have.13, %inc461.lcssa
  %idx.ext502 = zext i32 %inc461.lcssa to i64
  %add.ptr503 = getelementptr inbounds i8* %next.13, i64 %idx.ext502
  br i1 %tobool487.lcssa, label %do.body1813.loopexit4553, label %if.end515

if.else507:                                       ; preds = %sw.bb451
  %71 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp509 = icmp eq %struct.gz_header_s* %71, null
  br i1 %cmp509, label %if.end515, label %if.then511

if.then511:                                       ; preds = %if.else507
  %comment513 = getelementptr inbounds %struct.gz_header_s* %71, i64 0, i32 9
  store i8* null, i8** %comment513, align 8, !tbaa !107
  br label %if.end515

if.end515:                                        ; preds = %if.then511, %if.else507, %if.end500
  %next.14 = phi i8* [ %add.ptr503, %if.end500 ], [ %next.13, %if.then511 ], [ %next.13, %if.else507 ]
  %have.14 = phi i32 [ %sub501, %if.end500 ], [ %have.13, %if.then511 ], [ %have.13, %if.else507 ]
  store i32 8, i32* %mode, align 4, !tbaa !126
  br label %sw.bb517

sw.bb517:                                         ; preds = %if.end515, %for.cond
  %next.15 = phi i8* [ %next.0, %for.cond ], [ %next.14, %if.end515 ]
  %have.15 = phi i32 [ %have.0, %for.cond ], [ %have.14, %if.end515 ]
  %hold.11 = phi i64 [ %hold.0, %for.cond ], [ %hold.10, %if.end515 ]
  %bits.11 = phi i32 [ %bits.0, %for.cond ], [ %bits.10, %if.end515 ]
  %72 = load i32* %flags, align 4, !tbaa !146
  %and519 = and i32 %72, 512
  %tobool520 = icmp eq i32 %and519, 0
  br i1 %tobool520, label %if.end555, label %while.cond523.preheader

while.cond523.preheader:                          ; preds = %sw.bb517
  %cmp5243491 = icmp ult i32 %bits.11, 16
  br i1 %cmp5243491, label %do.body527.lr.ph, label %do.end543

do.body527.lr.ph:                                 ; preds = %while.cond523.preheader
  %73 = zext i32 %bits.11 to i64
  br label %do.body527

do.body527:                                       ; preds = %if.end531, %do.body527.lr.ph
  %indvars.iv3880 = phi i64 [ %73, %do.body527.lr.ph ], [ %indvars.iv.next3881, %if.end531 ]
  %bits.123495 = phi i32 [ %bits.11, %do.body527.lr.ph ], [ %add538, %if.end531 ]
  %hold.123494 = phi i64 [ %hold.11, %do.body527.lr.ph ], [ %add537, %if.end531 ]
  %have.163493 = phi i32 [ %have.15, %do.body527.lr.ph ], [ %dec532, %if.end531 ]
  %next.163492 = phi i8* [ %next.15, %do.body527.lr.ph ], [ %incdec.ptr533, %if.end531 ]
  %cmp528 = icmp eq i32 %have.163493, 0
  br i1 %cmp528, label %do.body1813.loopexit2781, label %if.end531

if.end531:                                        ; preds = %do.body527
  %dec532 = add i32 %have.163493, -1
  %incdec.ptr533 = getelementptr inbounds i8* %next.163492, i64 1
  %74 = load i8* %next.163492, align 1, !tbaa !5
  %conv534 = zext i8 %74 to i64
  %shl536 = shl i64 %conv534, %indvars.iv3880
  %add537 = add i64 %shl536, %hold.123494
  %add538 = add i32 %bits.123495, 8
  %cmp524 = icmp ult i32 %add538, 16
  %indvars.iv.next3881 = add nuw nsw i64 %indvars.iv3880, 8
  br i1 %cmp524, label %do.body527, label %do.end543.loopexit

do.end543.loopexit:                               ; preds = %if.end531
  %add538.lcssa = phi i32 [ %add538, %if.end531 ]
  %add537.lcssa = phi i64 [ %add537, %if.end531 ]
  %incdec.ptr533.lcssa = phi i8* [ %incdec.ptr533, %if.end531 ]
  %dec532.lcssa = phi i32 [ %dec532, %if.end531 ]
  br label %do.end543

do.end543:                                        ; preds = %do.end543.loopexit, %while.cond523.preheader
  %bits.12.lcssa = phi i32 [ %bits.11, %while.cond523.preheader ], [ %add538.lcssa, %do.end543.loopexit ]
  %hold.12.lcssa = phi i64 [ %hold.11, %while.cond523.preheader ], [ %add537.lcssa, %do.end543.loopexit ]
  %have.16.lcssa = phi i32 [ %have.15, %while.cond523.preheader ], [ %dec532.lcssa, %do.end543.loopexit ]
  %next.16.lcssa = phi i8* [ %next.15, %while.cond523.preheader ], [ %incdec.ptr533.lcssa, %do.end543.loopexit ]
  %75 = load i64* %check, align 8, !tbaa !145
  %and545 = and i64 %75, 65535
  %cmp546 = icmp eq i64 %hold.12.lcssa, %and545
  br i1 %cmp546, label %if.end555, label %if.then548

if.then548:                                       ; preds = %do.end543
  store i8* getelementptr inbounds ([20 x i8]* @.str560, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end555:                                        ; preds = %do.end543, %sw.bb517
  %next.17 = phi i8* [ %next.15, %sw.bb517 ], [ %next.16.lcssa, %do.end543 ]
  %have.17 = phi i32 [ %have.15, %sw.bb517 ], [ %have.16.lcssa, %do.end543 ]
  %hold.13 = phi i64 [ %hold.11, %sw.bb517 ], [ 0, %do.end543 ]
  %bits.13 = phi i32 [ %bits.11, %sw.bb517 ], [ 0, %do.end543 ]
  %76 = load %struct.gz_header_s** %head, align 8, !tbaa !130
  %cmp557 = icmp eq %struct.gz_header_s* %76, null
  br i1 %cmp557, label %if.end566, label %if.then559

if.then559:                                       ; preds = %if.end555
  %shr5612769 = lshr i32 %72, 9
  %and562 = and i32 %shr5612769, 1
  %hcrc = getelementptr inbounds %struct.gz_header_s* %76, i64 0, i32 11
  store i32 %and562, i32* %hcrc, align 4, !tbaa !104
  %done565 = getelementptr inbounds %struct.gz_header_s* %76, i64 0, i32 12
  store i32 1, i32* %done565, align 4, !tbaa !147
  br label %if.end566

if.end566:                                        ; preds = %if.then559, %if.end555
  %call567 = call i64 @crc32(i64 0, i8* null, i32 0) #4
  store i64 %call567, i64* %check, align 8, !tbaa !145
  store i64 %call567, i64* %adler, align 8, !tbaa !78
  store i32 11, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

do.body577:                                       ; preds = %if.end581, %do.body577.lr.ph
  %indvars.iv3862 = phi i64 [ %14, %do.body577.lr.ph ], [ %indvars.iv.next3863, %if.end581 ]
  %bits.143445 = phi i32 [ %bits.0, %do.body577.lr.ph ], [ %add588, %if.end581 ]
  %hold.143444 = phi i64 [ %hold.0, %do.body577.lr.ph ], [ %add587, %if.end581 ]
  %have.183443 = phi i32 [ %have.0, %do.body577.lr.ph ], [ %dec582, %if.end581 ]
  %next.183442 = phi i8* [ %next.0, %do.body577.lr.ph ], [ %incdec.ptr583, %if.end581 ]
  %cmp578 = icmp eq i32 %have.183443, 0
  br i1 %cmp578, label %do.body1813.loopexit2787, label %if.end581

if.end581:                                        ; preds = %do.body577
  %dec582 = add i32 %have.183443, -1
  %incdec.ptr583 = getelementptr inbounds i8* %next.183442, i64 1
  %77 = load i8* %next.183442, align 1, !tbaa !5
  %conv584 = zext i8 %77 to i64
  %shl586 = shl i64 %conv584, %indvars.iv3862
  %add587 = add i64 %shl586, %hold.143444
  %add588 = add i32 %bits.143445, 8
  %cmp574 = icmp ult i32 %add588, 32
  %indvars.iv.next3863 = add nuw nsw i64 %indvars.iv3862, 8
  br i1 %cmp574, label %do.body577, label %do.end593.loopexit

do.end593.loopexit:                               ; preds = %if.end581
  %add587.lcssa = phi i64 [ %add587, %if.end581 ]
  %incdec.ptr583.lcssa = phi i8* [ %incdec.ptr583, %if.end581 ]
  %dec582.lcssa = phi i32 [ %dec582, %if.end581 ]
  br label %do.end593

do.end593:                                        ; preds = %do.end593.loopexit, %while.cond573.preheader
  %hold.14.lcssa = phi i64 [ %hold.0, %while.cond573.preheader ], [ %add587.lcssa, %do.end593.loopexit ]
  %have.18.lcssa = phi i32 [ %have.0, %while.cond573.preheader ], [ %dec582.lcssa, %do.end593.loopexit ]
  %next.18.lcssa = phi i8* [ %next.0, %while.cond573.preheader ], [ %incdec.ptr583.lcssa, %do.end593.loopexit ]
  %shr594 = lshr i64 %hold.14.lcssa, 24
  %and595 = and i64 %shr594, 255
  %shr596 = lshr i64 %hold.14.lcssa, 8
  %and597 = and i64 %shr596, 65280
  %add598 = or i64 %and595, %and597
  %and599 = shl i64 %hold.14.lcssa, 8
  %shl600 = and i64 %and599, 16711680
  %add601 = or i64 %add598, %shl600
  %and602 = shl i64 %hold.14.lcssa, 24
  %shl603 = and i64 %and602, 4278190080
  %add604 = or i64 %add601, %shl603
  store i64 %add604, i64* %check, align 8, !tbaa !145
  store i64 %add604, i64* %adler, align 8, !tbaa !78
  store i32 10, i32* %mode, align 4, !tbaa !126
  br label %sw.bb611

sw.bb611:                                         ; preds = %do.end593, %for.cond
  %next.19 = phi i8* [ %next.0, %for.cond ], [ %next.18.lcssa, %do.end593 ]
  %have.19 = phi i32 [ %have.0, %for.cond ], [ %have.18.lcssa, %do.end593 ]
  %hold.15 = phi i64 [ %hold.0, %for.cond ], [ 0, %do.end593 ]
  %bits.15 = phi i32 [ %bits.0, %for.cond ], [ 0, %do.end593 ]
  %78 = load i32* %havedict, align 4, !tbaa !128
  %cmp612 = icmp eq i32 %78, 0
  br i1 %cmp612, label %do.body615, label %if.end624

do.body615:                                       ; preds = %sw.bb611
  %bits.15.lcssa = phi i32 [ %bits.15, %sw.bb611 ]
  %hold.15.lcssa = phi i64 [ %hold.15, %sw.bb611 ]
  %have.19.lcssa = phi i32 [ %have.19, %sw.bb611 ]
  %next.19.lcssa = phi i8* [ %next.19, %sw.bb611 ]
  %left.0.lcssa4742 = phi i32 [ %left.0, %sw.bb611 ]
  %put.0.lcssa4683 = phi i8* [ %put.0, %sw.bb611 ]
  store i8* %put.0.lcssa4683, i8** %next_out, align 8, !tbaa !34
  store i32 %left.0.lcssa4742, i32* %avail_out, align 4, !tbaa !33
  store i8* %next.19.lcssa, i8** %next_in, align 8, !tbaa !37
  store i32 %have.19.lcssa, i32* %avail_in15, align 4, !tbaa !32
  store i64 %hold.15.lcssa, i64* %hold16, align 8, !tbaa !131
  store i32 %bits.15.lcssa, i32* %bits17, align 4, !tbaa !132
  br label %return

if.end624:                                        ; preds = %sw.bb611
  %call625 = call i64 @adler32(i64 0, i8* null, i32 0) #4
  store i64 %call625, i64* %check, align 8, !tbaa !145
  store i64 %call625, i64* %adler, align 8, !tbaa !78
  store i32 11, i32* %mode, align 4, !tbaa !126
  br label %sw.bb629

sw.bb629:                                         ; preds = %if.end624, %for.cond
  %next.20 = phi i8* [ %next.0, %for.cond ], [ %next.19, %if.end624 ]
  %have.20 = phi i32 [ %have.0, %for.cond ], [ %have.19, %if.end624 ]
  %hold.16 = phi i64 [ %hold.0, %for.cond ], [ %hold.15, %if.end624 ]
  %bits.16 = phi i32 [ %bits.0, %for.cond ], [ %bits.15, %if.end624 ]
  br i1 %11, label %do.body1813.loopexit4553, label %sw.bb637

sw.bb637:                                         ; preds = %sw.bb629, %for.cond
  %next.21 = phi i8* [ %next.0, %for.cond ], [ %next.20, %sw.bb629 ]
  %have.21 = phi i32 [ %have.0, %for.cond ], [ %have.20, %sw.bb629 ]
  %hold.17 = phi i64 [ %hold.0, %for.cond ], [ %hold.16, %sw.bb629 ]
  %bits.17 = phi i32 [ %bits.0, %for.cond ], [ %bits.16, %sw.bb629 ]
  %79 = load i32* %last638, align 4, !tbaa !127
  %tobool639 = icmp eq i32 %79, 0
  br i1 %tobool639, label %while.cond652.preheader, label %do.body641

while.cond652.preheader:                          ; preds = %sw.bb637
  %cmp6533449 = icmp ult i32 %bits.17, 3
  br i1 %cmp6533449, label %do.body656.lr.ph, label %do.end672

do.body656.lr.ph:                                 ; preds = %while.cond652.preheader
  %80 = zext i32 %bits.17 to i64
  br label %do.body656

do.body641:                                       ; preds = %sw.bb637
  %and642 = and i32 %bits.17, 7
  %sh_prom643 = zext i32 %and642 to i64
  %shr644 = lshr i64 %hold.17, %sh_prom643
  %sub646 = sub i32 %bits.17, %and642
  store i32 26, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

do.body656:                                       ; preds = %if.end660, %do.body656.lr.ph
  %indvars.iv3865 = phi i64 [ %80, %do.body656.lr.ph ], [ %indvars.iv.next3866, %if.end660 ]
  %bits.183453 = phi i32 [ %bits.17, %do.body656.lr.ph ], [ %add667, %if.end660 ]
  %hold.183452 = phi i64 [ %hold.17, %do.body656.lr.ph ], [ %add666, %if.end660 ]
  %have.223451 = phi i32 [ %have.21, %do.body656.lr.ph ], [ %dec661, %if.end660 ]
  %next.223450 = phi i8* [ %next.21, %do.body656.lr.ph ], [ %incdec.ptr662, %if.end660 ]
  %cmp657 = icmp eq i32 %have.223451, 0
  br i1 %cmp657, label %do.body1813.loopexit2786, label %if.end660

if.end660:                                        ; preds = %do.body656
  %dec661 = add i32 %have.223451, -1
  %incdec.ptr662 = getelementptr inbounds i8* %next.223450, i64 1
  %81 = load i8* %next.223450, align 1, !tbaa !5
  %conv663 = zext i8 %81 to i64
  %shl665 = shl i64 %conv663, %indvars.iv3865
  %add666 = add i64 %shl665, %hold.183452
  %add667 = add i32 %bits.183453, 8
  %cmp653 = icmp ult i32 %add667, 3
  %indvars.iv.next3866 = add nuw nsw i64 %indvars.iv3865, 8
  br i1 %cmp653, label %do.body656, label %do.end672.loopexit

do.end672.loopexit:                               ; preds = %if.end660
  %add667.lcssa = phi i32 [ %add667, %if.end660 ]
  %add666.lcssa = phi i64 [ %add666, %if.end660 ]
  %incdec.ptr662.lcssa = phi i8* [ %incdec.ptr662, %if.end660 ]
  %dec661.lcssa = phi i32 [ %dec661, %if.end660 ]
  br label %do.end672

do.end672:                                        ; preds = %do.end672.loopexit, %while.cond652.preheader
  %bits.18.lcssa = phi i32 [ %bits.17, %while.cond652.preheader ], [ %add667.lcssa, %do.end672.loopexit ]
  %hold.18.lcssa = phi i64 [ %hold.17, %while.cond652.preheader ], [ %add666.lcssa, %do.end672.loopexit ]
  %have.22.lcssa = phi i32 [ %have.21, %while.cond652.preheader ], [ %dec661.lcssa, %do.end672.loopexit ]
  %next.22.lcssa = phi i8* [ %next.21, %while.cond652.preheader ], [ %incdec.ptr662.lcssa, %do.end672.loopexit ]
  %conv673 = trunc i64 %hold.18.lcssa to i32
  %and674 = and i32 %conv673, 1
  store i32 %and674, i32* %last638, align 4, !tbaa !127
  %shr677 = lshr i64 %hold.18.lcssa, 1
  %conv681 = trunc i64 %shr677 to i32
  %and682 = and i32 %conv681, 3
  switch i32 %and682, label %do.body701 [
    i32 0, label %sw.bb683
    i32 1, label %sw.bb685
    i32 2, label %sw.bb696
    i32 3, label %sw.bb698
  ]

sw.bb683:                                         ; preds = %do.end672
  store i32 13, i32* %mode, align 4, !tbaa !126
  br label %do.body701

sw.bb685:                                         ; preds = %do.end672
  store %struct.code* getelementptr inbounds ([512 x %struct.code]* @fixedtables.lenfix, i64 0, i64 0), %struct.code** %lencode.i, align 8, !tbaa !135
  store i32 9, i32* %lenbits.i, align 4, !tbaa !153
  store %struct.code* getelementptr inbounds ([32 x %struct.code]* @fixedtables.distfix, i64 0, i64 0), %struct.code** %distcode.i, align 8, !tbaa !134
  store i32 5, i32* %distbits.i, align 4, !tbaa !154
  store i32 19, i32* %mode, align 4, !tbaa !126
  br i1 %cmp687, label %do.body690, label %do.body701

do.body690:                                       ; preds = %sw.bb685
  %next.22.lcssa.lcssa = phi i8* [ %next.22.lcssa, %sw.bb685 ]
  %have.22.lcssa.lcssa = phi i32 [ %have.22.lcssa, %sw.bb685 ]
  %hold.18.lcssa.lcssa = phi i64 [ %hold.18.lcssa, %sw.bb685 ]
  %bits.18.lcssa.lcssa = phi i32 [ %bits.18.lcssa, %sw.bb685 ]
  %ret.0.lcssa4861 = phi i32 [ %ret.0, %sw.bb685 ]
  %out.0.lcssa4832 = phi i32 [ %out.0, %sw.bb685 ]
  %left.0.lcssa4744 = phi i32 [ %left.0, %sw.bb685 ]
  %put.0.lcssa4685 = phi i8* [ %put.0, %sw.bb685 ]
  %shr691 = lshr i64 %hold.18.lcssa.lcssa, 3
  %sub692 = add i32 %bits.18.lcssa.lcssa, -3
  br label %do.body1813

sw.bb696:                                         ; preds = %do.end672
  store i32 16, i32* %mode, align 4, !tbaa !126
  br label %do.body701

sw.bb698:                                         ; preds = %do.end672
  store i8* getelementptr inbounds ([19 x i8]* @.str661, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %do.body701

do.body701:                                       ; preds = %sw.bb698, %sw.bb696, %sw.bb685, %sw.bb683, %do.end672
  %shr702 = lshr i64 %hold.18.lcssa, 3
  %sub703 = add i32 %bits.18.lcssa, -3
  br label %for.cond.backedge

do.body707:                                       ; preds = %for.cond
  %and708 = and i32 %bits.0, 7
  %sh_prom709 = zext i32 %and708 to i64
  %shr710 = lshr i64 %hold.0, %sh_prom709
  %sub712 = sub i32 %bits.0, %and708
  %cmp7173432 = icmp ult i32 %sub712, 32
  br i1 %cmp7173432, label %do.body720.lr.ph, label %do.end736

do.body720.lr.ph:                                 ; preds = %do.body707
  %82 = and i32 %bits.0, -8
  %83 = zext i32 %82 to i64
  br label %do.body720

do.body720:                                       ; preds = %if.end724, %do.body720.lr.ph
  %indvars.iv3859 = phi i64 [ %83, %do.body720.lr.ph ], [ %indvars.iv.next3860, %if.end724 ]
  %bits.193436 = phi i32 [ %sub712, %do.body720.lr.ph ], [ %add731, %if.end724 ]
  %hold.193435 = phi i64 [ %shr710, %do.body720.lr.ph ], [ %add730, %if.end724 ]
  %have.233434 = phi i32 [ %have.0, %do.body720.lr.ph ], [ %dec725, %if.end724 ]
  %next.233433 = phi i8* [ %next.0, %do.body720.lr.ph ], [ %incdec.ptr726, %if.end724 ]
  %cmp721 = icmp eq i32 %have.233434, 0
  br i1 %cmp721, label %do.body1813.loopexit2788, label %if.end724

if.end724:                                        ; preds = %do.body720
  %dec725 = add i32 %have.233434, -1
  %incdec.ptr726 = getelementptr inbounds i8* %next.233433, i64 1
  %84 = load i8* %next.233433, align 1, !tbaa !5
  %conv727 = zext i8 %84 to i64
  %shl729 = shl i64 %conv727, %indvars.iv3859
  %add730 = add i64 %shl729, %hold.193435
  %add731 = add i32 %bits.193436, 8
  %cmp717 = icmp ult i32 %add731, 32
  %indvars.iv.next3860 = add nuw nsw i64 %indvars.iv3859, 8
  br i1 %cmp717, label %do.body720, label %do.end736.loopexit

do.end736.loopexit:                               ; preds = %if.end724
  %add731.lcssa = phi i32 [ %add731, %if.end724 ]
  %add730.lcssa = phi i64 [ %add730, %if.end724 ]
  %incdec.ptr726.lcssa = phi i8* [ %incdec.ptr726, %if.end724 ]
  %dec725.lcssa = phi i32 [ %dec725, %if.end724 ]
  br label %do.end736

do.end736:                                        ; preds = %do.end736.loopexit, %do.body707
  %bits.19.lcssa = phi i32 [ %sub712, %do.body707 ], [ %add731.lcssa, %do.end736.loopexit ]
  %hold.19.lcssa = phi i64 [ %shr710, %do.body707 ], [ %add730.lcssa, %do.end736.loopexit ]
  %have.23.lcssa = phi i32 [ %have.0, %do.body707 ], [ %dec725.lcssa, %do.end736.loopexit ]
  %next.23.lcssa = phi i8* [ %next.0, %do.body707 ], [ %incdec.ptr726.lcssa, %do.end736.loopexit ]
  %and737 = and i64 %hold.19.lcssa, 65535
  %shr738 = lshr i64 %hold.19.lcssa, 16
  %xor = xor i64 %shr738, 65535
  %cmp739 = icmp eq i64 %and737, %xor
  br i1 %cmp739, label %if.end744, label %if.then741

if.then741:                                       ; preds = %do.end736
  store i8* getelementptr inbounds ([29 x i8]* @.str762, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end744:                                        ; preds = %do.end736
  %conv745 = trunc i64 %hold.19.lcssa to i32
  %and746 = and i32 %conv745, 65535
  store i32 %and746, i32* %length, align 4, !tbaa !149
  store i32 14, i32* %mode, align 4, !tbaa !126
  br i1 %cmp687, label %do.body1813.loopexit4553, label %sw.bb756

sw.bb756:                                         ; preds = %if.end744, %for.cond
  %next.24 = phi i8* [ %next.0, %for.cond ], [ %next.23.lcssa, %if.end744 ]
  %have.24 = phi i32 [ %have.0, %for.cond ], [ %have.23.lcssa, %if.end744 ]
  %hold.20 = phi i64 [ %hold.0, %for.cond ], [ 0, %if.end744 ]
  %bits.20 = phi i32 [ %bits.0, %for.cond ], [ 0, %if.end744 ]
  store i32 15, i32* %mode, align 4, !tbaa !126
  br label %sw.bb758

sw.bb758:                                         ; preds = %sw.bb756, %for.cond
  %next.25 = phi i8* [ %next.0, %for.cond ], [ %next.24, %sw.bb756 ]
  %have.25 = phi i32 [ %have.0, %for.cond ], [ %have.24, %sw.bb756 ]
  %hold.21 = phi i64 [ %hold.0, %for.cond ], [ %hold.20, %sw.bb756 ]
  %bits.21 = phi i32 [ %bits.0, %for.cond ], [ %bits.20, %sw.bb756 ]
  %85 = load i32* %length, align 4, !tbaa !149
  %tobool760 = icmp eq i32 %85, 0
  br i1 %tobool760, label %if.end783, label %if.then761

if.then761:                                       ; preds = %sw.bb758
  %cmp762 = icmp ugt i32 %85, %have.25
  %have.25. = select i1 %cmp762, i32 %have.25, i32 %85
  %cmp766 = icmp ugt i32 %have.25., %left.0
  %copy.4 = select i1 %cmp766, i32 %left.0, i32 %have.25.
  %cmp770 = icmp eq i32 %copy.4, 0
  br i1 %cmp770, label %do.body1813.loopexit4553, label %if.end773

if.end773:                                        ; preds = %if.then761
  %conv774 = zext i32 %copy.4 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %put.0, i8* %next.25, i64 %conv774, i32 1, i1 false)
  %sub775 = sub i32 %have.25, %copy.4
  %add.ptr777 = getelementptr inbounds i8* %next.25, i64 %conv774
  %sub778 = sub i32 %left.0, %copy.4
  %add.ptr780 = getelementptr inbounds i8* %put.0, i64 %conv774
  %86 = load i32* %length, align 4, !tbaa !149
  %sub782 = sub i32 %86, %copy.4
  store i32 %sub782, i32* %length, align 4, !tbaa !149
  br label %for.cond.backedge

if.end783:                                        ; preds = %sw.bb758
  store i32 11, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

do.body791:                                       ; preds = %if.end795, %do.body791.lr.ph
  %indvars.iv3840 = phi i64 [ %13, %do.body791.lr.ph ], [ %indvars.iv.next3841, %if.end795 ]
  %bits.223220 = phi i32 [ %bits.0, %do.body791.lr.ph ], [ %add802, %if.end795 ]
  %hold.223219 = phi i64 [ %hold.0, %do.body791.lr.ph ], [ %add801, %if.end795 ]
  %have.263218 = phi i32 [ %have.0, %do.body791.lr.ph ], [ %dec796, %if.end795 ]
  %next.263217 = phi i8* [ %next.0, %do.body791.lr.ph ], [ %incdec.ptr797, %if.end795 ]
  %cmp792 = icmp eq i32 %have.263218, 0
  br i1 %cmp792, label %do.body1813.loopexit2795, label %if.end795

if.end795:                                        ; preds = %do.body791
  %dec796 = add i32 %have.263218, -1
  %incdec.ptr797 = getelementptr inbounds i8* %next.263217, i64 1
  %87 = load i8* %next.263217, align 1, !tbaa !5
  %conv798 = zext i8 %87 to i64
  %shl800 = shl i64 %conv798, %indvars.iv3840
  %add801 = add i64 %shl800, %hold.223219
  %add802 = add i32 %bits.223220, 8
  %cmp788 = icmp ult i32 %add802, 14
  %indvars.iv.next3841 = add nuw nsw i64 %indvars.iv3840, 8
  br i1 %cmp788, label %do.body791, label %do.end807.loopexit

do.end807.loopexit:                               ; preds = %if.end795
  %add802.lcssa = phi i32 [ %add802, %if.end795 ]
  %add801.lcssa = phi i64 [ %add801, %if.end795 ]
  %incdec.ptr797.lcssa = phi i8* [ %incdec.ptr797, %if.end795 ]
  %dec796.lcssa = phi i32 [ %dec796, %if.end795 ]
  br label %do.end807

do.end807:                                        ; preds = %do.end807.loopexit, %while.cond787.preheader
  %bits.22.lcssa = phi i32 [ %bits.0, %while.cond787.preheader ], [ %add802.lcssa, %do.end807.loopexit ]
  %hold.22.lcssa = phi i64 [ %hold.0, %while.cond787.preheader ], [ %add801.lcssa, %do.end807.loopexit ]
  %have.26.lcssa = phi i32 [ %have.0, %while.cond787.preheader ], [ %dec796.lcssa, %do.end807.loopexit ]
  %next.26.lcssa = phi i8* [ %next.0, %while.cond787.preheader ], [ %incdec.ptr797.lcssa, %do.end807.loopexit ]
  %conv808 = trunc i64 %hold.22.lcssa to i32
  %and809 = and i32 %conv808, 31
  %add810 = add nuw nsw i32 %and809, 257
  store i32 %add810, i32* %nlen921, align 4, !tbaa !155
  %shr812 = lshr i64 %hold.22.lcssa, 5
  %conv816 = trunc i64 %shr812 to i32
  %and817 = and i32 %conv816, 31
  %add818 = add nuw nsw i32 %and817, 1
  store i32 %add818, i32* %ndist922, align 4, !tbaa !156
  %shr820 = lshr i64 %hold.22.lcssa, 10
  %conv824 = trunc i64 %shr820 to i32
  %and825 = and i32 %conv824, 15
  %add826 = add nuw nsw i32 %and825, 4
  store i32 %add826, i32* %ncode848, align 4, !tbaa !157
  %shr828 = lshr i64 %hold.22.lcssa, 14
  %sub829 = add i32 %bits.22.lcssa, -14
  %cmp833 = icmp ugt i32 %add810, 286
  %cmp837 = icmp ugt i32 %add818, 30
  %or.cond3921 = or i1 %cmp833, %cmp837
  br i1 %or.cond3921, label %if.then839, label %while.cond846.preheader.thread

if.then839:                                       ; preds = %do.end807
  store i8* getelementptr inbounds ([36 x i8]* @.str863, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

while.cond846.preheader.thread:                   ; preds = %do.end807
  store i32 0, i32* %have920, align 4, !tbaa !144
  store i32 17, i32* %mode, align 4, !tbaa !126
  br label %while.cond853.preheader.preheader

while.cond846.preheader:                          ; preds = %for.cond
  %.pre3889 = load i32* %have920, align 4, !tbaa !144
  %.pre3890 = load i32* %ncode848, align 4, !tbaa !157
  %cmp8493234 = icmp ult i32 %.pre3889, %.pre3890
  br i1 %cmp8493234, label %while.cond853.preheader.preheader, label %while.cond889.preheader

while.cond853.preheader.preheader:                ; preds = %while.cond846.preheader, %while.cond846.preheader.thread
  %.ph = phi i32 [ 0, %while.cond846.preheader.thread ], [ %.pre3889, %while.cond846.preheader ]
  %bits.233238.ph = phi i32 [ %sub829, %while.cond846.preheader.thread ], [ %bits.0, %while.cond846.preheader ]
  %hold.233237.ph = phi i64 [ %shr828, %while.cond846.preheader.thread ], [ %hold.0, %while.cond846.preheader ]
  %have.273236.ph = phi i32 [ %have.26.lcssa, %while.cond846.preheader.thread ], [ %have.0, %while.cond846.preheader ]
  %next.273235.ph = phi i8* [ %next.26.lcssa, %while.cond846.preheader.thread ], [ %next.0, %while.cond846.preheader ]
  br label %while.cond853.preheader

while.cond889.preheader.loopexit:                 ; preds = %do.end873
  %.lcssa4566 = phi i32 [ %96, %do.end873 ]
  %sub885.lcssa = phi i32 [ %sub885, %do.end873 ]
  %shr884.lcssa = phi i64 [ %shr884, %do.end873 ]
  %next.28.lcssa.lcssa = phi i8* [ %next.28.lcssa, %do.end873 ]
  %have.28.lcssa.lcssa = phi i32 [ %have.28.lcssa, %do.end873 ]
  br label %while.cond889.preheader

while.cond889.preheader:                          ; preds = %while.cond889.preheader.loopexit, %while.cond846.preheader
  %.lcssa = phi i32 [ %.pre3889, %while.cond846.preheader ], [ %.lcssa4566, %while.cond889.preheader.loopexit ]
  %bits.23.lcssa = phi i32 [ %bits.0, %while.cond846.preheader ], [ %sub885.lcssa, %while.cond889.preheader.loopexit ]
  %hold.23.lcssa = phi i64 [ %hold.0, %while.cond846.preheader ], [ %shr884.lcssa, %while.cond889.preheader.loopexit ]
  %have.27.lcssa = phi i32 [ %have.0, %while.cond846.preheader ], [ %have.28.lcssa.lcssa, %while.cond889.preheader.loopexit ]
  %next.27.lcssa = phi i8* [ %next.0, %while.cond846.preheader ], [ %next.28.lcssa.lcssa, %while.cond889.preheader.loopexit ]
  %cmp8913245 = icmp ult i32 %.lcssa, 19
  br i1 %cmp8913245, label %while.body893.lr.ph, label %while.end901

while.body893.lr.ph:                              ; preds = %while.cond889.preheader
  %88 = zext i32 %.lcssa to i64
  %89 = sub i32 19, %.lcssa
  %xtraiter = and i32 %89, 1
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %89, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %while.body893.unr, label %while.body893.lr.ph.split

while.body893.unr:                                ; preds = %while.body893.lr.ph
  %inc895.unr = add i32 %.lcssa, 1
  %arrayidx897.unr = getelementptr inbounds [19 x i16]* @inflate.order, i64 0, i64 %88
  %90 = load i16* %arrayidx897.unr, align 2, !tbaa !81
  %idxprom898.unr = zext i16 %90 to i64
  %arrayidx900.unr = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 %idxprom898.unr
  store i16 0, i16* %arrayidx900.unr, align 2, !tbaa !81
  %indvars.iv.next3847.unr = add nuw nsw i64 %88, 1
  %exitcond.unr = icmp eq i32 %.lcssa, 18
  br label %while.body893.lr.ph.split

while.body893.lr.ph.split:                        ; preds = %while.body893.unr, %while.body893.lr.ph
  %indvars.iv3846.unr = phi i64 [ %88, %while.body893.lr.ph ], [ %indvars.iv.next3847.unr, %while.body893.unr ]
  %.unr = phi i32 [ %.lcssa, %while.body893.lr.ph ], [ %inc895.unr, %while.body893.unr ]
  %91 = icmp ult i32 %89, 2
  br i1 %91, label %while.cond889.while.end901_crit_edge, label %while.body893.lr.ph.split.split

while.body893.lr.ph.split.split:                  ; preds = %while.body893.lr.ph.split
  br label %while.body893

while.cond853.preheader:                          ; preds = %do.end873, %while.cond853.preheader.preheader
  %92 = phi i32 [ %96, %do.end873 ], [ %.ph, %while.cond853.preheader.preheader ]
  %bits.233238 = phi i32 [ %sub885, %do.end873 ], [ %bits.233238.ph, %while.cond853.preheader.preheader ]
  %hold.233237 = phi i64 [ %shr884, %do.end873 ], [ %hold.233237.ph, %while.cond853.preheader.preheader ]
  %have.273236 = phi i32 [ %have.28.lcssa, %do.end873 ], [ %have.273236.ph, %while.cond853.preheader.preheader ]
  %next.273235 = phi i8* [ %next.28.lcssa, %do.end873 ], [ %next.273235.ph, %while.cond853.preheader.preheader ]
  %cmp8543225 = icmp ult i32 %bits.233238, 3
  br i1 %cmp8543225, label %do.body857.lr.ph, label %do.end873

do.body857.lr.ph:                                 ; preds = %while.cond853.preheader
  %93 = zext i32 %bits.233238 to i64
  br label %do.body857

do.body857:                                       ; preds = %if.end861, %do.body857.lr.ph
  %indvars.iv3843 = phi i64 [ %93, %do.body857.lr.ph ], [ %indvars.iv.next3844, %if.end861 ]
  %bits.243229 = phi i32 [ %bits.233238, %do.body857.lr.ph ], [ %add868, %if.end861 ]
  %hold.243228 = phi i64 [ %hold.233237, %do.body857.lr.ph ], [ %add867, %if.end861 ]
  %have.283227 = phi i32 [ %have.273236, %do.body857.lr.ph ], [ %dec862, %if.end861 ]
  %next.283226 = phi i8* [ %next.273235, %do.body857.lr.ph ], [ %incdec.ptr863, %if.end861 ]
  %cmp858 = icmp eq i32 %have.283227, 0
  br i1 %cmp858, label %do.body1813.loopexit2779, label %if.end861

if.end861:                                        ; preds = %do.body857
  %dec862 = add i32 %have.283227, -1
  %incdec.ptr863 = getelementptr inbounds i8* %next.283226, i64 1
  %94 = load i8* %next.283226, align 1, !tbaa !5
  %conv864 = zext i8 %94 to i64
  %shl866 = shl i64 %conv864, %indvars.iv3843
  %add867 = add i64 %shl866, %hold.243228
  %add868 = add i32 %bits.243229, 8
  %cmp854 = icmp ult i32 %add868, 3
  %indvars.iv.next3844 = add nuw nsw i64 %indvars.iv3843, 8
  br i1 %cmp854, label %do.body857, label %do.end873.loopexit

do.end873.loopexit:                               ; preds = %if.end861
  %add868.lcssa = phi i32 [ %add868, %if.end861 ]
  %add867.lcssa = phi i64 [ %add867, %if.end861 ]
  %incdec.ptr863.lcssa = phi i8* [ %incdec.ptr863, %if.end861 ]
  %dec862.lcssa = phi i32 [ %dec862, %if.end861 ]
  br label %do.end873

do.end873:                                        ; preds = %do.end873.loopexit, %while.cond853.preheader
  %bits.24.lcssa = phi i32 [ %bits.233238, %while.cond853.preheader ], [ %add868.lcssa, %do.end873.loopexit ]
  %hold.24.lcssa = phi i64 [ %hold.233237, %while.cond853.preheader ], [ %add867.lcssa, %do.end873.loopexit ]
  %have.28.lcssa = phi i32 [ %have.273236, %while.cond853.preheader ], [ %dec862.lcssa, %do.end873.loopexit ]
  %next.28.lcssa = phi i8* [ %next.273235, %while.cond853.preheader ], [ %incdec.ptr863.lcssa, %do.end873.loopexit ]
  %conv874 = trunc i64 %hold.24.lcssa to i16
  %and875 = and i16 %conv874, 7
  %inc878 = add i32 %92, 1
  store i32 %inc878, i32* %have920, align 4, !tbaa !144
  %idxprom879 = zext i32 %92 to i64
  %arrayidx880 = getelementptr inbounds [19 x i16]* @inflate.order, i64 0, i64 %idxprom879
  %95 = load i16* %arrayidx880, align 2, !tbaa !81
  %idxprom881 = zext i16 %95 to i64
  %arrayidx882 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 %idxprom881
  store i16 %and875, i16* %arrayidx882, align 2, !tbaa !81
  %shr884 = lshr i64 %hold.24.lcssa, 3
  %sub885 = add i32 %bits.24.lcssa, -3
  %96 = load i32* %have920, align 4, !tbaa !144
  %97 = load i32* %ncode848, align 4, !tbaa !157
  %cmp849 = icmp ult i32 %96, %97
  br i1 %cmp849, label %while.cond853.preheader, label %while.cond889.preheader.loopexit

while.body893:                                    ; preds = %while.body893, %while.body893.lr.ph.split.split
  %indvars.iv3846 = phi i64 [ %indvars.iv3846.unr, %while.body893.lr.ph.split.split ], [ %indvars.iv.next3847.1, %while.body893 ]
  %98 = phi i32 [ %.unr, %while.body893.lr.ph.split.split ], [ %inc895.1, %while.body893 ]
  %inc895 = add i32 %98, 1
  %arrayidx897 = getelementptr inbounds [19 x i16]* @inflate.order, i64 0, i64 %indvars.iv3846
  %99 = load i16* %arrayidx897, align 2, !tbaa !81
  %idxprom898 = zext i16 %99 to i64
  %arrayidx900 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 %idxprom898
  store i16 0, i16* %arrayidx900, align 2, !tbaa !81
  %indvars.iv.next3847 = add nuw nsw i64 %indvars.iv3846, 1
  %inc895.1 = add i32 %inc895, 1
  %arrayidx897.1 = getelementptr inbounds [19 x i16]* @inflate.order, i64 0, i64 %indvars.iv.next3847
  %100 = load i16* %arrayidx897.1, align 2, !tbaa !81
  %idxprom898.1 = zext i16 %100 to i64
  %arrayidx900.1 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 %idxprom898.1
  store i16 0, i16* %arrayidx900.1, align 2, !tbaa !81
  %indvars.iv.next3847.1 = add nuw nsw i64 %indvars.iv.next3847, 1
  %exitcond.1 = icmp eq i32 %inc895, 18
  br i1 %exitcond.1, label %while.cond889.while.end901_crit_edge.unr-lcssa, label %while.body893

while.cond889.while.end901_crit_edge.unr-lcssa:   ; preds = %while.body893
  br label %while.cond889.while.end901_crit_edge

while.cond889.while.end901_crit_edge:             ; preds = %while.cond889.while.end901_crit_edge.unr-lcssa, %while.body893.lr.ph.split
  store i32 19, i32* %have920, align 4, !tbaa !144
  br label %while.end901

while.end901:                                     ; preds = %while.cond889.while.end901_crit_edge, %while.cond889.preheader
  store %struct.code* %arraydecay1172, %struct.code** %next1173, align 8, !tbaa !133
  store %struct.code* %arraydecay1172, %struct.code** %lencode.i, align 8, !tbaa !135
  store i32 7, i32* %lenbits.i, align 4, !tbaa !153
  %call910 = call i32 @inflate_table(i32 0, i16* %arraydecay1178, i32 19, %struct.code** %next1173, i32* %lenbits.i, i16* %arraydecay1183) #4
  %tobool911 = icmp eq i32 %call910, 0
  br i1 %tobool911, label %if.end915, label %if.then912

if.then912:                                       ; preds = %while.end901
  store i8* getelementptr inbounds ([25 x i8]* @.str964, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end915:                                        ; preds = %while.end901
  store i32 0, i32* %have920, align 4, !tbaa !144
  store i32 18, i32* %mode, align 4, !tbaa !126
  br label %while.cond919.preheader

while.cond919.preheader:                          ; preds = %if.end915, %for.cond.while.cond919.preheader_crit_edge
  %101 = phi i32 [ 0, %if.end915 ], [ %.pre3891, %for.cond.while.cond919.preheader_crit_edge ]
  %next.29.ph = phi i8* [ %next.27.lcssa, %if.end915 ], [ %next.0, %for.cond.while.cond919.preheader_crit_edge ]
  %have.29.ph = phi i32 [ %have.27.lcssa, %if.end915 ], [ %have.0, %for.cond.while.cond919.preheader_crit_edge ]
  %hold.25.ph = phi i64 [ %hold.23.lcssa, %if.end915 ], [ %hold.0, %for.cond.while.cond919.preheader_crit_edge ]
  %bits.25.ph = phi i32 [ %bits.23.lcssa, %if.end915 ], [ %bits.0, %for.cond.while.cond919.preheader_crit_edge ]
  %ret.1.ph = phi i32 [ 0, %if.end915 ], [ %ret.0, %for.cond.while.cond919.preheader_crit_edge ]
  %102 = load i32* %nlen921, align 4, !tbaa !155
  %103 = load i32* %ndist922, align 4, !tbaa !156
  %add9233300 = add i32 %103, %102
  %cmp9243301 = icmp ult i32 %101, %add9233300
  br i1 %cmp9243301, label %for.cond927.preheader.preheader, label %if.end1161

for.cond927.preheader.preheader:                  ; preds = %while.cond919.preheader
  br label %for.cond927.preheader

for.cond927.preheader:                            ; preds = %while.cond919.backedge, %for.cond927.preheader.preheader
  %104 = phi i32 [ %113, %while.cond919.backedge ], [ %103, %for.cond927.preheader.preheader ]
  %105 = phi i32 [ %112, %while.cond919.backedge ], [ %102, %for.cond927.preheader.preheader ]
  %106 = phi i32 [ %111, %while.cond919.backedge ], [ %101, %for.cond927.preheader.preheader ]
  %bits.253305 = phi i32 [ %bits.25.be, %while.cond919.backedge ], [ %bits.25.ph, %for.cond927.preheader.preheader ]
  %hold.253304 = phi i64 [ %hold.25.be, %while.cond919.backedge ], [ %hold.25.ph, %for.cond927.preheader.preheader ]
  %have.293303 = phi i32 [ %have.29.be, %while.cond919.backedge ], [ %have.29.ph, %for.cond927.preheader.preheader ]
  %next.293302 = phi i8* [ %next.29.be, %while.cond919.backedge ], [ %next.29.ph, %for.cond927.preheader.preheader ]
  %conv9283246 = trunc i64 %hold.253304 to i32
  %107 = load i32* %lenbits.i, align 4, !tbaa !153
  %shl9303247 = shl i32 1, %107
  %sub9313248 = add i32 %shl9303247, -1
  %and9323249 = and i32 %sub9313248, %conv9283246
  %idxprom9333250 = zext i32 %and9323249 to i64
  %108 = load %struct.code** %lencode.i, align 8, !tbaa !135
  %here.sroa.16.0..sroa_idx3251 = getelementptr inbounds %struct.code* %108, i64 %idxprom9333250, i32 1
  %here.sroa.16.0.copyload3252 = load i8* %here.sroa.16.0..sroa_idx3251, align 1
  %conv9373255 = zext i8 %here.sroa.16.0.copyload3252 to i32
  %cmp9383257 = icmp ult i32 %bits.253305, %conv9373255
  br i1 %cmp9383257, label %do.body942.lr.ph, label %for.end

do.body942.lr.ph:                                 ; preds = %for.cond927.preheader
  %109 = zext i32 %bits.253305 to i64
  br label %do.body942

do.body942:                                       ; preds = %if.end946, %do.body942.lr.ph
  %indvars.iv3849 = phi i64 [ %109, %do.body942.lr.ph ], [ %indvars.iv.next3850, %if.end946 ]
  %bits.263261 = phi i32 [ %bits.253305, %do.body942.lr.ph ], [ %add953, %if.end946 ]
  %hold.263260 = phi i64 [ %hold.253304, %do.body942.lr.ph ], [ %add952, %if.end946 ]
  %have.303259 = phi i32 [ %have.293303, %do.body942.lr.ph ], [ %dec947, %if.end946 ]
  %next.303258 = phi i8* [ %next.293302, %do.body942.lr.ph ], [ %incdec.ptr948, %if.end946 ]
  %cmp943 = icmp eq i32 %have.303259, 0
  br i1 %cmp943, label %do.body1813.loopexit2778, label %if.end946

if.end946:                                        ; preds = %do.body942
  %dec947 = add i32 %have.303259, -1
  %incdec.ptr948 = getelementptr inbounds i8* %next.303258, i64 1
  %110 = load i8* %next.303258, align 1, !tbaa !5
  %conv949 = zext i8 %110 to i64
  %shl951 = shl i64 %conv949, %indvars.iv3849
  %add952 = add i64 %shl951, %hold.263260
  %add953 = add i32 %bits.263261, 8
  %conv928 = trunc i64 %add952 to i32
  %and932 = and i32 %sub9313248, %conv928
  %idxprom933 = zext i32 %and932 to i64
  %here.sroa.16.0..sroa_idx = getelementptr inbounds %struct.code* %108, i64 %idxprom933, i32 1
  %here.sroa.16.0.copyload = load i8* %here.sroa.16.0..sroa_idx, align 1
  %conv937 = zext i8 %here.sroa.16.0.copyload to i32
  %cmp938 = icmp ult i32 %add953, %conv937
  %indvars.iv.next3850 = add nuw nsw i64 %indvars.iv3849, 8
  br i1 %cmp938, label %do.body942, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %if.end946
  %conv937.lcssa = phi i32 [ %conv937, %if.end946 ]
  %here.sroa.16.0.copyload.lcssa4570 = phi i8 [ %here.sroa.16.0.copyload, %if.end946 ]
  %idxprom933.lcssa = phi i64 [ %idxprom933, %if.end946 ]
  %add953.lcssa = phi i32 [ %add953, %if.end946 ]
  %add952.lcssa = phi i64 [ %add952, %if.end946 ]
  %incdec.ptr948.lcssa = phi i8* [ %incdec.ptr948, %if.end946 ]
  %dec947.lcssa = phi i32 [ %dec947, %if.end946 ]
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.cond927.preheader
  %conv937.lcssa3270.pn = phi i32 [ %conv9373255, %for.cond927.preheader ], [ %conv937.lcssa, %for.end.loopexit ]
  %idxprom933.pn = phi i64 [ %idxprom9333250, %for.cond927.preheader ], [ %idxprom933.lcssa, %for.end.loopexit ]
  %here.sroa.16.0.copyload.lcssa = phi i8 [ %here.sroa.16.0.copyload3252, %for.cond927.preheader ], [ %here.sroa.16.0.copyload.lcssa4570, %for.end.loopexit ]
  %bits.26.lcssa = phi i32 [ %bits.253305, %for.cond927.preheader ], [ %add953.lcssa, %for.end.loopexit ]
  %hold.26.lcssa = phi i64 [ %hold.253304, %for.cond927.preheader ], [ %add952.lcssa, %for.end.loopexit ]
  %have.30.lcssa = phi i32 [ %have.293303, %for.cond927.preheader ], [ %dec947.lcssa, %for.end.loopexit ]
  %next.30.lcssa = phi i8* [ %next.293302, %for.cond927.preheader ], [ %incdec.ptr948.lcssa, %for.end.loopexit ]
  %here.sroa.40.0.copyload.lcssa.in = getelementptr inbounds %struct.code* %108, i64 %idxprom933.pn, i32 2
  %here.sroa.40.0.copyload.lcssa = load i16* %here.sroa.40.0.copyload.lcssa.in, align 2
  %cmp957 = icmp ult i16 %here.sroa.40.0.copyload.lcssa, 16
  br i1 %cmp957, label %do.body960, label %if.else976

do.body960:                                       ; preds = %for.end
  %sh_prom963 = zext i8 %here.sroa.16.0.copyload.lcssa to i64
  %shr964 = lshr i64 %hold.26.lcssa, %sh_prom963
  %sub967 = sub i32 %bits.26.lcssa, %conv937.lcssa3270.pn
  %inc972 = add i32 %106, 1
  store i32 %inc972, i32* %have920, align 4, !tbaa !144
  %idxprom973 = zext i32 %106 to i64
  %arrayidx975 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 %idxprom973
  store i16 %here.sroa.40.0.copyload.lcssa, i16* %arrayidx975, align 2, !tbaa !81
  br label %while.cond919.backedge

while.cond919.backedge.loopexit:                  ; preds = %while.body1147
  br label %while.cond919.backedge

while.cond919.backedge:                           ; preds = %while.cond919.backedge.loopexit, %do.body960
  %next.29.be = phi i8* [ %next.30.lcssa, %do.body960 ], [ %next.34, %while.cond919.backedge.loopexit ]
  %have.29.be = phi i32 [ %have.30.lcssa, %do.body960 ], [ %have.34, %while.cond919.backedge.loopexit ]
  %hold.25.be = phi i64 [ %shr964, %do.body960 ], [ %hold.30, %while.cond919.backedge.loopexit ]
  %bits.25.be = phi i32 [ %sub967, %do.body960 ], [ %bits.30, %while.cond919.backedge.loopexit ]
  %111 = load i32* %have920, align 4, !tbaa !144
  %112 = load i32* %nlen921, align 4, !tbaa !155
  %113 = load i32* %ndist922, align 4, !tbaa !156
  %add923 = add i32 %113, %112
  %cmp924 = icmp ult i32 %111, %add923
  br i1 %cmp924, label %for.cond927.preheader, label %while.end1156

if.else976:                                       ; preds = %for.end
  switch i16 %here.sroa.40.0.copyload.lcssa, label %while.cond1089.preheader [
    i16 16, label %while.cond983.preheader
    i16 17, label %while.cond1045.preheader
  ]

while.cond1045.preheader:                         ; preds = %if.else976
  %add1048 = add nuw nsw i32 %conv937.lcssa3270.pn, 3
  %cmp10493272 = icmp ult i32 %bits.26.lcssa, %add1048
  br i1 %cmp10493272, label %do.body1052.preheader, label %do.body1069

do.body1052.preheader:                            ; preds = %while.cond1045.preheader
  br label %do.body1052

while.cond983.preheader:                          ; preds = %if.else976
  %add986 = add nuw nsw i32 %conv937.lcssa3270.pn, 2
  %cmp9873281 = icmp ult i32 %bits.26.lcssa, %add986
  br i1 %cmp9873281, label %do.body990.preheader, label %do.body1007

do.body990.preheader:                             ; preds = %while.cond983.preheader
  br label %do.body990

while.cond1089.preheader:                         ; preds = %if.else976
  %add1092 = add nuw nsw i32 %conv937.lcssa3270.pn, 7
  %cmp10933290 = icmp ult i32 %bits.26.lcssa, %add1092
  br i1 %cmp10933290, label %do.body1096.preheader, label %do.body1113

do.body1096.preheader:                            ; preds = %while.cond1089.preheader
  br label %do.body1096

do.body990:                                       ; preds = %if.end994, %do.body990.preheader
  %bits.273285 = phi i32 [ %add1001, %if.end994 ], [ %bits.26.lcssa, %do.body990.preheader ]
  %hold.273284 = phi i64 [ %add1000, %if.end994 ], [ %hold.26.lcssa, %do.body990.preheader ]
  %have.313283 = phi i32 [ %dec995, %if.end994 ], [ %have.30.lcssa, %do.body990.preheader ]
  %next.313282 = phi i8* [ %incdec.ptr996, %if.end994 ], [ %next.30.lcssa, %do.body990.preheader ]
  %cmp991 = icmp eq i32 %have.313283, 0
  br i1 %cmp991, label %do.body1813.loopexit4547, label %if.end994

if.end994:                                        ; preds = %do.body990
  %dec995 = add i32 %have.313283, -1
  %incdec.ptr996 = getelementptr inbounds i8* %next.313282, i64 1
  %114 = load i8* %next.313282, align 1, !tbaa !5
  %conv997 = zext i8 %114 to i64
  %sh_prom998 = zext i32 %bits.273285 to i64
  %shl999 = shl i64 %conv997, %sh_prom998
  %add1000 = add i64 %shl999, %hold.273284
  %add1001 = add i32 %bits.273285, 8
  %cmp987 = icmp ult i32 %add1001, %add986
  br i1 %cmp987, label %do.body990, label %do.body1007.loopexit

do.body1007.loopexit:                             ; preds = %if.end994
  %add1001.lcssa = phi i32 [ %add1001, %if.end994 ]
  %add1000.lcssa = phi i64 [ %add1000, %if.end994 ]
  %incdec.ptr996.lcssa = phi i8* [ %incdec.ptr996, %if.end994 ]
  %dec995.lcssa = phi i32 [ %dec995, %if.end994 ]
  br label %do.body1007

do.body1007:                                      ; preds = %do.body1007.loopexit, %while.cond983.preheader
  %bits.27.lcssa = phi i32 [ %bits.26.lcssa, %while.cond983.preheader ], [ %add1001.lcssa, %do.body1007.loopexit ]
  %hold.27.lcssa = phi i64 [ %hold.26.lcssa, %while.cond983.preheader ], [ %add1000.lcssa, %do.body1007.loopexit ]
  %have.31.lcssa = phi i32 [ %have.30.lcssa, %while.cond983.preheader ], [ %dec995.lcssa, %do.body1007.loopexit ]
  %next.31.lcssa = phi i8* [ %next.30.lcssa, %while.cond983.preheader ], [ %incdec.ptr996.lcssa, %do.body1007.loopexit ]
  %sh_prom1010 = zext i8 %here.sroa.16.0.copyload.lcssa to i64
  %shr1011 = lshr i64 %hold.27.lcssa, %sh_prom1010
  %sub1014 = sub i32 %bits.27.lcssa, %conv937.lcssa3270.pn
  %cmp1018 = icmp eq i32 %106, 0
  br i1 %cmp1018, label %if.then1020, label %if.end1023

if.then1020:                                      ; preds = %do.body1007
  %sub1014.lcssa = phi i32 [ %sub1014, %do.body1007 ]
  %shr1011.lcssa = phi i64 [ %shr1011, %do.body1007 ]
  %next.31.lcssa.lcssa = phi i8* [ %next.31.lcssa, %do.body1007 ]
  %have.31.lcssa.lcssa = phi i32 [ %have.31.lcssa, %do.body1007 ]
  store i8* getelementptr inbounds ([26 x i8]* @.str1065, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1023:                                       ; preds = %do.body1007
  %sub1025 = add i32 %106, -1
  %idxprom1026 = zext i32 %sub1025 to i64
  %arrayidx1028 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 %idxprom1026
  %115 = load i16* %arrayidx1028, align 2, !tbaa !81
  %conv1030 = trunc i64 %shr1011 to i32
  %and1031 = and i32 %conv1030, 3
  %add1032 = add nuw nsw i32 %and1031, 3
  %shr1034 = lshr i64 %shr1011, 2
  %sub1035 = add i32 %sub1014, -2
  br label %if.end1132

do.body1052:                                      ; preds = %if.end1056, %do.body1052.preheader
  %bits.283276 = phi i32 [ %add1063, %if.end1056 ], [ %bits.26.lcssa, %do.body1052.preheader ]
  %hold.283275 = phi i64 [ %add1062, %if.end1056 ], [ %hold.26.lcssa, %do.body1052.preheader ]
  %have.323274 = phi i32 [ %dec1057, %if.end1056 ], [ %have.30.lcssa, %do.body1052.preheader ]
  %next.323273 = phi i8* [ %incdec.ptr1058, %if.end1056 ], [ %next.30.lcssa, %do.body1052.preheader ]
  %cmp1053 = icmp eq i32 %have.323274, 0
  br i1 %cmp1053, label %do.body1813.loopexit4548, label %if.end1056

if.end1056:                                       ; preds = %do.body1052
  %dec1057 = add i32 %have.323274, -1
  %incdec.ptr1058 = getelementptr inbounds i8* %next.323273, i64 1
  %116 = load i8* %next.323273, align 1, !tbaa !5
  %conv1059 = zext i8 %116 to i64
  %sh_prom1060 = zext i32 %bits.283276 to i64
  %shl1061 = shl i64 %conv1059, %sh_prom1060
  %add1062 = add i64 %shl1061, %hold.283275
  %add1063 = add i32 %bits.283276, 8
  %cmp1049 = icmp ult i32 %add1063, %add1048
  br i1 %cmp1049, label %do.body1052, label %do.body1069.loopexit

do.body1069.loopexit:                             ; preds = %if.end1056
  %add1063.lcssa = phi i32 [ %add1063, %if.end1056 ]
  %add1062.lcssa = phi i64 [ %add1062, %if.end1056 ]
  %incdec.ptr1058.lcssa = phi i8* [ %incdec.ptr1058, %if.end1056 ]
  %dec1057.lcssa = phi i32 [ %dec1057, %if.end1056 ]
  br label %do.body1069

do.body1069:                                      ; preds = %do.body1069.loopexit, %while.cond1045.preheader
  %bits.28.lcssa = phi i32 [ %bits.26.lcssa, %while.cond1045.preheader ], [ %add1063.lcssa, %do.body1069.loopexit ]
  %hold.28.lcssa = phi i64 [ %hold.26.lcssa, %while.cond1045.preheader ], [ %add1062.lcssa, %do.body1069.loopexit ]
  %have.32.lcssa = phi i32 [ %have.30.lcssa, %while.cond1045.preheader ], [ %dec1057.lcssa, %do.body1069.loopexit ]
  %next.32.lcssa = phi i8* [ %next.30.lcssa, %while.cond1045.preheader ], [ %incdec.ptr1058.lcssa, %do.body1069.loopexit ]
  %sh_prom1072 = zext i8 %here.sroa.16.0.copyload.lcssa to i64
  %shr1073 = lshr i64 %hold.28.lcssa, %sh_prom1072
  %conv1079 = trunc i64 %shr1073 to i32
  %and1080 = and i32 %conv1079, 7
  %add1081 = add nuw nsw i32 %and1080, 3
  %shr1083 = lshr i64 %shr1073, 3
  %sub1076 = sub i32 -3, %conv937.lcssa3270.pn
  %sub1084 = add i32 %sub1076, %bits.28.lcssa
  br label %if.end1132

do.body1096:                                      ; preds = %if.end1100, %do.body1096.preheader
  %bits.293294 = phi i32 [ %add1107, %if.end1100 ], [ %bits.26.lcssa, %do.body1096.preheader ]
  %hold.293293 = phi i64 [ %add1106, %if.end1100 ], [ %hold.26.lcssa, %do.body1096.preheader ]
  %have.333292 = phi i32 [ %dec1101, %if.end1100 ], [ %have.30.lcssa, %do.body1096.preheader ]
  %next.333291 = phi i8* [ %incdec.ptr1102, %if.end1100 ], [ %next.30.lcssa, %do.body1096.preheader ]
  %cmp1097 = icmp eq i32 %have.333292, 0
  br i1 %cmp1097, label %do.body1813.loopexit, label %if.end1100

if.end1100:                                       ; preds = %do.body1096
  %dec1101 = add i32 %have.333292, -1
  %incdec.ptr1102 = getelementptr inbounds i8* %next.333291, i64 1
  %117 = load i8* %next.333291, align 1, !tbaa !5
  %conv1103 = zext i8 %117 to i64
  %sh_prom1104 = zext i32 %bits.293294 to i64
  %shl1105 = shl i64 %conv1103, %sh_prom1104
  %add1106 = add i64 %shl1105, %hold.293293
  %add1107 = add i32 %bits.293294, 8
  %cmp1093 = icmp ult i32 %add1107, %add1092
  br i1 %cmp1093, label %do.body1096, label %do.body1113.loopexit

do.body1113.loopexit:                             ; preds = %if.end1100
  %add1107.lcssa = phi i32 [ %add1107, %if.end1100 ]
  %add1106.lcssa = phi i64 [ %add1106, %if.end1100 ]
  %incdec.ptr1102.lcssa = phi i8* [ %incdec.ptr1102, %if.end1100 ]
  %dec1101.lcssa = phi i32 [ %dec1101, %if.end1100 ]
  br label %do.body1113

do.body1113:                                      ; preds = %do.body1113.loopexit, %while.cond1089.preheader
  %bits.29.lcssa = phi i32 [ %bits.26.lcssa, %while.cond1089.preheader ], [ %add1107.lcssa, %do.body1113.loopexit ]
  %hold.29.lcssa = phi i64 [ %hold.26.lcssa, %while.cond1089.preheader ], [ %add1106.lcssa, %do.body1113.loopexit ]
  %have.33.lcssa = phi i32 [ %have.30.lcssa, %while.cond1089.preheader ], [ %dec1101.lcssa, %do.body1113.loopexit ]
  %next.33.lcssa = phi i8* [ %next.30.lcssa, %while.cond1089.preheader ], [ %incdec.ptr1102.lcssa, %do.body1113.loopexit ]
  %sh_prom1116 = zext i8 %here.sroa.16.0.copyload.lcssa to i64
  %shr1117 = lshr i64 %hold.29.lcssa, %sh_prom1116
  %conv1123 = trunc i64 %shr1117 to i32
  %and1124 = and i32 %conv1123, 127
  %add1125 = add nuw nsw i32 %and1124, 11
  %shr1127 = lshr i64 %shr1117, 7
  %sub1120 = sub i32 -7, %conv937.lcssa3270.pn
  %sub1128 = add i32 %sub1120, %bits.29.lcssa
  br label %if.end1132

if.end1132:                                       ; preds = %do.body1113, %do.body1069, %if.end1023
  %next.34 = phi i8* [ %next.31.lcssa, %if.end1023 ], [ %next.32.lcssa, %do.body1069 ], [ %next.33.lcssa, %do.body1113 ]
  %have.34 = phi i32 [ %have.31.lcssa, %if.end1023 ], [ %have.32.lcssa, %do.body1069 ], [ %have.33.lcssa, %do.body1113 ]
  %hold.30 = phi i64 [ %shr1034, %if.end1023 ], [ %shr1083, %do.body1069 ], [ %shr1127, %do.body1113 ]
  %bits.30 = phi i32 [ %sub1035, %if.end1023 ], [ %sub1084, %do.body1069 ], [ %sub1128, %do.body1113 ]
  %copy.5 = phi i32 [ %add1032, %if.end1023 ], [ %add1081, %do.body1069 ], [ %add1125, %do.body1113 ]
  %len.0 = phi i16 [ %115, %if.end1023 ], [ 0, %do.body1069 ], [ 0, %do.body1113 ]
  %add1134 = add i32 %106, %copy.5
  %add1137 = add i32 %104, %105
  %cmp1138 = icmp ugt i32 %add1134, %add1137
  br i1 %cmp1138, label %if.then1140, label %while.body1147.preheader

while.body1147.preheader:                         ; preds = %if.end1132
  br label %while.body1147

if.then1140:                                      ; preds = %if.end1132
  %bits.30.lcssa = phi i32 [ %bits.30, %if.end1132 ]
  %hold.30.lcssa = phi i64 [ %hold.30, %if.end1132 ]
  %have.34.lcssa = phi i32 [ %have.34, %if.end1132 ]
  %next.34.lcssa = phi i8* [ %next.34, %if.end1132 ]
  store i8* getelementptr inbounds ([26 x i8]* @.str1065, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

while.body1147:                                   ; preds = %while.body1147.while.body1147_crit_edge, %while.body1147.preheader
  %118 = phi i32 [ %.pre3892, %while.body1147.while.body1147_crit_edge ], [ %106, %while.body1147.preheader ]
  %copy.63299 = phi i32 [ %dec1145, %while.body1147.while.body1147_crit_edge ], [ %copy.5, %while.body1147.preheader ]
  %dec1145 = add i32 %copy.63299, -1
  %inc1150 = add i32 %118, 1
  store i32 %inc1150, i32* %have920, align 4, !tbaa !144
  %idxprom1151 = zext i32 %118 to i64
  %arrayidx1153 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 %idxprom1151
  store i16 %len.0, i16* %arrayidx1153, align 2, !tbaa !81
  %tobool1146 = icmp eq i32 %dec1145, 0
  br i1 %tobool1146, label %while.cond919.backedge.loopexit, label %while.body1147.while.body1147_crit_edge

while.body1147.while.body1147_crit_edge:          ; preds = %while.body1147
  %.pre3892 = load i32* %have920, align 4, !tbaa !144
  br label %while.body1147

while.end1156:                                    ; preds = %while.cond919.backedge
  %.lcssa4580 = phi i32 [ %112, %while.cond919.backedge ]
  %bits.25.be.lcssa = phi i32 [ %bits.25.be, %while.cond919.backedge ]
  %hold.25.be.lcssa = phi i64 [ %hold.25.be, %while.cond919.backedge ]
  %have.29.be.lcssa = phi i32 [ %have.29.be, %while.cond919.backedge ]
  %next.29.be.lcssa = phi i8* [ %next.29.be, %while.cond919.backedge ]
  %.pr2774.pre = load i32* %mode, align 4, !tbaa !126
  %phitmp3901 = icmp eq i32 %.pr2774.pre, 29
  br i1 %phitmp3901, label %for.cond.backedge, label %if.end1161

if.end1161:                                       ; preds = %while.end1156, %while.cond919.preheader
  %next.29.lcssa3920 = phi i8* [ %next.29.be.lcssa, %while.end1156 ], [ %next.29.ph, %while.cond919.preheader ]
  %have.29.lcssa3919 = phi i32 [ %have.29.be.lcssa, %while.end1156 ], [ %have.29.ph, %while.cond919.preheader ]
  %hold.25.lcssa3918 = phi i64 [ %hold.25.be.lcssa, %while.end1156 ], [ %hold.25.ph, %while.cond919.preheader ]
  %bits.25.lcssa3917 = phi i32 [ %bits.25.be.lcssa, %while.end1156 ], [ %bits.25.ph, %while.cond919.preheader ]
  %119 = phi i32 [ %.lcssa4580, %while.end1156 ], [ %102, %while.cond919.preheader ]
  %120 = load i16* %arrayidx1163, align 2, !tbaa !81
  %cmp1165 = icmp eq i16 %120, 0
  br i1 %cmp1165, label %if.then1167, label %if.end1170

if.then1167:                                      ; preds = %if.end1161
  store i8* getelementptr inbounds ([37 x i8]* @.str1166, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1170:                                       ; preds = %if.end1161
  store %struct.code* %arraydecay1172, %struct.code** %next1173, align 8, !tbaa !133
  store %struct.code* %arraydecay1172, %struct.code** %lencode.i, align 8, !tbaa !135
  store i32 9, i32* %lenbits.i, align 4, !tbaa !153
  %call1184 = call i32 @inflate_table(i32 1, i16* %arraydecay1178, i32 %119, %struct.code** %next1173, i32* %lenbits.i, i16* %arraydecay1183) #4
  %tobool1185 = icmp eq i32 %call1184, 0
  br i1 %tobool1185, label %if.end1189, label %if.then1186

if.then1186:                                      ; preds = %if.end1170
  store i8* getelementptr inbounds ([28 x i8]* @.str1267, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1189:                                       ; preds = %if.end1170
  %121 = load %struct.code** %next1173, align 8, !tbaa !133
  store %struct.code* %121, %struct.code** %distcode.i, align 8, !tbaa !134
  store i32 6, i32* %distbits.i, align 4, !tbaa !154
  %122 = load i32* %nlen921, align 4, !tbaa !155
  %idx.ext1194 = zext i32 %122 to i64
  %add.ptr1195 = getelementptr inbounds %struct.inflate_state* %4, i64 0, i32 28, i64 %idx.ext1194
  %123 = load i32* %ndist922, align 4, !tbaa !156
  %call1201 = call i32 @inflate_table(i32 2, i16* %add.ptr1195, i32 %123, %struct.code** %next1173, i32* %distbits.i, i16* %arraydecay1183) #4
  %tobool1202 = icmp eq i32 %call1201, 0
  br i1 %tobool1202, label %if.end1206, label %if.then1203

if.then1203:                                      ; preds = %if.end1189
  store i8* getelementptr inbounds ([22 x i8]* @.str1368, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1206:                                       ; preds = %if.end1189
  store i32 19, i32* %mode, align 4, !tbaa !126
  br i1 %cmp687, label %do.body1813.loopexit4553, label %sw.bb1212

sw.bb1212:                                        ; preds = %if.end1206, %for.cond
  %next.36 = phi i8* [ %next.0, %for.cond ], [ %next.29.lcssa3920, %if.end1206 ]
  %have.36 = phi i32 [ %have.0, %for.cond ], [ %have.29.lcssa3919, %if.end1206 ]
  %hold.32 = phi i64 [ %hold.0, %for.cond ], [ %hold.25.lcssa3918, %if.end1206 ]
  %bits.32 = phi i32 [ %bits.0, %for.cond ], [ %bits.25.lcssa3917, %if.end1206 ]
  %ret.2 = phi i32 [ %ret.0, %for.cond ], [ 0, %if.end1206 ]
  store i32 20, i32* %mode, align 4, !tbaa !126
  br label %sw.bb1214

sw.bb1214:                                        ; preds = %sw.bb1212, %for.cond
  %next.37 = phi i8* [ %next.0, %for.cond ], [ %next.36, %sw.bb1212 ]
  %have.37 = phi i32 [ %have.0, %for.cond ], [ %have.36, %sw.bb1212 ]
  %hold.33 = phi i64 [ %hold.0, %for.cond ], [ %hold.32, %sw.bb1212 ]
  %bits.33 = phi i32 [ %bits.0, %for.cond ], [ %bits.32, %sw.bb1212 ]
  %ret.3 = phi i32 [ %ret.0, %for.cond ], [ %ret.2, %sw.bb1212 ]
  %cmp1215 = icmp ugt i32 %have.37, 5
  %cmp1218 = icmp ugt i32 %left.0, 257
  %or.cond1919 = and i1 %cmp1215, %cmp1218
  br i1 %or.cond1919, label %do.body1221, label %if.end1244

do.body1221:                                      ; preds = %sw.bb1214
  store i8* %put.0, i8** %next_out, align 8, !tbaa !34
  store i32 %left.0, i32* %avail_out, align 4, !tbaa !33
  store i8* %next.37, i8** %next_in, align 8, !tbaa !37
  store i32 %have.37, i32* %avail_in15, align 4, !tbaa !32
  store i64 %hold.33, i64* %hold16, align 8, !tbaa !131
  store i32 %bits.33, i32* %bits17, align 4, !tbaa !132
  call void @inflate_fast(%struct.z_stream_s* %strm, i32 %out.0) #4
  %124 = load i8** %next_out, align 8, !tbaa !34
  %125 = load i32* %avail_out, align 4, !tbaa !33
  %126 = load i8** %next_in, align 8, !tbaa !37
  %127 = load i32* %avail_in15, align 4, !tbaa !32
  %128 = load i64* %hold16, align 8, !tbaa !131
  %129 = load i32* %bits17, align 4, !tbaa !132
  %130 = load i32* %mode, align 4, !tbaa !126
  %cmp1240 = icmp eq i32 %130, 11
  br i1 %cmp1240, label %if.then1242, label %for.cond.backedge

if.then1242:                                      ; preds = %do.body1221
  store i32 -1, i32* %back, align 4, !tbaa !137
  br label %for.cond.backedge

if.end1244:                                       ; preds = %sw.bb1214
  store i32 0, i32* %back, align 4, !tbaa !137
  %conv12473312 = trunc i64 %hold.33 to i32
  %131 = load i32* %lenbits.i, align 4, !tbaa !153
  %shl12493313 = shl i32 1, %131
  %sub12503314 = add i32 %shl12493313, -1
  %and12513315 = and i32 %sub12503314, %conv12473312
  %idxprom12523316 = zext i32 %and12513315 to i64
  %132 = load %struct.code** %lencode.i, align 8, !tbaa !135
  %here.sroa.16.0..sroa_idx19783319 = getelementptr inbounds %struct.code* %132, i64 %idxprom12523316, i32 1
  %here.sroa.16.0.copyload19793320 = load i8* %here.sroa.16.0..sroa_idx19783319, align 1
  %conv12563323 = zext i8 %here.sroa.16.0.copyload19793320 to i32
  %cmp12573324 = icmp ugt i32 %conv12563323, %bits.33
  br i1 %cmp12573324, label %do.body1261.lr.ph, label %for.end1275

do.body1261.lr.ph:                                ; preds = %if.end1244
  %133 = zext i32 %bits.33 to i64
  br label %do.body1261

do.body1261:                                      ; preds = %if.end1265, %do.body1261.lr.ph
  %indvars.iv3852 = phi i64 [ %133, %do.body1261.lr.ph ], [ %indvars.iv.next3853, %if.end1265 ]
  %bits.343328 = phi i32 [ %bits.33, %do.body1261.lr.ph ], [ %add1272, %if.end1265 ]
  %hold.343327 = phi i64 [ %hold.33, %do.body1261.lr.ph ], [ %add1271, %if.end1265 ]
  %have.383326 = phi i32 [ %have.37, %do.body1261.lr.ph ], [ %dec1266, %if.end1265 ]
  %next.383325 = phi i8* [ %next.37, %do.body1261.lr.ph ], [ %incdec.ptr1267, %if.end1265 ]
  %cmp1262 = icmp eq i32 %have.383326, 0
  br i1 %cmp1262, label %do.body1813.loopexit2794, label %if.end1265

if.end1265:                                       ; preds = %do.body1261
  %dec1266 = add i32 %have.383326, -1
  %incdec.ptr1267 = getelementptr inbounds i8* %next.383325, i64 1
  %134 = load i8* %next.383325, align 1, !tbaa !5
  %conv1268 = zext i8 %134 to i64
  %shl1270 = shl i64 %conv1268, %indvars.iv3852
  %add1271 = add i64 %shl1270, %hold.343327
  %add1272 = add i32 %bits.343328, 8
  %conv1247 = trunc i64 %add1271 to i32
  %and1251 = and i32 %sub12503314, %conv1247
  %idxprom1252 = zext i32 %and1251 to i64
  %here.sroa.16.0..sroa_idx1978 = getelementptr inbounds %struct.code* %132, i64 %idxprom1252, i32 1
  %here.sroa.16.0.copyload1979 = load i8* %here.sroa.16.0..sroa_idx1978, align 1
  %conv1256 = zext i8 %here.sroa.16.0.copyload1979 to i32
  %cmp1257 = icmp ugt i32 %conv1256, %add1272
  %indvars.iv.next3853 = add nuw nsw i64 %indvars.iv3852, 8
  br i1 %cmp1257, label %do.body1261, label %for.end1275.loopexit

for.end1275.loopexit:                             ; preds = %if.end1265
  %conv1256.lcssa4585 = phi i32 [ %conv1256, %if.end1265 ]
  %here.sroa.16.0.copyload1979.lcssa4584 = phi i8 [ %here.sroa.16.0.copyload1979, %if.end1265 ]
  %idxprom1252.lcssa = phi i64 [ %idxprom1252, %if.end1265 ]
  %add1272.lcssa = phi i32 [ %add1272, %if.end1265 ]
  %add1271.lcssa = phi i64 [ %add1271, %if.end1265 ]
  %incdec.ptr1267.lcssa = phi i8* [ %incdec.ptr1267, %if.end1265 ]
  %dec1266.lcssa = phi i32 [ %dec1266, %if.end1265 ]
  br label %for.end1275

for.end1275:                                      ; preds = %for.end1275.loopexit, %if.end1244
  %conv1256.lcssa = phi i32 [ %conv12563323, %if.end1244 ], [ %conv1256.lcssa4585, %for.end1275.loopexit ]
  %idxprom1252.pn = phi i64 [ %idxprom12523316, %if.end1244 ], [ %idxprom1252.lcssa, %for.end1275.loopexit ]
  %here.sroa.16.0.copyload1979.lcssa = phi i8 [ %here.sroa.16.0.copyload19793320, %if.end1244 ], [ %here.sroa.16.0.copyload1979.lcssa4584, %for.end1275.loopexit ]
  %bits.34.lcssa = phi i32 [ %bits.33, %if.end1244 ], [ %add1272.lcssa, %for.end1275.loopexit ]
  %hold.34.lcssa = phi i64 [ %hold.33, %if.end1244 ], [ %add1271.lcssa, %for.end1275.loopexit ]
  %have.38.lcssa = phi i32 [ %have.37, %if.end1244 ], [ %dec1266.lcssa, %for.end1275.loopexit ]
  %next.38.lcssa = phi i8* [ %next.37, %if.end1244 ], [ %incdec.ptr1267.lcssa, %for.end1275.loopexit ]
  %here.sroa.0.0.copyload1971.lcssa.in = getelementptr inbounds %struct.code* %132, i64 %idxprom1252.pn, i32 0
  %here.sroa.40.0.copyload2009.lcssa.in = getelementptr inbounds %struct.code* %132, i64 %idxprom1252.pn, i32 2
  %here.sroa.0.0.copyload1971.lcssa = load i8* %here.sroa.0.0.copyload1971.lcssa.in, align 2
  %here.sroa.40.0.copyload2009.lcssa = load i16* %here.sroa.40.0.copyload2009.lcssa.in, align 2
  %conv1276 = zext i8 %here.sroa.0.0.copyload1971.lcssa to i32
  %tobool1277 = icmp ne i8 %here.sroa.0.0.copyload1971.lcssa, 0
  %and1281 = and i32 %conv1276, 240
  %cmp1282 = icmp eq i32 %and1281, 0
  %or.cond2773 = and i1 %tobool1277, %cmp1282
  br i1 %or.cond2773, label %for.cond1285.preheader, label %do.body1343

for.cond1285.preheader:                           ; preds = %for.end1275
  %conv1287 = zext i16 %here.sroa.40.0.copyload2009.lcssa to i32
  %conv12883341 = trunc i64 %hold.34.lcssa to i32
  %add1293 = add nuw nsw i32 %conv1256.lcssa, %conv1276
  %shl1294 = shl i32 1, %add1293
  %sub1295 = add i32 %shl1294, -1
  %and12963342 = and i32 %conv12883341, %sub1295
  %shr12993343 = lshr i32 %and12963342, %conv1256.lcssa
  %add13003344 = add i32 %shr12993343, %conv1287
  %idxprom13013345 = zext i32 %add13003344 to i64
  %here.sroa.16.0..sroa_idx19763346 = getelementptr inbounds %struct.code* %132, i64 %idxprom13013345, i32 1
  %here.sroa.16.0.copyload19773347 = load i8* %here.sroa.16.0..sroa_idx19763346, align 1
  %conv13073348 = zext i8 %here.sroa.16.0.copyload19773347 to i32
  %add13083349 = add nuw nsw i32 %conv13073348, %conv1256.lcssa
  %cmp13093350 = icmp ugt i32 %add13083349, %bits.34.lcssa
  br i1 %cmp13093350, label %do.body1313.preheader, label %do.body1328

do.body1313.preheader:                            ; preds = %for.cond1285.preheader
  br label %do.body1313

do.body1313:                                      ; preds = %if.end1317, %do.body1313.preheader
  %bits.353354 = phi i32 [ %add1324, %if.end1317 ], [ %bits.34.lcssa, %do.body1313.preheader ]
  %hold.353353 = phi i64 [ %add1323, %if.end1317 ], [ %hold.34.lcssa, %do.body1313.preheader ]
  %have.393352 = phi i32 [ %dec1318, %if.end1317 ], [ %have.38.lcssa, %do.body1313.preheader ]
  %next.393351 = phi i8* [ %incdec.ptr1319, %if.end1317 ], [ %next.38.lcssa, %do.body1313.preheader ]
  %cmp1314 = icmp eq i32 %have.393352, 0
  br i1 %cmp1314, label %do.body1813.loopexit4552, label %if.end1317

if.end1317:                                       ; preds = %do.body1313
  %dec1318 = add i32 %have.393352, -1
  %incdec.ptr1319 = getelementptr inbounds i8* %next.393351, i64 1
  %135 = load i8* %next.393351, align 1, !tbaa !5
  %conv1320 = zext i8 %135 to i64
  %sh_prom1321 = zext i32 %bits.353354 to i64
  %shl1322 = shl i64 %conv1320, %sh_prom1321
  %add1323 = add i64 %shl1322, %hold.353353
  %add1324 = add i32 %bits.353354, 8
  %conv1288 = trunc i64 %add1323 to i32
  %and1296 = and i32 %conv1288, %sub1295
  %shr1299 = lshr i32 %and1296, %conv1256.lcssa
  %add1300 = add i32 %shr1299, %conv1287
  %idxprom1301 = zext i32 %add1300 to i64
  %here.sroa.16.0..sroa_idx1976 = getelementptr inbounds %struct.code* %132, i64 %idxprom1301, i32 1
  %here.sroa.16.0.copyload1977 = load i8* %here.sroa.16.0..sroa_idx1976, align 1
  %conv1307 = zext i8 %here.sroa.16.0.copyload1977 to i32
  %add1308 = add nuw nsw i32 %conv1307, %conv1256.lcssa
  %cmp1309 = icmp ugt i32 %add1308, %add1324
  br i1 %cmp1309, label %do.body1313, label %do.body1328.loopexit

do.body1328.loopexit:                             ; preds = %if.end1317
  %here.sroa.16.0.copyload1977.lcssa4590 = phi i8 [ %here.sroa.16.0.copyload1977, %if.end1317 ]
  %idxprom1301.lcssa4589 = phi i64 [ %idxprom1301, %if.end1317 ]
  %add1324.lcssa = phi i32 [ %add1324, %if.end1317 ]
  %add1323.lcssa = phi i64 [ %add1323, %if.end1317 ]
  %incdec.ptr1319.lcssa = phi i8* [ %incdec.ptr1319, %if.end1317 ]
  %dec1318.lcssa = phi i32 [ %dec1318, %if.end1317 ]
  br label %do.body1328

do.body1328:                                      ; preds = %do.body1328.loopexit, %for.cond1285.preheader
  %here.sroa.16.0.copyload1977.lcssa = phi i8 [ %here.sroa.16.0.copyload19773347, %for.cond1285.preheader ], [ %here.sroa.16.0.copyload1977.lcssa4590, %do.body1328.loopexit ]
  %idxprom1301.lcssa = phi i64 [ %idxprom13013345, %for.cond1285.preheader ], [ %idxprom1301.lcssa4589, %do.body1328.loopexit ]
  %bits.35.lcssa = phi i32 [ %bits.34.lcssa, %for.cond1285.preheader ], [ %add1324.lcssa, %do.body1328.loopexit ]
  %hold.35.lcssa = phi i64 [ %hold.34.lcssa, %for.cond1285.preheader ], [ %add1323.lcssa, %do.body1328.loopexit ]
  %have.39.lcssa = phi i32 [ %have.38.lcssa, %for.cond1285.preheader ], [ %dec1318.lcssa, %do.body1328.loopexit ]
  %next.39.lcssa = phi i8* [ %next.38.lcssa, %for.cond1285.preheader ], [ %incdec.ptr1319.lcssa, %do.body1328.loopexit ]
  %here.sroa.40.0..sroa_idx2006 = getelementptr inbounds %struct.code* %132, i64 %idxprom1301.lcssa, i32 2
  %here.sroa.40.0.copyload2007 = load i16* %here.sroa.40.0..sroa_idx2006, align 2
  %here.sroa.0.0..sroa_idx1968 = getelementptr inbounds %struct.code* %132, i64 %idxprom1301.lcssa, i32 0
  %here.sroa.0.0.copyload1969 = load i8* %here.sroa.0.0..sroa_idx1968, align 2
  %sh_prom1331 = zext i8 %here.sroa.16.0.copyload1979.lcssa to i64
  %shr1332 = lshr i64 %hold.35.lcssa, %sh_prom1331
  %sub1335 = sub i32 %bits.35.lcssa, %conv1256.lcssa
  store i32 %conv1256.lcssa, i32* %back, align 4, !tbaa !137
  br label %do.body1343

do.body1343:                                      ; preds = %do.body1328, %for.end1275
  %136 = phi i32 [ %conv1256.lcssa, %do.body1328 ], [ 0, %for.end1275 ]
  %next.40 = phi i8* [ %next.39.lcssa, %do.body1328 ], [ %next.38.lcssa, %for.end1275 ]
  %have.40 = phi i32 [ %have.39.lcssa, %do.body1328 ], [ %have.38.lcssa, %for.end1275 ]
  %hold.36 = phi i64 [ %shr1332, %do.body1328 ], [ %hold.34.lcssa, %for.end1275 ]
  %bits.36 = phi i32 [ %sub1335, %do.body1328 ], [ %bits.34.lcssa, %for.end1275 ]
  %here.sroa.40.0 = phi i16 [ %here.sroa.40.0.copyload2007, %do.body1328 ], [ %here.sroa.40.0.copyload2009.lcssa, %for.end1275 ]
  %here.sroa.16.0 = phi i8 [ %here.sroa.16.0.copyload1977.lcssa, %do.body1328 ], [ %here.sroa.16.0.copyload1979.lcssa, %for.end1275 ]
  %here.sroa.0.0 = phi i8 [ %here.sroa.0.0.copyload1969, %do.body1328 ], [ %here.sroa.0.0.copyload1971.lcssa, %for.end1275 ]
  %conv1345 = zext i8 %here.sroa.16.0 to i32
  %sh_prom1346 = zext i8 %here.sroa.16.0 to i64
  %shr1347 = lshr i64 %hold.36, %sh_prom1346
  %sub1350 = sub i32 %bits.36, %conv1345
  %add1356 = add nsw i32 %136, %conv1345
  store i32 %add1356, i32* %back, align 4, !tbaa !137
  %conv1358 = zext i16 %here.sroa.40.0 to i32
  store i32 %conv1358, i32* %length, align 4, !tbaa !149
  %conv1361 = zext i8 %here.sroa.0.0 to i32
  %cmp1362 = icmp eq i8 %here.sroa.0.0, 0
  br i1 %cmp1362, label %if.then1364, label %if.end1366

if.then1364:                                      ; preds = %do.body1343
  store i32 25, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1366:                                       ; preds = %do.body1343
  %and1369 = and i32 %conv1361, 32
  %tobool1370 = icmp eq i32 %and1369, 0
  br i1 %tobool1370, label %if.end1374, label %if.then1371

if.then1371:                                      ; preds = %if.end1366
  store i32 -1, i32* %back, align 4, !tbaa !137
  store i32 11, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1374:                                       ; preds = %if.end1366
  %and1377 = and i32 %conv1361, 64
  %tobool1378 = icmp eq i32 %and1377, 0
  br i1 %tobool1378, label %if.end1382, label %if.then1379

if.then1379:                                      ; preds = %if.end1374
  store i8* getelementptr inbounds ([28 x i8]* @.str1469, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1382:                                       ; preds = %if.end1374
  %and1385 = and i32 %conv1361, 15
  store i32 %and1385, i32* %extra1386, align 4, !tbaa !143
  store i32 21, i32* %mode, align 4, !tbaa !126
  br label %sw.bb1388

sw.bb1388:                                        ; preds = %if.end1382, %for.cond.sw.bb1388_crit_edge
  %137 = phi i32 [ %.pre3895, %for.cond.sw.bb1388_crit_edge ], [ %and1385, %if.end1382 ]
  %next.41 = phi i8* [ %next.0, %for.cond.sw.bb1388_crit_edge ], [ %next.40, %if.end1382 ]
  %have.41 = phi i32 [ %have.0, %for.cond.sw.bb1388_crit_edge ], [ %have.40, %if.end1382 ]
  %hold.37 = phi i64 [ %hold.0, %for.cond.sw.bb1388_crit_edge ], [ %shr1347, %if.end1382 ]
  %bits.37 = phi i32 [ %bits.0, %for.cond.sw.bb1388_crit_edge ], [ %sub1350, %if.end1382 ]
  %ret.4 = phi i32 [ %ret.0, %for.cond.sw.bb1388_crit_edge ], [ %ret.3, %if.end1382 ]
  %tobool1390 = icmp eq i32 %137, 0
  br i1 %tobool1390, label %sw.bb1388.if.end1433_crit_edge, label %while.cond1393.preheader

sw.bb1388.if.end1433_crit_edge:                   ; preds = %sw.bb1388
  %.pre3896 = load i32* %length, align 4, !tbaa !149
  br label %if.end1433

while.cond1393.preheader:                         ; preds = %sw.bb1388
  %cmp13953362 = icmp ult i32 %bits.37, %137
  br i1 %cmp13953362, label %do.body1398.preheader, label %do.end1414

do.body1398.preheader:                            ; preds = %while.cond1393.preheader
  br label %do.body1398

do.body1398:                                      ; preds = %if.end1402, %do.body1398.preheader
  %bits.383366 = phi i32 [ %add1409, %if.end1402 ], [ %bits.37, %do.body1398.preheader ]
  %hold.383365 = phi i64 [ %add1408, %if.end1402 ], [ %hold.37, %do.body1398.preheader ]
  %have.423364 = phi i32 [ %dec1403, %if.end1402 ], [ %have.41, %do.body1398.preheader ]
  %next.423363 = phi i8* [ %incdec.ptr1404, %if.end1402 ], [ %next.41, %do.body1398.preheader ]
  %cmp1399 = icmp eq i32 %have.423364, 0
  br i1 %cmp1399, label %do.body1813.loopexit4551, label %if.end1402

if.end1402:                                       ; preds = %do.body1398
  %dec1403 = add i32 %have.423364, -1
  %incdec.ptr1404 = getelementptr inbounds i8* %next.423363, i64 1
  %138 = load i8* %next.423363, align 1, !tbaa !5
  %conv1405 = zext i8 %138 to i64
  %sh_prom1406 = zext i32 %bits.383366 to i64
  %shl1407 = shl i64 %conv1405, %sh_prom1406
  %add1408 = add i64 %shl1407, %hold.383365
  %add1409 = add i32 %bits.383366, 8
  %cmp1395 = icmp ult i32 %add1409, %137
  br i1 %cmp1395, label %do.body1398, label %do.end1414.loopexit

do.end1414.loopexit:                              ; preds = %if.end1402
  %add1409.lcssa = phi i32 [ %add1409, %if.end1402 ]
  %add1408.lcssa = phi i64 [ %add1408, %if.end1402 ]
  %incdec.ptr1404.lcssa = phi i8* [ %incdec.ptr1404, %if.end1402 ]
  %dec1403.lcssa = phi i32 [ %dec1403, %if.end1402 ]
  br label %do.end1414

do.end1414:                                       ; preds = %do.end1414.loopexit, %while.cond1393.preheader
  %bits.38.lcssa = phi i32 [ %bits.37, %while.cond1393.preheader ], [ %add1409.lcssa, %do.end1414.loopexit ]
  %hold.38.lcssa = phi i64 [ %hold.37, %while.cond1393.preheader ], [ %add1408.lcssa, %do.end1414.loopexit ]
  %have.42.lcssa = phi i32 [ %have.41, %while.cond1393.preheader ], [ %dec1403.lcssa, %do.end1414.loopexit ]
  %next.42.lcssa = phi i8* [ %next.41, %while.cond1393.preheader ], [ %incdec.ptr1404.lcssa, %do.end1414.loopexit ]
  %conv1415 = trunc i64 %hold.38.lcssa to i32
  %shl1417 = shl i32 1, %137
  %sub1418 = add i32 %shl1417, -1
  %and1419 = and i32 %sub1418, %conv1415
  %139 = load i32* %length, align 4, !tbaa !149
  %add1421 = add i32 %139, %and1419
  store i32 %add1421, i32* %length, align 4, !tbaa !149
  %sh_prom1424 = zext i32 %137 to i64
  %shr1425 = lshr i64 %hold.38.lcssa, %sh_prom1424
  %sub1427 = sub i32 %bits.38.lcssa, %137
  %140 = load i32* %back, align 4, !tbaa !137
  %add1432 = add i32 %140, %137
  store i32 %add1432, i32* %back, align 4, !tbaa !137
  br label %if.end1433

if.end1433:                                       ; preds = %do.end1414, %sw.bb1388.if.end1433_crit_edge
  %141 = phi i32 [ %add1421, %do.end1414 ], [ %.pre3896, %sw.bb1388.if.end1433_crit_edge ]
  %next.43 = phi i8* [ %next.42.lcssa, %do.end1414 ], [ %next.41, %sw.bb1388.if.end1433_crit_edge ]
  %have.43 = phi i32 [ %have.42.lcssa, %do.end1414 ], [ %have.41, %sw.bb1388.if.end1433_crit_edge ]
  %hold.39 = phi i64 [ %shr1425, %do.end1414 ], [ %hold.37, %sw.bb1388.if.end1433_crit_edge ]
  %bits.39 = phi i32 [ %sub1427, %do.end1414 ], [ %bits.37, %sw.bb1388.if.end1433_crit_edge ]
  store i32 %141, i32* %was, align 4, !tbaa !158
  store i32 22, i32* %mode, align 4, !tbaa !126
  br label %for.cond1437.preheader

for.cond1437.preheader:                           ; preds = %if.end1433, %for.cond
  %next.44.ph = phi i8* [ %next.43, %if.end1433 ], [ %next.0, %for.cond ]
  %have.44.ph = phi i32 [ %have.43, %if.end1433 ], [ %have.0, %for.cond ]
  %hold.40.ph = phi i64 [ %hold.39, %if.end1433 ], [ %hold.0, %for.cond ]
  %bits.40.ph = phi i32 [ %bits.39, %if.end1433 ], [ %bits.0, %for.cond ]
  %ret.5.ph = phi i32 [ %ret.4, %if.end1433 ], [ %ret.0, %for.cond ]
  %conv14383372 = trunc i64 %hold.40.ph to i32
  %142 = load i32* %distbits.i, align 4, !tbaa !154
  %shl14403373 = shl i32 1, %142
  %sub14413374 = add i32 %shl14403373, -1
  %and14423375 = and i32 %sub14413374, %conv14383372
  %idxprom14433376 = zext i32 %and14423375 to i64
  %143 = load %struct.code** %distcode.i, align 8, !tbaa !134
  %here.sroa.16.0..sroa_idx19803379 = getelementptr inbounds %struct.code* %143, i64 %idxprom14433376, i32 1
  %here.sroa.16.0.copyload19813380 = load i8* %here.sroa.16.0..sroa_idx19803379, align 1
  %conv14473383 = zext i8 %here.sroa.16.0.copyload19813380 to i32
  %cmp14483384 = icmp ugt i32 %conv14473383, %bits.40.ph
  br i1 %cmp14483384, label %do.body1452.lr.ph, label %for.end1466

do.body1452.lr.ph:                                ; preds = %for.cond1437.preheader
  %144 = zext i32 %bits.40.ph to i64
  br label %do.body1452

do.body1452:                                      ; preds = %if.end1456, %do.body1452.lr.ph
  %indvars.iv3855 = phi i64 [ %144, %do.body1452.lr.ph ], [ %indvars.iv.next3856, %if.end1456 ]
  %bits.403388 = phi i32 [ %bits.40.ph, %do.body1452.lr.ph ], [ %add1463, %if.end1456 ]
  %hold.403387 = phi i64 [ %hold.40.ph, %do.body1452.lr.ph ], [ %add1462, %if.end1456 ]
  %have.443386 = phi i32 [ %have.44.ph, %do.body1452.lr.ph ], [ %dec1457, %if.end1456 ]
  %next.443385 = phi i8* [ %next.44.ph, %do.body1452.lr.ph ], [ %incdec.ptr1458, %if.end1456 ]
  %cmp1453 = icmp eq i32 %have.443386, 0
  br i1 %cmp1453, label %do.body1813.loopexit2791, label %if.end1456

if.end1456:                                       ; preds = %do.body1452
  %dec1457 = add i32 %have.443386, -1
  %incdec.ptr1458 = getelementptr inbounds i8* %next.443385, i64 1
  %145 = load i8* %next.443385, align 1, !tbaa !5
  %conv1459 = zext i8 %145 to i64
  %shl1461 = shl i64 %conv1459, %indvars.iv3855
  %add1462 = add i64 %shl1461, %hold.403387
  %add1463 = add i32 %bits.403388, 8
  %conv1438 = trunc i64 %add1462 to i32
  %and1442 = and i32 %sub14413374, %conv1438
  %idxprom1443 = zext i32 %and1442 to i64
  %here.sroa.16.0..sroa_idx1980 = getelementptr inbounds %struct.code* %143, i64 %idxprom1443, i32 1
  %here.sroa.16.0.copyload1981 = load i8* %here.sroa.16.0..sroa_idx1980, align 1
  %conv1447 = zext i8 %here.sroa.16.0.copyload1981 to i32
  %cmp1448 = icmp ugt i32 %conv1447, %add1463
  %indvars.iv.next3856 = add nuw nsw i64 %indvars.iv3855, 8
  br i1 %cmp1448, label %do.body1452, label %for.end1466.loopexit

for.end1466.loopexit:                             ; preds = %if.end1456
  %conv1447.lcssa4598 = phi i32 [ %conv1447, %if.end1456 ]
  %here.sroa.16.0.copyload1981.lcssa4597 = phi i8 [ %here.sroa.16.0.copyload1981, %if.end1456 ]
  %idxprom1443.lcssa = phi i64 [ %idxprom1443, %if.end1456 ]
  %add1463.lcssa = phi i32 [ %add1463, %if.end1456 ]
  %add1462.lcssa = phi i64 [ %add1462, %if.end1456 ]
  %incdec.ptr1458.lcssa = phi i8* [ %incdec.ptr1458, %if.end1456 ]
  %dec1457.lcssa = phi i32 [ %dec1457, %if.end1456 ]
  br label %for.end1466

for.end1466:                                      ; preds = %for.end1466.loopexit, %for.cond1437.preheader
  %conv1447.lcssa = phi i32 [ %conv14473383, %for.cond1437.preheader ], [ %conv1447.lcssa4598, %for.end1466.loopexit ]
  %idxprom1443.pn = phi i64 [ %idxprom14433376, %for.cond1437.preheader ], [ %idxprom1443.lcssa, %for.end1466.loopexit ]
  %here.sroa.16.0.copyload1981.lcssa = phi i8 [ %here.sroa.16.0.copyload19813380, %for.cond1437.preheader ], [ %here.sroa.16.0.copyload1981.lcssa4597, %for.end1466.loopexit ]
  %bits.40.lcssa = phi i32 [ %bits.40.ph, %for.cond1437.preheader ], [ %add1463.lcssa, %for.end1466.loopexit ]
  %hold.40.lcssa = phi i64 [ %hold.40.ph, %for.cond1437.preheader ], [ %add1462.lcssa, %for.end1466.loopexit ]
  %have.44.lcssa = phi i32 [ %have.44.ph, %for.cond1437.preheader ], [ %dec1457.lcssa, %for.end1466.loopexit ]
  %next.44.lcssa = phi i8* [ %next.44.ph, %for.cond1437.preheader ], [ %incdec.ptr1458.lcssa, %for.end1466.loopexit ]
  %here.sroa.0.0.copyload1973.lcssa.in = getelementptr inbounds %struct.code* %143, i64 %idxprom1443.pn, i32 0
  %here.sroa.40.0.copyload2011.lcssa.in = getelementptr inbounds %struct.code* %143, i64 %idxprom1443.pn, i32 2
  %here.sroa.0.0.copyload1973.lcssa = load i8* %here.sroa.0.0.copyload1973.lcssa.in, align 2
  %here.sroa.40.0.copyload2011.lcssa = load i16* %here.sroa.40.0.copyload2011.lcssa.in, align 2
  %conv1468 = zext i8 %here.sroa.0.0.copyload1973.lcssa to i32
  %and1469 = and i32 %conv1468, 240
  %cmp1470 = icmp eq i32 %and1469, 0
  br i1 %cmp1470, label %for.cond1473.preheader, label %for.end1466.do.body1531_crit_edge

for.end1466.do.body1531_crit_edge:                ; preds = %for.end1466
  %.pre3897 = load i32* %back, align 4, !tbaa !137
  br label %do.body1531

for.cond1473.preheader:                           ; preds = %for.end1466
  %conv1475 = zext i16 %here.sroa.40.0.copyload2011.lcssa to i32
  %conv14763401 = trunc i64 %hold.40.lcssa to i32
  %add1481 = add nuw nsw i32 %conv1447.lcssa, %conv1468
  %shl1482 = shl i32 1, %add1481
  %sub1483 = add i32 %shl1482, -1
  %and14843402 = and i32 %conv14763401, %sub1483
  %shr14873403 = lshr i32 %and14843402, %conv1447.lcssa
  %add14883404 = add i32 %shr14873403, %conv1475
  %idxprom14893405 = zext i32 %add14883404 to i64
  %here.sroa.16.0..sroa_idx19823406 = getelementptr inbounds %struct.code* %143, i64 %idxprom14893405, i32 1
  %here.sroa.16.0.copyload19833407 = load i8* %here.sroa.16.0..sroa_idx19823406, align 1
  %conv14953408 = zext i8 %here.sroa.16.0.copyload19833407 to i32
  %add14963409 = add nuw nsw i32 %conv14953408, %conv1447.lcssa
  %cmp14973410 = icmp ugt i32 %add14963409, %bits.40.lcssa
  br i1 %cmp14973410, label %do.body1501.preheader, label %do.body1516

do.body1501.preheader:                            ; preds = %for.cond1473.preheader
  br label %do.body1501

do.body1501:                                      ; preds = %if.end1505, %do.body1501.preheader
  %bits.413414 = phi i32 [ %add1512, %if.end1505 ], [ %bits.40.lcssa, %do.body1501.preheader ]
  %hold.413413 = phi i64 [ %add1511, %if.end1505 ], [ %hold.40.lcssa, %do.body1501.preheader ]
  %have.453412 = phi i32 [ %dec1506, %if.end1505 ], [ %have.44.lcssa, %do.body1501.preheader ]
  %next.453411 = phi i8* [ %incdec.ptr1507, %if.end1505 ], [ %next.44.lcssa, %do.body1501.preheader ]
  %cmp1502 = icmp eq i32 %have.453412, 0
  br i1 %cmp1502, label %do.body1813.loopexit4550, label %if.end1505

if.end1505:                                       ; preds = %do.body1501
  %dec1506 = add i32 %have.453412, -1
  %incdec.ptr1507 = getelementptr inbounds i8* %next.453411, i64 1
  %146 = load i8* %next.453411, align 1, !tbaa !5
  %conv1508 = zext i8 %146 to i64
  %sh_prom1509 = zext i32 %bits.413414 to i64
  %shl1510 = shl i64 %conv1508, %sh_prom1509
  %add1511 = add i64 %shl1510, %hold.413413
  %add1512 = add i32 %bits.413414, 8
  %conv1476 = trunc i64 %add1511 to i32
  %and1484 = and i32 %conv1476, %sub1483
  %shr1487 = lshr i32 %and1484, %conv1447.lcssa
  %add1488 = add i32 %shr1487, %conv1475
  %idxprom1489 = zext i32 %add1488 to i64
  %here.sroa.16.0..sroa_idx1982 = getelementptr inbounds %struct.code* %143, i64 %idxprom1489, i32 1
  %here.sroa.16.0.copyload1983 = load i8* %here.sroa.16.0..sroa_idx1982, align 1
  %conv1495 = zext i8 %here.sroa.16.0.copyload1983 to i32
  %add1496 = add nuw nsw i32 %conv1495, %conv1447.lcssa
  %cmp1497 = icmp ugt i32 %add1496, %add1512
  br i1 %cmp1497, label %do.body1501, label %do.body1516.loopexit

do.body1516.loopexit:                             ; preds = %if.end1505
  %here.sroa.16.0.copyload1983.lcssa4603 = phi i8 [ %here.sroa.16.0.copyload1983, %if.end1505 ]
  %idxprom1489.lcssa4602 = phi i64 [ %idxprom1489, %if.end1505 ]
  %add1512.lcssa = phi i32 [ %add1512, %if.end1505 ]
  %add1511.lcssa = phi i64 [ %add1511, %if.end1505 ]
  %incdec.ptr1507.lcssa = phi i8* [ %incdec.ptr1507, %if.end1505 ]
  %dec1506.lcssa = phi i32 [ %dec1506, %if.end1505 ]
  br label %do.body1516

do.body1516:                                      ; preds = %do.body1516.loopexit, %for.cond1473.preheader
  %here.sroa.16.0.copyload1983.lcssa = phi i8 [ %here.sroa.16.0.copyload19833407, %for.cond1473.preheader ], [ %here.sroa.16.0.copyload1983.lcssa4603, %do.body1516.loopexit ]
  %idxprom1489.lcssa = phi i64 [ %idxprom14893405, %for.cond1473.preheader ], [ %idxprom1489.lcssa4602, %do.body1516.loopexit ]
  %bits.41.lcssa = phi i32 [ %bits.40.lcssa, %for.cond1473.preheader ], [ %add1512.lcssa, %do.body1516.loopexit ]
  %hold.41.lcssa = phi i64 [ %hold.40.lcssa, %for.cond1473.preheader ], [ %add1511.lcssa, %do.body1516.loopexit ]
  %have.45.lcssa = phi i32 [ %have.44.lcssa, %for.cond1473.preheader ], [ %dec1506.lcssa, %do.body1516.loopexit ]
  %next.45.lcssa = phi i8* [ %next.44.lcssa, %for.cond1473.preheader ], [ %incdec.ptr1507.lcssa, %do.body1516.loopexit ]
  %here.sroa.40.0..sroa_idx2012 = getelementptr inbounds %struct.code* %143, i64 %idxprom1489.lcssa, i32 2
  %here.sroa.40.0.copyload2013 = load i16* %here.sroa.40.0..sroa_idx2012, align 2
  %here.sroa.0.0..sroa_idx1974 = getelementptr inbounds %struct.code* %143, i64 %idxprom1489.lcssa, i32 0
  %here.sroa.0.0.copyload1975 = load i8* %here.sroa.0.0..sroa_idx1974, align 2
  %sh_prom1519 = zext i8 %here.sroa.16.0.copyload1981.lcssa to i64
  %shr1520 = lshr i64 %hold.41.lcssa, %sh_prom1519
  %sub1523 = sub i32 %bits.41.lcssa, %conv1447.lcssa
  %147 = load i32* %back, align 4, !tbaa !137
  %add1529 = add nsw i32 %147, %conv1447.lcssa
  store i32 %add1529, i32* %back, align 4, !tbaa !137
  br label %do.body1531

do.body1531:                                      ; preds = %do.body1516, %for.end1466.do.body1531_crit_edge
  %148 = phi i32 [ %add1529, %do.body1516 ], [ %.pre3897, %for.end1466.do.body1531_crit_edge ]
  %next.46 = phi i8* [ %next.45.lcssa, %do.body1516 ], [ %next.44.lcssa, %for.end1466.do.body1531_crit_edge ]
  %have.46 = phi i32 [ %have.45.lcssa, %do.body1516 ], [ %have.44.lcssa, %for.end1466.do.body1531_crit_edge ]
  %hold.42 = phi i64 [ %shr1520, %do.body1516 ], [ %hold.40.lcssa, %for.end1466.do.body1531_crit_edge ]
  %bits.42 = phi i32 [ %sub1523, %do.body1516 ], [ %bits.40.lcssa, %for.end1466.do.body1531_crit_edge ]
  %here.sroa.40.1 = phi i16 [ %here.sroa.40.0.copyload2013, %do.body1516 ], [ %here.sroa.40.0.copyload2011.lcssa, %for.end1466.do.body1531_crit_edge ]
  %here.sroa.16.1 = phi i8 [ %here.sroa.16.0.copyload1983.lcssa, %do.body1516 ], [ %here.sroa.16.0.copyload1981.lcssa, %for.end1466.do.body1531_crit_edge ]
  %here.sroa.0.1 = phi i8 [ %here.sroa.0.0.copyload1975, %do.body1516 ], [ %here.sroa.0.0.copyload1973.lcssa, %for.end1466.do.body1531_crit_edge ]
  %conv1533 = zext i8 %here.sroa.16.1 to i32
  %sh_prom1534 = zext i8 %here.sroa.16.1 to i64
  %shr1535 = lshr i64 %hold.42, %sh_prom1534
  %sub1538 = sub i32 %bits.42, %conv1533
  %add1544 = add nsw i32 %148, %conv1533
  store i32 %add1544, i32* %back, align 4, !tbaa !137
  %conv1546 = zext i8 %here.sroa.0.1 to i32
  %and1547 = and i32 %conv1546, 64
  %tobool1548 = icmp eq i32 %and1547, 0
  br i1 %tobool1548, label %if.end1552, label %if.then1549

if.then1549:                                      ; preds = %do.body1531
  store i8* getelementptr inbounds ([22 x i8]* @.str1570, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1552:                                       ; preds = %do.body1531
  %conv1554 = zext i16 %here.sroa.40.1 to i32
  store i32 %conv1554, i32* %offset1592, align 4, !tbaa !159
  %and1557 = and i32 %conv1546, 15
  store i32 %and1557, i32* %extra1386, align 4, !tbaa !143
  store i32 23, i32* %mode, align 4, !tbaa !126
  br label %sw.bb1560

sw.bb1560:                                        ; preds = %if.end1552, %for.cond.sw.bb1560_crit_edge
  %149 = phi i32 [ %.pre3898, %for.cond.sw.bb1560_crit_edge ], [ %and1557, %if.end1552 ]
  %next.47 = phi i8* [ %next.0, %for.cond.sw.bb1560_crit_edge ], [ %next.46, %if.end1552 ]
  %have.47 = phi i32 [ %have.0, %for.cond.sw.bb1560_crit_edge ], [ %have.46, %if.end1552 ]
  %hold.43 = phi i64 [ %hold.0, %for.cond.sw.bb1560_crit_edge ], [ %shr1535, %if.end1552 ]
  %bits.43 = phi i32 [ %bits.0, %for.cond.sw.bb1560_crit_edge ], [ %sub1538, %if.end1552 ]
  %ret.6 = phi i32 [ %ret.0, %for.cond.sw.bb1560_crit_edge ], [ %ret.5.ph, %if.end1552 ]
  %tobool1562 = icmp eq i32 %149, 0
  br i1 %tobool1562, label %if.end1605, label %while.cond1565.preheader

while.cond1565.preheader:                         ; preds = %sw.bb1560
  %cmp15673422 = icmp ult i32 %bits.43, %149
  br i1 %cmp15673422, label %do.body1570.preheader, label %do.end1586

do.body1570.preheader:                            ; preds = %while.cond1565.preheader
  br label %do.body1570

do.body1570:                                      ; preds = %if.end1574, %do.body1570.preheader
  %bits.443426 = phi i32 [ %add1581, %if.end1574 ], [ %bits.43, %do.body1570.preheader ]
  %hold.443425 = phi i64 [ %add1580, %if.end1574 ], [ %hold.43, %do.body1570.preheader ]
  %have.483424 = phi i32 [ %dec1575, %if.end1574 ], [ %have.47, %do.body1570.preheader ]
  %next.483423 = phi i8* [ %incdec.ptr1576, %if.end1574 ], [ %next.47, %do.body1570.preheader ]
  %cmp1571 = icmp eq i32 %have.483424, 0
  br i1 %cmp1571, label %do.body1813.loopexit4549, label %if.end1574

if.end1574:                                       ; preds = %do.body1570
  %dec1575 = add i32 %have.483424, -1
  %incdec.ptr1576 = getelementptr inbounds i8* %next.483423, i64 1
  %150 = load i8* %next.483423, align 1, !tbaa !5
  %conv1577 = zext i8 %150 to i64
  %sh_prom1578 = zext i32 %bits.443426 to i64
  %shl1579 = shl i64 %conv1577, %sh_prom1578
  %add1580 = add i64 %shl1579, %hold.443425
  %add1581 = add i32 %bits.443426, 8
  %cmp1567 = icmp ult i32 %add1581, %149
  br i1 %cmp1567, label %do.body1570, label %do.end1586.loopexit

do.end1586.loopexit:                              ; preds = %if.end1574
  %add1581.lcssa = phi i32 [ %add1581, %if.end1574 ]
  %add1580.lcssa = phi i64 [ %add1580, %if.end1574 ]
  %incdec.ptr1576.lcssa = phi i8* [ %incdec.ptr1576, %if.end1574 ]
  %dec1575.lcssa = phi i32 [ %dec1575, %if.end1574 ]
  br label %do.end1586

do.end1586:                                       ; preds = %do.end1586.loopexit, %while.cond1565.preheader
  %bits.44.lcssa = phi i32 [ %bits.43, %while.cond1565.preheader ], [ %add1581.lcssa, %do.end1586.loopexit ]
  %hold.44.lcssa = phi i64 [ %hold.43, %while.cond1565.preheader ], [ %add1580.lcssa, %do.end1586.loopexit ]
  %have.48.lcssa = phi i32 [ %have.47, %while.cond1565.preheader ], [ %dec1575.lcssa, %do.end1586.loopexit ]
  %next.48.lcssa = phi i8* [ %next.47, %while.cond1565.preheader ], [ %incdec.ptr1576.lcssa, %do.end1586.loopexit ]
  %conv1587 = trunc i64 %hold.44.lcssa to i32
  %shl1589 = shl i32 1, %149
  %sub1590 = add i32 %shl1589, -1
  %and1591 = and i32 %sub1590, %conv1587
  %151 = load i32* %offset1592, align 4, !tbaa !159
  %add1593 = add i32 %151, %and1591
  store i32 %add1593, i32* %offset1592, align 4, !tbaa !159
  %sh_prom1596 = zext i32 %149 to i64
  %shr1597 = lshr i64 %hold.44.lcssa, %sh_prom1596
  %sub1599 = sub i32 %bits.44.lcssa, %149
  %152 = load i32* %back, align 4, !tbaa !137
  %add1604 = add i32 %152, %149
  store i32 %add1604, i32* %back, align 4, !tbaa !137
  br label %if.end1605

if.end1605:                                       ; preds = %do.end1586, %sw.bb1560
  %next.49 = phi i8* [ %next.48.lcssa, %do.end1586 ], [ %next.47, %sw.bb1560 ]
  %have.49 = phi i32 [ %have.48.lcssa, %do.end1586 ], [ %have.47, %sw.bb1560 ]
  %hold.45 = phi i64 [ %shr1597, %do.end1586 ], [ %hold.43, %sw.bb1560 ]
  %bits.45 = phi i32 [ %sub1599, %do.end1586 ], [ %bits.43, %sw.bb1560 ]
  store i32 24, i32* %mode, align 4, !tbaa !126
  br label %sw.bb1607

sw.bb1607:                                        ; preds = %if.end1605, %for.cond
  %next.50 = phi i8* [ %next.0, %for.cond ], [ %next.49, %if.end1605 ]
  %have.50 = phi i32 [ %have.0, %for.cond ], [ %have.49, %if.end1605 ]
  %hold.46 = phi i64 [ %hold.0, %for.cond ], [ %hold.45, %if.end1605 ]
  %bits.46 = phi i32 [ %bits.0, %for.cond ], [ %bits.45, %if.end1605 ]
  %ret.7 = phi i32 [ %ret.0, %for.cond ], [ %ret.6, %if.end1605 ]
  %cmp1608 = icmp eq i32 %left.0, 0
  br i1 %cmp1608, label %do.body1813.loopexit4553, label %if.end1611

if.end1611:                                       ; preds = %sw.bb1607
  %sub1612 = sub i32 %out.0, %left.0
  %153 = load i32* %offset1592, align 4, !tbaa !159
  %cmp1614 = icmp ugt i32 %153, %sub1612
  br i1 %cmp1614, label %if.then1616, label %if.else1649

if.then1616:                                      ; preds = %if.end1611
  %sub1618 = sub i32 %153, %sub1612
  %154 = load i32* %whave, align 4, !tbaa !139
  %cmp1619 = icmp ugt i32 %sub1618, %154
  br i1 %cmp1619, label %if.then1621, label %if.end1627

if.then1621:                                      ; preds = %if.then1616
  %155 = load i32* %sane, align 4, !tbaa !136
  %tobool1622 = icmp eq i32 %155, 0
  br i1 %tobool1622, label %if.end1627, label %if.then1623

if.then1623:                                      ; preds = %if.then1621
  store i8* getelementptr inbounds ([30 x i8]* @.str16, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1627:                                       ; preds = %if.then1621, %if.then1616
  %156 = load i32* %wnext, align 4, !tbaa !140
  %cmp1628 = icmp ugt i32 %sub1618, %156
  br i1 %cmp1628, label %if.then1630, label %if.else1636

if.then1630:                                      ; preds = %if.end1627
  %sub1632 = sub i32 %sub1618, %156
  %157 = load i8** %window, align 8, !tbaa !141
  %158 = load i32* %wsize, align 4, !tbaa !138
  %sub1633 = sub i32 %158, %sub1632
  %idx.ext1634 = zext i32 %sub1633 to i64
  %add.ptr1635 = getelementptr inbounds i8* %157, i64 %idx.ext1634
  br label %if.end1642

if.else1636:                                      ; preds = %if.end1627
  %159 = load i8** %window, align 8, !tbaa !141
  %sub1639 = sub i32 %156, %sub1618
  %idx.ext1640 = zext i32 %sub1639 to i64
  %add.ptr1641 = getelementptr inbounds i8* %159, i64 %idx.ext1640
  br label %if.end1642

if.end1642:                                       ; preds = %if.else1636, %if.then1630
  %copy.7 = phi i32 [ %sub1632, %if.then1630 ], [ %sub1618, %if.else1636 ]
  %from.0 = phi i8* [ %add.ptr1635, %if.then1630 ], [ %add.ptr1641, %if.else1636 ]
  %160 = load i32* %length, align 4, !tbaa !149
  %cmp1644 = icmp ugt i32 %copy.7, %160
  %.copy.7 = select i1 %cmp1644, i32 %160, i32 %copy.7
  br label %if.end1654

if.else1649:                                      ; preds = %if.end1611
  %idx.ext1651 = zext i32 %153 to i64
  %idx.neg = sub i64 0, %idx.ext1651
  %add.ptr1652 = getelementptr inbounds i8* %put.0, i64 %idx.neg
  %161 = load i32* %length, align 4, !tbaa !149
  br label %if.end1654

if.end1654:                                       ; preds = %if.else1649, %if.end1642
  %162 = phi i32 [ %161, %if.else1649 ], [ %160, %if.end1642 ]
  %copy.8 = phi i32 [ %161, %if.else1649 ], [ %.copy.7, %if.end1642 ]
  %from.1 = phi i8* [ %add.ptr1652, %if.else1649 ], [ %from.0, %if.end1642 ]
  %cmp1655 = icmp ugt i32 %copy.8, %left.0
  %left.0.copy.8 = select i1 %cmp1655, i32 %left.0, i32 %copy.8
  %sub1661 = sub i32 %162, %left.0.copy.8
  store i32 %sub1661, i32* %length, align 4, !tbaa !149
  %163 = xor i32 %left.0, -1
  %164 = xor i32 %copy.8, -1
  %165 = icmp ugt i32 %163, %164
  %umax = select i1 %165, i32 %163, i32 %164
  %166 = sub i32 -2, %umax
  %167 = zext i32 %166 to i64
  %168 = xor i32 %left.0, -1
  %169 = xor i32 %copy.8, -1
  %170 = icmp ugt i32 %168, %169
  %umax4250 = select i1 %170, i32 %168, i32 %169
  %171 = sub i32 -2, %umax4250
  %172 = zext i32 %171 to i64
  %173 = add nuw nsw i64 %172, 1
  %end.idx = add nuw nsw i64 %172, 1
  %n.vec = and i64 %173, 8589934560
  %cmp.zero = icmp eq i64 %n.vec, 0
  %174 = xor i32 %left.0, -1
  %175 = xor i32 %copy.8, -1
  %176 = icmp ugt i32 %174, %175
  %umax4251 = select i1 %176, i32 %174, i32 %175
  %177 = sub i32 -2, %umax4251
  %178 = zext i32 %177 to i64
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %if.end1654
  %scevgep4252 = getelementptr i8* %from.1, i64 %178
  %bound0 = icmp ule i8* %put.0, %scevgep4252
  %scevgep = getelementptr i8* %put.0, i64 %178
  %bound1 = icmp ule i8* %from.1, %scevgep
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %put.0, i64 %n.vec
  %cast.crd = trunc i64 %n.vec to i32
  %rev.ind.end = sub i32 %left.0.copy.8, %cast.crd
  %ptr.ind.end4257 = getelementptr i8* %from.1, i64 %n.vec
  br i1 %memcheck.conflict, label %middle.block, label %vector.body.preheader

vector.body.preheader:                            ; preds = %vector.memcheck
  %179 = sub i32 -1, %copy.8
  %180 = sub i32 -1, %left.0
  %181 = icmp ugt i32 %179, %180
  %umax4874 = select i1 %181, i32 %179, i32 %180
  %182 = sub i32 -2, %umax4874
  %183 = zext i32 %182 to i64
  %184 = add i64 %183, 1
  %185 = lshr i64 %184, 5
  %186 = mul i64 %185, 32
  %187 = add i64 %186, -32
  %188 = lshr i64 %187, 5
  %189 = add i64 %188, 1
  %xtraiter4875 = and i64 %189, 1
  %lcmp.mod4876 = icmp ne i64 %xtraiter4875, 0
  %lcmp.overflow4877 = icmp eq i64 %189, 0
  %lcmp.or4878 = or i1 %lcmp.overflow4877, %lcmp.mod4876
  br i1 %lcmp.or4878, label %vector.body.unr, label %vector.body.preheader.split

vector.body.unr:                                  ; preds = %vector.body.preheader
  %next.gep.unr = getelementptr i8* %put.0, i64 0
  %next.gep4355.unr = getelementptr i8* %from.1, i64 0
  %190 = bitcast i8* %next.gep4355.unr to <16 x i8>*
  %wide.load.unr = load <16 x i8>* %190, align 1, !tbaa !5
  %next.gep4355.sum4529.unr = or i64 0, 16
  %191 = getelementptr i8* %from.1, i64 %next.gep4355.sum4529.unr
  %192 = bitcast i8* %191 to <16 x i8>*
  %wide.load4450.unr = load <16 x i8>* %192, align 1, !tbaa !5
  %193 = bitcast i8* %next.gep.unr to <16 x i8>*
  store <16 x i8> %wide.load.unr, <16 x i8>* %193, align 1, !tbaa !5
  %next.gep.sum4546.unr = or i64 0, 16
  %194 = getelementptr i8* %put.0, i64 %next.gep.sum4546.unr
  %195 = bitcast i8* %194 to <16 x i8>*
  store <16 x i8> %wide.load4450.unr, <16 x i8>* %195, align 1, !tbaa !5
  %index.next.unr = add i64 0, 32
  %196 = icmp eq i64 %index.next.unr, %n.vec
  br label %vector.body.preheader.split

vector.body.preheader.split:                      ; preds = %vector.body.unr, %vector.body.preheader
  %index.unr = phi i64 [ 0, %vector.body.preheader ], [ %index.next.unr, %vector.body.unr ]
  %197 = icmp ult i64 %189, 2
  br i1 %197, label %middle.block.loopexit, label %vector.body.preheader.split.split

vector.body.preheader.split.split:                ; preds = %vector.body.preheader.split
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.split.split
  %index = phi i64 [ %index.unr, %vector.body.preheader.split.split ], [ %index.next.1, %vector.body ]
  %next.gep = getelementptr i8* %put.0, i64 %index
  %next.gep4355 = getelementptr i8* %from.1, i64 %index
  %198 = bitcast i8* %next.gep4355 to <16 x i8>*
  %wide.load = load <16 x i8>* %198, align 1, !tbaa !5
  %next.gep4355.sum4529 = or i64 %index, 16
  %199 = getelementptr i8* %from.1, i64 %next.gep4355.sum4529
  %200 = bitcast i8* %199 to <16 x i8>*
  %wide.load4450 = load <16 x i8>* %200, align 1, !tbaa !5
  %201 = bitcast i8* %next.gep to <16 x i8>*
  store <16 x i8> %wide.load, <16 x i8>* %201, align 1, !tbaa !5
  %next.gep.sum4546 = or i64 %index, 16
  %202 = getelementptr i8* %put.0, i64 %next.gep.sum4546
  %203 = bitcast i8* %202 to <16 x i8>*
  store <16 x i8> %wide.load4450, <16 x i8>* %203, align 1, !tbaa !5
  %index.next = add i64 %index, 32
  %next.gep.1 = getelementptr i8* %put.0, i64 %index.next
  %next.gep4355.1 = getelementptr i8* %from.1, i64 %index.next
  %204 = bitcast i8* %next.gep4355.1 to <16 x i8>*
  %wide.load.1 = load <16 x i8>* %204, align 1, !tbaa !5
  %next.gep4355.sum4529.1 = or i64 %index.next, 16
  %205 = getelementptr i8* %from.1, i64 %next.gep4355.sum4529.1
  %206 = bitcast i8* %205 to <16 x i8>*
  %wide.load4450.1 = load <16 x i8>* %206, align 1, !tbaa !5
  %207 = bitcast i8* %next.gep.1 to <16 x i8>*
  store <16 x i8> %wide.load.1, <16 x i8>* %207, align 1, !tbaa !5
  %next.gep.sum4546.1 = or i64 %index.next, 16
  %208 = getelementptr i8* %put.0, i64 %next.gep.sum4546.1
  %209 = bitcast i8* %208 to <16 x i8>*
  store <16 x i8> %wide.load4450.1, <16 x i8>* %209, align 1, !tbaa !5
  %index.next.1 = add i64 %index.next, 32
  %210 = icmp eq i64 %index.next.1, %n.vec
  br i1 %210, label %middle.block.loopexit.unr-lcssa, label %vector.body, !llvm.loop !160

middle.block.loopexit.unr-lcssa:                  ; preds = %vector.body
  br label %middle.block.loopexit

middle.block.loopexit:                            ; preds = %middle.block.loopexit.unr-lcssa, %vector.body.preheader.split
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %vector.memcheck, %if.end1654
  %resume.val = phi i8* [ %put.0, %if.end1654 ], [ %put.0, %vector.memcheck ], [ %ptr.ind.end, %middle.block.loopexit ]
  %resume.val4253 = phi i32 [ %left.0.copy.8, %if.end1654 ], [ %left.0.copy.8, %vector.memcheck ], [ %rev.ind.end, %middle.block.loopexit ]
  %resume.val4255 = phi i8* [ %from.1, %if.end1654 ], [ %from.1, %vector.memcheck ], [ %ptr.ind.end4257, %middle.block.loopexit ]
  %new.indc.resume.val = phi i64 [ 0, %if.end1654 ], [ 0, %vector.memcheck ], [ %n.vec, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %end.idx, %new.indc.resume.val
  br i1 %cmp.n, label %do.end1668, label %do.body1662.preheader

do.body1662.preheader:                            ; preds = %middle.block
  %xtraiter4879 = and i32 %resume.val4253, 3
  %lcmp.mod4880 = icmp ne i32 %xtraiter4879, 0
  %lcmp.overflow4881 = icmp eq i32 %resume.val4253, 0
  %lcmp.or4882 = or i1 %lcmp.overflow4881, %lcmp.mod4880
  br i1 %lcmp.or4882, label %unr.cmp4896, label %do.body1662.preheader.split

unr.cmp4896:                                      ; preds = %do.body1662.preheader
  %un.tmp4897 = icmp eq i32 %xtraiter4879, 1
  br i1 %un.tmp4897, label %do.body1662.unr4888, label %unr.cmp

unr.cmp:                                          ; preds = %unr.cmp4896
  %un.tmp = icmp eq i32 %xtraiter4879, 2
  br i1 %un.tmp, label %do.body1662.unr4883, label %do.body1662.unr

do.body1662.unr:                                  ; preds = %unr.cmp
  %incdec.ptr1663.unr = getelementptr inbounds i8* %resume.val4255, i64 1
  %211 = load i8* %resume.val4255, align 1, !tbaa !5
  %incdec.ptr1664.unr = getelementptr inbounds i8* %resume.val, i64 1
  store i8 %211, i8* %resume.val, align 1, !tbaa !5
  %dec1666.unr = add i32 %resume.val4253, -1
  %tobool1667.unr = icmp eq i32 %dec1666.unr, 0
  br label %do.body1662.unr4883

do.body1662.unr4883:                              ; preds = %do.body1662.unr, %unr.cmp
  %put.1.unr = phi i8* [ %incdec.ptr1664.unr, %do.body1662.unr ], [ %resume.val, %unr.cmp ]
  %copy.10.unr = phi i32 [ %dec1666.unr, %do.body1662.unr ], [ %resume.val4253, %unr.cmp ]
  %from.2.unr = phi i8* [ %incdec.ptr1663.unr, %do.body1662.unr ], [ %resume.val4255, %unr.cmp ]
  %incdec.ptr1663.unr4884 = getelementptr inbounds i8* %from.2.unr, i64 1
  %212 = load i8* %from.2.unr, align 1, !tbaa !5
  %incdec.ptr1664.unr4885 = getelementptr inbounds i8* %put.1.unr, i64 1
  store i8 %212, i8* %put.1.unr, align 1, !tbaa !5
  %dec1666.unr4886 = add i32 %copy.10.unr, -1
  %tobool1667.unr4887 = icmp eq i32 %dec1666.unr4886, 0
  br label %do.body1662.unr4888

do.body1662.unr4888:                              ; preds = %do.body1662.unr4883, %unr.cmp4896
  %put.1.unr4889 = phi i8* [ %incdec.ptr1664.unr4885, %do.body1662.unr4883 ], [ %resume.val, %unr.cmp4896 ]
  %copy.10.unr4890 = phi i32 [ %dec1666.unr4886, %do.body1662.unr4883 ], [ %resume.val4253, %unr.cmp4896 ]
  %from.2.unr4891 = phi i8* [ %incdec.ptr1663.unr4884, %do.body1662.unr4883 ], [ %resume.val4255, %unr.cmp4896 ]
  %incdec.ptr1663.unr4892 = getelementptr inbounds i8* %from.2.unr4891, i64 1
  %213 = load i8* %from.2.unr4891, align 1, !tbaa !5
  %incdec.ptr1664.unr4893 = getelementptr inbounds i8* %put.1.unr4889, i64 1
  store i8 %213, i8* %put.1.unr4889, align 1, !tbaa !5
  %dec1666.unr4894 = add i32 %copy.10.unr4890, -1
  %tobool1667.unr4895 = icmp eq i32 %dec1666.unr4894, 0
  br label %do.body1662.preheader.split

do.body1662.preheader.split:                      ; preds = %do.body1662.unr4888, %do.body1662.preheader
  %put.1.unr4898 = phi i8* [ %resume.val, %do.body1662.preheader ], [ %incdec.ptr1664.unr4893, %do.body1662.unr4888 ]
  %copy.10.unr4899 = phi i32 [ %resume.val4253, %do.body1662.preheader ], [ %dec1666.unr4894, %do.body1662.unr4888 ]
  %from.2.unr4900 = phi i8* [ %resume.val4255, %do.body1662.preheader ], [ %incdec.ptr1663.unr4892, %do.body1662.unr4888 ]
  %214 = icmp ult i32 %resume.val4253, 4
  br i1 %214, label %do.end1668.loopexit, label %do.body1662.preheader.split.split

do.body1662.preheader.split.split:                ; preds = %do.body1662.preheader.split
  br label %do.body1662

do.body1662:                                      ; preds = %do.body1662, %do.body1662.preheader.split.split
  %put.1 = phi i8* [ %put.1.unr4898, %do.body1662.preheader.split.split ], [ %incdec.ptr1664.3, %do.body1662 ]
  %copy.10 = phi i32 [ %copy.10.unr4899, %do.body1662.preheader.split.split ], [ %dec1666.3, %do.body1662 ]
  %from.2 = phi i8* [ %from.2.unr4900, %do.body1662.preheader.split.split ], [ %incdec.ptr1663.3, %do.body1662 ]
  %incdec.ptr1663 = getelementptr inbounds i8* %from.2, i64 1
  %215 = load i8* %from.2, align 1, !tbaa !5
  %incdec.ptr1664 = getelementptr inbounds i8* %put.1, i64 1
  store i8 %215, i8* %put.1, align 1, !tbaa !5
  %dec1666 = add i32 %copy.10, -1
  %incdec.ptr1663.1 = getelementptr inbounds i8* %incdec.ptr1663, i64 1
  %216 = load i8* %incdec.ptr1663, align 1, !tbaa !5
  %incdec.ptr1664.1 = getelementptr inbounds i8* %incdec.ptr1664, i64 1
  store i8 %216, i8* %incdec.ptr1664, align 1, !tbaa !5
  %dec1666.1 = add i32 %dec1666, -1
  %incdec.ptr1663.2 = getelementptr inbounds i8* %incdec.ptr1663.1, i64 1
  %217 = load i8* %incdec.ptr1663.1, align 1, !tbaa !5
  %incdec.ptr1664.2 = getelementptr inbounds i8* %incdec.ptr1664.1, i64 1
  store i8 %217, i8* %incdec.ptr1664.1, align 1, !tbaa !5
  %dec1666.2 = add i32 %dec1666.1, -1
  %incdec.ptr1663.3 = getelementptr inbounds i8* %incdec.ptr1663.2, i64 1
  %218 = load i8* %incdec.ptr1663.2, align 1, !tbaa !5
  %incdec.ptr1664.3 = getelementptr inbounds i8* %incdec.ptr1664.2, i64 1
  store i8 %218, i8* %incdec.ptr1664.2, align 1, !tbaa !5
  %dec1666.3 = add i32 %dec1666.2, -1
  %tobool1667.3 = icmp eq i32 %dec1666.3, 0
  br i1 %tobool1667.3, label %do.end1668.loopexit.unr-lcssa, label %do.body1662, !llvm.loop !161

do.end1668.loopexit.unr-lcssa:                    ; preds = %do.body1662
  br label %do.end1668.loopexit

do.end1668.loopexit:                              ; preds = %do.end1668.loopexit.unr-lcssa, %do.body1662.preheader.split
  br label %do.end1668

do.end1668:                                       ; preds = %do.end1668.loopexit, %middle.block
  %sub1659 = sub i32 %left.0, %left.0.copy.8
  %scevgep.sum = add nuw nsw i64 %167, 1
  %scevgep3858 = getelementptr i8* %put.0, i64 %scevgep.sum
  %219 = load i32* %length, align 4, !tbaa !149
  %cmp1670 = icmp eq i32 %219, 0
  br i1 %cmp1670, label %if.then1672, label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.then1799, %if.then1757, %if.end1679, %if.then1672, %do.end1668, %if.then1623, %if.then1549, %if.then1379, %if.then1371, %if.then1364, %if.then1242, %do.body1221, %if.then1203, %if.then1186, %if.then1167, %while.end1156, %if.then1140, %if.then1020, %if.then912, %if.then839, %if.end783, %if.end773, %if.then741, %do.body701, %do.body641, %if.end566, %if.then548, %if.then136, %if.then129, %if.end93, %if.then89, %if.then72, %if.then65, %if.then36, %if.then20
  %next.0.be = phi i8* [ %next.54.lcssa, %if.then1799 ], [ %next.51.lcssa, %if.then1757 ], [ %next.0, %if.end1679 ], [ %next.50, %if.then1623 ], [ %next.50, %if.then1672 ], [ %next.50, %do.end1668 ], [ %next.46, %if.then1549 ], [ %126, %if.then1242 ], [ %126, %do.body1221 ], [ %next.40, %if.then1364 ], [ %next.40, %if.then1371 ], [ %next.40, %if.then1379 ], [ %next.29.be.lcssa, %while.end1156 ], [ %next.29.lcssa3920, %if.then1167 ], [ %next.29.lcssa3920, %if.then1186 ], [ %next.29.lcssa3920, %if.then1203 ], [ %next.27.lcssa, %if.then912 ], [ %next.26.lcssa, %if.then839 ], [ %add.ptr777, %if.end773 ], [ %next.25, %if.end783 ], [ %next.23.lcssa, %if.then741 ], [ %next.21, %do.body641 ], [ %next.22.lcssa, %do.body701 ], [ %next.16.lcssa, %if.then548 ], [ %next.17, %if.end566 ], [ %next.2.lcssa, %if.then129 ], [ %next.2.lcssa, %if.then136 ], [ %next.0, %if.then20 ], [ %next.1.lcssa, %if.then36 ], [ %next.1.lcssa, %if.then65 ], [ %next.1.lcssa, %if.then72 ], [ %next.1.lcssa, %if.end93 ], [ %next.1.lcssa, %if.then89 ], [ %next.34.lcssa, %if.then1140 ], [ %next.31.lcssa.lcssa, %if.then1020 ]
  %put.0.be = phi i8* [ %put.0, %if.then1799 ], [ %put.0, %if.then1757 ], [ %incdec.ptr1682, %if.end1679 ], [ %put.0, %if.then1623 ], [ %scevgep3858, %if.then1672 ], [ %scevgep3858, %do.end1668 ], [ %put.0, %if.then1549 ], [ %124, %if.then1242 ], [ %124, %do.body1221 ], [ %put.0, %if.then1364 ], [ %put.0, %if.then1371 ], [ %put.0, %if.then1379 ], [ %put.0, %while.end1156 ], [ %put.0, %if.then1167 ], [ %put.0, %if.then1186 ], [ %put.0, %if.then1203 ], [ %put.0, %if.then912 ], [ %put.0, %if.then839 ], [ %add.ptr780, %if.end773 ], [ %put.0, %if.end783 ], [ %put.0, %if.then741 ], [ %put.0, %do.body641 ], [ %put.0, %do.body701 ], [ %put.0, %if.then548 ], [ %put.0, %if.end566 ], [ %put.0, %if.then129 ], [ %put.0, %if.then136 ], [ %put.0, %if.then20 ], [ %put.0, %if.then36 ], [ %put.0, %if.then65 ], [ %put.0, %if.then72 ], [ %put.0, %if.end93 ], [ %put.0, %if.then89 ], [ %put.0, %if.then1140 ], [ %put.0, %if.then1020 ]
  %have.0.be = phi i32 [ %have.54.lcssa, %if.then1799 ], [ %have.51.lcssa, %if.then1757 ], [ %have.0, %if.end1679 ], [ %have.50, %if.then1623 ], [ %have.50, %if.then1672 ], [ %have.50, %do.end1668 ], [ %have.46, %if.then1549 ], [ %127, %if.then1242 ], [ %127, %do.body1221 ], [ %have.40, %if.then1364 ], [ %have.40, %if.then1371 ], [ %have.40, %if.then1379 ], [ %have.29.be.lcssa, %while.end1156 ], [ %have.29.lcssa3919, %if.then1167 ], [ %have.29.lcssa3919, %if.then1186 ], [ %have.29.lcssa3919, %if.then1203 ], [ %have.27.lcssa, %if.then912 ], [ %have.26.lcssa, %if.then839 ], [ %sub775, %if.end773 ], [ %have.25, %if.end783 ], [ %have.23.lcssa, %if.then741 ], [ %have.21, %do.body641 ], [ %have.22.lcssa, %do.body701 ], [ %have.16.lcssa, %if.then548 ], [ %have.17, %if.end566 ], [ %have.2.lcssa, %if.then129 ], [ %have.2.lcssa, %if.then136 ], [ %have.0, %if.then20 ], [ %have.1.lcssa, %if.then36 ], [ %have.1.lcssa, %if.then65 ], [ %have.1.lcssa, %if.then72 ], [ %have.1.lcssa, %if.end93 ], [ %have.1.lcssa, %if.then89 ], [ %have.34.lcssa, %if.then1140 ], [ %have.31.lcssa.lcssa, %if.then1020 ]
  %left.0.be = phi i32 [ %left.0, %if.then1799 ], [ %left.0, %if.then1757 ], [ %dec1683, %if.end1679 ], [ %left.0, %if.then1623 ], [ %sub1659, %if.then1672 ], [ %sub1659, %do.end1668 ], [ %left.0, %if.then1549 ], [ %125, %if.then1242 ], [ %125, %do.body1221 ], [ %left.0, %if.then1364 ], [ %left.0, %if.then1371 ], [ %left.0, %if.then1379 ], [ %left.0, %while.end1156 ], [ %left.0, %if.then1167 ], [ %left.0, %if.then1186 ], [ %left.0, %if.then1203 ], [ %left.0, %if.then912 ], [ %left.0, %if.then839 ], [ %sub778, %if.end773 ], [ %left.0, %if.end783 ], [ %left.0, %if.then741 ], [ %left.0, %do.body641 ], [ %left.0, %do.body701 ], [ %left.0, %if.then548 ], [ %left.0, %if.end566 ], [ %left.0, %if.then129 ], [ %left.0, %if.then136 ], [ %left.0, %if.then20 ], [ %left.0, %if.then36 ], [ %left.0, %if.then65 ], [ %left.0, %if.then72 ], [ %left.0, %if.end93 ], [ %left.0, %if.then89 ], [ %left.0, %if.then1140 ], [ %left.0, %if.then1020 ]
  %hold.0.be = phi i64 [ %hold.50.lcssa, %if.then1799 ], [ %hold.47.lcssa, %if.then1757 ], [ %hold.0, %if.end1679 ], [ %hold.46, %if.then1623 ], [ %hold.46, %if.then1672 ], [ %hold.46, %do.end1668 ], [ %shr1535, %if.then1549 ], [ %128, %if.then1242 ], [ %128, %do.body1221 ], [ %shr1347, %if.then1364 ], [ %shr1347, %if.then1371 ], [ %shr1347, %if.then1379 ], [ %hold.25.be.lcssa, %while.end1156 ], [ %hold.25.lcssa3918, %if.then1167 ], [ %hold.25.lcssa3918, %if.then1186 ], [ %hold.25.lcssa3918, %if.then1203 ], [ %hold.23.lcssa, %if.then912 ], [ %shr828, %if.then839 ], [ %hold.21, %if.end773 ], [ %hold.21, %if.end783 ], [ %hold.19.lcssa, %if.then741 ], [ %shr644, %do.body641 ], [ %shr702, %do.body701 ], [ %hold.12.lcssa, %if.then548 ], [ %hold.13, %if.end566 ], [ %hold.2.lcssa, %if.then129 ], [ %hold.2.lcssa, %if.then136 ], [ %hold.0, %if.then20 ], [ 0, %if.then36 ], [ %hold.1.lcssa, %if.then65 ], [ %hold.1.lcssa, %if.then72 ], [ 0, %if.end93 ], [ %shr77, %if.then89 ], [ %hold.30.lcssa, %if.then1140 ], [ %shr1011.lcssa, %if.then1020 ]
  %bits.0.be = phi i32 [ %bits.50.lcssa, %if.then1799 ], [ %bits.47.lcssa, %if.then1757 ], [ %bits.0, %if.end1679 ], [ %bits.46, %if.then1623 ], [ %bits.46, %if.then1672 ], [ %bits.46, %do.end1668 ], [ %sub1538, %if.then1549 ], [ %129, %if.then1242 ], [ %129, %do.body1221 ], [ %sub1350, %if.then1364 ], [ %sub1350, %if.then1371 ], [ %sub1350, %if.then1379 ], [ %bits.25.be.lcssa, %while.end1156 ], [ %bits.25.lcssa3917, %if.then1167 ], [ %bits.25.lcssa3917, %if.then1186 ], [ %bits.25.lcssa3917, %if.then1203 ], [ %bits.23.lcssa, %if.then912 ], [ %sub829, %if.then839 ], [ %bits.21, %if.end773 ], [ %bits.21, %if.end783 ], [ %bits.19.lcssa, %if.then741 ], [ %sub646, %do.body641 ], [ %sub703, %do.body701 ], [ %bits.12.lcssa, %if.then548 ], [ %bits.13, %if.end566 ], [ %bits.2.lcssa, %if.then129 ], [ %bits.2.lcssa, %if.then136 ], [ %bits.0, %if.then20 ], [ 0, %if.then36 ], [ %bits.1.lcssa, %if.then65 ], [ %bits.1.lcssa, %if.then72 ], [ 0, %if.end93 ], [ %sub, %if.then89 ], [ %bits.30.lcssa, %if.then1140 ], [ %sub1014.lcssa, %if.then1020 ]
  %out.0.be = phi i32 [ %out.2, %if.then1799 ], [ %left.0, %if.then1757 ], [ %out.0, %if.end1679 ], [ %out.0, %if.then1623 ], [ %out.0, %if.then1672 ], [ %out.0, %do.end1668 ], [ %out.0, %if.then1549 ], [ %out.0, %if.then1242 ], [ %out.0, %do.body1221 ], [ %out.0, %if.then1364 ], [ %out.0, %if.then1371 ], [ %out.0, %if.then1379 ], [ %out.0, %while.end1156 ], [ %out.0, %if.then1167 ], [ %out.0, %if.then1186 ], [ %out.0, %if.then1203 ], [ %out.0, %if.then912 ], [ %out.0, %if.then839 ], [ %out.0, %if.end773 ], [ %out.0, %if.end783 ], [ %out.0, %if.then741 ], [ %out.0, %do.body641 ], [ %out.0, %do.body701 ], [ %out.0, %if.then548 ], [ %out.0, %if.end566 ], [ %out.0, %if.then129 ], [ %out.0, %if.then136 ], [ %out.0, %if.then20 ], [ %out.0, %if.then36 ], [ %out.0, %if.then65 ], [ %out.0, %if.then72 ], [ %out.0, %if.end93 ], [ %out.0, %if.then89 ], [ %out.0, %if.then1140 ], [ %out.0, %if.then1020 ]
  %ret.0.be = phi i32 [ %ret.0, %if.then1799 ], [ %ret.0, %if.then1757 ], [ %ret.0, %if.end1679 ], [ %ret.7, %if.then1623 ], [ %ret.7, %if.then1672 ], [ %ret.7, %do.end1668 ], [ %ret.5.ph, %if.then1549 ], [ %ret.3, %if.then1242 ], [ %ret.3, %do.body1221 ], [ %ret.3, %if.then1364 ], [ %ret.3, %if.then1371 ], [ %ret.3, %if.then1379 ], [ %ret.1.ph, %while.end1156 ], [ %ret.1.ph, %if.then1167 ], [ %call1184, %if.then1186 ], [ %call1201, %if.then1203 ], [ %call910, %if.then912 ], [ %ret.0, %if.then839 ], [ %ret.0, %if.end773 ], [ %ret.0, %if.end783 ], [ %ret.0, %if.then741 ], [ %ret.0, %do.body641 ], [ %ret.0, %do.body701 ], [ %ret.0, %if.then548 ], [ %ret.0, %if.end566 ], [ %ret.0, %if.then129 ], [ %ret.0, %if.then136 ], [ %ret.0, %if.then20 ], [ %ret.0, %if.then36 ], [ %ret.0, %if.then65 ], [ %ret.0, %if.then72 ], [ %ret.0, %if.end93 ], [ %ret.0, %if.then89 ], [ %ret.1.ph, %if.then1140 ], [ %ret.1.ph, %if.then1020 ]
  %.pre = load i32* %mode, align 4, !tbaa !126
  br label %for.cond

if.then1672:                                      ; preds = %do.end1668
  store i32 20, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

sw.bb1675:                                        ; preds = %for.cond
  %cmp1676 = icmp eq i32 %left.0, 0
  br i1 %cmp1676, label %do.body1813.loopexit4553, label %if.end1679

if.end1679:                                       ; preds = %sw.bb1675
  %220 = load i32* %length, align 4, !tbaa !149
  %conv1681 = trunc i32 %220 to i8
  %incdec.ptr1682 = getelementptr inbounds i8* %put.0, i64 1
  store i8 %conv1681, i8* %put.0, align 1, !tbaa !5
  %dec1683 = add i32 %left.0, -1
  store i32 20, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

sw.bb1685:                                        ; preds = %for.cond
  %221 = load i32* %wrap, align 4, !tbaa !125
  %tobool1687 = icmp eq i32 %221, 0
  br i1 %tobool1687, label %if.end1764, label %while.cond1690.preheader

while.cond1690.preheader:                         ; preds = %sw.bb1685
  %cmp16913199 = icmp ult i32 %bits.0, 32
  br i1 %cmp16913199, label %do.body1694.lr.ph, label %do.end1710

do.body1694.lr.ph:                                ; preds = %while.cond1690.preheader
  %222 = zext i32 %bits.0 to i64
  br label %do.body1694

do.body1694:                                      ; preds = %if.end1698, %do.body1694.lr.ph
  %indvars.iv = phi i64 [ %222, %do.body1694.lr.ph ], [ %indvars.iv.next, %if.end1698 ]
  %bits.473203 = phi i32 [ %bits.0, %do.body1694.lr.ph ], [ %add1705, %if.end1698 ]
  %hold.473202 = phi i64 [ %hold.0, %do.body1694.lr.ph ], [ %add1704, %if.end1698 ]
  %have.513201 = phi i32 [ %have.0, %do.body1694.lr.ph ], [ %dec1699, %if.end1698 ]
  %next.513200 = phi i8* [ %next.0, %do.body1694.lr.ph ], [ %incdec.ptr1700, %if.end1698 ]
  %cmp1695 = icmp eq i32 %have.513201, 0
  br i1 %cmp1695, label %do.body1813.loopexit2797, label %if.end1698

if.end1698:                                       ; preds = %do.body1694
  %dec1699 = add i32 %have.513201, -1
  %incdec.ptr1700 = getelementptr inbounds i8* %next.513200, i64 1
  %223 = load i8* %next.513200, align 1, !tbaa !5
  %conv1701 = zext i8 %223 to i64
  %shl1703 = shl i64 %conv1701, %indvars.iv
  %add1704 = add i64 %shl1703, %hold.473202
  %add1705 = add i32 %bits.473203, 8
  %cmp1691 = icmp ult i32 %add1705, 32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 8
  br i1 %cmp1691, label %do.body1694, label %do.end1710.loopexit

do.end1710.loopexit:                              ; preds = %if.end1698
  %add1705.lcssa = phi i32 [ %add1705, %if.end1698 ]
  %add1704.lcssa = phi i64 [ %add1704, %if.end1698 ]
  %incdec.ptr1700.lcssa = phi i8* [ %incdec.ptr1700, %if.end1698 ]
  %dec1699.lcssa = phi i32 [ %dec1699, %if.end1698 ]
  br label %do.end1710

do.end1710:                                       ; preds = %do.end1710.loopexit, %while.cond1690.preheader
  %bits.47.lcssa = phi i32 [ %bits.0, %while.cond1690.preheader ], [ %add1705.lcssa, %do.end1710.loopexit ]
  %hold.47.lcssa = phi i64 [ %hold.0, %while.cond1690.preheader ], [ %add1704.lcssa, %do.end1710.loopexit ]
  %have.51.lcssa = phi i32 [ %have.0, %while.cond1690.preheader ], [ %dec1699.lcssa, %do.end1710.loopexit ]
  %next.51.lcssa = phi i8* [ %next.0, %while.cond1690.preheader ], [ %incdec.ptr1700.lcssa, %do.end1710.loopexit ]
  %sub1711 = sub i32 %out.0, %left.0
  %conv1712 = zext i32 %sub1711 to i64
  %224 = load i64* %total_out, align 8, !tbaa !112
  %add1713 = add i64 %224, %conv1712
  store i64 %add1713, i64* %total_out, align 8, !tbaa !112
  %225 = load i64* %total, align 8, !tbaa !123
  %add1715 = add i64 %225, %conv1712
  store i64 %add1715, i64* %total, align 8, !tbaa !123
  %tobool1716 = icmp eq i32 %out.0, %left.0
  br i1 %tobool1716, label %if.end1736, label %if.then1717

if.then1717:                                      ; preds = %do.end1710
  %226 = load i32* %flags, align 4, !tbaa !146
  %tobool1719 = icmp eq i32 %226, 0
  %227 = load i64* %check, align 8, !tbaa !145
  %idx.neg1723 = sub i64 0, %conv1712
  %add.ptr1724 = getelementptr inbounds i8* %put.0, i64 %idx.neg1723
  br i1 %tobool1719, label %cond.false1726, label %cond.true1720

cond.true1720:                                    ; preds = %if.then1717
  %call1725 = call i64 @crc32(i64 %227, i8* %add.ptr1724, i32 %sub1711) #4
  br label %cond.end1732

cond.false1726:                                   ; preds = %if.then1717
  %call1731 = call i64 @adler32(i64 %227, i8* %add.ptr1724, i32 %sub1711) #4
  br label %cond.end1732

cond.end1732:                                     ; preds = %cond.false1726, %cond.true1720
  %cond1733 = phi i64 [ %call1725, %cond.true1720 ], [ %call1731, %cond.false1726 ]
  store i64 %cond1733, i64* %check, align 8, !tbaa !145
  store i64 %cond1733, i64* %adler, align 8, !tbaa !78
  br label %if.end1736

if.end1736:                                       ; preds = %cond.end1732, %do.end1710
  %228 = load i32* %flags, align 4, !tbaa !146
  %tobool1738 = icmp eq i32 %228, 0
  br i1 %tobool1738, label %cond.false1740, label %cond.end1752

cond.false1740:                                   ; preds = %if.end1736
  %shr1741 = lshr i64 %hold.47.lcssa, 24
  %and1742 = and i64 %shr1741, 255
  %shr1743 = lshr i64 %hold.47.lcssa, 8
  %and1744 = and i64 %shr1743, 65280
  %add1745 = or i64 %and1742, %and1744
  %and1746 = shl i64 %hold.47.lcssa, 8
  %shl1747 = and i64 %and1746, 16711680
  %add1748 = or i64 %add1745, %shl1747
  %and1749 = shl i64 %hold.47.lcssa, 24
  %shl1750 = and i64 %and1749, 4278190080
  %add1751 = or i64 %add1748, %shl1750
  br label %cond.end1752

cond.end1752:                                     ; preds = %cond.false1740, %if.end1736
  %cond1753 = phi i64 [ %add1751, %cond.false1740 ], [ %hold.47.lcssa, %if.end1736 ]
  %229 = load i64* %check, align 8, !tbaa !145
  %cmp1755 = icmp eq i64 %cond1753, %229
  br i1 %cmp1755, label %if.end1764, label %if.then1757

if.then1757:                                      ; preds = %cond.end1752
  store i8* getelementptr inbounds ([21 x i8]* @.str17, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1764:                                       ; preds = %cond.end1752, %sw.bb1685
  %next.52 = phi i8* [ %next.0, %sw.bb1685 ], [ %next.51.lcssa, %cond.end1752 ]
  %have.52 = phi i32 [ %have.0, %sw.bb1685 ], [ %have.51.lcssa, %cond.end1752 ]
  %hold.48 = phi i64 [ %hold.0, %sw.bb1685 ], [ 0, %cond.end1752 ]
  %bits.48 = phi i32 [ %bits.0, %sw.bb1685 ], [ 0, %cond.end1752 ]
  %out.1 = phi i32 [ %out.0, %sw.bb1685 ], [ %left.0, %cond.end1752 ]
  store i32 27, i32* %mode, align 4, !tbaa !126
  br label %sw.bb1766

sw.bb1766:                                        ; preds = %if.end1764, %for.cond
  %next.53 = phi i8* [ %next.0, %for.cond ], [ %next.52, %if.end1764 ]
  %have.53 = phi i32 [ %have.0, %for.cond ], [ %have.52, %if.end1764 ]
  %hold.49 = phi i64 [ %hold.0, %for.cond ], [ %hold.48, %if.end1764 ]
  %bits.49 = phi i32 [ %bits.0, %for.cond ], [ %bits.48, %if.end1764 ]
  %out.2 = phi i32 [ %out.0, %for.cond ], [ %out.1, %if.end1764 ]
  %230 = load i32* %wrap, align 4, !tbaa !125
  %tobool1768 = icmp eq i32 %230, 0
  br i1 %tobool1768, label %if.end1806, label %land.lhs.true1769

land.lhs.true1769:                                ; preds = %sw.bb1766
  %231 = load i32* %flags, align 4, !tbaa !146
  %tobool1771 = icmp eq i32 %231, 0
  br i1 %tobool1771, label %if.end1806, label %while.cond1774.preheader

while.cond1774.preheader:                         ; preds = %land.lhs.true1769
  %cmp17753207 = icmp ult i32 %bits.49, 32
  br i1 %cmp17753207, label %do.body1778.lr.ph, label %do.end1794

do.body1778.lr.ph:                                ; preds = %while.cond1774.preheader
  %232 = zext i32 %bits.49 to i64
  br label %do.body1778

do.body1778:                                      ; preds = %if.end1782, %do.body1778.lr.ph
  %indvars.iv3837 = phi i64 [ %232, %do.body1778.lr.ph ], [ %indvars.iv.next3838, %if.end1782 ]
  %bits.503211 = phi i32 [ %bits.49, %do.body1778.lr.ph ], [ %add1789, %if.end1782 ]
  %hold.503210 = phi i64 [ %hold.49, %do.body1778.lr.ph ], [ %add1788, %if.end1782 ]
  %have.543209 = phi i32 [ %have.53, %do.body1778.lr.ph ], [ %dec1783, %if.end1782 ]
  %next.543208 = phi i8* [ %next.53, %do.body1778.lr.ph ], [ %incdec.ptr1784, %if.end1782 ]
  %cmp1779 = icmp eq i32 %have.543209, 0
  br i1 %cmp1779, label %do.body1813.loopexit2796, label %if.end1782

if.end1782:                                       ; preds = %do.body1778
  %dec1783 = add i32 %have.543209, -1
  %incdec.ptr1784 = getelementptr inbounds i8* %next.543208, i64 1
  %233 = load i8* %next.543208, align 1, !tbaa !5
  %conv1785 = zext i8 %233 to i64
  %shl1787 = shl i64 %conv1785, %indvars.iv3837
  %add1788 = add i64 %shl1787, %hold.503210
  %add1789 = add i32 %bits.503211, 8
  %cmp1775 = icmp ult i32 %add1789, 32
  %indvars.iv.next3838 = add nuw nsw i64 %indvars.iv3837, 8
  br i1 %cmp1775, label %do.body1778, label %do.end1794.loopexit

do.end1794.loopexit:                              ; preds = %if.end1782
  %add1789.lcssa = phi i32 [ %add1789, %if.end1782 ]
  %add1788.lcssa = phi i64 [ %add1788, %if.end1782 ]
  %incdec.ptr1784.lcssa = phi i8* [ %incdec.ptr1784, %if.end1782 ]
  %dec1783.lcssa = phi i32 [ %dec1783, %if.end1782 ]
  br label %do.end1794

do.end1794:                                       ; preds = %do.end1794.loopexit, %while.cond1774.preheader
  %bits.50.lcssa = phi i32 [ %bits.49, %while.cond1774.preheader ], [ %add1789.lcssa, %do.end1794.loopexit ]
  %hold.50.lcssa = phi i64 [ %hold.49, %while.cond1774.preheader ], [ %add1788.lcssa, %do.end1794.loopexit ]
  %have.54.lcssa = phi i32 [ %have.53, %while.cond1774.preheader ], [ %dec1783.lcssa, %do.end1794.loopexit ]
  %next.54.lcssa = phi i8* [ %next.53, %while.cond1774.preheader ], [ %incdec.ptr1784.lcssa, %do.end1794.loopexit ]
  %234 = load i64* %total, align 8, !tbaa !123
  %and1796 = and i64 %234, 4294967295
  %cmp1797 = icmp eq i64 %hold.50.lcssa, %and1796
  br i1 %cmp1797, label %if.end1806, label %if.then1799

if.then1799:                                      ; preds = %do.end1794
  store i8* getelementptr inbounds ([23 x i8]* @.str18, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %for.cond.backedge

if.end1806:                                       ; preds = %do.end1794, %land.lhs.true1769, %sw.bb1766
  %out.2.lcssa = phi i32 [ %out.2, %do.end1794 ], [ %out.2, %land.lhs.true1769 ], [ %out.2, %sw.bb1766 ]
  %left.0.lcssa4726 = phi i32 [ %left.0, %do.end1794 ], [ %left.0, %land.lhs.true1769 ], [ %left.0, %sw.bb1766 ]
  %put.0.lcssa4667 = phi i8* [ %put.0, %do.end1794 ], [ %put.0, %land.lhs.true1769 ], [ %put.0, %sw.bb1766 ]
  %next.55 = phi i8* [ %next.53, %land.lhs.true1769 ], [ %next.53, %sw.bb1766 ], [ %next.54.lcssa, %do.end1794 ]
  %have.55 = phi i32 [ %have.53, %land.lhs.true1769 ], [ %have.53, %sw.bb1766 ], [ %have.54.lcssa, %do.end1794 ]
  %hold.51 = phi i64 [ %hold.49, %land.lhs.true1769 ], [ %hold.49, %sw.bb1766 ], [ 0, %do.end1794 ]
  %bits.51 = phi i32 [ %bits.49, %land.lhs.true1769 ], [ %bits.49, %sw.bb1766 ], [ 0, %do.end1794 ]
  store i32 28, i32* %mode, align 4, !tbaa !126
  br label %do.body1813

do.body1813.loopexit2778:                         ; preds = %do.body942
  %ret.1.ph.lcssa = phi i32 [ %ret.1.ph, %do.body942 ]
  %out.0.lcssa4818 = phi i32 [ %out.0, %do.body942 ]
  %left.0.lcssa4730 = phi i32 [ %left.0, %do.body942 ]
  %put.0.lcssa4671 = phi i8* [ %put.0, %do.body942 ]
  %next.303258.lcssa = phi i8* [ %next.303258, %do.body942 ]
  %hold.263260.lcssa = phi i64 [ %hold.263260, %do.body942 ]
  %indvars.iv3849.lcssa = phi i64 [ %indvars.iv3849, %do.body942 ]
  %235 = trunc i64 %indvars.iv3849.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2779:                         ; preds = %do.body857
  %ret.0.lcssa4846 = phi i32 [ %ret.0, %do.body857 ]
  %out.0.lcssa4817 = phi i32 [ %out.0, %do.body857 ]
  %left.0.lcssa4729 = phi i32 [ %left.0, %do.body857 ]
  %put.0.lcssa4670 = phi i8* [ %put.0, %do.body857 ]
  %next.283226.lcssa = phi i8* [ %next.283226, %do.body857 ]
  %hold.243228.lcssa = phi i64 [ %hold.243228, %do.body857 ]
  %indvars.iv3843.lcssa = phi i64 [ %indvars.iv3843, %do.body857 ]
  %236 = trunc i64 %indvars.iv3843.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2780:                         ; preds = %do.body25
  %ret.0.lcssa4867 = phi i32 [ %ret.0, %do.body25 ]
  %out.0.lcssa4838 = phi i32 [ %out.0, %do.body25 ]
  %left.0.lcssa4750 = phi i32 [ %left.0, %do.body25 ]
  %put.0.lcssa4691 = phi i8* [ %put.0, %do.body25 ]
  %next.13501.lcssa = phi i8* [ %next.13501, %do.body25 ]
  %hold.13503.lcssa = phi i64 [ %hold.13503, %do.body25 ]
  %indvars.iv3883.lcssa = phi i64 [ %indvars.iv3883, %do.body25 ]
  %237 = trunc i64 %indvars.iv3883.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2781:                         ; preds = %do.body527
  %ret.0.lcssa4866 = phi i32 [ %ret.0, %do.body527 ]
  %out.0.lcssa4837 = phi i32 [ %out.0, %do.body527 ]
  %left.0.lcssa4749 = phi i32 [ %left.0, %do.body527 ]
  %put.0.lcssa4690 = phi i8* [ %put.0, %do.body527 ]
  %next.163492.lcssa = phi i8* [ %next.163492, %do.body527 ]
  %hold.123494.lcssa = phi i64 [ %hold.123494, %do.body527 ]
  %indvars.iv3880.lcssa = phi i64 [ %indvars.iv3880, %do.body527 ]
  %238 = trunc i64 %indvars.iv3880.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2782:                         ; preds = %do.body281
  %ret.0.lcssa4865 = phi i32 [ %ret.0, %do.body281 ]
  %out.0.lcssa4836 = phi i32 [ %out.0, %do.body281 ]
  %left.0.lcssa4748 = phi i32 [ %left.0, %do.body281 ]
  %put.0.lcssa4689 = phi i8* [ %put.0, %do.body281 ]
  %next.63484.lcssa = phi i8* [ %next.63484, %do.body281 ]
  %hold.63486.lcssa = phi i64 [ %hold.63486, %do.body281 ]
  %indvars.iv3877.lcssa = phi i64 [ %indvars.iv3877, %do.body281 ]
  %239 = trunc i64 %indvars.iv3877.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2783:                         ; preds = %do.body226
  %ret.0.lcssa4864 = phi i32 [ %ret.0, %do.body226 ]
  %out.0.lcssa4835 = phi i32 [ %out.0, %do.body226 ]
  %left.0.lcssa4747 = phi i32 [ %left.0, %do.body226 ]
  %put.0.lcssa4688 = phi i8* [ %put.0, %do.body226 ]
  %next.43476.lcssa = phi i8* [ %next.43476, %do.body226 ]
  %hold.43478.lcssa = phi i64 [ %hold.43478, %do.body226 ]
  %indvars.iv3874.lcssa = phi i64 [ %indvars.iv3874, %do.body226 ]
  %240 = trunc i64 %indvars.iv3874.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2784:                         ; preds = %do.body174
  %ret.0.lcssa4863 = phi i32 [ %ret.0, %do.body174 ]
  %out.0.lcssa4834 = phi i32 [ %out.0, %do.body174 ]
  %left.0.lcssa4746 = phi i32 [ %left.0, %do.body174 ]
  %put.0.lcssa4687 = phi i8* [ %put.0, %do.body174 ]
  %next.33468.lcssa = phi i8* [ %next.33468, %do.body174 ]
  %hold.33470.lcssa = phi i64 [ %hold.33470, %do.body174 ]
  %indvars.iv3871.lcssa = phi i64 [ %indvars.iv3871, %do.body174 ]
  %241 = trunc i64 %indvars.iv3871.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2785:                         ; preds = %do.body108
  %ret.0.lcssa4862 = phi i32 [ %ret.0, %do.body108 ]
  %out.0.lcssa4833 = phi i32 [ %out.0, %do.body108 ]
  %left.0.lcssa4745 = phi i32 [ %left.0, %do.body108 ]
  %put.0.lcssa4686 = phi i8* [ %put.0, %do.body108 ]
  %next.23459.lcssa = phi i8* [ %next.23459, %do.body108 ]
  %hold.23461.lcssa = phi i64 [ %hold.23461, %do.body108 ]
  %indvars.iv3868.lcssa = phi i64 [ %indvars.iv3868, %do.body108 ]
  %242 = trunc i64 %indvars.iv3868.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2786:                         ; preds = %do.body656
  %ret.0.lcssa4860 = phi i32 [ %ret.0, %do.body656 ]
  %out.0.lcssa4831 = phi i32 [ %out.0, %do.body656 ]
  %left.0.lcssa4743 = phi i32 [ %left.0, %do.body656 ]
  %put.0.lcssa4684 = phi i8* [ %put.0, %do.body656 ]
  %next.223450.lcssa = phi i8* [ %next.223450, %do.body656 ]
  %hold.183452.lcssa = phi i64 [ %hold.183452, %do.body656 ]
  %indvars.iv3865.lcssa = phi i64 [ %indvars.iv3865, %do.body656 ]
  %243 = trunc i64 %indvars.iv3865.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2787:                         ; preds = %do.body577
  %ret.0.lcssa4858 = phi i32 [ %ret.0, %do.body577 ]
  %out.0.lcssa4829 = phi i32 [ %out.0, %do.body577 ]
  %left.0.lcssa4741 = phi i32 [ %left.0, %do.body577 ]
  %put.0.lcssa4682 = phi i8* [ %put.0, %do.body577 ]
  %next.183442.lcssa = phi i8* [ %next.183442, %do.body577 ]
  %hold.143444.lcssa = phi i64 [ %hold.143444, %do.body577 ]
  %indvars.iv3862.lcssa = phi i64 [ %indvars.iv3862, %do.body577 ]
  %244 = trunc i64 %indvars.iv3862.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2788:                         ; preds = %do.body720
  %ret.0.lcssa4857 = phi i32 [ %ret.0, %do.body720 ]
  %out.0.lcssa4828 = phi i32 [ %out.0, %do.body720 ]
  %left.0.lcssa4740 = phi i32 [ %left.0, %do.body720 ]
  %put.0.lcssa4681 = phi i8* [ %put.0, %do.body720 ]
  %next.233433.lcssa = phi i8* [ %next.233433, %do.body720 ]
  %hold.193435.lcssa = phi i64 [ %hold.193435, %do.body720 ]
  %indvars.iv3859.lcssa = phi i64 [ %indvars.iv3859, %do.body720 ]
  %245 = trunc i64 %indvars.iv3859.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2791:                         ; preds = %do.body1452
  %ret.5.ph.lcssa = phi i32 [ %ret.5.ph, %do.body1452 ]
  %out.0.lcssa4825 = phi i32 [ %out.0, %do.body1452 ]
  %left.0.lcssa4737 = phi i32 [ %left.0, %do.body1452 ]
  %put.0.lcssa4678 = phi i8* [ %put.0, %do.body1452 ]
  %next.443385.lcssa = phi i8* [ %next.443385, %do.body1452 ]
  %hold.403387.lcssa = phi i64 [ %hold.403387, %do.body1452 ]
  %indvars.iv3855.lcssa = phi i64 [ %indvars.iv3855, %do.body1452 ]
  %246 = trunc i64 %indvars.iv3855.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2794:                         ; preds = %do.body1261
  %ret.3.lcssa = phi i32 [ %ret.3, %do.body1261 ]
  %out.0.lcssa4822 = phi i32 [ %out.0, %do.body1261 ]
  %left.0.lcssa4734 = phi i32 [ %left.0, %do.body1261 ]
  %put.0.lcssa4675 = phi i8* [ %put.0, %do.body1261 ]
  %next.383325.lcssa = phi i8* [ %next.383325, %do.body1261 ]
  %hold.343327.lcssa = phi i64 [ %hold.343327, %do.body1261 ]
  %indvars.iv3852.lcssa = phi i64 [ %indvars.iv3852, %do.body1261 ]
  %247 = trunc i64 %indvars.iv3852.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2795:                         ; preds = %do.body791
  %ret.0.lcssa4845 = phi i32 [ %ret.0, %do.body791 ]
  %out.0.lcssa4816 = phi i32 [ %out.0, %do.body791 ]
  %left.0.lcssa4728 = phi i32 [ %left.0, %do.body791 ]
  %put.0.lcssa4669 = phi i8* [ %put.0, %do.body791 ]
  %next.263217.lcssa = phi i8* [ %next.263217, %do.body791 ]
  %hold.223219.lcssa = phi i64 [ %hold.223219, %do.body791 ]
  %indvars.iv3840.lcssa = phi i64 [ %indvars.iv3840, %do.body791 ]
  %248 = trunc i64 %indvars.iv3840.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2796:                         ; preds = %do.body1778
  %out.2.lcssa4868 = phi i32 [ %out.2, %do.body1778 ]
  %ret.0.lcssa4844 = phi i32 [ %ret.0, %do.body1778 ]
  %left.0.lcssa4727 = phi i32 [ %left.0, %do.body1778 ]
  %put.0.lcssa4668 = phi i8* [ %put.0, %do.body1778 ]
  %next.543208.lcssa = phi i8* [ %next.543208, %do.body1778 ]
  %hold.503210.lcssa = phi i64 [ %hold.503210, %do.body1778 ]
  %indvars.iv3837.lcssa = phi i64 [ %indvars.iv3837, %do.body1778 ]
  %249 = trunc i64 %indvars.iv3837.lcssa to i32
  br label %do.body1813

do.body1813.loopexit2797:                         ; preds = %do.body1694
  %ret.0.lcssa4842 = phi i32 [ %ret.0, %do.body1694 ]
  %out.0.lcssa4813 = phi i32 [ %out.0, %do.body1694 ]
  %left.0.lcssa4725 = phi i32 [ %left.0, %do.body1694 ]
  %put.0.lcssa4666 = phi i8* [ %put.0, %do.body1694 ]
  %next.513200.lcssa = phi i8* [ %next.513200, %do.body1694 ]
  %hold.473202.lcssa = phi i64 [ %hold.473202, %do.body1694 ]
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %do.body1694 ]
  %250 = trunc i64 %indvars.iv.lcssa to i32
  br label %do.body1813

do.body1813.loopexit3929:                         ; preds = %for.cond
  %out.0.lcssa4811 = phi i32 [ %out.0, %for.cond ]
  %bits.0.lcssa4782 = phi i32 [ %bits.0, %for.cond ]
  %hold.0.lcssa4753 = phi i64 [ %hold.0, %for.cond ]
  %left.0.lcssa4723 = phi i32 [ %left.0, %for.cond ]
  %have.0.lcssa4694 = phi i32 [ %have.0, %for.cond ]
  %put.0.lcssa4664 = phi i8* [ %put.0, %for.cond ]
  %next.0.lcssa4635 = phi i8* [ %next.0, %for.cond ]
  br label %do.body1813

do.body1813.loopexit:                             ; preds = %do.body1096
  %ret.1.ph.lcssa4871 = phi i32 [ %ret.1.ph, %do.body1096 ]
  %out.0.lcssa4821 = phi i32 [ %out.0, %do.body1096 ]
  %left.0.lcssa4733 = phi i32 [ %left.0, %do.body1096 ]
  %put.0.lcssa4674 = phi i8* [ %put.0, %do.body1096 ]
  %next.333291.lcssa = phi i8* [ %next.333291, %do.body1096 ]
  %hold.293293.lcssa = phi i64 [ %hold.293293, %do.body1096 ]
  %bits.293294.lcssa = phi i32 [ %bits.293294, %do.body1096 ]
  br label %do.body1813

do.body1813.loopexit4547:                         ; preds = %do.body990
  %ret.1.ph.lcssa4870 = phi i32 [ %ret.1.ph, %do.body990 ]
  %out.0.lcssa4820 = phi i32 [ %out.0, %do.body990 ]
  %left.0.lcssa4732 = phi i32 [ %left.0, %do.body990 ]
  %put.0.lcssa4673 = phi i8* [ %put.0, %do.body990 ]
  %next.313282.lcssa = phi i8* [ %next.313282, %do.body990 ]
  %hold.273284.lcssa = phi i64 [ %hold.273284, %do.body990 ]
  %bits.273285.lcssa = phi i32 [ %bits.273285, %do.body990 ]
  br label %do.body1813

do.body1813.loopexit4548:                         ; preds = %do.body1052
  %ret.1.ph.lcssa4869 = phi i32 [ %ret.1.ph, %do.body1052 ]
  %out.0.lcssa4819 = phi i32 [ %out.0, %do.body1052 ]
  %left.0.lcssa4731 = phi i32 [ %left.0, %do.body1052 ]
  %put.0.lcssa4672 = phi i8* [ %put.0, %do.body1052 ]
  %next.323273.lcssa = phi i8* [ %next.323273, %do.body1052 ]
  %hold.283275.lcssa = phi i64 [ %hold.283275, %do.body1052 ]
  %bits.283276.lcssa = phi i32 [ %bits.283276, %do.body1052 ]
  br label %do.body1813

do.body1813.loopexit4549:                         ; preds = %do.body1570
  %ret.6.lcssa = phi i32 [ %ret.6, %do.body1570 ]
  %out.0.lcssa4827 = phi i32 [ %out.0, %do.body1570 ]
  %left.0.lcssa4739 = phi i32 [ %left.0, %do.body1570 ]
  %put.0.lcssa4680 = phi i8* [ %put.0, %do.body1570 ]
  %next.483423.lcssa = phi i8* [ %next.483423, %do.body1570 ]
  %hold.443425.lcssa = phi i64 [ %hold.443425, %do.body1570 ]
  %bits.443426.lcssa = phi i32 [ %bits.443426, %do.body1570 ]
  br label %do.body1813

do.body1813.loopexit4550:                         ; preds = %do.body1501
  %ret.5.ph.lcssa4873 = phi i32 [ %ret.5.ph, %do.body1501 ]
  %out.0.lcssa4826 = phi i32 [ %out.0, %do.body1501 ]
  %left.0.lcssa4738 = phi i32 [ %left.0, %do.body1501 ]
  %put.0.lcssa4679 = phi i8* [ %put.0, %do.body1501 ]
  %next.453411.lcssa = phi i8* [ %next.453411, %do.body1501 ]
  %hold.413413.lcssa = phi i64 [ %hold.413413, %do.body1501 ]
  %bits.413414.lcssa = phi i32 [ %bits.413414, %do.body1501 ]
  br label %do.body1813

do.body1813.loopexit4551:                         ; preds = %do.body1398
  %ret.4.lcssa = phi i32 [ %ret.4, %do.body1398 ]
  %out.0.lcssa4824 = phi i32 [ %out.0, %do.body1398 ]
  %left.0.lcssa4736 = phi i32 [ %left.0, %do.body1398 ]
  %put.0.lcssa4677 = phi i8* [ %put.0, %do.body1398 ]
  %next.423363.lcssa = phi i8* [ %next.423363, %do.body1398 ]
  %hold.383365.lcssa = phi i64 [ %hold.383365, %do.body1398 ]
  %bits.383366.lcssa = phi i32 [ %bits.383366, %do.body1398 ]
  br label %do.body1813

do.body1813.loopexit4552:                         ; preds = %do.body1313
  %ret.3.lcssa4872 = phi i32 [ %ret.3, %do.body1313 ]
  %out.0.lcssa4823 = phi i32 [ %out.0, %do.body1313 ]
  %left.0.lcssa4735 = phi i32 [ %left.0, %do.body1313 ]
  %put.0.lcssa4676 = phi i8* [ %put.0, %do.body1313 ]
  %next.393351.lcssa = phi i8* [ %next.393351, %do.body1313 ]
  %hold.353353.lcssa = phi i64 [ %hold.353353, %do.body1313 ]
  %bits.353354.lcssa = phi i32 [ %bits.353354, %do.body1313 ]
  br label %do.body1813

do.body1813.loopexit4553:                         ; preds = %sw.bb1675, %sw.bb1607, %if.end1206, %if.then761, %if.end744, %sw.bb629, %if.end500, %if.then455, %if.end433, %if.then393, %if.end381, %for.cond
  %out.0.lcssa4810 = phi i32 [ %out.0, %sw.bb1675 ], [ %out.0, %sw.bb1607 ], [ %out.0, %if.end1206 ], [ %out.0, %if.then761 ], [ %out.0, %if.end744 ], [ %out.0, %sw.bb629 ], [ %out.0, %if.end500 ], [ %out.0, %if.then455 ], [ %out.0, %if.end433 ], [ %out.0, %if.then393 ], [ %out.0, %if.end381 ], [ %out.0, %for.cond ]
  %left.0.lcssa4722 = phi i32 [ %left.0, %sw.bb1675 ], [ %left.0, %sw.bb1607 ], [ %left.0, %if.end1206 ], [ %left.0, %if.then761 ], [ %left.0, %if.end744 ], [ %left.0, %sw.bb629 ], [ %left.0, %if.end500 ], [ %left.0, %if.then455 ], [ %left.0, %if.end433 ], [ %left.0, %if.then393 ], [ %left.0, %if.end381 ], [ %left.0, %for.cond ]
  %put.0.lcssa4663 = phi i8* [ %put.0, %sw.bb1675 ], [ %put.0, %sw.bb1607 ], [ %put.0, %if.end1206 ], [ %put.0, %if.then761 ], [ %put.0, %if.end744 ], [ %put.0, %sw.bb629 ], [ %put.0, %if.end500 ], [ %put.0, %if.then455 ], [ %put.0, %if.end433 ], [ %put.0, %if.then393 ], [ %put.0, %if.end381 ], [ %put.0, %for.cond ]
  %next.57.ph = phi i8* [ %next.0, %sw.bb1675 ], [ %next.50, %sw.bb1607 ], [ %next.29.lcssa3920, %if.end1206 ], [ %next.25, %if.then761 ], [ %next.23.lcssa, %if.end744 ], [ %next.20, %sw.bb629 ], [ %next.13, %if.then455 ], [ %add.ptr503, %if.end500 ], [ %next.11, %if.then393 ], [ %add.ptr436, %if.end433 ], [ %next.9, %if.end381 ], [ %next.0, %for.cond ]
  %have.57.ph = phi i32 [ %have.0, %sw.bb1675 ], [ %have.50, %sw.bb1607 ], [ %have.29.lcssa3919, %if.end1206 ], [ %have.25, %if.then761 ], [ %have.23.lcssa, %if.end744 ], [ %have.20, %sw.bb629 ], [ 0, %if.then455 ], [ %sub501, %if.end500 ], [ 0, %if.then393 ], [ %sub434, %if.end433 ], [ %have.9, %if.end381 ], [ %have.0, %for.cond ]
  %hold.53.ph = phi i64 [ %hold.0, %sw.bb1675 ], [ %hold.46, %sw.bb1607 ], [ %hold.25.lcssa3918, %if.end1206 ], [ %hold.21, %if.then761 ], [ 0, %if.end744 ], [ %hold.16, %sw.bb629 ], [ %hold.10, %if.then455 ], [ %hold.10, %if.end500 ], [ %hold.9, %if.then393 ], [ %hold.9, %if.end433 ], [ %hold.8, %if.end381 ], [ %hold.0, %for.cond ]
  %bits.53.ph = phi i32 [ %bits.0, %sw.bb1675 ], [ %bits.46, %sw.bb1607 ], [ %bits.25.lcssa3917, %if.end1206 ], [ %bits.21, %if.then761 ], [ 0, %if.end744 ], [ %bits.16, %sw.bb629 ], [ %bits.10, %if.then455 ], [ %bits.10, %if.end500 ], [ %bits.9, %if.then393 ], [ %bits.9, %if.end433 ], [ %bits.8, %if.end381 ], [ %bits.0, %for.cond ]
  %ret.8.ph = phi i32 [ %ret.0, %sw.bb1675 ], [ %ret.7, %sw.bb1607 ], [ 0, %if.end1206 ], [ %ret.0, %if.then761 ], [ %ret.0, %if.end744 ], [ %ret.0, %sw.bb629 ], [ %ret.0, %if.then455 ], [ %ret.0, %if.end500 ], [ %ret.0, %if.then393 ], [ %ret.0, %if.end433 ], [ %ret.0, %if.end381 ], [ 1, %for.cond ]
  br label %do.body1813

do.body1813:                                      ; preds = %do.body1813.loopexit4553, %do.body1813.loopexit4552, %do.body1813.loopexit4551, %do.body1813.loopexit4550, %do.body1813.loopexit4549, %do.body1813.loopexit4548, %do.body1813.loopexit4547, %do.body1813.loopexit, %do.body1813.loopexit3929, %do.body1813.loopexit2797, %do.body1813.loopexit2796, %do.body1813.loopexit2795, %do.body1813.loopexit2794, %do.body1813.loopexit2791, %do.body1813.loopexit2788, %do.body1813.loopexit2787, %do.body1813.loopexit2786, %do.body1813.loopexit2785, %do.body1813.loopexit2784, %do.body1813.loopexit2783, %do.body1813.loopexit2782, %do.body1813.loopexit2781, %do.body1813.loopexit2780, %do.body1813.loopexit2779, %do.body1813.loopexit2778, %if.end1806, %do.body690
  %left.04751 = phi i32 [ %left.0.lcssa4744, %do.body690 ], [ %left.0.lcssa4726, %if.end1806 ], [ %left.0.lcssa4730, %do.body1813.loopexit2778 ], [ %left.0.lcssa4729, %do.body1813.loopexit2779 ], [ %left.0.lcssa4750, %do.body1813.loopexit2780 ], [ %left.0.lcssa4749, %do.body1813.loopexit2781 ], [ %left.0.lcssa4748, %do.body1813.loopexit2782 ], [ %left.0.lcssa4747, %do.body1813.loopexit2783 ], [ %left.0.lcssa4746, %do.body1813.loopexit2784 ], [ %left.0.lcssa4745, %do.body1813.loopexit2785 ], [ %left.0.lcssa4743, %do.body1813.loopexit2786 ], [ %left.0.lcssa4741, %do.body1813.loopexit2787 ], [ %left.0.lcssa4740, %do.body1813.loopexit2788 ], [ %left.0.lcssa4737, %do.body1813.loopexit2791 ], [ %left.0.lcssa4734, %do.body1813.loopexit2794 ], [ %left.0.lcssa4728, %do.body1813.loopexit2795 ], [ %left.0.lcssa4727, %do.body1813.loopexit2796 ], [ %left.0.lcssa4725, %do.body1813.loopexit2797 ], [ %left.0.lcssa4723, %do.body1813.loopexit3929 ], [ %left.0.lcssa4733, %do.body1813.loopexit ], [ %left.0.lcssa4732, %do.body1813.loopexit4547 ], [ %left.0.lcssa4731, %do.body1813.loopexit4548 ], [ %left.0.lcssa4739, %do.body1813.loopexit4549 ], [ %left.0.lcssa4738, %do.body1813.loopexit4550 ], [ %left.0.lcssa4736, %do.body1813.loopexit4551 ], [ %left.0.lcssa4735, %do.body1813.loopexit4552 ], [ %left.0.lcssa4722, %do.body1813.loopexit4553 ]
  %put.04692 = phi i8* [ %put.0.lcssa4685, %do.body690 ], [ %put.0.lcssa4667, %if.end1806 ], [ %put.0.lcssa4671, %do.body1813.loopexit2778 ], [ %put.0.lcssa4670, %do.body1813.loopexit2779 ], [ %put.0.lcssa4691, %do.body1813.loopexit2780 ], [ %put.0.lcssa4690, %do.body1813.loopexit2781 ], [ %put.0.lcssa4689, %do.body1813.loopexit2782 ], [ %put.0.lcssa4688, %do.body1813.loopexit2783 ], [ %put.0.lcssa4687, %do.body1813.loopexit2784 ], [ %put.0.lcssa4686, %do.body1813.loopexit2785 ], [ %put.0.lcssa4684, %do.body1813.loopexit2786 ], [ %put.0.lcssa4682, %do.body1813.loopexit2787 ], [ %put.0.lcssa4681, %do.body1813.loopexit2788 ], [ %put.0.lcssa4678, %do.body1813.loopexit2791 ], [ %put.0.lcssa4675, %do.body1813.loopexit2794 ], [ %put.0.lcssa4669, %do.body1813.loopexit2795 ], [ %put.0.lcssa4668, %do.body1813.loopexit2796 ], [ %put.0.lcssa4666, %do.body1813.loopexit2797 ], [ %put.0.lcssa4664, %do.body1813.loopexit3929 ], [ %put.0.lcssa4674, %do.body1813.loopexit ], [ %put.0.lcssa4673, %do.body1813.loopexit4547 ], [ %put.0.lcssa4672, %do.body1813.loopexit4548 ], [ %put.0.lcssa4680, %do.body1813.loopexit4549 ], [ %put.0.lcssa4679, %do.body1813.loopexit4550 ], [ %put.0.lcssa4677, %do.body1813.loopexit4551 ], [ %put.0.lcssa4676, %do.body1813.loopexit4552 ], [ %put.0.lcssa4663, %do.body1813.loopexit4553 ]
  %next.57 = phi i8* [ %next.22.lcssa.lcssa, %do.body690 ], [ %next.55, %if.end1806 ], [ %next.303258.lcssa, %do.body1813.loopexit2778 ], [ %next.283226.lcssa, %do.body1813.loopexit2779 ], [ %next.13501.lcssa, %do.body1813.loopexit2780 ], [ %next.163492.lcssa, %do.body1813.loopexit2781 ], [ %next.63484.lcssa, %do.body1813.loopexit2782 ], [ %next.43476.lcssa, %do.body1813.loopexit2783 ], [ %next.33468.lcssa, %do.body1813.loopexit2784 ], [ %next.23459.lcssa, %do.body1813.loopexit2785 ], [ %next.223450.lcssa, %do.body1813.loopexit2786 ], [ %next.183442.lcssa, %do.body1813.loopexit2787 ], [ %next.233433.lcssa, %do.body1813.loopexit2788 ], [ %next.443385.lcssa, %do.body1813.loopexit2791 ], [ %next.383325.lcssa, %do.body1813.loopexit2794 ], [ %next.263217.lcssa, %do.body1813.loopexit2795 ], [ %next.543208.lcssa, %do.body1813.loopexit2796 ], [ %next.513200.lcssa, %do.body1813.loopexit2797 ], [ %next.0.lcssa4635, %do.body1813.loopexit3929 ], [ %next.333291.lcssa, %do.body1813.loopexit ], [ %next.313282.lcssa, %do.body1813.loopexit4547 ], [ %next.323273.lcssa, %do.body1813.loopexit4548 ], [ %next.483423.lcssa, %do.body1813.loopexit4549 ], [ %next.453411.lcssa, %do.body1813.loopexit4550 ], [ %next.423363.lcssa, %do.body1813.loopexit4551 ], [ %next.393351.lcssa, %do.body1813.loopexit4552 ], [ %next.57.ph, %do.body1813.loopexit4553 ]
  %have.57 = phi i32 [ %have.22.lcssa.lcssa, %do.body690 ], [ %have.55, %if.end1806 ], [ 0, %do.body1813.loopexit2778 ], [ 0, %do.body1813.loopexit2779 ], [ 0, %do.body1813.loopexit2780 ], [ 0, %do.body1813.loopexit2781 ], [ 0, %do.body1813.loopexit2782 ], [ 0, %do.body1813.loopexit2783 ], [ 0, %do.body1813.loopexit2784 ], [ 0, %do.body1813.loopexit2785 ], [ 0, %do.body1813.loopexit2786 ], [ 0, %do.body1813.loopexit2787 ], [ 0, %do.body1813.loopexit2788 ], [ 0, %do.body1813.loopexit2791 ], [ 0, %do.body1813.loopexit2794 ], [ 0, %do.body1813.loopexit2795 ], [ 0, %do.body1813.loopexit2796 ], [ 0, %do.body1813.loopexit2797 ], [ %have.0.lcssa4694, %do.body1813.loopexit3929 ], [ 0, %do.body1813.loopexit ], [ 0, %do.body1813.loopexit4547 ], [ 0, %do.body1813.loopexit4548 ], [ 0, %do.body1813.loopexit4549 ], [ 0, %do.body1813.loopexit4550 ], [ 0, %do.body1813.loopexit4551 ], [ 0, %do.body1813.loopexit4552 ], [ %have.57.ph, %do.body1813.loopexit4553 ]
  %hold.53 = phi i64 [ %shr691, %do.body690 ], [ %hold.51, %if.end1806 ], [ %hold.263260.lcssa, %do.body1813.loopexit2778 ], [ %hold.243228.lcssa, %do.body1813.loopexit2779 ], [ %hold.13503.lcssa, %do.body1813.loopexit2780 ], [ %hold.123494.lcssa, %do.body1813.loopexit2781 ], [ %hold.63486.lcssa, %do.body1813.loopexit2782 ], [ %hold.43478.lcssa, %do.body1813.loopexit2783 ], [ %hold.33470.lcssa, %do.body1813.loopexit2784 ], [ %hold.23461.lcssa, %do.body1813.loopexit2785 ], [ %hold.183452.lcssa, %do.body1813.loopexit2786 ], [ %hold.143444.lcssa, %do.body1813.loopexit2787 ], [ %hold.193435.lcssa, %do.body1813.loopexit2788 ], [ %hold.403387.lcssa, %do.body1813.loopexit2791 ], [ %hold.343327.lcssa, %do.body1813.loopexit2794 ], [ %hold.223219.lcssa, %do.body1813.loopexit2795 ], [ %hold.503210.lcssa, %do.body1813.loopexit2796 ], [ %hold.473202.lcssa, %do.body1813.loopexit2797 ], [ %hold.0.lcssa4753, %do.body1813.loopexit3929 ], [ %hold.293293.lcssa, %do.body1813.loopexit ], [ %hold.273284.lcssa, %do.body1813.loopexit4547 ], [ %hold.283275.lcssa, %do.body1813.loopexit4548 ], [ %hold.443425.lcssa, %do.body1813.loopexit4549 ], [ %hold.413413.lcssa, %do.body1813.loopexit4550 ], [ %hold.383365.lcssa, %do.body1813.loopexit4551 ], [ %hold.353353.lcssa, %do.body1813.loopexit4552 ], [ %hold.53.ph, %do.body1813.loopexit4553 ]
  %bits.53 = phi i32 [ %sub692, %do.body690 ], [ %bits.51, %if.end1806 ], [ %235, %do.body1813.loopexit2778 ], [ %236, %do.body1813.loopexit2779 ], [ %237, %do.body1813.loopexit2780 ], [ %238, %do.body1813.loopexit2781 ], [ %239, %do.body1813.loopexit2782 ], [ %240, %do.body1813.loopexit2783 ], [ %241, %do.body1813.loopexit2784 ], [ %242, %do.body1813.loopexit2785 ], [ %243, %do.body1813.loopexit2786 ], [ %244, %do.body1813.loopexit2787 ], [ %245, %do.body1813.loopexit2788 ], [ %246, %do.body1813.loopexit2791 ], [ %247, %do.body1813.loopexit2794 ], [ %248, %do.body1813.loopexit2795 ], [ %249, %do.body1813.loopexit2796 ], [ %250, %do.body1813.loopexit2797 ], [ %bits.0.lcssa4782, %do.body1813.loopexit3929 ], [ %bits.293294.lcssa, %do.body1813.loopexit ], [ %bits.273285.lcssa, %do.body1813.loopexit4547 ], [ %bits.283276.lcssa, %do.body1813.loopexit4548 ], [ %bits.443426.lcssa, %do.body1813.loopexit4549 ], [ %bits.413414.lcssa, %do.body1813.loopexit4550 ], [ %bits.383366.lcssa, %do.body1813.loopexit4551 ], [ %bits.353354.lcssa, %do.body1813.loopexit4552 ], [ %bits.53.ph, %do.body1813.loopexit4553 ]
  %out.4 = phi i32 [ %out.0.lcssa4832, %do.body690 ], [ %out.2.lcssa, %if.end1806 ], [ %out.0.lcssa4818, %do.body1813.loopexit2778 ], [ %out.0.lcssa4817, %do.body1813.loopexit2779 ], [ %out.0.lcssa4838, %do.body1813.loopexit2780 ], [ %out.0.lcssa4837, %do.body1813.loopexit2781 ], [ %out.0.lcssa4836, %do.body1813.loopexit2782 ], [ %out.0.lcssa4835, %do.body1813.loopexit2783 ], [ %out.0.lcssa4834, %do.body1813.loopexit2784 ], [ %out.0.lcssa4833, %do.body1813.loopexit2785 ], [ %out.0.lcssa4831, %do.body1813.loopexit2786 ], [ %out.0.lcssa4829, %do.body1813.loopexit2787 ], [ %out.0.lcssa4828, %do.body1813.loopexit2788 ], [ %out.0.lcssa4825, %do.body1813.loopexit2791 ], [ %out.0.lcssa4822, %do.body1813.loopexit2794 ], [ %out.0.lcssa4816, %do.body1813.loopexit2795 ], [ %out.2.lcssa4868, %do.body1813.loopexit2796 ], [ %out.0.lcssa4813, %do.body1813.loopexit2797 ], [ %out.0.lcssa4811, %do.body1813.loopexit3929 ], [ %out.0.lcssa4821, %do.body1813.loopexit ], [ %out.0.lcssa4820, %do.body1813.loopexit4547 ], [ %out.0.lcssa4819, %do.body1813.loopexit4548 ], [ %out.0.lcssa4827, %do.body1813.loopexit4549 ], [ %out.0.lcssa4826, %do.body1813.loopexit4550 ], [ %out.0.lcssa4824, %do.body1813.loopexit4551 ], [ %out.0.lcssa4823, %do.body1813.loopexit4552 ], [ %out.0.lcssa4810, %do.body1813.loopexit4553 ]
  %ret.8 = phi i32 [ %ret.0.lcssa4861, %do.body690 ], [ 1, %if.end1806 ], [ %ret.1.ph.lcssa, %do.body1813.loopexit2778 ], [ %ret.0.lcssa4846, %do.body1813.loopexit2779 ], [ %ret.0.lcssa4867, %do.body1813.loopexit2780 ], [ %ret.0.lcssa4866, %do.body1813.loopexit2781 ], [ %ret.0.lcssa4865, %do.body1813.loopexit2782 ], [ %ret.0.lcssa4864, %do.body1813.loopexit2783 ], [ %ret.0.lcssa4863, %do.body1813.loopexit2784 ], [ %ret.0.lcssa4862, %do.body1813.loopexit2785 ], [ %ret.0.lcssa4860, %do.body1813.loopexit2786 ], [ %ret.0.lcssa4858, %do.body1813.loopexit2787 ], [ %ret.0.lcssa4857, %do.body1813.loopexit2788 ], [ %ret.5.ph.lcssa, %do.body1813.loopexit2791 ], [ %ret.3.lcssa, %do.body1813.loopexit2794 ], [ %ret.0.lcssa4845, %do.body1813.loopexit2795 ], [ %ret.0.lcssa4844, %do.body1813.loopexit2796 ], [ %ret.0.lcssa4842, %do.body1813.loopexit2797 ], [ -3, %do.body1813.loopexit3929 ], [ %ret.1.ph.lcssa4871, %do.body1813.loopexit ], [ %ret.1.ph.lcssa4870, %do.body1813.loopexit4547 ], [ %ret.1.ph.lcssa4869, %do.body1813.loopexit4548 ], [ %ret.6.lcssa, %do.body1813.loopexit4549 ], [ %ret.5.ph.lcssa4873, %do.body1813.loopexit4550 ], [ %ret.4.lcssa, %do.body1813.loopexit4551 ], [ %ret.3.lcssa4872, %do.body1813.loopexit4552 ], [ %ret.8.ph, %do.body1813.loopexit4553 ]
  store i8* %put.04692, i8** %next_out, align 8, !tbaa !34
  store i32 %left.04751, i32* %avail_out, align 4, !tbaa !33
  store i8* %next.57, i8** %next_in, align 8, !tbaa !37
  store i32 %have.57, i32* %avail_in15, align 4, !tbaa !32
  store i64 %hold.53, i64* %hold16, align 8, !tbaa !131
  store i32 %bits.53, i32* %bits17, align 4, !tbaa !132
  %251 = load i32* %wsize, align 4, !tbaa !138
  %tobool1823 = icmp eq i32 %251, 0
  br i1 %tobool1823, label %lor.lhs.false1824, label %if.then1839

lor.lhs.false1824:                                ; preds = %do.body1813
  %cmp1826 = icmp eq i32 %out.4, %left.04751
  br i1 %cmp1826, label %if.end1848, label %land.lhs.true1828

land.lhs.true1828:                                ; preds = %lor.lhs.false1824
  %252 = load i32* %mode, align 4, !tbaa !126
  %cmp1830 = icmp ult i32 %252, 29
  br i1 %cmp1830, label %land.lhs.true1832, label %if.end1848

land.lhs.true1832:                                ; preds = %land.lhs.true1828
  %cmp1834 = icmp ult i32 %252, 26
  %cmp1837 = icmp ne i32 %flush, 4
  %or.cond1920 = or i1 %cmp1834, %cmp1837
  br i1 %or.cond1920, label %if.then1839, label %if.end1848

if.then1839:                                      ; preds = %land.lhs.true1832, %do.body1813
  %sub1842 = sub i32 %out.4, %left.04751
  %call1843 = call fastcc i32 @updatewindow(%struct.z_stream_s* %strm, i8* %put.04692, i32 %sub1842)
  %tobool1844 = icmp eq i32 %call1843, 0
  br i1 %tobool1844, label %if.then1839.if.end1848_crit_edge, label %if.then1845

if.then1839.if.end1848_crit_edge:                 ; preds = %if.then1839
  %.pre3886 = load i32* %avail_in15, align 4, !tbaa !32
  %.pre3887 = load i32* %avail_out, align 4, !tbaa !33
  br label %if.end1848

if.then1845:                                      ; preds = %if.then1839
  store i32 30, i32* %mode, align 4, !tbaa !126
  br label %return

if.end1848:                                       ; preds = %if.then1839.if.end1848_crit_edge, %land.lhs.true1832, %land.lhs.true1828, %lor.lhs.false1824
  %253 = phi i32 [ %.pre3887, %if.then1839.if.end1848_crit_edge ], [ %left.04751, %lor.lhs.false1824 ], [ %left.04751, %land.lhs.true1832 ], [ %left.04751, %land.lhs.true1828 ]
  %254 = phi i32 [ %.pre3886, %if.then1839.if.end1848_crit_edge ], [ %have.57, %lor.lhs.false1824 ], [ %have.57, %land.lhs.true1832 ], [ %have.57, %land.lhs.true1828 ]
  %sub1850 = sub i32 %8, %254
  %sub1852 = sub i32 %out.4, %253
  %conv1853 = zext i32 %sub1850 to i64
  %total_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 2
  %255 = load i64* %total_in, align 8, !tbaa !74
  %add1854 = add i64 %255, %conv1853
  store i64 %add1854, i64* %total_in, align 8, !tbaa !74
  %conv1855 = zext i32 %sub1852 to i64
  %256 = load i64* %total_out, align 8, !tbaa !112
  %add1857 = add i64 %256, %conv1855
  store i64 %add1857, i64* %total_out, align 8, !tbaa !112
  %257 = load i64* %total, align 8, !tbaa !123
  %add1860 = add i64 %257, %conv1855
  store i64 %add1860, i64* %total, align 8, !tbaa !123
  %258 = load i32* %wrap, align 4, !tbaa !125
  %tobool1862 = icmp ne i32 %258, 0
  %tobool1864 = icmp ne i32 %out.4, %253
  %or.cond1921 = and i1 %tobool1862, %tobool1864
  br i1 %or.cond1921, label %if.then1865, label %if.end1886

if.then1865:                                      ; preds = %if.end1848
  %259 = load i32* %flags, align 4, !tbaa !146
  %tobool1867 = icmp eq i32 %259, 0
  %260 = load i64* %check, align 8, !tbaa !145
  %261 = load i8** %next_out, align 8, !tbaa !34
  %idx.neg1872 = sub i64 0, %conv1855
  %add.ptr1873 = getelementptr inbounds i8* %261, i64 %idx.neg1872
  br i1 %tobool1867, label %cond.false1875, label %cond.true1868

cond.true1868:                                    ; preds = %if.then1865
  %call1874 = call i64 @crc32(i64 %260, i8* %add.ptr1873, i32 %sub1852) #4
  br label %cond.end1882

cond.false1875:                                   ; preds = %if.then1865
  %call1881 = call i64 @adler32(i64 %260, i8* %add.ptr1873, i32 %sub1852) #4
  br label %cond.end1882

cond.end1882:                                     ; preds = %cond.false1875, %cond.true1868
  %cond1883 = phi i64 [ %call1874, %cond.true1868 ], [ %call1881, %cond.false1875 ]
  store i64 %cond1883, i64* %check, align 8, !tbaa !145
  store i64 %cond1883, i64* %adler, align 8, !tbaa !78
  br label %if.end1886

if.end1886:                                       ; preds = %cond.end1882, %if.end1848
  %262 = load i32* %bits17, align 4, !tbaa !132
  %263 = load i32* %last638, align 4, !tbaa !127
  %tobool1889 = icmp ne i32 %263, 0
  %cond1890 = select i1 %tobool1889, i32 64, i32 0
  %add1891 = add i32 %cond1890, %262
  %264 = load i32* %mode, align 4, !tbaa !126
  %cmp1893 = icmp eq i32 %264, 11
  %cond1895 = select i1 %cmp1893, i32 128, i32 0
  %add1896 = add i32 %add1891, %cond1895
  %cmp1898 = icmp eq i32 %264, 19
  br i1 %cmp1898, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end1886
  %cmp1901 = icmp eq i32 %264, 14
  %phitmp = select i1 %cmp1901, i32 256, i32 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end1886
  %265 = phi i32 [ 256, %if.end1886 ], [ %phitmp, %lor.rhs ]
  %add1904 = add i32 %add1896, %265
  %data_type = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 11
  store i32 %add1904, i32* %data_type, align 4, !tbaa !75
  %cmp1905 = icmp eq i32 %8, %254
  %cmp1908 = icmp eq i32 %out.4, %253
  %or.cond1922 = and i1 %cmp1905, %cmp1908
  %cmp1911 = icmp eq i32 %flush, 4
  %or.cond1923 = or i1 %or.cond1922, %cmp1911
  %cmp1914 = icmp eq i32 %ret.8, 0
  %or.cond1924 = and i1 %or.cond1923, %cmp1914
  %.ret.8 = select i1 %or.cond1924, i32 -5, i32 %ret.8
  br label %return

return.loopexit3928:                              ; preds = %for.cond
  br label %return

return.loopexit:                                  ; preds = %for.cond
  br label %return

return:                                           ; preds = %return.loopexit, %return.loopexit3928, %lor.end, %if.then1845, %do.body615, %land.lhs.true, %lor.lhs.false3, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -4, %if.then1845 ], [ %.ret.8, %lor.end ], [ 2, %do.body615 ], [ -2, %land.lhs.true ], [ -2, %lor.lhs.false3 ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %return.loopexit3928 ], [ -4, %return.loopexit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateEnd(%struct.z_stream_s* %strm) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %zfree = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 9
  %1 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %cmp4 = icmp eq void (i8*, i8*)* %1, null
  br i1 %cmp4, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false3
  %2 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %window = getelementptr inbounds %struct.inflate_state* %2, i64 0, i32 13
  %3 = load i8** %window, align 8, !tbaa !141
  %cmp6 = icmp eq i8* %3, null
  %opaque12.pre = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 10
  br i1 %cmp6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %if.end
  %4 = load i8** %opaque12.pre, align 8, !tbaa !45
  tail call void %1(i8* %4, i8* %3) #4
  %.pre = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %.pre25 = load %struct.internal_state** %state1, align 8, !tbaa !47
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %if.end
  %5 = phi %struct.internal_state* [ %.pre25, %if.then7 ], [ %0, %if.end ]
  %6 = phi void (i8*, i8*)* [ %.pre, %if.then7 ], [ %1, %if.end ]
  %7 = load i8** %opaque12.pre, align 8, !tbaa !45
  %8 = bitcast %struct.internal_state* %5 to i8*
  tail call void %6(i8* %7, i8* %8) #4
  store %struct.internal_state* null, %struct.internal_state** %state1, align 8, !tbaa !47
  br label %return

return:                                           ; preds = %if.end10, %lor.lhs.false3, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.end10 ], [ -2, %lor.lhs.false3 ], [ -2, %lor.lhs.false ], [ -2, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateGetDictionary(%struct.z_stream_s* readonly %strm, i8* %dictionary, i32* %dictLength) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %whave = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 11
  %2 = load i32* %whave, align 4, !tbaa !139
  %tobool = icmp ne i32 %2, 0
  %cmp4 = icmp ne i8* %dictionary, null
  %or.cond = and i1 %tobool, %cmp4
  br i1 %or.cond, label %if.then5, label %if.end17

if.then5:                                         ; preds = %if.end
  %window = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 13
  %3 = load i8** %window, align 8, !tbaa !141
  %wnext = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 12
  %4 = load i32* %wnext, align 4, !tbaa !140
  %idx.ext = zext i32 %4 to i64
  %add.ptr = getelementptr inbounds i8* %3, i64 %idx.ext
  %sub = sub i32 %2, %4
  %conv = zext i32 %sub to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %dictionary, i8* %add.ptr, i64 %conv, i32 1, i1 false)
  %5 = load i32* %whave, align 4, !tbaa !139
  %idx.ext9 = zext i32 %5 to i64
  %6 = load i32* %wnext, align 4, !tbaa !140
  %idx.ext12 = zext i32 %6 to i64
  %add.ptr10.sum = sub i64 %idx.ext9, %idx.ext12
  %add.ptr13 = getelementptr inbounds i8* %dictionary, i64 %add.ptr10.sum
  %7 = load i8** %window, align 8, !tbaa !141
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr13, i8* %7, i64 %idx.ext12, i32 1, i1 false)
  br label %if.end17

if.end17:                                         ; preds = %if.then5, %if.end
  %cmp18 = icmp eq i32* %dictLength, null
  br i1 %cmp18, label %return, label %if.then20

if.then20:                                        ; preds = %if.end17
  %8 = load i32* %whave, align 4, !tbaa !139
  store i32 %8, i32* %dictLength, align 4, !tbaa !28
  br label %return

return:                                           ; preds = %if.then20, %if.end17, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -2, %lor.lhs.false ], [ -2, %entry ], [ 0, %if.end17 ], [ 0, %if.then20 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateSetDictionary(%struct.z_stream_s* readonly %strm, i8* %dictionary, i32 %dictLength) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %wrap = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 2
  %2 = load i32* %wrap, align 4, !tbaa !125
  %cmp4 = icmp eq i32 %2, 0
  %mode8.phi.trans.insert = bitcast %struct.internal_state* %0 to i32*
  %.pre = load i32* %mode8.phi.trans.insert, align 4, !tbaa !126
  %phitmp = icmp eq i32 %.pre, 10
  br i1 %cmp4, label %if.end7, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  br i1 %phitmp, label %if.end7.thread, label %return

if.end7.thread:                                   ; preds = %land.lhs.true
  %mode831 = bitcast %struct.internal_state* %0 to i32*
  br label %if.then10

if.end7:                                          ; preds = %if.end
  %mode8 = bitcast %struct.internal_state* %0 to i32*
  br i1 %phitmp, label %if.then10, label %if.end15

if.then10:                                        ; preds = %if.end7, %if.end7.thread
  %mode833 = phi i32* [ %mode831, %if.end7.thread ], [ %mode8, %if.end7 ]
  %call = tail call i64 @adler32(i64 0, i8* null, i32 0) #4
  %call11 = tail call i64 @adler32(i64 %call, i8* %dictionary, i32 %dictLength) #4
  %check = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 6
  %3 = load i64* %check, align 8, !tbaa !145
  %cmp12 = icmp eq i64 %call11, %3
  br i1 %cmp12, label %if.end15, label %return

if.end15:                                         ; preds = %if.then10, %if.end7
  %mode832 = phi i32* [ %mode833, %if.then10 ], [ %mode8, %if.end7 ]
  %idx.ext = zext i32 %dictLength to i64
  %add.ptr = getelementptr inbounds i8* %dictionary, i64 %idx.ext
  %call16 = tail call fastcc i32 @updatewindow(%struct.z_stream_s* %strm, i8* %add.ptr, i32 %dictLength)
  %tobool = icmp eq i32 %call16, 0
  br i1 %tobool, label %if.end19, label %if.then17

if.then17:                                        ; preds = %if.end15
  store i32 30, i32* %mode832, align 4, !tbaa !126
  br label %return

if.end19:                                         ; preds = %if.end15
  %havedict = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 3
  store i32 1, i32* %havedict, align 4, !tbaa !128
  br label %return

return:                                           ; preds = %if.end19, %if.then17, %if.then10, %land.lhs.true, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -4, %if.then17 ], [ 0, %if.end19 ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %land.lhs.true ], [ -3, %if.then10 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateGetHeader(%struct.z_stream_s* readonly %strm, %struct.gz_header_s* %head) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %wrap = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 2
  %2 = load i32* %wrap, align 4, !tbaa !125
  %and = and i32 %2, 2
  %cmp4 = icmp eq i32 %and, 0
  br i1 %cmp4, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  %head7 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 8
  store %struct.gz_header_s* %head, %struct.gz_header_s** %head7, align 8, !tbaa !130
  %done = getelementptr inbounds %struct.gz_header_s* %head, i64 0, i32 12
  store i32 0, i32* %done, align 4, !tbaa !147
  br label %return

return:                                           ; preds = %if.end6, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateSync(%struct.z_stream_s* %strm) #3 {
entry:
  %buf = alloca [4 x i8], align 1
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %avail_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 1
  %2 = load i32* %avail_in, align 4, !tbaa !32
  %cmp4 = icmp eq i32 %2, 0
  br i1 %cmp4, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %bits = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 15
  %3 = load i32* %bits, align 4, !tbaa !132
  %cmp5 = icmp ult i32 %3, 8
  br i1 %cmp5, label %return, label %if.end7

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %mode = bitcast %struct.internal_state* %0 to i32*
  %4 = load i32* %mode, align 4, !tbaa !126
  %cmp8 = icmp eq i32 %4, 31
  br i1 %cmp8, label %if.end7.if.end22_crit_edge, label %if.then9

if.end7.if.end22_crit_edge:                       ; preds = %if.end7
  %have23.phi.trans.insert = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 26
  %.pre102 = load i32* %have23.phi.trans.insert, align 4, !tbaa !28
  br label %if.end22

if.then9:                                         ; preds = %if.end7
  store i32 31, i32* %mode, align 4, !tbaa !126
  %bits11 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 15
  %5 = load i32* %bits11, align 4, !tbaa !132
  %and = and i32 %5, 7
  %hold = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 14
  %6 = load i64* %hold, align 8, !tbaa !131
  %sh_prom = zext i32 %and to i64
  %shl = shl i64 %6, %sh_prom
  store i64 %shl, i64* %hold, align 8, !tbaa !131
  %sub = and i32 %5, -8
  store i32 %sub, i32* %bits11, align 4, !tbaa !132
  %cmp1699 = icmp ugt i32 %sub, 7
  br i1 %cmp1699, label %while.body.lr.ph, label %while.end.thread

while.end.thread:                                 ; preds = %if.then9
  %have103 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 26
  store i32 0, i32* %have103, align 4, !tbaa !144
  br label %syncsearch.exit

while.body.lr.ph:                                 ; preds = %if.then9
  %7 = sub i32 7, %sub
  %8 = icmp ugt i32 %7, -8
  %umax = select i1 %8, i32 %7, i32 -8
  %9 = add i32 %sub, %umax
  %10 = lshr i32 %9, 3
  %11 = shl nuw i32 %10, 3
  %12 = lshr i32 %5, 3
  %13 = mul i32 %12, 8
  %14 = add i32 %13, -8
  %15 = lshr i32 %14, 3
  %16 = add i32 %15, 1
  %xtraiter = and i32 %16, 3
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %16, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %unr.cmp122, label %while.body.lr.ph.split

unr.cmp122:                                       ; preds = %while.body.lr.ph
  %un.tmp123 = icmp eq i32 %xtraiter, 1
  br i1 %un.tmp123, label %while.body.unr113, label %unr.cmp

unr.cmp:                                          ; preds = %unr.cmp122
  %un.tmp = icmp eq i32 %xtraiter, 2
  br i1 %un.tmp, label %while.body.unr106, label %while.body.unr

while.body.unr:                                   ; preds = %unr.cmp
  %conv.unr = trunc i64 %shl to i8
  %indvars.iv.next.unr = add nuw nsw i64 0, 1
  %arrayidx.unr = getelementptr inbounds [4 x i8]* %buf, i64 0, i64 0
  store i8 %conv.unr, i8* %arrayidx.unr, align 1, !tbaa !5
  %shr.unr = lshr i64 %shl, 8
  %sub20.unr = add i32 %sub, -8
  %cmp16.unr = icmp ugt i32 %sub20.unr, 7
  br label %while.body.unr106

while.body.unr106:                                ; preds = %while.body.unr, %unr.cmp
  %indvars.iv.unr = phi i64 [ 0, %unr.cmp ], [ %indvars.iv.next.unr, %while.body.unr ]
  %sub20101.unr = phi i32 [ %sub, %unr.cmp ], [ %sub20.unr, %while.body.unr ]
  %17 = phi i64 [ %shl, %unr.cmp ], [ %shr.unr, %while.body.unr ]
  %conv.unr107 = trunc i64 %17 to i8
  %indvars.iv.next.unr108 = add nuw nsw i64 %indvars.iv.unr, 1
  %arrayidx.unr109 = getelementptr inbounds [4 x i8]* %buf, i64 0, i64 %indvars.iv.unr
  store i8 %conv.unr107, i8* %arrayidx.unr109, align 1, !tbaa !5
  %shr.unr110 = lshr i64 %17, 8
  %sub20.unr111 = add i32 %sub20101.unr, -8
  %cmp16.unr112 = icmp ugt i32 %sub20.unr111, 7
  br label %while.body.unr113

while.body.unr113:                                ; preds = %while.body.unr106, %unr.cmp122
  %indvars.iv.unr114 = phi i64 [ 0, %unr.cmp122 ], [ %indvars.iv.next.unr108, %while.body.unr106 ]
  %sub20101.unr115 = phi i32 [ %sub, %unr.cmp122 ], [ %sub20.unr111, %while.body.unr106 ]
  %18 = phi i64 [ %shl, %unr.cmp122 ], [ %shr.unr110, %while.body.unr106 ]
  %conv.unr116 = trunc i64 %18 to i8
  %indvars.iv.next.unr117 = add nuw nsw i64 %indvars.iv.unr114, 1
  %arrayidx.unr118 = getelementptr inbounds [4 x i8]* %buf, i64 0, i64 %indvars.iv.unr114
  store i8 %conv.unr116, i8* %arrayidx.unr118, align 1, !tbaa !5
  %shr.unr119 = lshr i64 %18, 8
  %sub20.unr120 = add i32 %sub20101.unr115, -8
  %cmp16.unr121 = icmp ugt i32 %sub20.unr120, 7
  br label %while.body.lr.ph.split

while.body.lr.ph.split:                           ; preds = %while.body.unr113, %while.body.lr.ph
  %indvars.iv.unr124 = phi i64 [ 0, %while.body.lr.ph ], [ %indvars.iv.next.unr117, %while.body.unr113 ]
  %sub20101.unr125 = phi i32 [ %sub, %while.body.lr.ph ], [ %sub20.unr120, %while.body.unr113 ]
  %.unr = phi i64 [ %shl, %while.body.lr.ph ], [ %shr.unr119, %while.body.unr113 ]
  %shr.lcssa.unr = phi i64 [ 0, %while.body.lr.ph ], [ %shr.unr119, %while.body.unr113 ]
  %19 = icmp ult i32 %16, 4
  br i1 %19, label %while.end, label %while.body.lr.ph.split.split

while.body.lr.ph.split.split:                     ; preds = %while.body.lr.ph.split
  br label %while.body

while.body:                                       ; preds = %while.body, %while.body.lr.ph.split.split
  %indvars.iv = phi i64 [ %indvars.iv.unr124, %while.body.lr.ph.split.split ], [ %indvars.iv.next.3, %while.body ]
  %sub20101 = phi i32 [ %sub20101.unr125, %while.body.lr.ph.split.split ], [ %sub20.3, %while.body ]
  %20 = phi i64 [ %.unr, %while.body.lr.ph.split.split ], [ %shr.3, %while.body ]
  %conv = trunc i64 %20 to i8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx = getelementptr inbounds [4 x i8]* %buf, i64 0, i64 %indvars.iv
  store i8 %conv, i8* %arrayidx, align 1, !tbaa !5
  %shr = lshr i64 %20, 8
  %sub20 = add i32 %sub20101, -8
  %conv.1 = trunc i64 %shr to i8
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.next, 1
  %arrayidx.1 = getelementptr inbounds [4 x i8]* %buf, i64 0, i64 %indvars.iv.next
  store i8 %conv.1, i8* %arrayidx.1, align 1, !tbaa !5
  %shr.1 = lshr i64 %shr, 8
  %sub20.1 = add i32 %sub20, -8
  %conv.2 = trunc i64 %shr.1 to i8
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.next.1, 1
  %arrayidx.2 = getelementptr inbounds [4 x i8]* %buf, i64 0, i64 %indvars.iv.next.1
  store i8 %conv.2, i8* %arrayidx.2, align 1, !tbaa !5
  %shr.2 = lshr i64 %shr.1, 8
  %sub20.2 = add i32 %sub20.1, -8
  %conv.3 = trunc i64 %shr.2 to i8
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.next.2, 1
  %arrayidx.3 = getelementptr inbounds [4 x i8]* %buf, i64 0, i64 %indvars.iv.next.2
  store i8 %conv.3, i8* %arrayidx.3, align 1, !tbaa !5
  %shr.3 = lshr i64 %shr.2, 8
  %sub20.3 = add i32 %sub20.2, -8
  %cmp16.3 = icmp ugt i32 %sub20.3, 7
  br i1 %cmp16.3, label %while.body, label %while.end.unr-lcssa

while.end.unr-lcssa:                              ; preds = %while.body
  %shr.lcssa.ph = phi i64 [ %shr.3, %while.body ]
  br label %while.end

while.end:                                        ; preds = %while.end.unr-lcssa, %while.body.lr.ph.split
  %shr.lcssa = phi i64 [ %shr.lcssa.unr, %while.body.lr.ph.split ], [ %shr.lcssa.ph, %while.end.unr-lcssa ]
  %21 = add i32 %sub, -8
  %22 = sub i32 %21, %11
  %23 = add nuw nsw i32 %10, 1
  store i64 %shr.lcssa, i64* %hold, align 8, !tbaa !131
  store i32 %22, i32* %bits11, align 4, !tbaa !132
  %have = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 26
  store i32 0, i32* %have, align 4, !tbaa !144
  br label %while.body.i

while.body.i:                                     ; preds = %if.end10.i, %while.end
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end10.i ], [ 0, %while.end ]
  %got.025.i = phi i32 [ %got.1.i, %if.end10.i ], [ 0, %while.end ]
  %arrayidx.i = getelementptr inbounds [4 x i8]* %buf, i64 0, i64 %indvars.iv.i
  %24 = load i8* %arrayidx.i, align 1, !tbaa !5
  %conv.i = zext i8 %24 to i32
  %cmp2.i = icmp ult i32 %got.025.i, 2
  %cond.i = select i1 %cmp2.i, i32 0, i32 255
  %cmp4.i = icmp eq i32 %conv.i, %cond.i
  br i1 %cmp4.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %inc.i = add i32 %got.025.i, 1
  br label %if.end10.i

if.else.i:                                        ; preds = %while.body.i
  %tobool.i = icmp eq i8 %24, 0
  %sub.i = sub i32 4, %got.025.i
  %sub..i = select i1 %tobool.i, i32 %sub.i, i32 0
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.else.i, %if.then.i
  %got.1.i = phi i32 [ %inc.i, %if.then.i ], [ %sub..i, %if.else.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %25 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp ult i32 %25, %23
  %cmp1.i = icmp ult i32 %got.1.i, 4
  %or.cond.i = and i1 %cmp.i, %cmp1.i
  br i1 %or.cond.i, label %while.body.i, label %syncsearch.exit.loopexit

syncsearch.exit.loopexit:                         ; preds = %if.end10.i
  %got.1.i.lcssa = phi i32 [ %got.1.i, %if.end10.i ]
  br label %syncsearch.exit

syncsearch.exit:                                  ; preds = %syncsearch.exit.loopexit, %while.end.thread
  %have105 = phi i32* [ %have103, %while.end.thread ], [ %have, %syncsearch.exit.loopexit ]
  %got.0.lcssa.i = phi i32 [ 0, %while.end.thread ], [ %got.1.i.lcssa, %syncsearch.exit.loopexit ]
  store i32 %got.0.lcssa.i, i32* %have105, align 4, !tbaa !28
  %.pre = load i32* %avail_in, align 4, !tbaa !32
  br label %if.end22

if.end22:                                         ; preds = %syncsearch.exit, %if.end7.if.end22_crit_edge
  %26 = phi i32 [ %.pre102, %if.end7.if.end22_crit_edge ], [ %got.0.lcssa.i, %syncsearch.exit ]
  %27 = phi i32 [ %2, %if.end7.if.end22_crit_edge ], [ %.pre, %syncsearch.exit ]
  %have23 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 26
  %next_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 0
  %28 = load i8** %next_in, align 8, !tbaa !37
  %cmp22.i73 = icmp ne i32 %27, 0
  %cmp123.i74 = icmp ult i32 %26, 4
  %or.cond24.i75 = and i1 %cmp22.i73, %cmp123.i74
  br i1 %or.cond24.i75, label %while.body.i83.preheader, label %syncsearch.exit98

while.body.i83.preheader:                         ; preds = %if.end22
  br label %while.body.i83

while.body.i83:                                   ; preds = %if.end10.i95, %while.body.i83.preheader
  %indvars.iv.i76 = phi i64 [ %indvars.iv.next.i91, %if.end10.i95 ], [ 0, %while.body.i83.preheader ]
  %got.025.i77 = phi i32 [ %got.1.i90, %if.end10.i95 ], [ %26, %while.body.i83.preheader ]
  %arrayidx.i78 = getelementptr inbounds i8* %28, i64 %indvars.iv.i76
  %29 = load i8* %arrayidx.i78, align 1, !tbaa !5
  %conv.i79 = zext i8 %29 to i32
  %cmp2.i80 = icmp ult i32 %got.025.i77, 2
  %cond.i81 = select i1 %cmp2.i80, i32 0, i32 255
  %cmp4.i82 = icmp eq i32 %conv.i79, %cond.i81
  br i1 %cmp4.i82, label %if.then.i85, label %if.else.i89

if.then.i85:                                      ; preds = %while.body.i83
  %inc.i84 = add i32 %got.025.i77, 1
  br label %if.end10.i95

if.else.i89:                                      ; preds = %while.body.i83
  %tobool.i86 = icmp eq i8 %29, 0
  %sub.i87 = sub i32 4, %got.025.i77
  %sub..i88 = select i1 %tobool.i86, i32 %sub.i87, i32 0
  br label %if.end10.i95

if.end10.i95:                                     ; preds = %if.else.i89, %if.then.i85
  %got.1.i90 = phi i32 [ %inc.i84, %if.then.i85 ], [ %sub..i88, %if.else.i89 ]
  %indvars.iv.next.i91 = add nuw nsw i64 %indvars.iv.i76, 1
  %30 = trunc i64 %indvars.iv.next.i91 to i32
  %cmp.i92 = icmp ult i32 %30, %27
  %cmp1.i93 = icmp ult i32 %got.1.i90, 4
  %or.cond.i94 = and i1 %cmp.i92, %cmp1.i93
  br i1 %or.cond.i94, label %while.body.i83, label %syncsearch.exit98.loopexit

syncsearch.exit98.loopexit:                       ; preds = %if.end10.i95
  %.lcssa = phi i32 [ %30, %if.end10.i95 ]
  %got.1.i90.lcssa = phi i32 [ %got.1.i90, %if.end10.i95 ]
  br label %syncsearch.exit98

syncsearch.exit98:                                ; preds = %syncsearch.exit98.loopexit, %if.end22
  %next.0.lcssa.i96 = phi i32 [ 0, %if.end22 ], [ %.lcssa, %syncsearch.exit98.loopexit ]
  %got.0.lcssa.i97 = phi i32 [ %26, %if.end22 ], [ %got.1.i90.lcssa, %syncsearch.exit98.loopexit ]
  store i32 %got.0.lcssa.i97, i32* %have23, align 4, !tbaa !28
  %31 = load i32* %avail_in, align 4, !tbaa !32
  %sub27 = sub i32 %31, %next.0.lcssa.i96
  store i32 %sub27, i32* %avail_in, align 4, !tbaa !32
  %idx.ext = zext i32 %next.0.lcssa.i96 to i64
  %add.ptr = getelementptr inbounds i8* %28, i64 %idx.ext
  store i8* %add.ptr, i8** %next_in, align 8, !tbaa !37
  %total_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 2
  %32 = load i64* %total_in, align 8, !tbaa !74
  %add = add i64 %32, %idx.ext
  store i64 %add, i64* %total_in, align 8, !tbaa !74
  %cmp31 = icmp eq i32 %got.0.lcssa.i97, 4
  br i1 %cmp31, label %if.end.i.i, label %return

if.end.i.i:                                       ; preds = %syncsearch.exit98
  %total_out = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 5
  %33 = load i64* %total_out, align 8, !tbaa !112
  %wsize.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 10
  store i32 0, i32* %wsize.i, align 4, !tbaa !138
  %whave.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 11
  store i32 0, i32* %whave.i, align 4, !tbaa !139
  %wnext.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 12
  store i32 0, i32* %wnext.i, align 4, !tbaa !140
  %total.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 7
  store i64 0, i64* %total.i.i, align 8, !tbaa !123
  store i64 0, i64* %total_in, align 8, !tbaa !74
  %wrap.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 2
  %34 = bitcast i64* %total_out to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %34, i8 0, i64 16, i32 8, i1 false) #4
  %35 = load i32* %wrap.i.i, align 4, !tbaa !125
  %tobool.i.i = icmp eq i32 %35, 0
  br i1 %tobool.i.i, label %inflateReset.exit, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  %and.i.i = and i32 %35, 1
  %conv28.i.i = zext i32 %and.i.i to i64
  %adler.i.i = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 12
  store i64 %conv28.i.i, i64* %adler.i.i, align 8, !tbaa !78
  br label %inflateReset.exit

inflateReset.exit:                                ; preds = %if.then4.i.i, %if.end.i.i
  %last.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 1
  store i32 0, i32* %last.i.i, align 4, !tbaa !127
  %havedict.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 3
  store i32 0, i32* %havedict.i.i, align 4, !tbaa !128
  %dmax.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 5
  store i32 32768, i32* %dmax.i.i, align 4, !tbaa !129
  %head.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 8
  store %struct.gz_header_s* null, %struct.gz_header_s** %head.i.i, align 8, !tbaa !130
  %hold.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 14
  store i64 0, i64* %hold.i.i, align 8, !tbaa !131
  %bits.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 15
  store i32 0, i32* %bits.i.i, align 4, !tbaa !132
  %arraydecay.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 30, i64 0
  %next.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 27
  store %struct.code* %arraydecay.i.i, %struct.code** %next.i.i, align 8, !tbaa !133
  %distcode.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 20
  store %struct.code* %arraydecay.i.i, %struct.code** %distcode.i.i, align 8, !tbaa !134
  %lencode.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 19
  store %struct.code* %arraydecay.i.i, %struct.code** %lencode.i.i, align 8, !tbaa !135
  %sane.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 31
  store i32 1, i32* %sane.i.i, align 4, !tbaa !136
  %back.i.i = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 32
  store i32 -1, i32* %back.i.i, align 4, !tbaa !137
  store i64 %add, i64* %total_in, align 8, !tbaa !74
  store i64 %33, i64* %total_out, align 8, !tbaa !112
  store i32 11, i32* %mode, align 4, !tbaa !126
  br label %return

return:                                           ; preds = %inflateReset.exit, %syncsearch.exit98, %land.lhs.true, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %inflateReset.exit ], [ -2, %lor.lhs.false ], [ -2, %entry ], [ -5, %land.lhs.true ], [ -3, %syncsearch.exit98 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @inflateSyncPoint(%struct.z_stream_s* readonly %strm) #6 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %mode = bitcast %struct.internal_state* %0 to i32*
  %1 = load i32* %mode, align 4, !tbaa !126
  %cmp4 = icmp eq i32 %1, 13
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %2 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %bits = getelementptr inbounds %struct.inflate_state* %2, i64 0, i32 15
  %3 = load i32* %bits, align 4, !tbaa !132
  %cmp5 = icmp eq i32 %3, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %4 = phi i1 [ false, %if.end ], [ %cmp5, %land.rhs ]
  %land.ext = zext i1 %4 to i32
  br label %return

return:                                           ; preds = %land.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ -2, %lor.lhs.false ], [ -2, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateCopy(%struct.z_stream_s* %dest, %struct.z_stream_s* readonly %source) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %dest, null
  %cmp1 = icmp eq %struct.z_stream_s* %source, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %state3 = getelementptr inbounds %struct.z_stream_s* %source, i64 0, i32 7
  %0 = load %struct.internal_state** %state3, align 8, !tbaa !47
  %cmp4 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp4, label %return, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false2
  %zalloc = getelementptr inbounds %struct.z_stream_s* %source, i64 0, i32 8
  %1 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %cmp6 = icmp eq i8* (i8*, i32, i32)* %1, null
  br i1 %cmp6, label %return, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %zfree = getelementptr inbounds %struct.z_stream_s* %source, i64 0, i32 9
  %2 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %cmp8 = icmp eq void (i8*, i8*)* %2, null
  br i1 %cmp8, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false7
  %3 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %opaque = getelementptr inbounds %struct.z_stream_s* %source, i64 0, i32 10
  %4 = load i8** %opaque, align 8, !tbaa !45
  %call = tail call i8* %1(i8* %4, i32 1, i32 7152) #4
  %cmp11 = icmp eq i8* %call, null
  br i1 %cmp11, label %return, label %if.end13

if.end13:                                         ; preds = %if.end
  %window14 = getelementptr inbounds %struct.inflate_state* %3, i64 0, i32 13
  %5 = load i8** %window14, align 8, !tbaa !141
  %cmp15 = icmp eq i8* %5, null
  br i1 %cmp15, label %if.end25, label %if.then16

if.then16:                                        ; preds = %if.end13
  %6 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %7 = load i8** %opaque, align 8, !tbaa !45
  %wbits = getelementptr inbounds %struct.inflate_state* %3, i64 0, i32 9
  %8 = load i32* %wbits, align 4, !tbaa !142
  %shl = shl i32 1, %8
  %call19 = tail call i8* %6(i8* %7, i32 %shl, i32 1) #4
  %cmp20 = icmp eq i8* %call19, null
  br i1 %cmp20, label %if.then21, label %if.end25

if.then21:                                        ; preds = %if.then16
  %9 = load void (i8*, i8*)** %zfree, align 8, !tbaa !46
  %10 = load i8** %opaque, align 8, !tbaa !45
  tail call void %9(i8* %10, i8* %call) #4
  br label %return

if.end25:                                         ; preds = %if.then16, %if.end13
  %window.0 = phi i8* [ %call19, %if.then16 ], [ null, %if.end13 ]
  %11 = bitcast %struct.z_stream_s* %dest to i8*
  %12 = bitcast %struct.z_stream_s* %source to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 112, i32 1, i1 false)
  %13 = bitcast %struct.internal_state* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call, i8* %13, i64 7152, i32 1, i1 false)
  %lencode = getelementptr inbounds %struct.inflate_state* %3, i64 0, i32 19
  %14 = load %struct.code** %lencode, align 8, !tbaa !135
  %arraydecay = getelementptr inbounds %struct.inflate_state* %3, i64 0, i32 30, i64 0
  %cmp26 = icmp ult %struct.code* %14, %arraydecay
  %add.ptr30 = getelementptr inbounds %struct.inflate_state* %3, i64 0, i32 30, i64 1443
  %cmp31 = icmp ugt %struct.code* %14, %add.ptr30
  %or.cond109 = or i1 %cmp26, %cmp31
  %codes51.pre = getelementptr inbounds i8* %call, i64 1360
  %arraydecay52.pre = bitcast i8* %codes51.pre to %struct.code*
  br i1 %or.cond109, label %if.end25.if.end50_crit_edge, label %if.then32

if.end25.if.end50_crit_edge:                      ; preds = %if.end25
  %sub.ptr.rhs.cast56.pre = ptrtoint %struct.code* %arraydecay to i64
  br label %if.end50

if.then32:                                        ; preds = %if.end25
  %sub.ptr.lhs.cast = ptrtoint %struct.code* %14 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.code* %arraydecay to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %add.ptr38 = getelementptr inbounds %struct.code* %arraydecay52.pre, i64 %sub.ptr.div
  %lencode39 = getelementptr inbounds i8* %call, i64 96
  %15 = bitcast i8* %lencode39 to %struct.code**
  store %struct.code* %add.ptr38, %struct.code** %15, align 8, !tbaa !135
  %distcode = getelementptr inbounds %struct.inflate_state* %3, i64 0, i32 20
  %16 = load %struct.code** %distcode, align 8, !tbaa !134
  %sub.ptr.lhs.cast44 = ptrtoint %struct.code* %16 to i64
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast
  %sub.ptr.div47 = ashr exact i64 %sub.ptr.sub46, 2
  %add.ptr48 = getelementptr inbounds %struct.code* %arraydecay52.pre, i64 %sub.ptr.div47
  %distcode49 = getelementptr inbounds i8* %call, i64 104
  %17 = bitcast i8* %distcode49 to %struct.code**
  store %struct.code* %add.ptr48, %struct.code** %17, align 8, !tbaa !134
  br label %if.end50

if.end50:                                         ; preds = %if.then32, %if.end25.if.end50_crit_edge
  %sub.ptr.rhs.cast56.pre-phi = phi i64 [ %sub.ptr.rhs.cast56.pre, %if.end25.if.end50_crit_edge ], [ %sub.ptr.rhs.cast, %if.then32 ]
  %next = getelementptr inbounds %struct.inflate_state* %3, i64 0, i32 27
  %18 = load %struct.code** %next, align 8, !tbaa !133
  %sub.ptr.lhs.cast55 = ptrtoint %struct.code* %18 to i64
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56.pre-phi
  %sub.ptr.div58 = ashr exact i64 %sub.ptr.sub57, 2
  %add.ptr59 = getelementptr inbounds %struct.code* %arraydecay52.pre, i64 %sub.ptr.div58
  %next60 = getelementptr inbounds i8* %call, i64 136
  %19 = bitcast i8* %next60 to %struct.code**
  store %struct.code* %add.ptr59, %struct.code** %19, align 8, !tbaa !133
  %cmp61 = icmp eq i8* %window.0, null
  br i1 %cmp61, label %if.end66, label %if.then62

if.then62:                                        ; preds = %if.end50
  %wbits63 = getelementptr inbounds %struct.inflate_state* %3, i64 0, i32 9
  %20 = load i32* %wbits63, align 4, !tbaa !142
  %shl64 = shl i32 1, %20
  %21 = load i8** %window14, align 8, !tbaa !141
  %conv = zext i32 %shl64 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %window.0, i8* %21, i64 %conv, i32 1, i1 false)
  br label %if.end66

if.end66:                                         ; preds = %if.then62, %if.end50
  %window67 = getelementptr inbounds i8* %call, i64 64
  %22 = bitcast i8* %window67 to i8**
  store i8* %window.0, i8** %22, align 8, !tbaa !141
  %23 = bitcast i8* %call to %struct.internal_state*
  %state68 = getelementptr inbounds %struct.z_stream_s* %dest, i64 0, i32 7
  store %struct.internal_state* %23, %struct.internal_state** %state68, align 8, !tbaa !47
  br label %return

return:                                           ; preds = %if.end66, %if.then21, %if.end, %lor.lhs.false7, %lor.lhs.false5, %lor.lhs.false2, %entry
  %retval.0 = phi i32 [ -4, %if.then21 ], [ 0, %if.end66 ], [ -2, %lor.lhs.false7 ], [ -2, %lor.lhs.false5 ], [ -2, %lor.lhs.false2 ], [ -2, %entry ], [ -4, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @inflateUndermine(%struct.z_stream_s* readonly %strm, i32 %subvert) #3 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %sane = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 31
  store i32 1, i32* %sane, align 4, !tbaa !136
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -3, %if.end ], [ -2, %lor.lhs.false ], [ -2, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i64 @inflateMark(%struct.z_stream_s* readonly %strm) #6 {
entry:
  %cmp = icmp eq %struct.z_stream_s* %strm, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %cmp2 = icmp eq %struct.internal_state* %0, null
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %back = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 32
  %2 = load i32* %back, align 4, !tbaa !137
  %conv = sext i32 %2 to i64
  %shl = shl nsw i64 %conv, 16
  %mode = bitcast %struct.internal_state* %0 to i32*
  %3 = load i32* %mode, align 4, !tbaa !126
  switch i32 %3, label %cond.end12 [
    i32 15, label %cond.true
    i32 24, label %cond.true9
  ]

cond.true:                                        ; preds = %if.end
  %length = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 16
  %4 = load i32* %length, align 4, !tbaa !149
  br label %cond.end12

cond.true9:                                       ; preds = %if.end
  %was = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 33
  %5 = load i32* %was, align 4, !tbaa !158
  %length10 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 16
  %6 = load i32* %length10, align 4, !tbaa !149
  %sub = sub i32 %5, %6
  br label %cond.end12

cond.end12:                                       ; preds = %cond.true9, %cond.true, %if.end
  %cond13 = phi i32 [ %4, %cond.true ], [ %sub, %cond.true9 ], [ 0, %if.end ]
  %conv14 = zext i32 %cond13 to i64
  %add = add nsw i64 %conv14, %shl
  br label %return

return:                                           ; preds = %cond.end12, %lor.lhs.false, %entry
  %retval.0 = phi i64 [ %add, %cond.end12 ], [ -65536, %lor.lhs.false ], [ -65536, %entry ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @updatewindow(%struct.z_stream_s* nocapture readonly %strm, i8* nocapture readonly %end, i32 %copy) #3 {
entry:
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %window = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 13
  %2 = load i8** %window, align 8, !tbaa !141
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %zalloc = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 8
  %3 = load i8* (i8*, i32, i32)** %zalloc, align 8, !tbaa !44
  %opaque = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 10
  %4 = load i8** %opaque, align 8, !tbaa !45
  %wbits = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 9
  %5 = load i32* %wbits, align 4, !tbaa !142
  %shl = shl i32 1, %5
  %call = tail call i8* %3(i8* %4, i32 %shl, i32 1) #4
  store i8* %call, i8** %window, align 8, !tbaa !141
  %cmp4 = icmp eq i8* %call, null
  br i1 %cmp4, label %return, label %if.end6

if.end6:                                          ; preds = %if.then, %entry
  %6 = phi i8* [ %call, %if.then ], [ %2, %entry ]
  %wsize = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 10
  %7 = load i32* %wsize, align 4, !tbaa !138
  %cmp7 = icmp eq i32 %7, 0
  br i1 %cmp7, label %if.then8, label %if.end12

if.then8:                                         ; preds = %if.end6
  %wbits9 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 9
  %8 = load i32* %wbits9, align 4, !tbaa !142
  %shl10 = shl i32 1, %8
  store i32 %shl10, i32* %wsize, align 4, !tbaa !138
  %wnext = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 12
  store i32 0, i32* %wnext, align 4, !tbaa !140
  %whave = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 11
  store i32 0, i32* %whave, align 4, !tbaa !139
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.end6
  %9 = phi i32 [ %shl10, %if.then8 ], [ %7, %if.end6 ]
  %cmp14 = icmp ugt i32 %9, %copy
  br i1 %cmp14, label %if.else, label %if.then15

if.then15:                                        ; preds = %if.end12
  %idx.ext = zext i32 %9 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds i8* %end, i64 %idx.neg
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %add.ptr, i64 %idx.ext, i32 1, i1 false)
  %wnext19 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 12
  store i32 0, i32* %wnext19, align 4, !tbaa !140
  %10 = load i32* %wsize, align 4, !tbaa !138
  %whave21 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 11
  store i32 %10, i32* %whave21, align 4, !tbaa !139
  br label %return

if.else:                                          ; preds = %if.end12
  %wnext23 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 12
  %11 = load i32* %wnext23, align 4, !tbaa !140
  %sub = sub i32 %9, %11
  %cmp24 = icmp ugt i32 %sub, %copy
  %copy.sub = select i1 %cmp24, i32 %copy, i32 %sub
  %idx.ext30 = zext i32 %11 to i64
  %add.ptr31 = getelementptr inbounds i8* %6, i64 %idx.ext30
  %idx.ext32 = zext i32 %copy to i64
  %idx.neg33 = sub i64 0, %idx.ext32
  %add.ptr34 = getelementptr inbounds i8* %end, i64 %idx.neg33
  %conv35 = zext i32 %copy.sub to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr31, i8* %add.ptr34, i64 %conv35, i32 1, i1 false)
  %sub36 = sub i32 %copy, %copy.sub
  %tobool = icmp eq i32 %copy.sub, %copy
  br i1 %tobool, label %if.else46, label %if.then37

if.then37:                                        ; preds = %if.else
  %12 = load i8** %window, align 8, !tbaa !141
  %idx.ext39 = zext i32 %sub36 to i64
  %idx.neg40 = sub i64 0, %idx.ext39
  %add.ptr41 = getelementptr inbounds i8* %end, i64 %idx.neg40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %add.ptr41, i64 %idx.ext39, i32 1, i1 false)
  store i32 %sub36, i32* %wnext23, align 4, !tbaa !140
  %13 = load i32* %wsize, align 4, !tbaa !138
  %whave45 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 11
  store i32 %13, i32* %whave45, align 4, !tbaa !139
  br label %return

if.else46:                                        ; preds = %if.else
  %14 = load i32* %wnext23, align 4, !tbaa !140
  %add = add i32 %14, %copy
  %15 = load i32* %wsize, align 4, !tbaa !138
  %cmp50 = icmp eq i32 %add, %15
  %.add = select i1 %cmp50, i32 0, i32 %add
  store i32 %.add, i32* %wnext23, align 4, !tbaa !140
  %whave55 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 11
  %16 = load i32* %whave55, align 4, !tbaa !139
  %cmp57 = icmp ult i32 %16, %15
  br i1 %cmp57, label %if.then59, label %return

if.then59:                                        ; preds = %if.else46
  %add61 = add i32 %16, %copy
  store i32 %add61, i32* %whave55, align 4, !tbaa !139
  br label %return

return:                                           ; preds = %if.then59, %if.else46, %if.then37, %if.then15, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.then37 ], [ 0, %if.then59 ], [ 0, %if.else46 ], [ 0, %if.then15 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define hidden i32 @inflate_table(i32 %type, i16* nocapture readonly %lens, i32 %codes, %struct.code** nocapture %table, i32* nocapture %bits, i16* nocapture %work) #3 {
entry:
  %count = alloca [16 x i16], align 16
  %count512 = bitcast [16 x i16]* %count to i8*
  %offs = alloca [16 x i16], align 16
  call void @llvm.memset.p0i8.i64(i8* %count512, i8 0, i64 32, i32 16, i1 false)
  %cmp2489 = icmp eq i32 %codes, 0
  br i1 %cmp2489, label %for.end11, label %for.body3.lr.ph

for.body3.lr.ph:                                  ; preds = %entry
  %0 = add i32 %codes, -1
  %xtraiter = and i32 %codes, 1
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %codes, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %for.body3.unr, label %for.body3.lr.ph.split

for.body3.unr:                                    ; preds = %for.body3.lr.ph
  %arrayidx5.unr = getelementptr inbounds i16* %lens, i64 0
  %1 = load i16* %arrayidx5.unr, align 2, !tbaa !81
  %idxprom6.unr = zext i16 %1 to i64
  %arrayidx7.unr = getelementptr inbounds [16 x i16]* %count, i64 0, i64 %idxprom6.unr
  %2 = load i16* %arrayidx7.unr, align 2, !tbaa !81
  %inc8.unr = add i16 %2, 1
  store i16 %inc8.unr, i16* %arrayidx7.unr, align 2, !tbaa !81
  %indvars.iv.next506.unr = add nuw nsw i64 0, 1
  %lftr.wideiv507.unr = trunc i64 0 to i32
  %exitcond508.unr = icmp eq i32 %lftr.wideiv507.unr, %0
  br label %for.body3.lr.ph.split

for.body3.lr.ph.split:                            ; preds = %for.body3.unr, %for.body3.lr.ph
  %indvars.iv505.unr = phi i64 [ 0, %for.body3.lr.ph ], [ %indvars.iv.next506.unr, %for.body3.unr ]
  %3 = icmp ult i32 %codes, 2
  br i1 %3, label %for.end11.loopexit, label %for.body3.lr.ph.split.split

for.body3.lr.ph.split.split:                      ; preds = %for.body3.lr.ph.split
  br label %for.body3

for.body3:                                        ; preds = %for.body3, %for.body3.lr.ph.split.split
  %indvars.iv505 = phi i64 [ %indvars.iv505.unr, %for.body3.lr.ph.split.split ], [ %indvars.iv.next506.1, %for.body3 ]
  %arrayidx5 = getelementptr inbounds i16* %lens, i64 %indvars.iv505
  %4 = load i16* %arrayidx5, align 2, !tbaa !81
  %idxprom6 = zext i16 %4 to i64
  %arrayidx7 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 %idxprom6
  %5 = load i16* %arrayidx7, align 2, !tbaa !81
  %inc8 = add i16 %5, 1
  store i16 %inc8, i16* %arrayidx7, align 2, !tbaa !81
  %indvars.iv.next506 = add nuw nsw i64 %indvars.iv505, 1
  %lftr.wideiv507 = trunc i64 %indvars.iv505 to i32
  %arrayidx5.1 = getelementptr inbounds i16* %lens, i64 %indvars.iv.next506
  %6 = load i16* %arrayidx5.1, align 2, !tbaa !81
  %idxprom6.1 = zext i16 %6 to i64
  %arrayidx7.1 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 %idxprom6.1
  %7 = load i16* %arrayidx7.1, align 2, !tbaa !81
  %inc8.1 = add i16 %7, 1
  store i16 %inc8.1, i16* %arrayidx7.1, align 2, !tbaa !81
  %indvars.iv.next506.1 = add nuw nsw i64 %indvars.iv.next506, 1
  %lftr.wideiv507.1 = trunc i64 %indvars.iv.next506 to i32
  %exitcond508.1 = icmp eq i32 %lftr.wideiv507.1, %0
  br i1 %exitcond508.1, label %for.end11.loopexit.unr-lcssa, label %for.body3

for.end11.loopexit.unr-lcssa:                     ; preds = %for.body3
  br label %for.end11.loopexit

for.end11.loopexit:                               ; preds = %for.end11.loopexit.unr-lcssa, %for.body3.lr.ph.split
  br label %for.end11

for.end11:                                        ; preds = %for.end11.loopexit, %entry
  %8 = load i32* %bits, align 4, !tbaa !28
  br label %for.body14

for.cond12:                                       ; preds = %for.body14
  %cmp13 = icmp eq i32 %dec, 0
  br i1 %cmp13, label %if.then27, label %for.body14

for.body14:                                       ; preds = %for.cond12, %for.end11
  %max.0488 = phi i32 [ 15, %for.end11 ], [ %dec, %for.cond12 ]
  %idxprom15 = zext i32 %max.0488 to i64
  %arrayidx16 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 %idxprom15
  %9 = load i16* %arrayidx16, align 2, !tbaa !81
  %cmp17 = icmp eq i16 %9, 0
  %dec = add i32 %max.0488, -1
  br i1 %cmp17, label %for.cond12, label %for.end20.thread430

for.end20.thread430:                              ; preds = %for.body14
  %max.0488.lcssa = phi i32 [ %max.0488, %for.body14 ]
  %cmp21431 = icmp ugt i32 %8, %max.0488.lcssa
  %max.0.432 = select i1 %cmp21431, i32 %max.0488.lcssa, i32 %8
  %cmp32484 = icmp ugt i32 %max.0488.lcssa, 1
  br i1 %cmp32484, label %for.body34.preheader, label %for.end44

for.body34.preheader:                             ; preds = %for.end20.thread430
  br label %for.body34

if.then27:                                        ; preds = %for.cond12
  %10 = load %struct.code** %table, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.code* %10, i64 1
  store %struct.code* %incdec.ptr, %struct.code** %table, align 8, !tbaa !1
  %here.sroa.0.0..sroa_idx290 = getelementptr inbounds %struct.code* %10, i64 0, i32 0
  store i8 64, i8* %here.sroa.0.0..sroa_idx290, align 2
  %here.sroa.9.0..sroa_idx296 = getelementptr inbounds %struct.code* %10, i64 0, i32 1
  store i8 1, i8* %here.sroa.9.0..sroa_idx296, align 1
  %here.sroa.12.0..sroa_idx303 = getelementptr inbounds %struct.code* %10, i64 0, i32 2
  store i16 0, i16* %here.sroa.12.0..sroa_idx303, align 2
  %11 = load %struct.code** %table, align 8, !tbaa !1
  %incdec.ptr29 = getelementptr inbounds %struct.code* %11, i64 1
  store %struct.code* %incdec.ptr29, %struct.code** %table, align 8, !tbaa !1
  %here.sroa.0.0..sroa_idx288 = getelementptr inbounds %struct.code* %11, i64 0, i32 0
  store i8 64, i8* %here.sroa.0.0..sroa_idx288, align 2
  %here.sroa.9.0..sroa_idx294 = getelementptr inbounds %struct.code* %11, i64 0, i32 1
  store i8 1, i8* %here.sroa.9.0..sroa_idx294, align 1
  %here.sroa.12.0..sroa_idx301 = getelementptr inbounds %struct.code* %11, i64 0, i32 2
  store i16 0, i16* %here.sroa.12.0..sroa_idx301, align 2
  store i32 1, i32* %bits, align 4, !tbaa !28
  br label %return

for.cond31:                                       ; preds = %for.body34
  %cmp32 = icmp ult i32 %inc43, %max.0488.lcssa
  br i1 %cmp32, label %for.body34, label %for.end44.loopexit

for.body34:                                       ; preds = %for.cond31, %for.body34.preheader
  %min.0485 = phi i32 [ %inc43, %for.cond31 ], [ 1, %for.body34.preheader ]
  %idxprom35 = zext i32 %min.0485 to i64
  %arrayidx36 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 %idxprom35
  %12 = load i16* %arrayidx36, align 2, !tbaa !81
  %cmp38 = icmp eq i16 %12, 0
  %inc43 = add i32 %min.0485, 1
  br i1 %cmp38, label %for.cond31, label %for.end44.loopexit

for.end44.loopexit:                               ; preds = %for.body34, %for.cond31
  %min.0.lcssa.ph = phi i32 [ %min.0485, %for.body34 ], [ %inc43, %for.cond31 ]
  br label %for.end44

for.end44:                                        ; preds = %for.end44.loopexit, %for.end20.thread430
  %min.0.lcssa = phi i32 [ 1, %for.end20.thread430 ], [ %min.0.lcssa.ph, %for.end44.loopexit ]
  %cmp45 = icmp ult i32 %max.0.432, %min.0.lcssa
  %min.0.max.0. = select i1 %cmp45, i32 %min.0.lcssa, i32 %max.0.432
  br label %for.body52

for.cond49:                                       ; preds = %for.body52
  %cmp50 = icmp ult i32 %inc61, 16
  br i1 %cmp50, label %for.body52, label %for.end62

for.body52:                                       ; preds = %for.cond49, %for.end44
  %left.0483 = phi i32 [ 1, %for.end44 ], [ %sub, %for.cond49 ]
  %len.1482 = phi i32 [ 1, %for.end44 ], [ %inc61, %for.cond49 ]
  %shl = shl i32 %left.0483, 1
  %idxprom53 = zext i32 %len.1482 to i64
  %arrayidx54 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 %idxprom53
  %13 = load i16* %arrayidx54, align 2, !tbaa !81
  %conv55 = zext i16 %13 to i32
  %sub = sub nsw i32 %shl, %conv55
  %cmp56 = icmp slt i32 %sub, 0
  %inc61 = add i32 %len.1482, 1
  br i1 %cmp56, label %return.loopexit521, label %for.cond49

for.end62:                                        ; preds = %for.cond49
  %sub.lcssa527 = phi i32 [ %sub, %for.cond49 ]
  %cmp63 = icmp sgt i32 %sub.lcssa527, 0
  br i1 %cmp63, label %land.lhs.true, label %if.end70

land.lhs.true:                                    ; preds = %for.end62
  %cmp65 = icmp eq i32 %type, 0
  %cmp67 = icmp ne i32 %max.0488.lcssa, 1
  %or.cond = or i1 %cmp65, %cmp67
  br i1 %or.cond, label %return, label %if.end70

if.end70:                                         ; preds = %land.lhs.true, %for.end62
  %arrayidx71 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 1
  store i16 0, i16* %arrayidx71, align 2, !tbaa !81
  %arrayidx80 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 1
  %14 = load i16* %arrayidx80, align 2, !tbaa !81
  %arrayidx85 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 2
  store i16 %14, i16* %arrayidx85, align 4, !tbaa !81
  %arrayidx80.1 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 2
  %15 = load i16* %arrayidx80.1, align 4, !tbaa !81
  %add.1 = add i16 %15, %14
  %arrayidx85.1 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 3
  store i16 %add.1, i16* %arrayidx85.1, align 2, !tbaa !81
  %arrayidx80.2 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 3
  %16 = load i16* %arrayidx80.2, align 2, !tbaa !81
  %add.2 = add i16 %16, %add.1
  %arrayidx85.2 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 4
  store i16 %add.2, i16* %arrayidx85.2, align 8, !tbaa !81
  %arrayidx80.3 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 4
  %17 = load i16* %arrayidx80.3, align 8, !tbaa !81
  %add.3 = add i16 %17, %add.2
  %arrayidx85.3 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 5
  store i16 %add.3, i16* %arrayidx85.3, align 2, !tbaa !81
  %arrayidx80.4 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 5
  %18 = load i16* %arrayidx80.4, align 2, !tbaa !81
  %add.4 = add i16 %18, %add.3
  %arrayidx85.4 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 6
  store i16 %add.4, i16* %arrayidx85.4, align 4, !tbaa !81
  %arrayidx80.5 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 6
  %19 = load i16* %arrayidx80.5, align 4, !tbaa !81
  %add.5 = add i16 %19, %add.4
  %arrayidx85.5 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 7
  store i16 %add.5, i16* %arrayidx85.5, align 2, !tbaa !81
  %arrayidx80.6 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 7
  %20 = load i16* %arrayidx80.6, align 2, !tbaa !81
  %add.6 = add i16 %20, %add.5
  %arrayidx85.6 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 8
  store i16 %add.6, i16* %arrayidx85.6, align 16, !tbaa !81
  %arrayidx80.7 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 8
  %21 = load i16* %arrayidx80.7, align 16, !tbaa !81
  %add.7 = add i16 %21, %add.6
  %arrayidx85.7 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 9
  store i16 %add.7, i16* %arrayidx85.7, align 2, !tbaa !81
  %arrayidx80.8 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 9
  %22 = load i16* %arrayidx80.8, align 2, !tbaa !81
  %add.8 = add i16 %22, %add.7
  %arrayidx85.8 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 10
  store i16 %add.8, i16* %arrayidx85.8, align 4, !tbaa !81
  %arrayidx80.9 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 10
  %23 = load i16* %arrayidx80.9, align 4, !tbaa !81
  %add.9 = add i16 %23, %add.8
  %arrayidx85.9 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 11
  store i16 %add.9, i16* %arrayidx85.9, align 2, !tbaa !81
  %arrayidx80.10 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 11
  %24 = load i16* %arrayidx80.10, align 2, !tbaa !81
  %add.10 = add i16 %24, %add.9
  %arrayidx85.10 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 12
  store i16 %add.10, i16* %arrayidx85.10, align 8, !tbaa !81
  %arrayidx80.11 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 12
  %25 = load i16* %arrayidx80.11, align 8, !tbaa !81
  %add.11 = add i16 %25, %add.10
  %arrayidx85.11 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 13
  store i16 %add.11, i16* %arrayidx85.11, align 2, !tbaa !81
  %arrayidx80.12 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 13
  %26 = load i16* %arrayidx80.12, align 2, !tbaa !81
  %add.12 = add i16 %26, %add.11
  %arrayidx85.12 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 14
  store i16 %add.12, i16* %arrayidx85.12, align 4, !tbaa !81
  %arrayidx80.13 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 14
  %27 = load i16* %arrayidx80.13, align 4, !tbaa !81
  %add.13 = add i16 %27, %add.12
  %arrayidx85.13 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 15
  store i16 %add.13, i16* %arrayidx85.13, align 2, !tbaa !81
  br i1 %cmp2489, label %for.end110, label %for.body92.lr.ph

for.body92.lr.ph:                                 ; preds = %if.end70
  %28 = add i32 %codes, -1
  br label %for.body92

for.body92:                                       ; preds = %for.inc108, %for.body92.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body92.lr.ph ], [ %indvars.iv.next, %for.inc108 ]
  %arrayidx94 = getelementptr inbounds i16* %lens, i64 %indvars.iv
  %29 = load i16* %arrayidx94, align 2, !tbaa !81
  %cmp96 = icmp eq i16 %29, 0
  br i1 %cmp96, label %for.inc108, label %if.then98

if.then98:                                        ; preds = %for.body92
  %conv99 = trunc i64 %indvars.iv to i16
  %idxprom102 = zext i16 %29 to i64
  %arrayidx103 = getelementptr inbounds [16 x i16]* %offs, i64 0, i64 %idxprom102
  %30 = load i16* %arrayidx103, align 2, !tbaa !81
  %inc104 = add i16 %30, 1
  store i16 %inc104, i16* %arrayidx103, align 2, !tbaa !81
  %idxprom105 = zext i16 %30 to i64
  %arrayidx106 = getelementptr inbounds i16* %work, i64 %idxprom105
  store i16 %conv99, i16* %arrayidx106, align 2, !tbaa !81
  br label %for.inc108

for.inc108:                                       ; preds = %if.then98, %for.body92
  %lftr.wideiv.pre-phi = trunc i64 %indvars.iv to i32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %lftr.wideiv.pre-phi, %28
  br i1 %exitcond, label %for.end110.loopexit, label %for.body92

for.end110.loopexit:                              ; preds = %for.inc108
  br label %for.end110

for.end110:                                       ; preds = %for.end110.loopexit, %if.end70
  switch i32 %type, label %lor.lhs.false120 [
    i32 0, label %for.cond128.preheader
    i32 1, label %sw.epilog
  ]

sw.epilog:                                        ; preds = %for.end110
  %cmp118 = icmp ugt i32 %min.0.max.0., 9
  br i1 %cmp118, label %return, label %for.cond128.preheader

lor.lhs.false120:                                 ; preds = %for.end110
  %cmp118457 = icmp ugt i32 %min.0.max.0., 9
  %cmp121 = icmp eq i32 %type, 2
  %or.cond277 = and i1 %cmp121, %cmp118457
  br i1 %or.cond277, label %return, label %for.cond128.preheader

for.cond128.preheader:                            ; preds = %lor.lhs.false120, %sw.epilog, %for.end110
  %cmp121453.ph = phi i1 [ %cmp121, %lor.lhs.false120 ], [ false, %sw.epilog ], [ false, %for.end110 ]
  %base.0439452.ph = phi i16* [ getelementptr inbounds ([32 x i16]* @inflate_table.dbase, i64 0, i64 0), %lor.lhs.false120 ], [ getelementptr ([31 x i16]* @inflate_table.lbase, i64 297528130221121791, i64 30), %sw.epilog ], [ %work, %for.end110 ]
  %extra.0440451.ph = phi i16* [ getelementptr inbounds ([32 x i16]* @inflate_table.dext, i64 0, i64 0), %lor.lhs.false120 ], [ getelementptr ([31 x i16]* @inflate_table.lext, i64 297528130221121791, i64 30), %sw.epilog ], [ %work, %for.end110 ]
  %end.0441450.ph = phi i32 [ -1, %lor.lhs.false120 ], [ 256, %sw.epilog ], [ 19, %for.end110 ]
  %cmp115444448.ph = phi i1 [ false, %lor.lhs.false120 ], [ true, %sw.epilog ], [ false, %for.end110 ]
  %sub114443449.ph.in = shl i32 1, %min.0.max.0.
  %next.0.ph = load %struct.code** %table, align 8
  %sub114443449.ph = add i32 %sub114443449.ph.in, -1
  %conv253 = trunc i32 %min.0.max.0. to i8
  br label %for.cond128.outer

for.cond128.outer:                                ; preds = %if.end247, %for.cond128.preheader
  %len.3.ph = phi i32 [ %min.0.lcssa, %for.cond128.preheader ], [ %len.4.lcssa, %if.end247 ]
  %sym.2.ph = phi i32 [ 0, %for.cond128.preheader ], [ %inc184.lcssa524, %if.end247 ]
  %curr.0.ph = phi i32 [ %min.0.max.0., %for.cond128.preheader ], [ %curr.1.lcssa, %if.end247 ]
  %drop.0.ph = phi i32 [ 0, %for.cond128.preheader ], [ %min.0.max.0..drop.0, %if.end247 ]
  %used.0.ph462 = phi i32 [ %sub114443449.ph.in, %for.cond128.preheader ], [ %add234, %if.end247 ]
  %huff.0.ph = phi i32 [ 0, %for.cond128.preheader ], [ %huff.1.lcssa523, %if.end247 ]
  %low.0.ph = phi i32 [ -1, %for.cond128.preheader ], [ %and205.lcssa, %if.end247 ]
  %next.0.ph463 = phi %struct.code* [ %next.0.ph, %for.cond128.preheader ], [ %add.ptr213, %if.end247 ]
  %shl166 = shl i32 1, %curr.0.ph
  br label %for.cond128

for.cond128:                                      ; preds = %for.cond128.backedge, %for.cond128.outer
  %len.3 = phi i32 [ %len.3.ph, %for.cond128.outer ], [ %len.4, %for.cond128.backedge ]
  %sym.2 = phi i32 [ %sym.2.ph, %for.cond128.outer ], [ %inc184, %for.cond128.backedge ]
  %huff.0 = phi i32 [ %huff.0.ph, %for.cond128.outer ], [ %huff.1, %for.cond128.backedge ]
  %sub129 = sub i32 %len.3, %drop.0.ph
  %conv130 = trunc i32 %sub129 to i8
  %idxprom132 = zext i32 %sym.2 to i64
  %arrayidx133 = getelementptr inbounds i16* %work, i64 %idxprom132
  %31 = load i16* %arrayidx133, align 2, !tbaa !81
  %conv134 = zext i16 %31 to i32
  %cmp135 = icmp slt i32 %conv134, %end.0441450.ph
  br i1 %cmp135, label %if.end163, label %if.else

if.else:                                          ; preds = %for.cond128
  %cmp145 = icmp sgt i32 %conv134, %end.0441450.ph
  br i1 %cmp145, label %if.then147, label %if.end163

if.then147:                                       ; preds = %if.else
  %idxprom150 = zext i16 %31 to i64
  %arrayidx151 = getelementptr inbounds i16* %extra.0440451.ph, i64 %idxprom150
  %32 = load i16* %arrayidx151, align 2, !tbaa !81
  %conv152 = trunc i16 %32 to i8
  %arrayidx157 = getelementptr inbounds i16* %base.0439452.ph, i64 %idxprom150
  %33 = load i16* %arrayidx157, align 2, !tbaa !81
  br label %if.end163

if.end163:                                        ; preds = %if.then147, %if.else, %for.cond128
  %here.sroa.12.0 = phi i16 [ %33, %if.then147 ], [ %31, %for.cond128 ], [ 0, %if.else ]
  %here.sroa.0.0 = phi i8 [ %conv152, %if.then147 ], [ 0, %for.cond128 ], [ 96, %if.else ]
  %shl165 = shl i32 1, %sub129
  %shr = lshr i32 %huff.0, %drop.0.ph
  br label %do.body

do.body:                                          ; preds = %do.body, %if.end163
  %fill.0 = phi i32 [ %shl166, %if.end163 ], [ %sub167, %do.body ]
  %sub167 = sub i32 %fill.0, %shl165
  %add168 = add i32 %sub167, %shr
  %idxprom169 = zext i32 %add168 to i64
  %here.sroa.0.0..sroa_idx286 = getelementptr inbounds %struct.code* %next.0.ph463, i64 %idxprom169, i32 0
  store i8 %here.sroa.0.0, i8* %here.sroa.0.0..sroa_idx286, align 2
  %here.sroa.9.0..sroa_idx292 = getelementptr inbounds %struct.code* %next.0.ph463, i64 %idxprom169, i32 1
  store i8 %conv130, i8* %here.sroa.9.0..sroa_idx292, align 1
  %here.sroa.12.0..sroa_idx299 = getelementptr inbounds %struct.code* %next.0.ph463, i64 %idxprom169, i32 2
  store i16 %here.sroa.12.0, i16* %here.sroa.12.0..sroa_idx299, align 2
  %cmp171 = icmp eq i32 %fill.0, %shl165
  br i1 %cmp171, label %do.end, label %do.body

do.end:                                           ; preds = %do.body
  %sub173 = add i32 %len.3, -1
  %shl174 = shl i32 1, %sub173
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %do.end
  %incr.0 = phi i32 [ %shl174, %do.end ], [ %shr175, %while.cond ]
  %and = and i32 %incr.0, %huff.0
  %tobool = icmp eq i32 %and, 0
  %shr175 = lshr i32 %incr.0, 1
  br i1 %tobool, label %while.end, label %while.cond

while.end:                                        ; preds = %while.cond
  %incr.0.lcssa = phi i32 [ %incr.0, %while.cond ]
  %cmp176 = icmp eq i32 %incr.0.lcssa, 0
  br i1 %cmp176, label %if.end183, label %if.then178

if.then178:                                       ; preds = %while.end
  %sub179 = add i32 %incr.0.lcssa, -1
  %and180 = and i32 %sub179, %huff.0
  %add181 = add i32 %and180, %incr.0.lcssa
  br label %if.end183

if.end183:                                        ; preds = %if.then178, %while.end
  %huff.1 = phi i32 [ %add181, %if.then178 ], [ 0, %while.end ]
  %inc184 = add i32 %sym.2, 1
  %idxprom185 = zext i32 %len.3 to i64
  %arrayidx186 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 %idxprom185
  %34 = load i16* %arrayidx186, align 2, !tbaa !81
  %dec187 = add i16 %34, -1
  store i16 %dec187, i16* %arrayidx186, align 2, !tbaa !81
  %cmp189 = icmp eq i16 %dec187, 0
  br i1 %cmp189, label %if.then191, label %if.end201

if.then191:                                       ; preds = %if.end183
  %cmp192 = icmp eq i32 %len.3, %max.0488.lcssa
  br i1 %cmp192, label %for.end262, label %if.end195

if.end195:                                        ; preds = %if.then191
  %idxprom196 = zext i32 %inc184 to i64
  %arrayidx197 = getelementptr inbounds i16* %work, i64 %idxprom196
  %35 = load i16* %arrayidx197, align 2, !tbaa !81
  %idxprom198 = zext i16 %35 to i64
  %arrayidx199 = getelementptr inbounds i16* %lens, i64 %idxprom198
  %36 = load i16* %arrayidx199, align 2, !tbaa !81
  %conv200 = zext i16 %36 to i32
  br label %if.end201

if.end201:                                        ; preds = %if.end195, %if.end183
  %len.4 = phi i32 [ %conv200, %if.end195 ], [ %len.3, %if.end183 ]
  %cmp202 = icmp ugt i32 %len.4, %min.0.max.0.
  br i1 %cmp202, label %land.lhs.true204, label %for.cond128.backedge

for.cond128.backedge:                             ; preds = %land.lhs.true204, %if.end201
  br label %for.cond128

land.lhs.true204:                                 ; preds = %if.end201
  %and205 = and i32 %huff.1, %sub114443449.ph
  %cmp206 = icmp eq i32 %and205, %low.0.ph
  br i1 %cmp206, label %for.cond128.backedge, label %if.then208

if.then208:                                       ; preds = %land.lhs.true204
  %and205.lcssa = phi i32 [ %and205, %land.lhs.true204 ]
  %len.4.lcssa = phi i32 [ %len.4, %land.lhs.true204 ]
  %inc184.lcssa524 = phi i32 [ %inc184, %land.lhs.true204 ]
  %huff.1.lcssa523 = phi i32 [ %huff.1, %land.lhs.true204 ]
  %cmp209 = icmp eq i32 %drop.0.ph, 0
  %min.0.max.0..drop.0 = select i1 %cmp209, i32 %min.0.max.0., i32 %drop.0.ph
  %idx.ext = zext i32 %shl166 to i64
  %add.ptr213 = getelementptr inbounds %struct.code* %next.0.ph463, i64 %idx.ext
  %sub214 = sub i32 %len.4.lcssa, %min.0.max.0..drop.0
  %cmp218474 = icmp ult i32 %len.4.lcssa, %max.0488.lcssa
  br i1 %cmp218474, label %while.body220.lr.ph, label %while.end232

while.body220.lr.ph:                              ; preds = %if.then208
  %shl215 = shl i32 1, %sub214
  br label %while.body220

while.body220:                                    ; preds = %if.end229, %while.body220.lr.ph
  %add217477 = phi i32 [ %len.4.lcssa, %while.body220.lr.ph ], [ %add217, %if.end229 ]
  %left.1476 = phi i32 [ %shl215, %while.body220.lr.ph ], [ %shl231, %if.end229 ]
  %curr.1475 = phi i32 [ %sub214, %while.body220.lr.ph ], [ %inc230, %if.end229 ]
  %idxprom222 = zext i32 %add217477 to i64
  %arrayidx223 = getelementptr inbounds [16 x i16]* %count, i64 0, i64 %idxprom222
  %37 = load i16* %arrayidx223, align 2, !tbaa !81
  %conv224 = zext i16 %37 to i32
  %sub225 = sub nsw i32 %left.1476, %conv224
  %cmp226 = icmp slt i32 %sub225, 1
  br i1 %cmp226, label %while.end232.loopexit, label %if.end229

if.end229:                                        ; preds = %while.body220
  %inc230 = add i32 %curr.1475, 1
  %shl231 = shl i32 %sub225, 1
  %add217 = add i32 %inc230, %min.0.max.0..drop.0
  %cmp218 = icmp ult i32 %add217, %max.0488.lcssa
  br i1 %cmp218, label %while.body220, label %while.end232.loopexit

while.end232.loopexit:                            ; preds = %if.end229, %while.body220
  %curr.1.lcssa.ph = phi i32 [ %curr.1475, %while.body220 ], [ %inc230, %if.end229 ]
  br label %while.end232

while.end232:                                     ; preds = %while.end232.loopexit, %if.then208
  %curr.1.lcssa = phi i32 [ %sub214, %if.then208 ], [ %curr.1.lcssa.ph, %while.end232.loopexit ]
  %shl233 = shl i32 1, %curr.1.lcssa
  %add234 = add i32 %shl233, %used.0.ph462
  %cmp238 = icmp ugt i32 %add234, 852
  %or.cond278 = and i1 %cmp115444448.ph, %cmp238
  %cmp244 = icmp ugt i32 %add234, 592
  %or.cond279 = and i1 %cmp121453.ph, %cmp244
  %or.cond427 = or i1 %or.cond278, %or.cond279
  br i1 %or.cond427, label %return.loopexit, label %if.end247

if.end247:                                        ; preds = %while.end232
  %conv249 = trunc i32 %curr.1.lcssa to i8
  %idxprom250 = zext i32 %and205.lcssa to i64
  %38 = load %struct.code** %table, align 8, !tbaa !1
  %op252 = getelementptr inbounds %struct.code* %38, i64 %idxprom250, i32 0
  store i8 %conv249, i8* %op252, align 1, !tbaa !162
  %bits256 = getelementptr inbounds %struct.code* %38, i64 %idxprom250, i32 1
  store i8 %conv253, i8* %bits256, align 1, !tbaa !164
  %sub.ptr.lhs.cast = ptrtoint %struct.code* %add.ptr213 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.code* %38 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div426 = lshr exact i64 %sub.ptr.sub, 2
  %conv257 = trunc i64 %sub.ptr.div426 to i16
  %val260 = getelementptr inbounds %struct.code* %38, i64 %idxprom250, i32 2
  store i16 %conv257, i16* %val260, align 2, !tbaa !165
  br label %for.cond128.outer

for.end262:                                       ; preds = %if.then191
  %next.0.ph463.lcssa = phi %struct.code* [ %next.0.ph463, %if.then191 ]
  %used.0.ph462.lcssa = phi i32 [ %used.0.ph462, %if.then191 ]
  %huff.1.lcssa = phi i32 [ %huff.1, %if.then191 ]
  %conv130.lcssa = phi i8 [ %conv130, %if.then191 ]
  %cmp263 = icmp eq i32 %huff.1.lcssa, 0
  br i1 %cmp263, label %if.end273, label %if.then265

if.then265:                                       ; preds = %for.end262
  %idxprom271 = zext i32 %huff.1.lcssa to i64
  %here.sroa.0.0..sroa_idx = getelementptr inbounds %struct.code* %next.0.ph463.lcssa, i64 %idxprom271, i32 0
  store i8 64, i8* %here.sroa.0.0..sroa_idx, align 2
  %here.sroa.9.0..sroa_idx = getelementptr inbounds %struct.code* %next.0.ph463.lcssa, i64 %idxprom271, i32 1
  store i8 %conv130.lcssa, i8* %here.sroa.9.0..sroa_idx, align 1
  %here.sroa.12.0..sroa_idx298 = getelementptr inbounds %struct.code* %next.0.ph463.lcssa, i64 %idxprom271, i32 2
  store i16 0, i16* %here.sroa.12.0..sroa_idx298, align 2
  br label %if.end273

if.end273:                                        ; preds = %if.then265, %for.end262
  %39 = load %struct.code** %table, align 8, !tbaa !1
  %idx.ext274 = zext i32 %used.0.ph462.lcssa to i64
  %add.ptr275 = getelementptr inbounds %struct.code* %39, i64 %idx.ext274
  store %struct.code* %add.ptr275, %struct.code** %table, align 8, !tbaa !1
  store i32 %min.0.max.0., i32* %bits, align 4, !tbaa !28
  br label %return

return.loopexit:                                  ; preds = %while.end232
  br label %return

return.loopexit521:                               ; preds = %for.body52
  br label %return

return:                                           ; preds = %return.loopexit521, %return.loopexit, %if.end273, %lor.lhs.false120, %sw.epilog, %land.lhs.true, %if.then27
  %retval.0 = phi i32 [ 0, %if.then27 ], [ 0, %if.end273 ], [ -1, %land.lhs.true ], [ 1, %lor.lhs.false120 ], [ 1, %sw.epilog ], [ 1, %return.loopexit ], [ -1, %return.loopexit521 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define hidden void @_tr_init(%struct.internal_state.23* %s) #3 {
entry:
  %arraydecay = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 0
  %dyn_tree = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 40, i32 0
  store %struct.ct_data_s* %arraydecay, %struct.ct_data_s** %dyn_tree, align 8, !tbaa !114
  %stat_desc = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 40, i32 2
  store %struct.static_tree_desc_s.21* bitcast ({ %struct.ct_data_s*, i32*, i32, i32, i32, [4 x i8] }* @static_l_desc to %struct.static_tree_desc_s.21*), %struct.static_tree_desc_s.21** %stat_desc, align 8, !tbaa !166
  %arraydecay2 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 0
  %dyn_tree3 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 41, i32 0
  store %struct.ct_data_s* %arraydecay2, %struct.ct_data_s** %dyn_tree3, align 8, !tbaa !115
  %stat_desc5 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 41, i32 2
  store %struct.static_tree_desc_s.21* bitcast ({ %struct.ct_data_s*, i32*, i32, i32, i32, [4 x i8] }* @static_d_desc to %struct.static_tree_desc_s.21*), %struct.static_tree_desc_s.21** %stat_desc5, align 8, !tbaa !167
  %arraydecay6 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 0
  %dyn_tree7 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 42, i32 0
  store %struct.ct_data_s* %arraydecay6, %struct.ct_data_s** %dyn_tree7, align 8, !tbaa !116
  %stat_desc9 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 42, i32 2
  store %struct.static_tree_desc_s.21* bitcast ({ %struct.ct_data_s*, i32*, i32, i32, i32, [4 x i8] }* @static_bl_desc to %struct.static_tree_desc_s.21*), %struct.static_tree_desc_s.21** %stat_desc9, align 8, !tbaa !168
  %bi_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  store i16 0, i16* %bi_buf, align 2, !tbaa !100
  %bi_valid = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  store i32 0, i32* %bi_valid, align 4, !tbaa !99
  tail call fastcc void @init_block(%struct.internal_state.23* %s)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @_tr_stored_block(%struct.internal_state.23* nocapture %s, i8* nocapture readonly %buf, i64 %stored_len, i32 %last) #3 {
entry:
  %bi_valid = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %0 = load i32* %bi_valid, align 4, !tbaa !99
  %cmp = icmp sgt i32 %0, 13
  %conv1 = and i32 %last, 65535
  %shl = shl i32 %conv1, %0
  %bi_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %1 = load i16* %bi_buf, align 2, !tbaa !100
  %conv3 = zext i16 %1 to i32
  %or = or i32 %conv3, %shl
  %conv4 = trunc i32 %or to i16
  store i16 %conv4, i16* %bi_buf, align 2, !tbaa !100
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %conv7 = trunc i32 %or to i8
  %pending = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %2 = load i32* %pending, align 4, !tbaa !76
  %inc = add i32 %2, 1
  store i32 %inc, i32* %pending, align 4, !tbaa !76
  %idxprom = zext i32 %2 to i64
  %pending_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %3 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx = getelementptr inbounds i8* %3, i64 %idxprom
  store i8 %conv7, i8* %arrayidx, align 1, !tbaa !5
  %4 = load i16* %bi_buf, align 2, !tbaa !100
  %shr56 = lshr i16 %4, 8
  %conv10 = trunc i16 %shr56 to i8
  %5 = load i32* %pending, align 4, !tbaa !76
  %inc12 = add i32 %5, 1
  store i32 %inc12, i32* %pending, align 4, !tbaa !76
  %idxprom13 = zext i32 %5 to i64
  %6 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx15 = getelementptr inbounds i8* %6, i64 %idxprom13
  store i8 %conv10, i8* %arrayidx15, align 1, !tbaa !5
  %7 = load i32* %bi_valid, align 4, !tbaa !99
  %sub19 = sub nsw i32 16, %7
  %shr20 = lshr i32 %conv1, %sub19
  %conv21 = trunc i32 %shr20 to i16
  store i16 %conv21, i16* %bi_buf, align 2, !tbaa !100
  %add25 = add nsw i32 %7, -13
  br label %if.end

if.else:                                          ; preds = %entry
  %add36 = add nsw i32 %0, 3
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = phi i16 [ %conv4, %if.else ], [ %conv21, %if.then ]
  %storemerge = phi i32 [ %add36, %if.else ], [ %add25, %if.then ]
  store i32 %storemerge, i32* %bi_valid, align 4, !tbaa !99
  %conv37 = trunc i64 %stored_len to i32
  %cmp.i.i = icmp sgt i32 %storemerge, 8
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %if.end
  %conv1.i.i = trunc i16 %8 to i8
  %pending.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %9 = load i32* %pending.i.i, align 4, !tbaa !76
  %inc.i.i = add i32 %9, 1
  store i32 %inc.i.i, i32* %pending.i.i, align 4, !tbaa !76
  %idxprom.i.i = zext i32 %9 to i64
  %pending_buf.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %10 = load i8** %pending_buf.i.i, align 8, !tbaa !66
  %arrayidx.i.i = getelementptr inbounds i8* %10, i64 %idxprom.i.i
  store i8 %conv1.i.i, i8* %arrayidx.i.i, align 1, !tbaa !5
  %11 = load i16* %bi_buf, align 2, !tbaa !100
  %shr35.i.i = lshr i16 %11, 8
  %conv4.i.i = trunc i16 %shr35.i.i to i8
  %12 = load i32* %pending.i.i, align 4, !tbaa !76
  %inc6.i.i = add i32 %12, 1
  store i32 %inc6.i.i, i32* %pending.i.i, align 4, !tbaa !76
  %idxprom7.i.i = zext i32 %12 to i64
  %13 = load i8** %pending_buf.i.i, align 8, !tbaa !66
  %arrayidx9.i.i = getelementptr inbounds i8* %13, i64 %idxprom7.i.i
  store i8 %conv4.i.i, i8* %arrayidx9.i.i, align 1, !tbaa !5
  br label %bi_windup.exit.i

if.else.i.i:                                      ; preds = %if.end
  %cmp11.i.i = icmp sgt i32 %storemerge, 0
  br i1 %cmp11.i.i, label %if.then13.i.i, label %if.else.i.bi_windup.exit_crit_edge.i

if.else.i.bi_windup.exit_crit_edge.i:             ; preds = %if.else.i.i
  %pending.pre.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %pending_buf.pre.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  br label %bi_windup.exit.i

if.then13.i.i:                                    ; preds = %if.else.i.i
  %conv15.i.i = trunc i16 %8 to i8
  %pending16.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %14 = load i32* %pending16.i.i, align 4, !tbaa !76
  %inc17.i.i = add i32 %14, 1
  store i32 %inc17.i.i, i32* %pending16.i.i, align 4, !tbaa !76
  %idxprom18.i.i = zext i32 %14 to i64
  %pending_buf19.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %15 = load i8** %pending_buf19.i.i, align 8, !tbaa !66
  %arrayidx20.i.i = getelementptr inbounds i8* %15, i64 %idxprom18.i.i
  store i8 %conv15.i.i, i8* %arrayidx20.i.i, align 1, !tbaa !5
  br label %bi_windup.exit.i

bi_windup.exit.i:                                 ; preds = %if.then13.i.i, %if.else.i.bi_windup.exit_crit_edge.i, %if.then.i.i
  %pending_buf.pre-phi.i = phi i8** [ %pending_buf.pre.i, %if.else.i.bi_windup.exit_crit_edge.i ], [ %pending_buf.i.i, %if.then.i.i ], [ %pending_buf19.i.i, %if.then13.i.i ]
  %pending.pre-phi.i = phi i32* [ %pending.pre.i, %if.else.i.bi_windup.exit_crit_edge.i ], [ %pending.i.i, %if.then.i.i ], [ %pending16.i.i, %if.then13.i.i ]
  store i16 0, i16* %bi_buf, align 2, !tbaa !100
  store i32 0, i32* %bi_valid, align 4, !tbaa !99
  %conv2.i = trunc i64 %stored_len to i8
  %16 = load i32* %pending.pre-phi.i, align 4, !tbaa !76
  %inc.i = add i32 %16, 1
  store i32 %inc.i, i32* %pending.pre-phi.i, align 4, !tbaa !76
  %idxprom.i = zext i32 %16 to i64
  %17 = load i8** %pending_buf.pre-phi.i, align 8, !tbaa !66
  %arrayidx.i = getelementptr inbounds i8* %17, i64 %idxprom.i
  store i8 %conv2.i, i8* %arrayidx.i, align 1, !tbaa !5
  %conv1.i = lshr i32 %conv37, 8
  %conv5.i = trunc i32 %conv1.i to i8
  %18 = load i32* %pending.pre-phi.i, align 4, !tbaa !76
  %inc7.i = add i32 %18, 1
  store i32 %inc7.i, i32* %pending.pre-phi.i, align 4, !tbaa !76
  %idxprom8.i = zext i32 %18 to i64
  %19 = load i8** %pending_buf.pre-phi.i, align 8, !tbaa !66
  %arrayidx10.i = getelementptr inbounds i8* %19, i64 %idxprom8.i
  store i8 %conv5.i, i8* %arrayidx10.i, align 1, !tbaa !5
  %neg.i = and i32 %conv37, 65535
  %conv12.i = xor i32 %neg.i, 65535
  %conv14.i = trunc i32 %conv12.i to i8
  %20 = load i32* %pending.pre-phi.i, align 4, !tbaa !76
  %inc16.i = add i32 %20, 1
  store i32 %inc16.i, i32* %pending.pre-phi.i, align 4, !tbaa !76
  %idxprom17.i = zext i32 %20 to i64
  %21 = load i8** %pending_buf.pre-phi.i, align 8, !tbaa !66
  %arrayidx19.i = getelementptr inbounds i8* %21, i64 %idxprom17.i
  store i8 %conv14.i, i8* %arrayidx19.i, align 1, !tbaa !5
  %shr232.i = lshr i32 %conv12.i, 8
  %conv24.i = trunc i32 %shr232.i to i8
  %22 = load i32* %pending.pre-phi.i, align 4, !tbaa !76
  %inc26.i = add i32 %22, 1
  store i32 %inc26.i, i32* %pending.pre-phi.i, align 4, !tbaa !76
  %idxprom27.i = zext i32 %22 to i64
  %23 = load i8** %pending_buf.pre-phi.i, align 8, !tbaa !66
  %arrayidx29.i = getelementptr inbounds i8* %23, i64 %idxprom27.i
  store i8 %conv24.i, i8* %arrayidx29.i, align 1, !tbaa !5
  %tobool303.i = icmp eq i32 %conv37, 0
  br i1 %tobool303.i, label %copy_block.exit, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %bi_windup.exit.i
  %24 = trunc i64 %stored_len to i32
  %xtraiter = and i32 %24, 1
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %24, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %while.body.i.unr, label %while.body.i.preheader.split

while.body.i.unr:                                 ; preds = %while.body.i.preheader
  %dec.i.unr = add i32 %conv37, -1
  %incdec.ptr.i.unr = getelementptr inbounds i8* %buf, i64 1
  %25 = load i8* %buf, align 1, !tbaa !5
  %26 = load i32* %pending.pre-phi.i, align 4, !tbaa !76
  %inc32.i.unr = add i32 %26, 1
  store i32 %inc32.i.unr, i32* %pending.pre-phi.i, align 4, !tbaa !76
  %idxprom33.i.unr = zext i32 %26 to i64
  %27 = load i8** %pending_buf.pre-phi.i, align 8, !tbaa !66
  %arrayidx35.i.unr = getelementptr inbounds i8* %27, i64 %idxprom33.i.unr
  store i8 %25, i8* %arrayidx35.i.unr, align 1, !tbaa !5
  %tobool30.i.unr = icmp eq i32 %dec.i.unr, 0
  br label %while.body.i.preheader.split

while.body.i.preheader.split:                     ; preds = %while.body.i.unr, %while.body.i.preheader
  %buf.addr.05.i.unr = phi i8* [ %buf, %while.body.i.preheader ], [ %incdec.ptr.i.unr, %while.body.i.unr ]
  %len.addr.04.i.unr = phi i32 [ %conv37, %while.body.i.preheader ], [ %dec.i.unr, %while.body.i.unr ]
  %28 = icmp ult i32 %24, 2
  br i1 %28, label %copy_block.exit.loopexit, label %while.body.i.preheader.split.split

while.body.i.preheader.split.split:               ; preds = %while.body.i.preheader.split
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.i.preheader.split.split
  %buf.addr.05.i = phi i8* [ %buf.addr.05.i.unr, %while.body.i.preheader.split.split ], [ %incdec.ptr.i.1, %while.body.i ]
  %len.addr.04.i = phi i32 [ %len.addr.04.i.unr, %while.body.i.preheader.split.split ], [ %dec.i.1, %while.body.i ]
  %dec.i = add i32 %len.addr.04.i, -1
  %incdec.ptr.i = getelementptr inbounds i8* %buf.addr.05.i, i64 1
  %29 = load i8* %buf.addr.05.i, align 1, !tbaa !5
  %30 = load i32* %pending.pre-phi.i, align 4, !tbaa !76
  %inc32.i = add i32 %30, 1
  store i32 %inc32.i, i32* %pending.pre-phi.i, align 4, !tbaa !76
  %idxprom33.i = zext i32 %30 to i64
  %31 = load i8** %pending_buf.pre-phi.i, align 8, !tbaa !66
  %arrayidx35.i = getelementptr inbounds i8* %31, i64 %idxprom33.i
  store i8 %29, i8* %arrayidx35.i, align 1, !tbaa !5
  %dec.i.1 = add i32 %dec.i, -1
  %incdec.ptr.i.1 = getelementptr inbounds i8* %incdec.ptr.i, i64 1
  %32 = load i8* %incdec.ptr.i, align 1, !tbaa !5
  %33 = load i32* %pending.pre-phi.i, align 4, !tbaa !76
  %inc32.i.1 = add i32 %33, 1
  store i32 %inc32.i.1, i32* %pending.pre-phi.i, align 4, !tbaa !76
  %idxprom33.i.1 = zext i32 %33 to i64
  %34 = load i8** %pending_buf.pre-phi.i, align 8, !tbaa !66
  %arrayidx35.i.1 = getelementptr inbounds i8* %34, i64 %idxprom33.i.1
  store i8 %32, i8* %arrayidx35.i.1, align 1, !tbaa !5
  %tobool30.i.1 = icmp eq i32 %dec.i.1, 0
  br i1 %tobool30.i.1, label %copy_block.exit.loopexit.unr-lcssa, label %while.body.i

copy_block.exit.loopexit.unr-lcssa:               ; preds = %while.body.i
  br label %copy_block.exit.loopexit

copy_block.exit.loopexit:                         ; preds = %copy_block.exit.loopexit.unr-lcssa, %while.body.i.preheader.split
  br label %copy_block.exit

copy_block.exit:                                  ; preds = %copy_block.exit.loopexit, %bi_windup.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @_tr_flush_bits(%struct.internal_state.23* nocapture %s) #3 {
entry:
  %bi_valid.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %0 = load i32* %bi_valid.i, align 4, !tbaa !99
  %cmp.i = icmp eq i32 %0, 16
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %bi_buf.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %1 = load i16* %bi_buf.i, align 2, !tbaa !100
  %conv1.i = trunc i16 %1 to i8
  %pending.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %2 = load i32* %pending.i, align 4, !tbaa !76
  %inc.i = add i32 %2, 1
  store i32 %inc.i, i32* %pending.i, align 4, !tbaa !76
  %idxprom.i = zext i32 %2 to i64
  %pending_buf.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %3 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx.i = getelementptr inbounds i8* %3, i64 %idxprom.i
  store i8 %conv1.i, i8* %arrayidx.i, align 1, !tbaa !5
  %4 = load i16* %bi_buf.i, align 2, !tbaa !100
  %shr43.i = lshr i16 %4, 8
  %conv4.i = trunc i16 %shr43.i to i8
  %5 = load i32* %pending.i, align 4, !tbaa !76
  %inc6.i = add i32 %5, 1
  store i32 %inc6.i, i32* %pending.i, align 4, !tbaa !76
  %idxprom7.i = zext i32 %5 to i64
  %6 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx9.i = getelementptr inbounds i8* %6, i64 %idxprom7.i
  store i8 %conv4.i, i8* %arrayidx9.i, align 1, !tbaa !5
  store i16 0, i16* %bi_buf.i, align 2, !tbaa !100
  store i32 0, i32* %bi_valid.i, align 4, !tbaa !99
  br label %bi_flush.exit

if.else.i:                                        ; preds = %entry
  %cmp13.i = icmp sgt i32 %0, 7
  br i1 %cmp13.i, label %if.then15.i, label %bi_flush.exit

if.then15.i:                                      ; preds = %if.else.i
  %bi_buf16.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %7 = load i16* %bi_buf16.i, align 2, !tbaa !100
  %conv17.i = trunc i16 %7 to i8
  %pending18.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %8 = load i32* %pending18.i, align 4, !tbaa !76
  %inc19.i = add i32 %8, 1
  store i32 %inc19.i, i32* %pending18.i, align 4, !tbaa !76
  %idxprom20.i = zext i32 %8 to i64
  %pending_buf21.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %9 = load i8** %pending_buf21.i, align 8, !tbaa !66
  %arrayidx22.i = getelementptr inbounds i8* %9, i64 %idxprom20.i
  store i8 %conv17.i, i8* %arrayidx22.i, align 1, !tbaa !5
  %10 = load i16* %bi_buf16.i, align 2, !tbaa !100
  %shr2542.i = lshr i16 %10, 8
  store i16 %shr2542.i, i16* %bi_buf16.i, align 2, !tbaa !100
  %11 = load i32* %bi_valid.i, align 4, !tbaa !99
  %sub.i = add nsw i32 %11, -8
  store i32 %sub.i, i32* %bi_valid.i, align 4, !tbaa !99
  br label %bi_flush.exit

bi_flush.exit:                                    ; preds = %if.then15.i, %if.else.i, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @_tr_align(%struct.internal_state.23* nocapture %s) #3 {
entry:
  %bi_valid = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %0 = load i32* %bi_valid, align 4, !tbaa !99
  %cmp = icmp sgt i32 %0, 13
  %shl = shl i32 2, %0
  %bi_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %1 = load i16* %bi_buf, align 2, !tbaa !100
  %conv3 = zext i16 %1 to i32
  %or = or i32 %conv3, %shl
  %conv4 = trunc i32 %or to i16
  store i16 %conv4, i16* %bi_buf, align 2, !tbaa !100
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %conv7 = trunc i32 %or to i8
  %pending = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %2 = load i32* %pending, align 4, !tbaa !76
  %inc = add i32 %2, 1
  store i32 %inc, i32* %pending, align 4, !tbaa !76
  %idxprom = zext i32 %2 to i64
  %pending_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %3 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx = getelementptr inbounds i8* %3, i64 %idxprom
  store i8 %conv7, i8* %arrayidx, align 1, !tbaa !5
  %4 = load i16* %bi_buf, align 2, !tbaa !100
  %shr127 = lshr i16 %4, 8
  %conv10 = trunc i16 %shr127 to i8
  %5 = load i32* %pending, align 4, !tbaa !76
  %inc12 = add i32 %5, 1
  store i32 %inc12, i32* %pending, align 4, !tbaa !76
  %idxprom13 = zext i32 %5 to i64
  %6 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx15 = getelementptr inbounds i8* %6, i64 %idxprom13
  store i8 %conv10, i8* %arrayidx15, align 1, !tbaa !5
  %7 = load i32* %bi_valid, align 4, !tbaa !99
  %sub19 = sub nsw i32 16, %7
  %shr20 = lshr i32 2, %sub19
  %conv21 = trunc i32 %shr20 to i16
  store i16 %conv21, i16* %bi_buf, align 2, !tbaa !100
  %add = add nsw i32 %7, -13
  br label %if.end

if.else:                                          ; preds = %entry
  %add32 = add nsw i32 %0, 3
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = phi i16 [ %conv4, %if.else ], [ %conv21, %if.then ]
  %storemerge = phi i32 [ %add32, %if.else ], [ %add, %if.then ]
  store i32 %storemerge, i32* %bi_valid, align 4, !tbaa !99
  %cmp37 = icmp sgt i32 %storemerge, 9
  br i1 %cmp37, label %if.then39, label %if.else78

if.then39:                                        ; preds = %if.end
  %conv53 = trunc i16 %8 to i8
  %pending54 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %9 = load i32* %pending54, align 4, !tbaa !76
  %inc55 = add i32 %9, 1
  store i32 %inc55, i32* %pending54, align 4, !tbaa !76
  %idxprom56 = zext i32 %9 to i64
  %pending_buf57 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %10 = load i8** %pending_buf57, align 8, !tbaa !66
  %arrayidx58 = getelementptr inbounds i8* %10, i64 %idxprom56
  store i8 %conv53, i8* %arrayidx58, align 1, !tbaa !5
  %11 = load i16* %bi_buf, align 2, !tbaa !100
  %shr61126 = lshr i16 %11, 8
  %conv62 = trunc i16 %shr61126 to i8
  %12 = load i32* %pending54, align 4, !tbaa !76
  %inc64 = add i32 %12, 1
  store i32 %inc64, i32* %pending54, align 4, !tbaa !76
  %idxprom65 = zext i32 %12 to i64
  %13 = load i8** %pending_buf57, align 8, !tbaa !66
  %arrayidx67 = getelementptr inbounds i8* %13, i64 %idxprom65
  store i8 %conv62, i8* %arrayidx67, align 1, !tbaa !5
  store i16 0, i16* %bi_buf, align 2, !tbaa !100
  %14 = load i32* %bi_valid, align 4, !tbaa !99
  %add77 = add nsw i32 %14, -9
  br label %if.end88

if.else78:                                        ; preds = %if.end
  %add87 = add nsw i32 %storemerge, 7
  br label %if.end88

if.end88:                                         ; preds = %if.else78, %if.then39
  %15 = phi i16 [ %8, %if.else78 ], [ 0, %if.then39 ]
  %storemerge125 = phi i32 [ %add87, %if.else78 ], [ %add77, %if.then39 ]
  store i32 %storemerge125, i32* %bi_valid, align 4, !tbaa !99
  %cmp.i = icmp eq i32 %storemerge125, 16
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end88
  %conv1.i = trunc i16 %15 to i8
  %pending.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %16 = load i32* %pending.i, align 4, !tbaa !76
  %inc.i = add i32 %16, 1
  store i32 %inc.i, i32* %pending.i, align 4, !tbaa !76
  %idxprom.i = zext i32 %16 to i64
  %pending_buf.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %17 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx.i = getelementptr inbounds i8* %17, i64 %idxprom.i
  store i8 %conv1.i, i8* %arrayidx.i, align 1, !tbaa !5
  %18 = load i16* %bi_buf, align 2, !tbaa !100
  %shr43.i = lshr i16 %18, 8
  %conv4.i = trunc i16 %shr43.i to i8
  %19 = load i32* %pending.i, align 4, !tbaa !76
  %inc6.i = add i32 %19, 1
  store i32 %inc6.i, i32* %pending.i, align 4, !tbaa !76
  %idxprom7.i = zext i32 %19 to i64
  %20 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx9.i = getelementptr inbounds i8* %20, i64 %idxprom7.i
  store i8 %conv4.i, i8* %arrayidx9.i, align 1, !tbaa !5
  store i16 0, i16* %bi_buf, align 2, !tbaa !100
  store i32 0, i32* %bi_valid, align 4, !tbaa !99
  br label %bi_flush.exit

if.else.i:                                        ; preds = %if.end88
  %cmp13.i = icmp sgt i32 %storemerge125, 7
  br i1 %cmp13.i, label %if.then15.i, label %bi_flush.exit

if.then15.i:                                      ; preds = %if.else.i
  %conv17.i = trunc i16 %15 to i8
  %pending18.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %21 = load i32* %pending18.i, align 4, !tbaa !76
  %inc19.i = add i32 %21, 1
  store i32 %inc19.i, i32* %pending18.i, align 4, !tbaa !76
  %idxprom20.i = zext i32 %21 to i64
  %pending_buf21.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %22 = load i8** %pending_buf21.i, align 8, !tbaa !66
  %arrayidx22.i = getelementptr inbounds i8* %22, i64 %idxprom20.i
  store i8 %conv17.i, i8* %arrayidx22.i, align 1, !tbaa !5
  %23 = load i16* %bi_buf, align 2, !tbaa !100
  %shr2542.i = lshr i16 %23, 8
  store i16 %shr2542.i, i16* %bi_buf, align 2, !tbaa !100
  %24 = load i32* %bi_valid, align 4, !tbaa !99
  %sub.i = add nsw i32 %24, -8
  store i32 %sub.i, i32* %bi_valid, align 4, !tbaa !99
  br label %bi_flush.exit

bi_flush.exit:                                    ; preds = %if.then15.i, %if.else.i, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @_tr_flush_block(%struct.internal_state.23* %s, i8* readonly %buf, i64 %stored_len, i32 %last) #3 {
entry:
  %level = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 33
  %0 = load i32* %level, align 4, !tbaa !71
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %strm = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 0
  %1 = load %struct.z_stream_s.19** %strm, align 8, !tbaa !48
  %data_type = getelementptr inbounds %struct.z_stream_s.19* %1, i64 0, i32 11
  %2 = load i32* %data_type, align 4, !tbaa !75
  %cmp1 = icmp eq i32 %2, 2
  br i1 %cmp1, label %for.body.i.preheader, label %if.end

for.body.i.preheader:                             ; preds = %if.then
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.i.preheader
  %indvars.iv58.i = phi i64 [ %indvars.iv.next59.i, %for.inc.i ], [ 0, %for.body.i.preheader ]
  %black_mask.056.i = phi i64 [ %shr.i, %for.inc.i ], [ 4093624447, %for.body.i.preheader ]
  %and.i = and i64 %black_mask.056.i, 1
  %tobool.i = icmp eq i64 %and.i, 0
  br i1 %tobool.i, label %for.inc.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %freq.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 %indvars.iv58.i, i32 0, i32 0
  %3 = load i16* %freq.i, align 2, !tbaa !81
  %cmp1.i = icmp eq i16 %3, 0
  br i1 %cmp1.i, label %for.inc.i, label %detect_data_type.exit.loopexit232

for.inc.i:                                        ; preds = %land.lhs.true.i, %for.body.i
  %indvars.iv.next59.i = add nuw nsw i64 %indvars.iv58.i, 1
  %shr.i = lshr i64 %black_mask.056.i, 1
  %4 = trunc i64 %indvars.iv.next59.i to i32
  %cmp.i = icmp slt i32 %4, 32
  br i1 %cmp.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.inc.i
  %freq6.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 9, i32 0, i32 0
  %5 = load i16* %freq6.i, align 2, !tbaa !81
  %cmp8.i = icmp eq i16 %5, 0
  br i1 %cmp8.i, label %lor.lhs.false.i, label %detect_data_type.exit

lor.lhs.false.i:                                  ; preds = %for.end.i
  %freq13.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 10, i32 0, i32 0
  %6 = load i16* %freq13.i, align 2, !tbaa !81
  %cmp15.i = icmp eq i16 %6, 0
  br i1 %cmp15.i, label %lor.lhs.false17.i, label %detect_data_type.exit

lor.lhs.false17.i:                                ; preds = %lor.lhs.false.i
  %freq21.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 13, i32 0, i32 0
  %7 = load i16* %freq21.i, align 2, !tbaa !81
  %cmp23.i = icmp eq i16 %7, 0
  br i1 %cmp23.i, label %for.body30.i.preheader, label %detect_data_type.exit

for.body30.i.preheader:                           ; preds = %lor.lhs.false17.i
  br label %for.body30.i

for.cond27.i:                                     ; preds = %for.body30.i
  %8 = trunc i64 %indvars.iv.next.i to i32
  %cmp28.i = icmp slt i32 %8, 256
  br i1 %cmp28.i, label %for.body30.i, label %detect_data_type.exit.loopexit

for.body30.i:                                     ; preds = %for.cond27.i, %for.body30.i.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.cond27.i ], [ 32, %for.body30.i.preheader ]
  %freq35.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 %indvars.iv.i, i32 0, i32 0
  %9 = load i16* %freq35.i, align 2, !tbaa !81
  %cmp37.i = icmp eq i16 %9, 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %cmp37.i, label %for.cond27.i, label %detect_data_type.exit.loopexit

detect_data_type.exit.loopexit:                   ; preds = %for.body30.i, %for.cond27.i
  %retval.0.i.ph = phi i32 [ 1, %for.body30.i ], [ 0, %for.cond27.i ]
  br label %detect_data_type.exit

detect_data_type.exit.loopexit232:                ; preds = %land.lhs.true.i
  br label %detect_data_type.exit

detect_data_type.exit:                            ; preds = %detect_data_type.exit.loopexit232, %detect_data_type.exit.loopexit, %lor.lhs.false17.i, %lor.lhs.false.i, %for.end.i
  %retval.0.i = phi i32 [ 1, %lor.lhs.false17.i ], [ 1, %lor.lhs.false.i ], [ 1, %for.end.i ], [ %retval.0.i.ph, %detect_data_type.exit.loopexit ], [ 0, %detect_data_type.exit.loopexit232 ]
  store i32 %retval.0.i, i32* %data_type, align 4, !tbaa !75
  br label %if.end

if.end:                                           ; preds = %detect_data_type.exit, %if.then
  %l_desc = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 40
  tail call fastcc void @build_tree(%struct.internal_state.23* %s, %struct.tree_desc_s.22* %l_desc)
  %d_desc = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 41
  tail call fastcc void @build_tree(%struct.internal_state.23* %s, %struct.tree_desc_s.22* %d_desc)
  %max_code.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 40, i32 1
  %10 = load i32* %max_code.i, align 4, !tbaa !169
  %len.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 0, i32 1, i32 0
  %11 = load i16* %len.i.i, align 2, !tbaa !81
  %conv.i.i = zext i16 %11 to i32
  %cmp.i.i = icmp eq i16 %11, 0
  %..i.i = select i1 %cmp.i.i, i32 138, i32 7
  %.98.i.i = select i1 %cmp.i.i, i32 3, i32 4
  %add.i.i = add nsw i32 %10, 1
  %idxprom.i.i = sext i32 %add.i.i to i64
  %len4.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 %idxprom.i.i, i32 1, i32 0
  store i16 -1, i16* %len4.i.i, align 2, !tbaa !81
  %freq52.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 17, i32 0, i32 0
  %freq58.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 18, i32 0, i32 0
  %freq43.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 16, i32 0, i32 0
  br label %for.cond.outer.i.i

for.cond.outer.i.i:                               ; preds = %for.cond.outer.backedge.i.i, %if.end
  %prevlen.0.ph.i.i = phi i32 [ -1, %if.end ], [ %nextlen.0.ph.i.i, %for.cond.outer.backedge.i.i ]
  %n.0.ph.i.i = phi i64 [ 0, %if.end ], [ %phitmp.i.i, %for.cond.outer.backedge.i.i ]
  %nextlen.0.ph.i.i = phi i32 [ %conv.i.i, %if.end ], [ %conv12.i.i.lcssa, %for.cond.outer.backedge.i.i ]
  %max_count.1.ph.i.i = phi i32 [ %..i.i, %if.end ], [ %max_count.1.ph.be.i.i, %for.cond.outer.backedge.i.i ]
  %min_count.1.ph.i.i = phi i32 [ %.98.i.i, %if.end ], [ %min_count.1.ph.be.i.i, %for.cond.outer.backedge.i.i ]
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i, %for.cond.outer.i.i
  %indvars.iv.i.i = phi i64 [ %n.0.ph.i.i, %for.cond.outer.i.i ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %count.0.i.i = phi i32 [ 0, %for.cond.outer.i.i ], [ %inc.i.i, %for.body.i.i ]
  %12 = trunc i64 %indvars.iv.i.i to i32
  %cmp5.i.i = icmp sgt i32 %12, %10
  br i1 %cmp5.i.i, label %scan_tree.exit.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, 1
  %len11.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 %indvars.iv.next.i.i, i32 1, i32 0
  %13 = load i16* %len11.i.i, align 2, !tbaa !81
  %conv12.i.i = zext i16 %13 to i32
  %inc.i.i = add nsw i32 %count.0.i.i, 1
  %cmp13.i.i = icmp slt i32 %inc.i.i, %max_count.1.ph.i.i
  %cmp15.i.i = icmp eq i32 %nextlen.0.ph.i.i, %conv12.i.i
  %or.cond.i.i = and i1 %cmp13.i.i, %cmp15.i.i
  br i1 %or.cond.i.i, label %for.cond.i.i, label %if.else.i.i

if.else.i.i:                                      ; preds = %for.body.i.i
  %cmp15.i.i.lcssa = phi i1 [ %cmp15.i.i, %for.body.i.i ]
  %inc.i.i.lcssa = phi i32 [ %inc.i.i, %for.body.i.i ]
  %conv12.i.i.lcssa = phi i32 [ %conv12.i.i, %for.body.i.i ]
  %.lcssa233 = phi i16 [ %13, %for.body.i.i ]
  %indvars.iv.next.i.i.lcssa = phi i64 [ %indvars.iv.next.i.i, %for.body.i.i ]
  %cmp18.i.i = icmp slt i32 %inc.i.i.lcssa, %min_count.1.ph.i.i
  br i1 %cmp18.i.i, label %if.then20.i.i, label %if.else26.i.i

if.then20.i.i:                                    ; preds = %if.else.i.i
  %idxprom2197.i.i = zext i32 %nextlen.0.ph.i.i to i64
  %freq.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom2197.i.i, i32 0, i32 0
  %14 = load i16* %freq.i.i, align 2, !tbaa !81
  %conv23.i.i = zext i16 %14 to i32
  %add24.i.i = add nsw i32 %conv23.i.i, %inc.i.i.lcssa
  %conv25.i.i = trunc i32 %add24.i.i to i16
  store i16 %conv25.i.i, i16* %freq.i.i, align 2, !tbaa !81
  br label %if.end63.i.i

if.else26.i.i:                                    ; preds = %if.else.i.i
  %cmp27.i.i = icmp eq i32 %nextlen.0.ph.i.i, 0
  br i1 %cmp27.i.i, label %if.else45.i.i, label %if.then29.i.i

if.then29.i.i:                                    ; preds = %if.else26.i.i
  %cmp30.i.i = icmp eq i32 %nextlen.0.ph.i.i, %prevlen.0.ph.i.i
  br i1 %cmp30.i.i, label %if.end39.i.i, label %if.then32.i.i

if.then32.i.i:                                    ; preds = %if.then29.i.i
  %idxprom3396.i.i = zext i32 %nextlen.0.ph.i.i to i64
  %freq37.i.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom3396.i.i, i32 0, i32 0
  %15 = load i16* %freq37.i.i, align 2, !tbaa !81
  %inc38.i.i = add i16 %15, 1
  store i16 %inc38.i.i, i16* %freq37.i.i, align 2, !tbaa !81
  br label %if.end39.i.i

if.end39.i.i:                                     ; preds = %if.then32.i.i, %if.then29.i.i
  %16 = load i16* %freq43.i.i, align 2, !tbaa !81
  %inc44.i.i = add i16 %16, 1
  store i16 %inc44.i.i, i16* %freq43.i.i, align 2, !tbaa !81
  br label %if.end63.i.i

if.else45.i.i:                                    ; preds = %if.else26.i.i
  %cmp46.i.i = icmp slt i32 %inc.i.i.lcssa, 11
  br i1 %cmp46.i.i, label %if.then48.i.i, label %if.else54.i.i

if.then48.i.i:                                    ; preds = %if.else45.i.i
  %17 = load i16* %freq52.i.i, align 2, !tbaa !81
  %inc53.i.i = add i16 %17, 1
  store i16 %inc53.i.i, i16* %freq52.i.i, align 2, !tbaa !81
  br label %if.end63.i.i

if.else54.i.i:                                    ; preds = %if.else45.i.i
  %18 = load i16* %freq58.i.i, align 2, !tbaa !81
  %inc59.i.i = add i16 %18, 1
  store i16 %inc59.i.i, i16* %freq58.i.i, align 2, !tbaa !81
  br label %if.end63.i.i

if.end63.i.i:                                     ; preds = %if.else54.i.i, %if.then48.i.i, %if.end39.i.i, %if.then20.i.i
  %cmp64.i.i = icmp eq i16 %.lcssa233, 0
  br i1 %cmp64.i.i, label %for.cond.outer.backedge.i.i, label %if.else67.i.i

for.cond.outer.backedge.i.i:                      ; preds = %if.else67.i.i, %if.end63.i.i
  %max_count.1.ph.be.i.i = phi i32 [ %.99.i.i, %if.else67.i.i ], [ 138, %if.end63.i.i ]
  %min_count.1.ph.be.i.i = phi i32 [ %.100.i.i, %if.else67.i.i ], [ 3, %if.end63.i.i ]
  %sext.i.i = shl i64 %indvars.iv.next.i.i.lcssa, 32
  %phitmp.i.i = ashr exact i64 %sext.i.i, 32
  br label %for.cond.outer.i.i

if.else67.i.i:                                    ; preds = %if.end63.i.i
  %.99.i.i = select i1 %cmp15.i.i.lcssa, i32 6, i32 7
  %.100.i.i = select i1 %cmp15.i.i.lcssa, i32 3, i32 4
  br label %for.cond.outer.backedge.i.i

scan_tree.exit.i:                                 ; preds = %for.cond.i.i
  %max_code2.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 41, i32 1
  %19 = load i32* %max_code2.i, align 4, !tbaa !170
  %len.i25.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 0, i32 1, i32 0
  %20 = load i16* %len.i25.i, align 2, !tbaa !81
  %conv.i26.i = zext i16 %20 to i32
  %cmp.i27.i = icmp eq i16 %20, 0
  %..i28.i = select i1 %cmp.i27.i, i32 138, i32 7
  %.98.i29.i = select i1 %cmp.i27.i, i32 3, i32 4
  %add.i30.i = add nsw i32 %19, 1
  %idxprom.i31.i = sext i32 %add.i30.i to i64
  %len4.i32.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 %idxprom.i31.i, i32 1, i32 0
  store i16 -1, i16* %len4.i32.i, align 2, !tbaa !81
  br label %for.cond.outer.i41.i

for.cond.outer.i41.i:                             ; preds = %for.cond.outer.backedge.i84.i, %scan_tree.exit.i
  %prevlen.0.ph.i36.i = phi i32 [ -1, %scan_tree.exit.i ], [ %nextlen.0.ph.i38.i, %for.cond.outer.backedge.i84.i ]
  %n.0.ph.i37.i = phi i64 [ 0, %scan_tree.exit.i ], [ %phitmp.i83.i, %for.cond.outer.backedge.i84.i ]
  %nextlen.0.ph.i38.i = phi i32 [ %conv.i26.i, %scan_tree.exit.i ], [ %conv12.i48.i.lcssa, %for.cond.outer.backedge.i84.i ]
  %max_count.1.ph.i39.i = phi i32 [ %..i28.i, %scan_tree.exit.i ], [ %max_count.1.ph.be.i80.i, %for.cond.outer.backedge.i84.i ]
  %min_count.1.ph.i40.i = phi i32 [ %.98.i29.i, %scan_tree.exit.i ], [ %min_count.1.ph.be.i81.i, %for.cond.outer.backedge.i84.i ]
  br label %for.cond.i45.i

for.cond.i45.i:                                   ; preds = %for.body.i53.i, %for.cond.outer.i41.i
  %indvars.iv.i42.i = phi i64 [ %n.0.ph.i37.i, %for.cond.outer.i41.i ], [ %indvars.iv.next.i46.i, %for.body.i53.i ]
  %count.0.i43.i = phi i32 [ 0, %for.cond.outer.i41.i ], [ %inc.i49.i, %for.body.i53.i ]
  %21 = trunc i64 %indvars.iv.i42.i to i32
  %cmp5.i44.i = icmp sgt i32 %21, %19
  br i1 %cmp5.i44.i, label %scan_tree.exit88.i, label %for.body.i53.i

for.body.i53.i:                                   ; preds = %for.cond.i45.i
  %indvars.iv.next.i46.i = add nsw i64 %indvars.iv.i42.i, 1
  %len11.i47.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 %indvars.iv.next.i46.i, i32 1, i32 0
  %22 = load i16* %len11.i47.i, align 2, !tbaa !81
  %conv12.i48.i = zext i16 %22 to i32
  %inc.i49.i = add nsw i32 %count.0.i43.i, 1
  %cmp13.i50.i = icmp slt i32 %inc.i49.i, %max_count.1.ph.i39.i
  %cmp15.i51.i = icmp eq i32 %nextlen.0.ph.i38.i, %conv12.i48.i
  %or.cond.i52.i = and i1 %cmp13.i50.i, %cmp15.i51.i
  br i1 %or.cond.i52.i, label %for.cond.i45.i, label %if.else.i55.i

if.else.i55.i:                                    ; preds = %for.body.i53.i
  %cmp15.i51.i.lcssa = phi i1 [ %cmp15.i51.i, %for.body.i53.i ]
  %inc.i49.i.lcssa = phi i32 [ %inc.i49.i, %for.body.i53.i ]
  %conv12.i48.i.lcssa = phi i32 [ %conv12.i48.i, %for.body.i53.i ]
  %.lcssa = phi i16 [ %22, %for.body.i53.i ]
  %indvars.iv.next.i46.i.lcssa = phi i64 [ %indvars.iv.next.i46.i, %for.body.i53.i ]
  %cmp18.i54.i = icmp slt i32 %inc.i49.i.lcssa, %min_count.1.ph.i40.i
  br i1 %cmp18.i54.i, label %if.then20.i61.i, label %if.else26.i63.i

if.then20.i61.i:                                  ; preds = %if.else.i55.i
  %idxprom2197.i56.i = zext i32 %nextlen.0.ph.i38.i to i64
  %freq.i57.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom2197.i56.i, i32 0, i32 0
  %23 = load i16* %freq.i57.i, align 2, !tbaa !81
  %conv23.i58.i = zext i16 %23 to i32
  %add24.i59.i = add nsw i32 %conv23.i58.i, %inc.i49.i.lcssa
  %conv25.i60.i = trunc i32 %add24.i59.i to i16
  store i16 %conv25.i60.i, i16* %freq.i57.i, align 2, !tbaa !81
  br label %if.end63.i79.i

if.else26.i63.i:                                  ; preds = %if.else.i55.i
  %cmp27.i62.i = icmp eq i32 %nextlen.0.ph.i38.i, 0
  br i1 %cmp27.i62.i, label %if.else45.i73.i, label %if.then29.i65.i

if.then29.i65.i:                                  ; preds = %if.else26.i63.i
  %cmp30.i64.i = icmp eq i32 %nextlen.0.ph.i38.i, %prevlen.0.ph.i36.i
  br i1 %cmp30.i64.i, label %if.end39.i71.i, label %if.then32.i69.i

if.then32.i69.i:                                  ; preds = %if.then29.i65.i
  %idxprom3396.i66.i = zext i32 %nextlen.0.ph.i38.i to i64
  %freq37.i67.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom3396.i66.i, i32 0, i32 0
  %24 = load i16* %freq37.i67.i, align 2, !tbaa !81
  %inc38.i68.i = add i16 %24, 1
  store i16 %inc38.i68.i, i16* %freq37.i67.i, align 2, !tbaa !81
  br label %if.end39.i71.i

if.end39.i71.i:                                   ; preds = %if.then32.i69.i, %if.then29.i65.i
  %25 = load i16* %freq43.i.i, align 2, !tbaa !81
  %inc44.i70.i = add i16 %25, 1
  store i16 %inc44.i70.i, i16* %freq43.i.i, align 2, !tbaa !81
  br label %if.end63.i79.i

if.else45.i73.i:                                  ; preds = %if.else26.i63.i
  %cmp46.i72.i = icmp slt i32 %inc.i49.i.lcssa, 11
  br i1 %cmp46.i72.i, label %if.then48.i75.i, label %if.else54.i77.i

if.then48.i75.i:                                  ; preds = %if.else45.i73.i
  %26 = load i16* %freq52.i.i, align 2, !tbaa !81
  %inc53.i74.i = add i16 %26, 1
  store i16 %inc53.i74.i, i16* %freq52.i.i, align 2, !tbaa !81
  br label %if.end63.i79.i

if.else54.i77.i:                                  ; preds = %if.else45.i73.i
  %27 = load i16* %freq58.i.i, align 2, !tbaa !81
  %inc59.i76.i = add i16 %27, 1
  store i16 %inc59.i76.i, i16* %freq58.i.i, align 2, !tbaa !81
  br label %if.end63.i79.i

if.end63.i79.i:                                   ; preds = %if.else54.i77.i, %if.then48.i75.i, %if.end39.i71.i, %if.then20.i61.i
  %cmp64.i78.i = icmp eq i16 %.lcssa, 0
  br i1 %cmp64.i78.i, label %for.cond.outer.backedge.i84.i, label %if.else67.i87.i

for.cond.outer.backedge.i84.i:                    ; preds = %if.else67.i87.i, %if.end63.i79.i
  %max_count.1.ph.be.i80.i = phi i32 [ %.99.i85.i, %if.else67.i87.i ], [ 138, %if.end63.i79.i ]
  %min_count.1.ph.be.i81.i = phi i32 [ %.100.i86.i, %if.else67.i87.i ], [ 3, %if.end63.i79.i ]
  %sext.i82.i = shl i64 %indvars.iv.next.i46.i.lcssa, 32
  %phitmp.i83.i = ashr exact i64 %sext.i82.i, 32
  br label %for.cond.outer.i41.i

if.else67.i87.i:                                  ; preds = %if.end63.i79.i
  %.99.i85.i = select i1 %cmp15.i51.i.lcssa, i32 6, i32 7
  %.100.i86.i = select i1 %cmp15.i51.i.lcssa, i32 3, i32 4
  br label %for.cond.outer.backedge.i84.i

scan_tree.exit88.i:                               ; preds = %for.cond.i45.i
  %bl_desc.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 42
  tail call fastcc void @build_tree(%struct.internal_state.23* %s, %struct.tree_desc_s.22* %bl_desc.i) #4
  br label %for.body.i209

for.cond.i:                                       ; preds = %for.body.i209
  %28 = trunc i64 %indvars.iv.next.i208 to i32
  %cmp.i205 = icmp sgt i32 %28, 2
  br i1 %cmp.i205, label %for.body.i209, label %build_bl_tree.exit

for.body.i209:                                    ; preds = %for.cond.i, %scan_tree.exit88.i
  %indvars.iv.i206 = phi i64 [ 18, %scan_tree.exit88.i ], [ %indvars.iv.next.i208, %for.cond.i ]
  %max_blindex.090.i = phi i32 [ 18, %scan_tree.exit88.i ], [ %dec.i, %for.cond.i ]
  %arrayidx.i207 = getelementptr inbounds [19 x i8]* @bl_order, i64 0, i64 %indvars.iv.i206
  %29 = load i8* %arrayidx.i207, align 1, !tbaa !5
  %idxprom3.i = zext i8 %29 to i64
  %len.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom3.i, i32 1, i32 0
  %30 = load i16* %len.i, align 2, !tbaa !81
  %cmp5.i = icmp eq i16 %30, 0
  %indvars.iv.next.i208 = add nsw i64 %indvars.iv.i206, -1
  %dec.i = add nsw i32 %max_blindex.090.i, -1
  %31 = trunc i64 %indvars.iv.i206 to i32
  br i1 %cmp5.i, label %for.cond.i, label %build_bl_tree.exit

build_bl_tree.exit:                               ; preds = %for.body.i209, %for.cond.i
  %max_blindex.0.lcssa.i = phi i32 [ %31, %for.body.i209 ], [ %dec.i, %for.cond.i ]
  %32 = mul i32 %max_blindex.0.lcssa.i, 3
  %add9.i = add i32 %32, 17
  %conv10.i = sext i32 %add9.i to i64
  %opt_len.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 52
  %33 = load i64* %opt_len.i, align 8, !tbaa !171
  %add11.i = add i64 %conv10.i, %33
  store i64 %add11.i, i64* %opt_len.i, align 8, !tbaa !171
  %add6 = add i64 %add11.i, 10
  %shr = lshr i64 %add6, 3
  %static_len = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 53
  %34 = load i64* %static_len, align 8, !tbaa !172
  %add8 = add i64 %34, 10
  %shr9 = lshr i64 %add8, 3
  %cmp10 = icmp ugt i64 %shr9, %shr
  %shr.shr9 = select i1 %cmp10, i64 %shr, i64 %shr9
  br label %if.end14

if.else:                                          ; preds = %entry
  %add13 = add i64 %stored_len, 5
  br label %if.end14

if.end14:                                         ; preds = %if.else, %build_bl_tree.exit
  %max_blindex.0 = phi i32 [ 0, %if.else ], [ %max_blindex.0.lcssa.i, %build_bl_tree.exit ]
  %static_lenb.0 = phi i64 [ %add13, %if.else ], [ %shr9, %build_bl_tree.exit ]
  %opt_lenb.0 = phi i64 [ %add13, %if.else ], [ %shr.shr9, %build_bl_tree.exit ]
  %add15 = add i64 %stored_len, 4
  %cmp16 = icmp ule i64 %add15, %opt_lenb.0
  %cmp17 = icmp ne i8* %buf, null
  %or.cond = and i1 %cmp16, %cmp17
  br i1 %or.cond, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.end14
  tail call void @_tr_stored_block(%struct.internal_state.23* %s, i8* %buf, i64 %stored_len, i32 %last)
  br label %if.end131

if.else19:                                        ; preds = %if.end14
  %strategy = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 34
  %35 = load i32* %strategy, align 4, !tbaa !72
  %cmp20 = icmp eq i32 %35, 4
  %cmp21 = icmp eq i64 %static_lenb.0, %opt_lenb.0
  %or.cond203 = or i1 %cmp20, %cmp21
  %bi_valid = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %36 = load i32* %bi_valid, align 4, !tbaa !99
  %cmp23 = icmp sgt i32 %36, 13
  br i1 %or.cond203, label %if.then22, label %if.else65

if.then22:                                        ; preds = %if.else19
  %add25 = add nsw i32 %last, 2
  %conv26 = and i32 %add25, 65535
  %shl = shl i32 %conv26, %36
  %bi_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %37 = load i16* %bi_buf, align 2, !tbaa !100
  %conv28 = zext i16 %37 to i32
  %or = or i32 %conv28, %shl
  %conv29 = trunc i32 %or to i16
  store i16 %conv29, i16* %bi_buf, align 2, !tbaa !100
  br i1 %cmp23, label %if.then24, label %if.else52

if.then24:                                        ; preds = %if.then22
  %conv32 = trunc i32 %or to i8
  %pending = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %38 = load i32* %pending, align 4, !tbaa !76
  %inc = add i32 %38, 1
  store i32 %inc, i32* %pending, align 4, !tbaa !76
  %idxprom = zext i32 %38 to i64
  %pending_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %39 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx = getelementptr inbounds i8* %39, i64 %idxprom
  store i8 %conv32, i8* %arrayidx, align 1, !tbaa !5
  %40 = load i16* %bi_buf, align 2, !tbaa !100
  %shr35202 = lshr i16 %40, 8
  %conv36 = trunc i16 %shr35202 to i8
  %41 = load i32* %pending, align 4, !tbaa !76
  %inc38 = add i32 %41, 1
  store i32 %inc38, i32* %pending, align 4, !tbaa !76
  %idxprom39 = zext i32 %41 to i64
  %42 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx41 = getelementptr inbounds i8* %42, i64 %idxprom39
  store i8 %conv36, i8* %arrayidx41, align 1, !tbaa !5
  %43 = load i32* %bi_valid, align 4, !tbaa !99
  %sub45 = sub nsw i32 16, %43
  %shr46 = lshr i32 %conv26, %sub45
  %conv47 = trunc i32 %shr46 to i16
  store i16 %conv47, i16* %bi_buf, align 2, !tbaa !100
  %add51 = add nsw i32 %43, -13
  br label %if.end64

if.else52:                                        ; preds = %if.then22
  %add63 = add nsw i32 %36, 3
  br label %if.end64

if.end64:                                         ; preds = %if.else52, %if.then24
  %storemerge201 = phi i32 [ %add63, %if.else52 ], [ %add51, %if.then24 ]
  store i32 %storemerge201, i32* %bi_valid, align 4, !tbaa !99
  tail call fastcc void @compress_block(%struct.internal_state.23* %s, %struct.ct_data_s* getelementptr inbounds ([288 x %struct.ct_data_s]* @static_ltree, i64 0, i64 0), %struct.ct_data_s* getelementptr inbounds ([30 x %struct.ct_data_s]* @static_dtree, i64 0, i64 0))
  br label %if.end131

if.else65:                                        ; preds = %if.else19
  %add73 = add nsw i32 %last, 4
  %conv75 = and i32 %add73, 65535
  %shl77 = shl i32 %conv75, %36
  %bi_buf78 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %44 = load i16* %bi_buf78, align 2, !tbaa !100
  %conv79 = zext i16 %44 to i32
  %or80 = or i32 %conv79, %shl77
  %conv81 = trunc i32 %or80 to i16
  store i16 %conv81, i16* %bi_buf78, align 2, !tbaa !100
  br i1 %cmp23, label %if.then71, label %if.else110

if.then71:                                        ; preds = %if.else65
  %conv85 = trunc i32 %or80 to i8
  %pending86 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %45 = load i32* %pending86, align 4, !tbaa !76
  %inc87 = add i32 %45, 1
  store i32 %inc87, i32* %pending86, align 4, !tbaa !76
  %idxprom88 = zext i32 %45 to i64
  %pending_buf89 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %46 = load i8** %pending_buf89, align 8, !tbaa !66
  %arrayidx90 = getelementptr inbounds i8* %46, i64 %idxprom88
  store i8 %conv85, i8* %arrayidx90, align 1, !tbaa !5
  %47 = load i16* %bi_buf78, align 2, !tbaa !100
  %shr93200 = lshr i16 %47, 8
  %conv94 = trunc i16 %shr93200 to i8
  %48 = load i32* %pending86, align 4, !tbaa !76
  %inc96 = add i32 %48, 1
  store i32 %inc96, i32* %pending86, align 4, !tbaa !76
  %idxprom97 = zext i32 %48 to i64
  %49 = load i8** %pending_buf89, align 8, !tbaa !66
  %arrayidx99 = getelementptr inbounds i8* %49, i64 %idxprom97
  store i8 %conv94, i8* %arrayidx99, align 1, !tbaa !5
  %50 = load i32* %bi_valid, align 4, !tbaa !99
  %sub103 = sub nsw i32 16, %50
  %shr104 = lshr i32 %conv75, %sub103
  %conv105 = trunc i32 %shr104 to i16
  store i16 %conv105, i16* %bi_buf78, align 2, !tbaa !100
  %add109 = add nsw i32 %50, -13
  br label %if.end122

if.else110:                                       ; preds = %if.else65
  %add121 = add nsw i32 %36, 3
  br label %if.end122

if.end122:                                        ; preds = %if.else110, %if.then71
  %51 = phi i32 [ %or80, %if.else110 ], [ %shr104, %if.then71 ]
  %storemerge = phi i32 [ %add121, %if.else110 ], [ %add109, %if.then71 ]
  store i32 %storemerge, i32* %bi_valid, align 4, !tbaa !99
  %max_code = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 40, i32 1
  %52 = load i32* %max_code, align 4, !tbaa !169
  %max_code126 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 41, i32 1
  %53 = load i32* %max_code126, align 4, !tbaa !170
  %cmp.i212 = icmp sgt i32 %storemerge, 11
  %sub1.i = add nsw i32 %52, 65280
  %conv2.i = and i32 %sub1.i, 65535
  %shl.i = shl i32 %conv2.i, %storemerge
  %conv4.i214 = and i32 %51, 65535
  %or.i = or i32 %conv4.i214, %shl.i
  %conv5.i = trunc i32 %or.i to i16
  store i16 %conv5.i, i16* %bi_buf78, align 2, !tbaa !100
  br i1 %cmp.i212, label %if.then.i220, label %if.else.i221

if.then.i220:                                     ; preds = %if.end122
  %conv8.i = trunc i32 %or.i to i8
  %pending.i215 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %54 = load i32* %pending.i215, align 4, !tbaa !76
  %inc.i216 = add i32 %54, 1
  store i32 %inc.i216, i32* %pending.i215, align 4, !tbaa !76
  %idxprom.i217 = zext i32 %54 to i64
  %pending_buf.i218 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %55 = load i8** %pending_buf.i218, align 8, !tbaa !66
  %arrayidx.i219 = getelementptr inbounds i8* %55, i64 %idxprom.i217
  store i8 %conv8.i, i8* %arrayidx.i219, align 1, !tbaa !5
  %56 = load i16* %bi_buf78, align 2, !tbaa !100
  %shr311.i = lshr i16 %56, 8
  %conv11.i = trunc i16 %shr311.i to i8
  %57 = load i32* %pending.i215, align 4, !tbaa !76
  %inc13.i = add i32 %57, 1
  store i32 %inc13.i, i32* %pending.i215, align 4, !tbaa !76
  %idxprom14.i = zext i32 %57 to i64
  %58 = load i8** %pending_buf.i218, align 8, !tbaa !66
  %arrayidx16.i = getelementptr inbounds i8* %58, i64 %idxprom14.i
  store i8 %conv11.i, i8* %arrayidx16.i, align 1, !tbaa !5
  %59 = load i32* %bi_valid, align 4, !tbaa !99
  %sub20.i = sub nsw i32 16, %59
  %shr21.i = lshr i32 %conv2.i, %sub20.i
  %conv22.i = trunc i32 %shr21.i to i16
  store i16 %conv22.i, i16* %bi_buf78, align 2, !tbaa !100
  %add.i = add nsw i32 %59, -11
  br label %if.end.i

if.else.i221:                                     ; preds = %if.end122
  %add36.i = add nsw i32 %storemerge, 5
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i221, %if.then.i220
  %60 = phi i32 [ %or.i, %if.else.i221 ], [ %shr21.i, %if.then.i220 ]
  %61 = phi i32 [ %add36.i, %if.else.i221 ], [ %add.i, %if.then.i220 ]
  store i32 %61, i32* %bi_valid, align 4, !tbaa !99
  %cmp40.i = icmp sgt i32 %61, 11
  %conv46.i = and i32 %53, 65535
  %shl48.i = shl i32 %conv46.i, %61
  %conv50.i = and i32 %60, 65535
  %or51.i = or i32 %shl48.i, %conv50.i
  %conv52.i = trunc i32 %or51.i to i16
  store i16 %conv52.i, i16* %bi_buf78, align 2, !tbaa !100
  br i1 %cmp40.i, label %if.then42.i, label %if.else81.i

if.then42.i:                                      ; preds = %if.end.i
  %conv56.i = trunc i32 %or51.i to i8
  %pending57.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %62 = load i32* %pending57.i, align 4, !tbaa !76
  %inc58.i = add i32 %62, 1
  store i32 %inc58.i, i32* %pending57.i, align 4, !tbaa !76
  %idxprom59.i = zext i32 %62 to i64
  %pending_buf60.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %63 = load i8** %pending_buf60.i, align 8, !tbaa !66
  %arrayidx61.i = getelementptr inbounds i8* %63, i64 %idxprom59.i
  store i8 %conv56.i, i8* %arrayidx61.i, align 1, !tbaa !5
  %64 = load i16* %bi_buf78, align 2, !tbaa !100
  %shr64310.i = lshr i16 %64, 8
  %conv65.i = trunc i16 %shr64310.i to i8
  %65 = load i32* %pending57.i, align 4, !tbaa !76
  %inc67.i = add i32 %65, 1
  store i32 %inc67.i, i32* %pending57.i, align 4, !tbaa !76
  %idxprom68.i = zext i32 %65 to i64
  %66 = load i8** %pending_buf60.i, align 8, !tbaa !66
  %arrayidx70.i = getelementptr inbounds i8* %66, i64 %idxprom68.i
  store i8 %conv65.i, i8* %arrayidx70.i, align 1, !tbaa !5
  %67 = load i32* %bi_valid, align 4, !tbaa !99
  %sub74.i = sub nsw i32 16, %67
  %shr75.i = lshr i32 %conv46.i, %sub74.i
  %conv76.i = trunc i32 %shr75.i to i16
  store i16 %conv76.i, i16* %bi_buf78, align 2, !tbaa !100
  %add80.i = add nsw i32 %67, -11
  br label %if.end93.i

if.else81.i:                                      ; preds = %if.end.i
  %add92.i = add nsw i32 %61, 5
  br label %if.end93.i

if.end93.i:                                       ; preds = %if.else81.i, %if.then42.i
  %68 = phi i32 [ %or51.i, %if.else81.i ], [ %shr75.i, %if.then42.i ]
  %69 = phi i32 [ %add92.i, %if.else81.i ], [ %add80.i, %if.then42.i ]
  store i32 %69, i32* %bi_valid, align 4, !tbaa !99
  %cmp97.i = icmp sgt i32 %69, 12
  %sub101.i = add nsw i32 %max_blindex.0, 65533
  %conv103.i = and i32 %sub101.i, 65535
  %shl105.i = shl i32 %conv103.i, %69
  %conv107.i = and i32 %68, 65535
  %or108.i = or i32 %shl105.i, %conv107.i
  %conv109.i = trunc i32 %or108.i to i16
  store i16 %conv109.i, i16* %bi_buf78, align 2, !tbaa !100
  br i1 %cmp97.i, label %if.then99.i, label %if.else138.i

if.then99.i:                                      ; preds = %if.end93.i
  %conv113.i = trunc i32 %or108.i to i8
  %pending114.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %70 = load i32* %pending114.i, align 4, !tbaa !76
  %inc115.i = add i32 %70, 1
  store i32 %inc115.i, i32* %pending114.i, align 4, !tbaa !76
  %idxprom116.i = zext i32 %70 to i64
  %pending_buf117.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %71 = load i8** %pending_buf117.i, align 8, !tbaa !66
  %arrayidx118.i = getelementptr inbounds i8* %71, i64 %idxprom116.i
  store i8 %conv113.i, i8* %arrayidx118.i, align 1, !tbaa !5
  %72 = load i16* %bi_buf78, align 2, !tbaa !100
  %shr121309.i = lshr i16 %72, 8
  %conv122.i = trunc i16 %shr121309.i to i8
  %73 = load i32* %pending114.i, align 4, !tbaa !76
  %inc124.i = add i32 %73, 1
  store i32 %inc124.i, i32* %pending114.i, align 4, !tbaa !76
  %idxprom125.i = zext i32 %73 to i64
  %74 = load i8** %pending_buf117.i, align 8, !tbaa !66
  %arrayidx127.i = getelementptr inbounds i8* %74, i64 %idxprom125.i
  store i8 %conv122.i, i8* %arrayidx127.i, align 1, !tbaa !5
  %75 = load i32* %bi_valid, align 4, !tbaa !99
  %sub131.i = sub nsw i32 16, %75
  %shr132.i = lshr i32 %conv103.i, %sub131.i
  %conv133.i = trunc i32 %shr132.i to i16
  store i16 %conv133.i, i16* %bi_buf78, align 2, !tbaa !100
  %add137.i = add nsw i32 %75, -12
  br label %if.end150.i

if.else138.i:                                     ; preds = %if.end93.i
  %add149.i = add nsw i32 %69, 4
  br label %if.end150.i

if.end150.i:                                      ; preds = %if.else138.i, %if.then99.i
  %76 = phi i32 [ %or108.i, %if.else138.i ], [ %shr132.i, %if.then99.i ]
  %storemerge306.i = phi i32 [ %add149.i, %if.else138.i ], [ %add137.i, %if.then99.i ]
  store i32 %storemerge306.i, i32* %bi_valid, align 4, !tbaa !99
  %cmp151312.i = icmp sgt i32 %max_blindex.0, -1
  br i1 %cmp151312.i, label %for.body.lr.ph.i, label %send_all_trees.exit

for.body.lr.ph.i:                                 ; preds = %if.end150.i
  %pending178.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %pending_buf181.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  br label %for.body.i223

for.body.i223:                                    ; preds = %for.inc.i225, %for.body.lr.ph.i
  %77 = phi i32 [ %76, %for.body.lr.ph.i ], [ %87, %for.inc.i225 ]
  %78 = phi i32 [ %storemerge306.i, %for.body.lr.ph.i ], [ %storemerge307.i, %for.inc.i225 ]
  %indvars.iv.i222 = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i224, %for.inc.i225 ]
  %cmp156.i = icmp sgt i32 %78, 13
  %arrayidx161.i = getelementptr inbounds [19 x i8]* @bl_order, i64 0, i64 %indvars.iv.i222
  %79 = load i8* %arrayidx161.i, align 1, !tbaa !5
  %idxprom162.i = zext i8 %79 to i64
  %len164.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom162.i, i32 1, i32 0
  %80 = load i16* %len164.i, align 2, !tbaa !81
  %conv167.i = zext i16 %80 to i32
  %shl169.i = shl i32 %conv167.i, %78
  %conv171.i = and i32 %77, 65535
  %or172.i = or i32 %shl169.i, %conv171.i
  %conv173.i = trunc i32 %or172.i to i16
  store i16 %conv173.i, i16* %bi_buf78, align 2, !tbaa !100
  br i1 %cmp156.i, label %if.then158.i, label %if.else202.i

if.then158.i:                                     ; preds = %for.body.i223
  %conv177.i = trunc i32 %or172.i to i8
  %81 = load i32* %pending178.i, align 4, !tbaa !76
  %inc179.i = add i32 %81, 1
  store i32 %inc179.i, i32* %pending178.i, align 4, !tbaa !76
  %idxprom180.i = zext i32 %81 to i64
  %82 = load i8** %pending_buf181.i, align 8, !tbaa !66
  %arrayidx182.i = getelementptr inbounds i8* %82, i64 %idxprom180.i
  store i8 %conv177.i, i8* %arrayidx182.i, align 1, !tbaa !5
  %83 = load i16* %bi_buf78, align 2, !tbaa !100
  %shr185308.i = lshr i16 %83, 8
  %conv186.i = trunc i16 %shr185308.i to i8
  %84 = load i32* %pending178.i, align 4, !tbaa !76
  %inc188.i = add i32 %84, 1
  store i32 %inc188.i, i32* %pending178.i, align 4, !tbaa !76
  %idxprom189.i = zext i32 %84 to i64
  %85 = load i8** %pending_buf181.i, align 8, !tbaa !66
  %arrayidx191.i = getelementptr inbounds i8* %85, i64 %idxprom189.i
  store i8 %conv186.i, i8* %arrayidx191.i, align 1, !tbaa !5
  %86 = load i32* %bi_valid, align 4, !tbaa !99
  %sub195.i = sub nsw i32 16, %86
  %shr196.i = lshr i32 %conv167.i, %sub195.i
  %conv197.i = trunc i32 %shr196.i to i16
  store i16 %conv197.i, i16* %bi_buf78, align 2, !tbaa !100
  %add201.i = add nsw i32 %86, -13
  br label %for.inc.i225

if.else202.i:                                     ; preds = %for.body.i223
  %add218.i = add nsw i32 %78, 3
  br label %for.inc.i225

for.inc.i225:                                     ; preds = %if.else202.i, %if.then158.i
  %87 = phi i32 [ %or172.i, %if.else202.i ], [ %shr196.i, %if.then158.i ]
  %storemerge307.i = phi i32 [ %add218.i, %if.else202.i ], [ %add201.i, %if.then158.i ]
  store i32 %storemerge307.i, i32* %bi_valid, align 4, !tbaa !99
  %indvars.iv.next.i224 = add nuw nsw i64 %indvars.iv.i222, 1
  %lftr.wideiv = trunc i64 %indvars.iv.i222 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %max_blindex.0
  br i1 %exitcond, label %send_all_trees.exit.loopexit, label %for.body.i223

send_all_trees.exit.loopexit:                     ; preds = %for.inc.i225
  br label %send_all_trees.exit

send_all_trees.exit:                              ; preds = %send_all_trees.exit.loopexit, %if.end150.i
  %arraydecay.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 0
  tail call fastcc void @send_tree(%struct.internal_state.23* %s, %struct.ct_data_s* %arraydecay.i, i32 %52) #4
  %arraydecay222.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 0
  tail call fastcc void @send_tree(%struct.internal_state.23* %s, %struct.ct_data_s* %arraydecay222.i, i32 %53) #4
  tail call fastcc void @compress_block(%struct.internal_state.23* %s, %struct.ct_data_s* %arraydecay.i, %struct.ct_data_s* %arraydecay222.i)
  br label %if.end131

if.end131:                                        ; preds = %send_all_trees.exit, %if.end64, %if.then18
  tail call fastcc void @init_block(%struct.internal_state.23* %s)
  %tobool = icmp eq i32 %last, 0
  br i1 %tobool, label %if.end133, label %if.then132

if.then132:                                       ; preds = %if.end131
  %bi_valid.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %88 = load i32* %bi_valid.i, align 4, !tbaa !99
  %cmp.i204 = icmp sgt i32 %88, 8
  br i1 %cmp.i204, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then132
  %bi_buf.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %89 = load i16* %bi_buf.i, align 2, !tbaa !100
  %conv1.i = trunc i16 %89 to i8
  %pending.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %90 = load i32* %pending.i, align 4, !tbaa !76
  %inc.i = add i32 %90, 1
  store i32 %inc.i, i32* %pending.i, align 4, !tbaa !76
  %idxprom.i = zext i32 %90 to i64
  %pending_buf.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %91 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx.i = getelementptr inbounds i8* %91, i64 %idxprom.i
  store i8 %conv1.i, i8* %arrayidx.i, align 1, !tbaa !5
  %92 = load i16* %bi_buf.i, align 2, !tbaa !100
  %shr35.i = lshr i16 %92, 8
  %conv4.i = trunc i16 %shr35.i to i8
  %93 = load i32* %pending.i, align 4, !tbaa !76
  %inc6.i = add i32 %93, 1
  store i32 %inc6.i, i32* %pending.i, align 4, !tbaa !76
  %idxprom7.i = zext i32 %93 to i64
  %94 = load i8** %pending_buf.i, align 8, !tbaa !66
  %arrayidx9.i = getelementptr inbounds i8* %94, i64 %idxprom7.i
  store i8 %conv4.i, i8* %arrayidx9.i, align 1, !tbaa !5
  br label %bi_windup.exit

if.else.i:                                        ; preds = %if.then132
  %cmp11.i = icmp sgt i32 %88, 0
  %bi_buf14.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  br i1 %cmp11.i, label %if.then13.i, label %bi_windup.exit

if.then13.i:                                      ; preds = %if.else.i
  %95 = load i16* %bi_buf14.i, align 2, !tbaa !100
  %conv15.i = trunc i16 %95 to i8
  %pending16.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %96 = load i32* %pending16.i, align 4, !tbaa !76
  %inc17.i = add i32 %96, 1
  store i32 %inc17.i, i32* %pending16.i, align 4, !tbaa !76
  %idxprom18.i = zext i32 %96 to i64
  %pending_buf19.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %97 = load i8** %pending_buf19.i, align 8, !tbaa !66
  %arrayidx20.i = getelementptr inbounds i8* %97, i64 %idxprom18.i
  store i8 %conv15.i, i8* %arrayidx20.i, align 1, !tbaa !5
  br label %bi_windup.exit

bi_windup.exit:                                   ; preds = %if.then13.i, %if.else.i, %if.then.i
  %bi_buf22.pre-phi.i = phi i16* [ %bi_buf14.i, %if.then13.i ], [ %bi_buf.i, %if.then.i ], [ %bi_buf14.i, %if.else.i ]
  store i16 0, i16* %bi_buf22.pre-phi.i, align 2, !tbaa !100
  store i32 0, i32* %bi_valid.i, align 4, !tbaa !99
  br label %if.end133

if.end133:                                        ; preds = %bi_windup.exit, %if.end131
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @_tr_tally(%struct.internal_state.23* nocapture %s, i32 %dist, i32 %lc) #3 {
entry:
  %conv = trunc i32 %dist to i16
  %last_lit = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 50
  %0 = load i32* %last_lit, align 4, !tbaa !113
  %idxprom = zext i32 %0 to i64
  %d_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 51
  %1 = load i16** %d_buf, align 8, !tbaa !69
  %arrayidx = getelementptr inbounds i16* %1, i64 %idxprom
  store i16 %conv, i16* %arrayidx, align 2, !tbaa !81
  %conv1 = trunc i32 %lc to i8
  %inc = add i32 %0, 1
  store i32 %inc, i32* %last_lit, align 4, !tbaa !113
  %l_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 48
  %2 = load i8** %l_buf, align 8, !tbaa !70
  %arrayidx4 = getelementptr inbounds i8* %2, i64 %idxprom
  store i8 %conv1, i8* %arrayidx4, align 1, !tbaa !5
  %cmp = icmp eq i32 %dist, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %idxprom6 = zext i32 %lc to i64
  %freq = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 %idxprom6, i32 0, i32 0
  %3 = load i16* %freq, align 2, !tbaa !81
  %inc8 = add i16 %3, 1
  store i16 %inc8, i16* %freq, align 2, !tbaa !81
  br label %if.end

if.else:                                          ; preds = %entry
  %matches = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 54
  %4 = load i32* %matches, align 4, !tbaa !173
  %inc9 = add i32 %4, 1
  store i32 %inc9, i32* %matches, align 4, !tbaa !173
  %dec = add i32 %dist, -1
  %idxprom10 = zext i32 %lc to i64
  %arrayidx11 = getelementptr inbounds [256 x i8]* @_length_code, i64 0, i64 %idxprom10
  %5 = load i8* %arrayidx11, align 1, !tbaa !5
  %conv12 = zext i8 %5 to i64
  %add52 = or i64 %conv12, 256
  %add13 = add nuw nsw i64 %add52, 1
  %idxprom1453 = and i64 %add13, 1023
  %freq18 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 %idxprom1453, i32 0, i32 0
  %6 = load i16* %freq18, align 2, !tbaa !81
  %inc19 = add i16 %6, 1
  store i16 %inc19, i16* %freq18, align 2, !tbaa !81
  %cmp20 = icmp ult i32 %dec, 256
  br i1 %cmp20, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.else
  %shr = lshr i32 %dec, 7
  %add25 = add nuw nsw i32 %shr, 256
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.else
  %idxprom22.pn.in = phi i32 [ %add25, %cond.false ], [ %dec, %if.else ]
  %idxprom22.pn = zext i32 %idxprom22.pn.in to i64
  %.sink.in = getelementptr inbounds [512 x i8]* @_dist_code, i64 0, i64 %idxprom22.pn
  %.sink = load i8* %.sink.in, align 1
  %idxprom29 = zext i8 %.sink to i64
  %freq32 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 %idxprom29, i32 0, i32 0
  %7 = load i16* %freq32, align 2, !tbaa !81
  %inc33 = add i16 %7, 1
  store i16 %inc33, i16* %freq32, align 2, !tbaa !81
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %8 = load i32* %last_lit, align 4, !tbaa !113
  %lit_bufsize = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 49
  %9 = load i32* %lit_bufsize, align 4, !tbaa !65
  %sub = add i32 %9, -1
  %cmp35 = icmp eq i32 %8, %sub
  %conv36 = zext i1 %cmp35 to i32
  ret i32 %conv36
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_block(%struct.internal_state.23* nocapture %s) #3 {
entry:
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %entry
  %index = phi i64 [ 0, %entry ], [ %index.next, %vector.body ]
  %induction4344 = or i64 %index, 1
  %0 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 %index, i32 0, i32 0
  %1 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 %induction4344, i32 0, i32 0
  store i16 0, i16* %0, align 2, !tbaa !81
  store i16 0, i16* %1, align 2, !tbaa !81
  %index.next = add i64 %index, 2
  %2 = icmp eq i64 %index.next, 286
  br i1 %2, label %for.cond1.preheader, label %vector.body, !llvm.loop !174

for.cond1.preheader:                              ; preds = %vector.body
  %freq7 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 0, i32 0, i32 0
  store i16 0, i16* %freq7, align 2, !tbaa !81
  %freq7.1 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 1, i32 0, i32 0
  store i16 0, i16* %freq7.1, align 2, !tbaa !81
  %freq7.2 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 2, i32 0, i32 0
  store i16 0, i16* %freq7.2, align 2, !tbaa !81
  %freq7.3 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 3, i32 0, i32 0
  store i16 0, i16* %freq7.3, align 2, !tbaa !81
  %freq7.4 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 4, i32 0, i32 0
  store i16 0, i16* %freq7.4, align 2, !tbaa !81
  %freq7.5 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 5, i32 0, i32 0
  store i16 0, i16* %freq7.5, align 2, !tbaa !81
  %freq7.6 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 6, i32 0, i32 0
  store i16 0, i16* %freq7.6, align 2, !tbaa !81
  %freq7.7 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 7, i32 0, i32 0
  store i16 0, i16* %freq7.7, align 2, !tbaa !81
  %freq7.8 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 8, i32 0, i32 0
  store i16 0, i16* %freq7.8, align 2, !tbaa !81
  %freq7.9 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 9, i32 0, i32 0
  store i16 0, i16* %freq7.9, align 2, !tbaa !81
  %freq7.10 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 10, i32 0, i32 0
  store i16 0, i16* %freq7.10, align 2, !tbaa !81
  %freq7.11 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 11, i32 0, i32 0
  store i16 0, i16* %freq7.11, align 2, !tbaa !81
  %freq7.12 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 12, i32 0, i32 0
  store i16 0, i16* %freq7.12, align 2, !tbaa !81
  %freq7.13 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 13, i32 0, i32 0
  store i16 0, i16* %freq7.13, align 2, !tbaa !81
  %freq7.14 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 14, i32 0, i32 0
  store i16 0, i16* %freq7.14, align 2, !tbaa !81
  %freq7.15 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 15, i32 0, i32 0
  store i16 0, i16* %freq7.15, align 2, !tbaa !81
  %freq7.16 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 16, i32 0, i32 0
  store i16 0, i16* %freq7.16, align 2, !tbaa !81
  %freq7.17 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 17, i32 0, i32 0
  store i16 0, i16* %freq7.17, align 2, !tbaa !81
  %freq7.18 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 18, i32 0, i32 0
  store i16 0, i16* %freq7.18, align 2, !tbaa !81
  %freq7.19 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 19, i32 0, i32 0
  store i16 0, i16* %freq7.19, align 2, !tbaa !81
  %freq7.20 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 20, i32 0, i32 0
  store i16 0, i16* %freq7.20, align 2, !tbaa !81
  %freq7.21 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 21, i32 0, i32 0
  store i16 0, i16* %freq7.21, align 2, !tbaa !81
  %freq7.22 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 22, i32 0, i32 0
  store i16 0, i16* %freq7.22, align 2, !tbaa !81
  %freq7.23 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 23, i32 0, i32 0
  store i16 0, i16* %freq7.23, align 2, !tbaa !81
  %freq7.24 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 24, i32 0, i32 0
  store i16 0, i16* %freq7.24, align 2, !tbaa !81
  %freq7.25 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 25, i32 0, i32 0
  store i16 0, i16* %freq7.25, align 2, !tbaa !81
  %freq7.26 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 26, i32 0, i32 0
  store i16 0, i16* %freq7.26, align 2, !tbaa !81
  %freq7.27 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 27, i32 0, i32 0
  store i16 0, i16* %freq7.27, align 2, !tbaa !81
  %freq7.28 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 28, i32 0, i32 0
  store i16 0, i16* %freq7.28, align 2, !tbaa !81
  %freq7.29 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 38, i64 29, i32 0, i32 0
  store i16 0, i16* %freq7.29, align 2, !tbaa !81
  %freq17 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 0, i32 0, i32 0
  store i16 0, i16* %freq17, align 2, !tbaa !81
  %freq17.1 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 1, i32 0, i32 0
  store i16 0, i16* %freq17.1, align 2, !tbaa !81
  %freq17.2 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 2, i32 0, i32 0
  store i16 0, i16* %freq17.2, align 2, !tbaa !81
  %freq17.3 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 3, i32 0, i32 0
  store i16 0, i16* %freq17.3, align 2, !tbaa !81
  %freq17.4 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 4, i32 0, i32 0
  store i16 0, i16* %freq17.4, align 2, !tbaa !81
  %freq17.5 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 5, i32 0, i32 0
  store i16 0, i16* %freq17.5, align 2, !tbaa !81
  %freq17.6 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 6, i32 0, i32 0
  store i16 0, i16* %freq17.6, align 2, !tbaa !81
  %freq17.7 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 7, i32 0, i32 0
  store i16 0, i16* %freq17.7, align 2, !tbaa !81
  %freq17.8 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 8, i32 0, i32 0
  store i16 0, i16* %freq17.8, align 2, !tbaa !81
  %freq17.9 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 9, i32 0, i32 0
  store i16 0, i16* %freq17.9, align 2, !tbaa !81
  %freq17.10 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 10, i32 0, i32 0
  store i16 0, i16* %freq17.10, align 2, !tbaa !81
  %freq17.11 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 11, i32 0, i32 0
  store i16 0, i16* %freq17.11, align 2, !tbaa !81
  %freq17.12 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 12, i32 0, i32 0
  store i16 0, i16* %freq17.12, align 2, !tbaa !81
  %freq17.13 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 13, i32 0, i32 0
  store i16 0, i16* %freq17.13, align 2, !tbaa !81
  %freq17.14 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 14, i32 0, i32 0
  store i16 0, i16* %freq17.14, align 2, !tbaa !81
  %freq17.15 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 15, i32 0, i32 0
  store i16 0, i16* %freq17.15, align 2, !tbaa !81
  %freq17.16 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 16, i32 0, i32 0
  store i16 0, i16* %freq17.16, align 2, !tbaa !81
  %freq17.17 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 17, i32 0, i32 0
  store i16 0, i16* %freq17.17, align 2, !tbaa !81
  %freq17.18 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 18, i32 0, i32 0
  store i16 0, i16* %freq17.18, align 2, !tbaa !81
  %freq24 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 37, i64 256, i32 0, i32 0
  store i16 1, i16* %freq24, align 2, !tbaa !81
  %opt_len = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 52
  %last_lit = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 50
  store i32 0, i32* %last_lit, align 4, !tbaa !113
  %3 = bitcast i64* %opt_len to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 20, i32 8, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_tree(%struct.internal_state.23* %s, %struct.tree_desc_s.22* nocapture %desc) #3 {
entry:
  %next_code.i = alloca [16 x i16], align 16
  %dyn_tree = getelementptr inbounds %struct.tree_desc_s.22* %desc, i64 0, i32 0
  %0 = load %struct.ct_data_s** %dyn_tree, align 8, !tbaa !175
  %stat_desc = getelementptr inbounds %struct.tree_desc_s.22* %desc, i64 0, i32 2
  %1 = load %struct.static_tree_desc_s.21** %stat_desc, align 8, !tbaa !176
  %static_tree = getelementptr inbounds %struct.static_tree_desc_s.21* %1, i64 0, i32 0
  %2 = load %struct.ct_data_s** %static_tree, align 8, !tbaa !177
  %elems2 = getelementptr inbounds %struct.static_tree_desc_s.21* %1, i64 0, i32 3
  %3 = load i32* %elems2, align 4, !tbaa !179
  %heap_len = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 45
  store i32 0, i32* %heap_len, align 4, !tbaa !180
  %heap_max = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 46
  store i32 573, i32* %heap_max, align 4, !tbaa !181
  %cmp224 = icmp sgt i32 %3, 0
  br i1 %cmp224, label %for.body.lr.ph, label %while.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %4 = add i32 %3, -1
  br label %for.body

while.cond.preheader:                             ; preds = %for.inc
  %max_code.1.lcssa = phi i32 [ %max_code.1, %for.inc ]
  %.pre = load i32* %heap_len, align 4, !tbaa !180
  %cmp14221 = icmp slt i32 %.pre, 2
  br i1 %cmp14221, label %while.body.lr.ph, label %for.body43.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader, %entry
  %max_code.0.lcssa237 = phi i32 [ %max_code.1.lcssa, %while.cond.preheader ], [ -1, %entry ]
  %5 = phi i32 [ %.pre, %while.cond.preheader ], [ 0, %entry ]
  %opt_len = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 52
  %tobool = icmp eq %struct.ct_data_s* %2, null
  %static_len = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 53
  br i1 %tobool, label %while.cond.backedge.us.preheader, label %while.cond.backedge.preheader

while.cond.backedge.preheader:                    ; preds = %while.body.lr.ph
  br label %while.cond.backedge

while.cond.backedge.us.preheader:                 ; preds = %while.body.lr.ph
  br label %while.cond.backedge.us

while.cond.backedge.us:                           ; preds = %while.cond.backedge.us, %while.cond.backedge.us.preheader
  %6 = phi i32 [ %8, %while.cond.backedge.us ], [ %5, %while.cond.backedge.us.preheader ]
  %max_code.2222.us = phi i32 [ %inc18.max_code.2.us, %while.cond.backedge.us ], [ %max_code.0.lcssa237, %while.cond.backedge.us.preheader ]
  %cmp16.us = icmp slt i32 %max_code.2222.us, 2
  %inc18.us = add nsw i32 %max_code.2222.us, 1
  %inc18.max_code.2.us = select i1 %cmp16.us, i32 %inc18.us, i32 %max_code.2222.us
  %inc18..us = select i1 %cmp16.us, i32 %inc18.us, i32 0
  %inc20.us = add nsw i32 %6, 1
  store i32 %inc20.us, i32* %heap_len, align 4, !tbaa !180
  %idxprom21.us = sext i32 %inc20.us to i64
  %arrayidx23.us = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom21.us
  store i32 %inc18..us, i32* %arrayidx23.us, align 4, !tbaa !28
  %idxprom24.us = sext i32 %inc18..us to i64
  %freq27.us = getelementptr inbounds %struct.ct_data_s* %0, i64 %idxprom24.us, i32 0, i32 0
  store i16 1, i16* %freq27.us, align 2, !tbaa !81
  %arrayidx30.us = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %idxprom24.us
  store i8 0, i8* %arrayidx30.us, align 1, !tbaa !5
  %7 = load i64* %opt_len, align 8, !tbaa !171
  %dec.us = add i64 %7, -1
  store i64 %dec.us, i64* %opt_len, align 8, !tbaa !171
  %8 = load i32* %heap_len, align 4, !tbaa !180
  %cmp14.us = icmp slt i32 %8, 2
  br i1 %cmp14.us, label %while.cond.backedge.us, label %for.body43.lr.ph.loopexit

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv230 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next231, %for.inc ]
  %max_code.0226 = phi i32 [ -1, %for.body.lr.ph ], [ %max_code.1, %for.inc ]
  %freq = getelementptr inbounds %struct.ct_data_s* %0, i64 %indvars.iv230, i32 0, i32 0
  %9 = load i16* %freq, align 2, !tbaa !81
  %cmp3 = icmp eq i16 %9, 0
  br i1 %cmp3, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %10 = load i32* %heap_len, align 4, !tbaa !180
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %heap_len, align 4, !tbaa !180
  %idxprom6 = sext i32 %inc to i64
  %arrayidx7 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom6
  %11 = trunc i64 %indvars.iv230 to i32
  store i32 %11, i32* %arrayidx7, align 4, !tbaa !28
  %arrayidx9 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %indvars.iv230
  store i8 0, i8* %arrayidx9, align 1, !tbaa !5
  br label %for.inc

if.else:                                          ; preds = %for.body
  %len = getelementptr inbounds %struct.ct_data_s* %0, i64 %indvars.iv230, i32 1, i32 0
  store i16 0, i16* %len, align 2, !tbaa !81
  %lftr.wideiv232.pre = trunc i64 %indvars.iv230 to i32
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then
  %lftr.wideiv232.pre-phi = phi i32 [ %11, %if.then ], [ %lftr.wideiv232.pre, %if.else ]
  %max_code.1 = phi i32 [ %11, %if.then ], [ %max_code.0226, %if.else ]
  %indvars.iv.next231 = add nuw nsw i64 %indvars.iv230, 1
  %exitcond233 = icmp eq i32 %lftr.wideiv232.pre-phi, %4
  br i1 %exitcond233, label %while.cond.preheader, label %for.body

while.cond.backedge:                              ; preds = %while.cond.backedge, %while.cond.backedge.preheader
  %12 = phi i32 [ %16, %while.cond.backedge ], [ %5, %while.cond.backedge.preheader ]
  %max_code.2222 = phi i32 [ %inc18.max_code.2, %while.cond.backedge ], [ %max_code.0.lcssa237, %while.cond.backedge.preheader ]
  %cmp16 = icmp slt i32 %max_code.2222, 2
  %inc18 = add nsw i32 %max_code.2222, 1
  %inc18.max_code.2 = select i1 %cmp16, i32 %inc18, i32 %max_code.2222
  %inc18. = select i1 %cmp16, i32 %inc18, i32 0
  %inc20 = add nsw i32 %12, 1
  store i32 %inc20, i32* %heap_len, align 4, !tbaa !180
  %idxprom21 = sext i32 %inc20 to i64
  %arrayidx23 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom21
  store i32 %inc18., i32* %arrayidx23, align 4, !tbaa !28
  %idxprom24 = sext i32 %inc18. to i64
  %freq27 = getelementptr inbounds %struct.ct_data_s* %0, i64 %idxprom24, i32 0, i32 0
  store i16 1, i16* %freq27, align 2, !tbaa !81
  %arrayidx30 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %idxprom24
  store i8 0, i8* %arrayidx30, align 1, !tbaa !5
  %13 = load i64* %opt_len, align 8, !tbaa !171
  %dec = add i64 %13, -1
  store i64 %dec, i64* %opt_len, align 8, !tbaa !171
  %len35 = getelementptr inbounds %struct.ct_data_s* %2, i64 %idxprom24, i32 1, i32 0
  %14 = load i16* %len35, align 2, !tbaa !81
  %conv36 = zext i16 %14 to i64
  %15 = load i64* %static_len, align 8, !tbaa !172
  %sub = sub i64 %15, %conv36
  store i64 %sub, i64* %static_len, align 8, !tbaa !172
  %16 = load i32* %heap_len, align 4, !tbaa !180
  %cmp14 = icmp slt i32 %16, 2
  br i1 %cmp14, label %while.cond.backedge, label %for.body43.lr.ph.loopexit251

for.body43.lr.ph.loopexit:                        ; preds = %while.cond.backedge.us
  %.lcssa254 = phi i32 [ %8, %while.cond.backedge.us ]
  %inc18.max_code.2.us.lcssa = phi i32 [ %inc18.max_code.2.us, %while.cond.backedge.us ]
  br label %for.body43.lr.ph

for.body43.lr.ph.loopexit251:                     ; preds = %while.cond.backedge
  %.lcssa255 = phi i32 [ %16, %while.cond.backedge ]
  %inc18.max_code.2.lcssa = phi i32 [ %inc18.max_code.2, %while.cond.backedge ]
  br label %for.body43.lr.ph

for.body43.lr.ph:                                 ; preds = %for.body43.lr.ph.loopexit251, %for.body43.lr.ph.loopexit, %while.cond.preheader
  %.ph = phi i32 [ %.pre, %while.cond.preheader ], [ %.lcssa254, %for.body43.lr.ph.loopexit ], [ %.lcssa255, %for.body43.lr.ph.loopexit251 ]
  %max_code.2.lcssa.ph = phi i32 [ %max_code.1.lcssa, %while.cond.preheader ], [ %inc18.max_code.2.us.lcssa, %for.body43.lr.ph.loopexit ], [ %inc18.max_code.2.lcssa, %for.body43.lr.ph.loopexit251 ]
  %max_code38238 = getelementptr inbounds %struct.tree_desc_s.22* %desc, i64 0, i32 1
  store i32 %max_code.2.lcssa.ph, i32* %max_code38238, align 4, !tbaa !182
  %div = sdiv i32 %.ph, 2
  br label %for.body43

do.body.preheader:                                ; preds = %for.body43
  %.pre234.pre = load i32* %heap_len, align 4, !tbaa !180
  %arrayidx48 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 1
  %17 = sext i32 %3 to i64
  br label %do.body

for.body43:                                       ; preds = %for.body43, %for.body43.lr.ph
  %n.1220 = phi i32 [ %div, %for.body43.lr.ph ], [ %dec45, %for.body43 ]
  tail call fastcc void @pqdownheap(%struct.internal_state.23* %s, %struct.ct_data_s* %0, i32 %n.1220)
  %dec45 = add nsw i32 %n.1220, -1
  %cmp41 = icmp sgt i32 %dec45, 0
  br i1 %cmp41, label %for.body43, label %do.body.preheader

do.body:                                          ; preds = %do.body, %do.body.preheader
  %18 = phi i32 [ %.pre234.pre, %do.body.preheader ], [ %29, %do.body ]
  %indvars.iv = phi i64 [ %17, %do.body.preheader ], [ %indvars.iv.next, %do.body ]
  %19 = load i32* %arrayidx48, align 4, !tbaa !28
  %dec50 = add nsw i32 %18, -1
  store i32 %dec50, i32* %heap_len, align 4, !tbaa !180
  %idxprom51 = sext i32 %18 to i64
  %arrayidx53 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom51
  %20 = load i32* %arrayidx53, align 4, !tbaa !28
  store i32 %20, i32* %arrayidx48, align 4, !tbaa !28
  tail call fastcc void @pqdownheap(%struct.internal_state.23* %s, %struct.ct_data_s* %0, i32 1)
  %21 = load i32* %arrayidx48, align 4, !tbaa !28
  %22 = load i32* %heap_max, align 4, !tbaa !181
  %dec59 = add nsw i32 %22, -1
  store i32 %dec59, i32* %heap_max, align 4, !tbaa !181
  %idxprom60 = sext i32 %dec59 to i64
  %arrayidx62 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom60
  store i32 %19, i32* %arrayidx62, align 4, !tbaa !28
  %23 = load i32* %heap_max, align 4, !tbaa !181
  %dec64 = add nsw i32 %23, -1
  store i32 %dec64, i32* %heap_max, align 4, !tbaa !181
  %idxprom65 = sext i32 %dec64 to i64
  %arrayidx67 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom65
  store i32 %21, i32* %arrayidx67, align 4, !tbaa !28
  %idxprom68 = sext i32 %19 to i64
  %freq71 = getelementptr inbounds %struct.ct_data_s* %0, i64 %idxprom68, i32 0, i32 0
  %24 = load i16* %freq71, align 2, !tbaa !81
  %idxprom73 = sext i32 %21 to i64
  %freq76 = getelementptr inbounds %struct.ct_data_s* %0, i64 %idxprom73, i32 0, i32 0
  %25 = load i16* %freq76, align 2, !tbaa !81
  %add = add i16 %25, %24
  %freq82 = getelementptr inbounds %struct.ct_data_s* %0, i64 %indvars.iv, i32 0, i32 0
  store i16 %add, i16* %freq82, align 2, !tbaa !81
  %arrayidx85 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %idxprom68
  %26 = load i8* %arrayidx85, align 1, !tbaa !5
  %arrayidx89 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %idxprom73
  %27 = load i8* %arrayidx89, align 1, !tbaa !5
  %cmp91 = icmp ult i8 %26, %27
  %. = select i1 %cmp91, i8 %27, i8 %26
  %add105 = add i8 %., 1
  %arrayidx109 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %indvars.iv
  store i8 %add105, i8* %arrayidx109, align 1, !tbaa !5
  %28 = trunc i64 %indvars.iv to i32
  %conv110 = trunc i64 %indvars.iv to i16
  %dad = getelementptr inbounds %struct.ct_data_s* %0, i64 %idxprom73, i32 1, i32 0
  store i16 %conv110, i16* %dad, align 2, !tbaa !81
  %dad117 = getelementptr inbounds %struct.ct_data_s* %0, i64 %idxprom68, i32 1, i32 0
  store i16 %conv110, i16* %dad117, align 2, !tbaa !81
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  store i32 %28, i32* %arrayidx48, align 4, !tbaa !28
  tail call fastcc void @pqdownheap(%struct.internal_state.23* %s, %struct.ct_data_s* %0, i32 1)
  %29 = load i32* %heap_len, align 4, !tbaa !180
  %cmp122 = icmp sgt i32 %29, 1
  br i1 %cmp122, label %do.body, label %do.end

do.end:                                           ; preds = %do.body
  %30 = load i32* %arrayidx48, align 4, !tbaa !28
  %31 = load i32* %heap_max, align 4, !tbaa !181
  %dec127 = add nsw i32 %31, -1
  store i32 %dec127, i32* %heap_max, align 4, !tbaa !181
  %idxprom128 = sext i32 %dec127 to i64
  %arrayidx130 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom128
  store i32 %30, i32* %arrayidx130, align 4, !tbaa !28
  %desc.idx.val = load %struct.ct_data_s** %dyn_tree, align 8, !tbaa !175
  %desc.idx207.val = load i32* %max_code38238, align 4, !tbaa !182
  %desc.idx208.val = load %struct.static_tree_desc_s.21** %stat_desc, align 8, !tbaa !176
  %static_tree.i = getelementptr inbounds %struct.static_tree_desc_s.21* %desc.idx208.val, i64 0, i32 0
  %32 = load %struct.ct_data_s** %static_tree.i, align 8, !tbaa !177
  %extra_bits.i = getelementptr inbounds %struct.static_tree_desc_s.21* %desc.idx208.val, i64 0, i32 1
  %33 = load i32** %extra_bits.i, align 8, !tbaa !183
  %extra_base.i = getelementptr inbounds %struct.static_tree_desc_s.21* %desc.idx208.val, i64 0, i32 2
  %34 = load i32* %extra_base.i, align 4, !tbaa !184
  %max_length5.i = getelementptr inbounds %struct.static_tree_desc_s.21* %desc.idx208.val, i64 0, i32 4
  %35 = load i32* %max_length5.i, align 4, !tbaa !185
  %scevgep.i = getelementptr %struct.internal_state.23* %s, i64 0, i32 43, i64 0
  %scevgep27.i = bitcast i16* %scevgep.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %scevgep27.i, i8 0, i64 32, i32 2, i1 false) #4
  %36 = load i32* %heap_max, align 4, !tbaa !181
  %idxprom6.i = sext i32 %36 to i64
  %arrayidx7.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom6.i
  %37 = load i32* %arrayidx7.i, align 4, !tbaa !28
  %idxprom8.i = sext i32 %37 to i64
  %len.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %idxprom8.i, i32 1, i32 0
  store i16 0, i16* %len.i, align 2, !tbaa !81
  %h.06.i = add i32 %36, 1
  %cmp127.i = icmp slt i32 %h.06.i, 573
  br i1 %cmp127.i, label %for.body13.lr.ph.i, label %gen_bitlen.exit

for.body13.lr.ph.i:                               ; preds = %do.end
  %opt_len.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 52
  %tobool.i = icmp eq %struct.ct_data_s* %32, null
  %static_len.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 53
  %38 = sext i32 %h.06.i to i64
  br i1 %tobool.i, label %for.body13.us.i.preheader, label %for.body13.i.preheader

for.body13.i.preheader:                           ; preds = %for.body13.lr.ph.i
  br label %for.body13.i

for.body13.us.i.preheader:                        ; preds = %for.body13.lr.ph.i
  br label %for.body13.us.i

for.body13.us.i:                                  ; preds = %for.cond11.backedge.us.i, %for.body13.us.i.preheader
  %indvars.iv28.i = phi i64 [ %indvars.iv.next29.i, %for.cond11.backedge.us.i ], [ %38, %for.body13.us.i.preheader ]
  %h.09.us.i = phi i32 [ %h.0.us.i, %for.cond11.backedge.us.i ], [ %h.06.i, %for.body13.us.i.preheader ]
  %overflow.08.us.i = phi i32 [ %overflow.0.inc27.us.i, %for.cond11.backedge.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx16.us.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %indvars.iv28.i
  %39 = load i32* %arrayidx16.us.i, align 4, !tbaa !28
  %idxprom17.us.i = sext i32 %39 to i64
  %dad.us.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %idxprom17.us.i, i32 1, i32 0
  %40 = load i16* %dad.us.i, align 2, !tbaa !81
  %idxprom20.us.i = zext i16 %40 to i64
  %len23.us.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %idxprom20.us.i, i32 1, i32 0
  %41 = load i16* %len23.us.i, align 2, !tbaa !81
  %conv.us.i = zext i16 %41 to i32
  %add24.us.i = add nuw nsw i32 %conv.us.i, 1
  %cmp25.us.i = icmp slt i32 %conv.us.i, %35
  %add24..us.i = select i1 %cmp25.us.i, i32 %add24.us.i, i32 %35
  %42 = zext i1 %cmp25.us.i to i32
  %inc27.us.i = xor i32 %42, 1
  %overflow.0.inc27.us.i = add nsw i32 %inc27.us.i, %overflow.08.us.i
  %conv28.us.i = trunc i32 %add24..us.i to i16
  store i16 %conv28.us.i, i16* %dad.us.i, align 2, !tbaa !81
  %cmp33.us.i = icmp sgt i32 %39, %desc.idx207.val
  br i1 %cmp33.us.i, label %for.cond11.backedge.us.i, label %if.end36.us.i

if.end36.us.i:                                    ; preds = %for.body13.us.i
  %idxprom37.us.i = sext i32 %add24..us.i to i64
  %arrayidx39.us.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 43, i64 %idxprom37.us.i
  %43 = load i16* %arrayidx39.us.i, align 2, !tbaa !81
  %inc40.us.i = add i16 %43, 1
  store i16 %inc40.us.i, i16* %arrayidx39.us.i, align 2, !tbaa !81
  %cmp41.us.i = icmp slt i32 %39, %34
  br i1 %cmp41.us.i, label %if.end46.us.i, label %if.then43.us.i

if.then43.us.i:                                   ; preds = %if.end36.us.i
  %sub.us.i = sub nsw i32 %39, %34
  %idxprom44.us.i = sext i32 %sub.us.i to i64
  %arrayidx45.us.i = getelementptr inbounds i32* %33, i64 %idxprom44.us.i
  %44 = load i32* %arrayidx45.us.i, align 4, !tbaa !28
  br label %if.end46.us.i

if.end46.us.i:                                    ; preds = %if.then43.us.i, %if.end36.us.i
  %xbits.0.us.i = phi i32 [ %44, %if.then43.us.i ], [ 0, %if.end36.us.i ]
  %freq.us.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %idxprom17.us.i, i32 0, i32 0
  %45 = load i16* %freq.us.i, align 2, !tbaa !81
  %conv49.us.i = zext i16 %45 to i64
  %add50.us.i = add nsw i32 %xbits.0.us.i, %add24..us.i
  %conv51.us.i = sext i32 %add50.us.i to i64
  %mul.us.i = mul i64 %conv49.us.i, %conv51.us.i
  %46 = load i64* %opt_len.i, align 8, !tbaa !171
  %add52.us.i = add i64 %mul.us.i, %46
  store i64 %add52.us.i, i64* %opt_len.i, align 8, !tbaa !171
  br label %for.cond11.backedge.us.i

for.cond11.backedge.us.i:                         ; preds = %if.end46.us.i, %for.body13.us.i
  %h.0.us.i = add nsw i32 %h.09.us.i, 1
  %indvars.iv.next29.i = add nsw i64 %indvars.iv28.i, 1
  %exitcond31.i = icmp eq i32 %h.09.us.i, 572
  br i1 %exitcond31.i, label %for.end67.i.loopexit, label %for.body13.us.i

for.body13.i:                                     ; preds = %for.cond11.backedge.i, %for.body13.i.preheader
  %indvars.iv21.i = phi i64 [ %indvars.iv.next22.i, %for.cond11.backedge.i ], [ %38, %for.body13.i.preheader ]
  %h.09.i = phi i32 [ %h.0.i, %for.cond11.backedge.i ], [ %h.06.i, %for.body13.i.preheader ]
  %overflow.08.i = phi i32 [ %overflow.0.inc27.i, %for.cond11.backedge.i ], [ 0, %for.body13.i.preheader ]
  %arrayidx16.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %indvars.iv21.i
  %47 = load i32* %arrayidx16.i, align 4, !tbaa !28
  %idxprom17.i = sext i32 %47 to i64
  %dad.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %idxprom17.i, i32 1, i32 0
  %48 = load i16* %dad.i, align 2, !tbaa !81
  %idxprom20.i = zext i16 %48 to i64
  %len23.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %idxprom20.i, i32 1, i32 0
  %49 = load i16* %len23.i, align 2, !tbaa !81
  %conv.i = zext i16 %49 to i32
  %add24.i = add nuw nsw i32 %conv.i, 1
  %cmp25.i = icmp slt i32 %conv.i, %35
  %add24..i = select i1 %cmp25.i, i32 %add24.i, i32 %35
  %50 = zext i1 %cmp25.i to i32
  %inc27.i = xor i32 %50, 1
  %overflow.0.inc27.i = add nsw i32 %inc27.i, %overflow.08.i
  %conv28.i = trunc i32 %add24..i to i16
  store i16 %conv28.i, i16* %dad.i, align 2, !tbaa !81
  %cmp33.i = icmp sgt i32 %47, %desc.idx207.val
  br i1 %cmp33.i, label %for.cond11.backedge.i, label %if.end36.i

if.end36.i:                                       ; preds = %for.body13.i
  %idxprom37.i = sext i32 %add24..i to i64
  %arrayidx39.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 43, i64 %idxprom37.i
  %51 = load i16* %arrayidx39.i, align 2, !tbaa !81
  %inc40.i = add i16 %51, 1
  store i16 %inc40.i, i16* %arrayidx39.i, align 2, !tbaa !81
  %cmp41.i = icmp slt i32 %47, %34
  br i1 %cmp41.i, label %if.then53.i, label %if.then43.i

if.then43.i:                                      ; preds = %if.end36.i
  %sub.i = sub nsw i32 %47, %34
  %idxprom44.i = sext i32 %sub.i to i64
  %arrayidx45.i = getelementptr inbounds i32* %33, i64 %idxprom44.i
  %52 = load i32* %arrayidx45.i, align 4, !tbaa !28
  br label %if.then53.i

for.cond11.backedge.i:                            ; preds = %if.then53.i, %for.body13.i
  %h.0.i = add nsw i32 %h.09.i, 1
  %indvars.iv.next22.i = add nsw i64 %indvars.iv21.i, 1
  %exitcond.i = icmp eq i32 %h.09.i, 572
  br i1 %exitcond.i, label %for.end67.i.loopexit250, label %for.body13.i

if.then53.i:                                      ; preds = %if.then43.i, %if.end36.i
  %xbits.0.i = phi i32 [ %52, %if.then43.i ], [ 0, %if.end36.i ]
  %freq.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %idxprom17.i, i32 0, i32 0
  %53 = load i16* %freq.i, align 2, !tbaa !81
  %conv49.i = zext i16 %53 to i64
  %add50.i = add nsw i32 %xbits.0.i, %add24..i
  %conv51.i = sext i32 %add50.i to i64
  %mul.i = mul i64 %conv49.i, %conv51.i
  %54 = load i64* %opt_len.i, align 8, !tbaa !171
  %add52.i = add i64 %mul.i, %54
  store i64 %add52.i, i64* %opt_len.i, align 8, !tbaa !171
  %len58.i = getelementptr inbounds %struct.ct_data_s* %32, i64 %idxprom17.i, i32 1, i32 0
  %55 = load i16* %len58.i, align 2, !tbaa !81
  %conv59.i = zext i16 %55 to i32
  %add60.i = add nsw i32 %conv59.i, %xbits.0.i
  %conv61.i = sext i32 %add60.i to i64
  %mul62.i = mul i64 %conv61.i, %conv49.i
  %56 = load i64* %static_len.i, align 8, !tbaa !172
  %add63.i = add i64 %mul62.i, %56
  store i64 %add63.i, i64* %static_len.i, align 8, !tbaa !172
  br label %for.cond11.backedge.i

for.end67.i.loopexit:                             ; preds = %for.cond11.backedge.us.i
  %overflow.0.inc27.us.i.lcssa = phi i32 [ %overflow.0.inc27.us.i, %for.cond11.backedge.us.i ]
  br label %for.end67.i

for.end67.i.loopexit250:                          ; preds = %for.cond11.backedge.i
  %overflow.0.inc27.i.lcssa = phi i32 [ %overflow.0.inc27.i, %for.cond11.backedge.i ]
  br label %for.end67.i

for.end67.i:                                      ; preds = %for.end67.i.loopexit250, %for.end67.i.loopexit
  %overflow.0.lcssa.i = phi i32 [ %overflow.0.inc27.us.i.lcssa, %for.end67.i.loopexit ], [ %overflow.0.inc27.i.lcssa, %for.end67.i.loopexit250 ]
  %cmp68.i = icmp eq i32 %overflow.0.lcssa.i, 0
  br i1 %cmp68.i, label %gen_bitlen.exit, label %do.body.preheader.i

do.body.preheader.i:                              ; preds = %for.end67.i
  %idxprom90.i = sext i32 %35 to i64
  %arrayidx92.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 43, i64 %idxprom90.i
  br label %do.body.i

do.body.i:                                        ; preds = %while.end.i, %do.body.preheader.i
  %overflow.2.i = phi i32 [ %sub94.i, %while.end.i ], [ %overflow.0.lcssa.i, %do.body.preheader.i ]
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %do.body.i
  %indvars.iv19.i = phi i64 [ %indvars.iv.next20.i, %while.cond.i ], [ %idxprom90.i, %do.body.i ]
  %indvars.iv.next20.i = add nsw i64 %indvars.iv19.i, -1
  %arrayidx75.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 43, i64 %indvars.iv.next20.i
  %57 = load i16* %arrayidx75.i, align 2, !tbaa !81
  %cmp77.i = icmp eq i16 %57, 0
  br i1 %cmp77.i, label %while.cond.i, label %while.end.i

while.end.i:                                      ; preds = %while.cond.i
  %.lcssa253 = phi i16 [ %57, %while.cond.i ]
  %arrayidx75.i.lcssa = phi i16* [ %arrayidx75.i, %while.cond.i ]
  %indvars.iv19.i.lcssa = phi i64 [ %indvars.iv19.i, %while.cond.i ]
  %dec82.i = add i16 %.lcssa253, -1
  store i16 %dec82.i, i16* %arrayidx75.i.lcssa, align 2, !tbaa !81
  %sext.i = shl i64 %indvars.iv19.i.lcssa, 32
  %idxprom84.i = ashr exact i64 %sext.i, 32
  %arrayidx86.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 43, i64 %idxprom84.i
  %58 = load i16* %arrayidx86.i, align 2, !tbaa !81
  %add88.i = add i16 %58, 2
  store i16 %add88.i, i16* %arrayidx86.i, align 2, !tbaa !81
  %59 = load i16* %arrayidx92.i, align 2, !tbaa !81
  %dec93.i = add i16 %59, -1
  store i16 %dec93.i, i16* %arrayidx92.i, align 2, !tbaa !81
  %sub94.i = add nsw i32 %overflow.2.i, -2
  %cmp95.i = icmp sgt i32 %sub94.i, 0
  br i1 %cmp95.i, label %do.body.i, label %for.cond97.preheader.i

for.cond97.preheader.i:                           ; preds = %while.end.i
  %dec93.i.lcssa = phi i16 [ %dec93.i, %while.end.i ]
  %cmp983.i = icmp eq i32 %35, 0
  br i1 %cmp983.i, label %gen_bitlen.exit, label %for.body100.i.preheader

for.body100.i.preheader:                          ; preds = %for.cond97.preheader.i
  br label %for.body100.i

for.body100.i:                                    ; preds = %for.inc148.for.body100_crit_edge.i, %for.body100.i.preheader
  %60 = phi i16 [ %.pre.i, %for.inc148.for.body100_crit_edge.i ], [ %dec93.i.lcssa, %for.body100.i.preheader ]
  %indvars.iv17.i = phi i64 [ %indvars.iv.next18.i, %for.inc148.for.body100_crit_edge.i ], [ %idxprom90.i, %for.body100.i.preheader ]
  %h.15.i = phi i32 [ %h.2.ph.i.lcssa, %for.inc148.for.body100_crit_edge.i ], [ 573, %for.body100.i.preheader ]
  %61 = trunc i64 %indvars.iv17.i to i32
  %conv140.i = trunc i64 %indvars.iv17.i to i16
  %cmp106.i216 = icmp eq i16 %60, 0
  br i1 %cmp106.i216, label %for.inc148.i, label %while.cond105.outer.while.cond105.outer.split_crit_edge.i.lr.ph

while.cond105.outer.while.cond105.outer.split_crit_edge.i.lr.ph: ; preds = %for.body100.i
  %conv104.i = zext i16 %60 to i32
  br label %while.cond105.outer.while.cond105.outer.split_crit_edge.i

while.cond105.outer.while.cond105.outer.split_crit_edge.i: ; preds = %if.end145.i, %while.cond105.outer.while.cond105.outer.split_crit_edge.i.lr.ph
  %h.2.ph.i218 = phi i32 [ %h.15.i, %while.cond105.outer.while.cond105.outer.split_crit_edge.i.lr.ph ], [ %64, %if.end145.i ]
  %n.0.ph.i217 = phi i32 [ %conv104.i, %while.cond105.outer.while.cond105.outer.split_crit_edge.i.lr.ph ], [ %dec146.i, %if.end145.i ]
  %62 = sext i32 %h.2.ph.i218 to i64
  br label %while.body108.i

while.body108.i:                                  ; preds = %while.body108.i, %while.cond105.outer.while.cond105.outer.split_crit_edge.i
  %indvars.iv.i = phi i64 [ %62, %while.cond105.outer.while.cond105.outer.split_crit_edge.i ], [ %indvars.iv.next.i, %while.body108.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx112.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %indvars.iv.next.i
  %63 = load i32* %arrayidx112.i, align 4, !tbaa !28
  %cmp113.i = icmp sgt i32 %63, %desc.idx207.val
  br i1 %cmp113.i, label %while.body108.i, label %if.end116.i

if.end116.i:                                      ; preds = %while.body108.i
  %.lcssa = phi i32 [ %63, %while.body108.i ]
  %indvars.iv.next.i.lcssa = phi i64 [ %indvars.iv.next.i, %while.body108.i ]
  %64 = trunc i64 %indvars.iv.next.i.lcssa to i32
  %phitmp.i = sext i32 %.lcssa to i64
  %len120.phi.trans.insert.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %phitmp.i, i32 1, i32 0
  %.pre32.i = load i16* %len120.phi.trans.insert.i, align 2, !tbaa !81
  %conv121.i = zext i16 %.pre32.i to i32
  %cmp122.i = icmp eq i32 %conv121.i, %61
  br i1 %cmp122.i, label %if.end145.i, label %if.then124.i

if.then124.i:                                     ; preds = %if.end116.i
  %conv130.i = zext i16 %.pre32.i to i64
  %sub131.i = sub nsw i64 %indvars.iv17.i, %conv130.i
  %freq135.i = getelementptr inbounds %struct.ct_data_s* %desc.idx.val, i64 %phitmp.i, i32 0, i32 0
  %65 = load i16* %freq135.i, align 2, !tbaa !81
  %conv136.i = zext i16 %65 to i64
  %mul137.i = mul nsw i64 %conv136.i, %sub131.i
  %66 = load i64* %opt_len.i, align 8, !tbaa !171
  %add139.i = add i64 %mul137.i, %66
  store i64 %add139.i, i64* %opt_len.i, align 8, !tbaa !171
  store i16 %conv140.i, i16* %len120.phi.trans.insert.i, align 2, !tbaa !81
  br label %if.end145.i

if.end145.i:                                      ; preds = %if.then124.i, %if.end116.i
  %dec146.i = add nsw i32 %n.0.ph.i217, -1
  %cmp106.i = icmp eq i32 %dec146.i, 0
  br i1 %cmp106.i, label %for.inc148.i.loopexit, label %while.cond105.outer.while.cond105.outer.split_crit_edge.i

for.inc148.i.loopexit:                            ; preds = %if.end145.i
  %.lcssa252 = phi i32 [ %64, %if.end145.i ]
  br label %for.inc148.i

for.inc148.i:                                     ; preds = %for.inc148.i.loopexit, %for.body100.i
  %h.2.ph.i.lcssa = phi i32 [ %h.15.i, %for.body100.i ], [ %.lcssa252, %for.inc148.i.loopexit ]
  %indvars.iv.next18.i = add nsw i64 %indvars.iv17.i, -1
  %67 = trunc i64 %indvars.iv.next18.i to i32
  %cmp98.i = icmp eq i32 %67, 0
  br i1 %cmp98.i, label %gen_bitlen.exit.loopexit, label %for.inc148.for.body100_crit_edge.i

for.inc148.for.body100_crit_edge.i:               ; preds = %for.inc148.i
  %arrayidx103.phi.trans.insert.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 43, i64 %indvars.iv.next18.i
  %.pre.i = load i16* %arrayidx103.phi.trans.insert.i, align 2, !tbaa !81
  br label %for.body100.i

gen_bitlen.exit.loopexit:                         ; preds = %for.inc148.i
  br label %gen_bitlen.exit

gen_bitlen.exit:                                  ; preds = %gen_bitlen.exit.loopexit, %for.cond97.preheader.i, %for.end67.i, %do.end
  %68 = bitcast [16 x i16]* %next_code.i to i8*
  call void @llvm.lifetime.start(i64 32, i8* %68)
  br label %for.body.i

for.cond5.preheader.i:                            ; preds = %for.body.i
  %cmp635.i = icmp slt i32 %max_code.2.lcssa.ph, 0
  br i1 %cmp635.i, label %gen_codes.exit, label %for.body8.i.preheader

for.body8.i.preheader:                            ; preds = %for.cond5.preheader.i
  br label %for.body8.i

for.body.i:                                       ; preds = %for.body.i, %gen_bitlen.exit
  %indvars.iv39.i = phi i64 [ 1, %gen_bitlen.exit ], [ %indvars.iv.next40.i, %for.body.i ]
  %code.038.i = phi i32 [ 0, %gen_bitlen.exit ], [ %shl.i, %for.body.i ]
  %conv.i209 = and i32 %code.038.i, 65534
  %69 = add nsw i64 %indvars.iv39.i, -1
  %arrayidx.i = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 43, i64 %69
  %70 = load i16* %arrayidx.i, align 2, !tbaa !81
  %conv1.i = zext i16 %70 to i32
  %add.i = add nuw nsw i32 %conv1.i, %conv.i209
  %shl.i = shl nuw nsw i32 %add.i, 1
  %conv2.i = trunc i32 %shl.i to i16
  %arrayidx4.i = getelementptr inbounds [16 x i16]* %next_code.i, i64 0, i64 %indvars.iv39.i
  store i16 %conv2.i, i16* %arrayidx4.i, align 2, !tbaa !81
  %indvars.iv.next40.i = add nuw nsw i64 %indvars.iv39.i, 1
  %exitcond42.i = icmp eq i64 %indvars.iv39.i, 15
  br i1 %exitcond42.i, label %for.cond5.preheader.i, label %for.body.i

for.body8.i:                                      ; preds = %for.inc23.i, %for.body8.i.preheader
  %indvars.iv.i210 = phi i64 [ %indvars.iv.next.i212, %for.inc23.i ], [ 0, %for.body8.i.preheader ]
  %len11.i = getelementptr inbounds %struct.ct_data_s* %0, i64 %indvars.iv.i210, i32 1, i32 0
  %71 = load i16* %len11.i, align 2, !tbaa !81
  %cmp13.i = icmp eq i16 %71, 0
  br i1 %cmp13.i, label %for.inc23.i, label %if.end.i

if.end.i:                                         ; preds = %for.body8.i
  %conv12.i = zext i16 %71 to i32
  %idxprom15.i = zext i16 %71 to i64
  %arrayidx16.i211 = getelementptr inbounds [16 x i16]* %next_code.i, i64 0, i64 %idxprom15.i
  %72 = load i16* %arrayidx16.i211, align 2, !tbaa !81
  %inc17.i = add i16 %72, 1
  store i16 %inc17.i, i16* %arrayidx16.i211, align 2, !tbaa !81
  %conv18.i = zext i16 %72 to i32
  %73 = zext i16 %71 to i32
  %74 = mul i32 %73, -1
  %75 = icmp sgt i32 %74, -1
  %smax = select i1 %75, i32 %74, i32 -1
  %76 = add i32 %smax, 1
  %77 = add i32 %76, %73
  %xtraiter = and i32 %77, 3
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %77, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %unr.cmp273, label %if.end.i.split

unr.cmp273:                                       ; preds = %if.end.i
  %un.tmp274 = icmp eq i32 %xtraiter, 1
  br i1 %un.tmp274, label %do.body.i.i.unr263, label %unr.cmp

unr.cmp:                                          ; preds = %unr.cmp273
  %un.tmp = icmp eq i32 %xtraiter, 2
  br i1 %un.tmp, label %do.body.i.i.unr256, label %do.body.i.i.unr

do.body.i.i.unr:                                  ; preds = %unr.cmp
  %and.i.i.unr = and i32 %conv18.i, 1
  %or.i.i.unr = or i32 0, %and.i.i.unr
  %shr.i.i.unr = lshr i32 %conv18.i, 1
  %shl.i.i.unr = shl i32 %or.i.i.unr, 1
  %dec.i.i.unr = add nsw i32 %conv12.i, -1
  %cmp.i.i.unr = icmp sgt i32 %dec.i.i.unr, 0
  br label %do.body.i.i.unr256

do.body.i.i.unr256:                               ; preds = %do.body.i.i.unr, %unr.cmp
  %code.addr.0.i.i.unr = phi i32 [ %conv18.i, %unr.cmp ], [ %shr.i.i.unr, %do.body.i.i.unr ]
  %len.addr.0.i.i.unr = phi i32 [ %conv12.i, %unr.cmp ], [ %dec.i.i.unr, %do.body.i.i.unr ]
  %res.0.i.i.unr = phi i32 [ 0, %unr.cmp ], [ %shl.i.i.unr, %do.body.i.i.unr ]
  %and.i.i.unr257 = and i32 %code.addr.0.i.i.unr, 1
  %or.i.i.unr258 = or i32 %res.0.i.i.unr, %and.i.i.unr257
  %shr.i.i.unr259 = lshr i32 %code.addr.0.i.i.unr, 1
  %shl.i.i.unr260 = shl i32 %or.i.i.unr258, 1
  %dec.i.i.unr261 = add nsw i32 %len.addr.0.i.i.unr, -1
  %cmp.i.i.unr262 = icmp sgt i32 %dec.i.i.unr261, 0
  br label %do.body.i.i.unr263

do.body.i.i.unr263:                               ; preds = %do.body.i.i.unr256, %unr.cmp273
  %code.addr.0.i.i.unr264 = phi i32 [ %conv18.i, %unr.cmp273 ], [ %shr.i.i.unr259, %do.body.i.i.unr256 ]
  %len.addr.0.i.i.unr265 = phi i32 [ %conv12.i, %unr.cmp273 ], [ %dec.i.i.unr261, %do.body.i.i.unr256 ]
  %res.0.i.i.unr266 = phi i32 [ 0, %unr.cmp273 ], [ %shl.i.i.unr260, %do.body.i.i.unr256 ]
  %and.i.i.unr267 = and i32 %code.addr.0.i.i.unr264, 1
  %or.i.i.unr268 = or i32 %res.0.i.i.unr266, %and.i.i.unr267
  %shr.i.i.unr269 = lshr i32 %code.addr.0.i.i.unr264, 1
  %shl.i.i.unr270 = shl i32 %or.i.i.unr268, 1
  %dec.i.i.unr271 = add nsw i32 %len.addr.0.i.i.unr265, -1
  %cmp.i.i.unr272 = icmp sgt i32 %dec.i.i.unr271, 0
  br label %if.end.i.split

if.end.i.split:                                   ; preds = %do.body.i.i.unr263, %if.end.i
  %code.addr.0.i.i.unr275 = phi i32 [ %conv18.i, %if.end.i ], [ %shr.i.i.unr269, %do.body.i.i.unr263 ]
  %len.addr.0.i.i.unr276 = phi i32 [ %conv12.i, %if.end.i ], [ %dec.i.i.unr271, %do.body.i.i.unr263 ]
  %res.0.i.i.unr277 = phi i32 [ 0, %if.end.i ], [ %shl.i.i.unr270, %do.body.i.i.unr263 ]
  %or.i.i.lcssa.unr = phi i32 [ 0, %if.end.i ], [ %or.i.i.unr268, %do.body.i.i.unr263 ]
  %78 = icmp ult i32 %77, 4
  br i1 %78, label %bi_reverse.exit.i, label %if.end.i.split.split

if.end.i.split.split:                             ; preds = %if.end.i.split
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i, %if.end.i.split.split
  %code.addr.0.i.i = phi i32 [ %code.addr.0.i.i.unr275, %if.end.i.split.split ], [ %shr.i.i.3, %do.body.i.i ]
  %len.addr.0.i.i = phi i32 [ %len.addr.0.i.i.unr276, %if.end.i.split.split ], [ %dec.i.i.3, %do.body.i.i ]
  %res.0.i.i = phi i32 [ %res.0.i.i.unr277, %if.end.i.split.split ], [ %shl.i.i.3, %do.body.i.i ]
  %and.i.i = and i32 %code.addr.0.i.i, 1
  %or.i.i = or i32 %res.0.i.i, %and.i.i
  %shr.i.i = lshr i32 %code.addr.0.i.i, 1
  %shl.i.i = shl i32 %or.i.i, 1
  %dec.i.i = add nsw i32 %len.addr.0.i.i, -1
  %and.i.i.1 = and i32 %shr.i.i, 1
  %or.i.i.1 = or i32 %shl.i.i, %and.i.i.1
  %shr.i.i.1 = lshr i32 %shr.i.i, 1
  %shl.i.i.1 = shl i32 %or.i.i.1, 1
  %dec.i.i.1 = add nsw i32 %dec.i.i, -1
  %and.i.i.2 = and i32 %shr.i.i.1, 1
  %or.i.i.2 = or i32 %shl.i.i.1, %and.i.i.2
  %shr.i.i.2 = lshr i32 %shr.i.i.1, 1
  %shl.i.i.2 = shl i32 %or.i.i.2, 1
  %dec.i.i.2 = add nsw i32 %dec.i.i.1, -1
  %and.i.i.3 = and i32 %shr.i.i.2, 1
  %or.i.i.3 = or i32 %shl.i.i.2, %and.i.i.3
  %shr.i.i.3 = lshr i32 %shr.i.i.2, 1
  %shl.i.i.3 = shl i32 %or.i.i.3, 1
  %dec.i.i.3 = add nsw i32 %dec.i.i.2, -1
  %cmp.i.i.3 = icmp sgt i32 %dec.i.i.3, 0
  br i1 %cmp.i.i.3, label %do.body.i.i, label %bi_reverse.exit.i.unr-lcssa

bi_reverse.exit.i.unr-lcssa:                      ; preds = %do.body.i.i
  %or.i.i.lcssa.ph = phi i32 [ %or.i.i.3, %do.body.i.i ]
  br label %bi_reverse.exit.i

bi_reverse.exit.i:                                ; preds = %bi_reverse.exit.i.unr-lcssa, %if.end.i.split
  %or.i.i.lcssa = phi i32 [ %or.i.i.lcssa.unr, %if.end.i.split ], [ %or.i.i.lcssa.ph, %bi_reverse.exit.i.unr-lcssa ]
  %conv19.i = trunc i32 %or.i.i.lcssa to i16
  %code22.i = getelementptr inbounds %struct.ct_data_s* %0, i64 %indvars.iv.i210, i32 0, i32 0
  store i16 %conv19.i, i16* %code22.i, align 2, !tbaa !81
  br label %for.inc23.i

for.inc23.i:                                      ; preds = %bi_reverse.exit.i, %for.body8.i
  %indvars.iv.next.i212 = add nuw nsw i64 %indvars.iv.i210, 1
  %lftr.wideiv = trunc i64 %indvars.iv.i210 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %max_code.2.lcssa.ph
  br i1 %exitcond, label %gen_codes.exit.loopexit, label %for.body8.i

gen_codes.exit.loopexit:                          ; preds = %for.inc23.i
  br label %gen_codes.exit

gen_codes.exit:                                   ; preds = %gen_codes.exit.loopexit, %for.cond5.preheader.i
  call void @llvm.lifetime.end(i64 32, i8* %68)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compress_block(%struct.internal_state.23* %s, %struct.ct_data_s* nocapture readonly %ltree, %struct.ct_data_s* nocapture readonly %dtree) #3 {
entry:
  %last_lit = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 50
  %0 = load i32* %last_lit, align 4, !tbaa !113
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %entry.if.end347_crit_edge, label %do.body.preheader

entry.if.end347_crit_edge:                        ; preds = %entry
  %bi_valid353.phi.trans.insert = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %.pre = load i32* %bi_valid353.phi.trans.insert, align 4, !tbaa !99
  %bi_buf367.phi.trans.insert = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %.pre559 = load i16* %bi_buf367.phi.trans.insert, align 2, !tbaa !100
  br label %if.end347

do.body.preheader:                                ; preds = %entry
  %d_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 51
  %l_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 48
  %bi_valid = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %bi_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %pending = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %pending_buf = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  br label %do.body

do.body:                                          ; preds = %do.cond, %do.body.preheader
  %lx.0 = phi i32 [ %inc, %do.cond ], [ 0, %do.body.preheader ]
  %idxprom = zext i32 %lx.0 to i64
  %1 = load i16** %d_buf, align 8, !tbaa !69
  %arrayidx = getelementptr inbounds i16* %1, i64 %idxprom
  %2 = load i16* %arrayidx, align 2, !tbaa !81
  %conv = zext i16 %2 to i32
  %inc = add i32 %lx.0, 1
  %3 = load i8** %l_buf, align 8, !tbaa !70
  %arrayidx2 = getelementptr inbounds i8* %3, i64 %idxprom
  %4 = load i8* %arrayidx2, align 1, !tbaa !5
  %conv3 = zext i8 %4 to i32
  %cmp4 = icmp eq i16 %2, 0
  %idxprom7 = zext i8 %4 to i64
  br i1 %cmp4, label %if.then6, label %if.else59

if.then6:                                         ; preds = %do.body
  %len9 = getelementptr inbounds %struct.ct_data_s* %ltree, i64 %idxprom7, i32 1, i32 0
  %5 = load i16* %len9, align 2, !tbaa !81
  %conv10 = zext i16 %5 to i32
  %6 = load i32* %bi_valid, align 4, !tbaa !99
  %sub = sub nsw i32 16, %conv10
  %cmp11 = icmp sgt i32 %6, %sub
  %code16 = getelementptr inbounds %struct.ct_data_s* %ltree, i64 %idxprom7, i32 0, i32 0
  %7 = load i16* %code16, align 2, !tbaa !81
  %conv19 = zext i16 %7 to i32
  %shl = shl i32 %conv19, %6
  %8 = load i16* %bi_buf, align 2, !tbaa !100
  %conv21 = zext i16 %8 to i32
  %or = or i32 %conv21, %shl
  %conv22 = trunc i32 %or to i16
  store i16 %conv22, i16* %bi_buf, align 2, !tbaa !100
  br i1 %cmp11, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then6
  %conv25 = trunc i32 %or to i8
  %9 = load i32* %pending, align 4, !tbaa !76
  %inc26 = add i32 %9, 1
  store i32 %inc26, i32* %pending, align 4, !tbaa !76
  %idxprom27 = zext i32 %9 to i64
  %10 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx28 = getelementptr inbounds i8* %10, i64 %idxprom27
  store i8 %conv25, i8* %arrayidx28, align 1, !tbaa !5
  %11 = load i16* %bi_buf, align 2, !tbaa !100
  %shr558 = lshr i16 %11, 8
  %conv31 = trunc i16 %shr558 to i8
  %12 = load i32* %pending, align 4, !tbaa !76
  %inc33 = add i32 %12, 1
  store i32 %inc33, i32* %pending, align 4, !tbaa !76
  %idxprom34 = zext i32 %12 to i64
  %13 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx36 = getelementptr inbounds i8* %13, i64 %idxprom34
  store i8 %conv31, i8* %arrayidx36, align 1, !tbaa !5
  %14 = load i32* %bi_valid, align 4, !tbaa !99
  %sub40 = sub nsw i32 16, %14
  %shr41 = lshr i32 %conv19, %sub40
  %conv42 = trunc i32 %shr41 to i16
  store i16 %conv42, i16* %bi_buf, align 2, !tbaa !100
  %sub44 = add nsw i32 %conv10, -16
  %add = add nsw i32 %sub44, %14
  store i32 %add, i32* %bi_valid, align 4, !tbaa !99
  br label %do.cond

if.else:                                          ; preds = %if.then6
  %add58 = add nsw i32 %6, %conv10
  store i32 %add58, i32* %bi_valid, align 4, !tbaa !99
  br label %do.cond

if.else59:                                        ; preds = %do.body
  %arrayidx61 = getelementptr inbounds [256 x i8]* @_length_code, i64 0, i64 %idxprom7
  %15 = load i8* %arrayidx61, align 1, !tbaa !5
  %conv62 = zext i8 %15 to i64
  %add64551 = or i64 %conv62, 256
  %add65 = add nuw nsw i64 %add64551, 1
  %idxprom66 = and i64 %add65, 1023
  %len69 = getelementptr inbounds %struct.ct_data_s* %ltree, i64 %idxprom66, i32 1, i32 0
  %16 = load i16* %len69, align 2, !tbaa !81
  %conv70 = zext i16 %16 to i32
  %17 = load i32* %bi_valid, align 4, !tbaa !99
  %sub72 = sub nsw i32 16, %conv70
  %cmp73 = icmp sgt i32 %17, %sub72
  %code82 = getelementptr inbounds %struct.ct_data_s* %ltree, i64 %idxprom66, i32 0, i32 0
  %18 = load i16* %code82, align 2, !tbaa !81
  %conv85 = zext i16 %18 to i32
  %shl87 = shl i32 %conv85, %17
  %19 = load i16* %bi_buf, align 2, !tbaa !100
  %conv89 = zext i16 %19 to i32
  %or90 = or i32 %conv89, %shl87
  %conv91 = trunc i32 %or90 to i16
  store i16 %conv91, i16* %bi_buf, align 2, !tbaa !100
  br i1 %cmp73, label %if.then75, label %if.else120

if.then75:                                        ; preds = %if.else59
  %conv95 = trunc i32 %or90 to i8
  %20 = load i32* %pending, align 4, !tbaa !76
  %inc97 = add i32 %20, 1
  store i32 %inc97, i32* %pending, align 4, !tbaa !76
  %idxprom98 = zext i32 %20 to i64
  %21 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx100 = getelementptr inbounds i8* %21, i64 %idxprom98
  store i8 %conv95, i8* %arrayidx100, align 1, !tbaa !5
  %22 = load i16* %bi_buf, align 2, !tbaa !100
  %shr103557 = lshr i16 %22, 8
  %conv104 = trunc i16 %shr103557 to i8
  %23 = load i32* %pending, align 4, !tbaa !76
  %inc106 = add i32 %23, 1
  store i32 %inc106, i32* %pending, align 4, !tbaa !76
  %idxprom107 = zext i32 %23 to i64
  %24 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx109 = getelementptr inbounds i8* %24, i64 %idxprom107
  store i8 %conv104, i8* %arrayidx109, align 1, !tbaa !5
  %25 = load i32* %bi_valid, align 4, !tbaa !99
  %sub113 = sub nsw i32 16, %25
  %shr114 = lshr i32 %conv85, %sub113
  %conv115 = trunc i32 %shr114 to i16
  store i16 %conv115, i16* %bi_buf, align 2, !tbaa !100
  %sub117 = add nsw i32 %conv70, -16
  %add119 = add nsw i32 %sub117, %25
  br label %if.end136

if.else120:                                       ; preds = %if.else59
  %add135 = add nsw i32 %17, %conv70
  br label %if.end136

if.end136:                                        ; preds = %if.else120, %if.then75
  %26 = phi i16 [ %conv91, %if.else120 ], [ %conv115, %if.then75 ]
  %27 = phi i32 [ %add135, %if.else120 ], [ %add119, %if.then75 ]
  store i32 %27, i32* %bi_valid, align 4, !tbaa !99
  %arrayidx138 = getelementptr inbounds [29 x i32]* @extra_lbits, i64 0, i64 %conv62
  %28 = load i32* %arrayidx138, align 4, !tbaa !28
  %29 = add nsw i64 %conv62, -8
  %cmp139 = icmp ult i64 %29, 20
  br i1 %cmp139, label %if.then141, label %if.end200

if.then141:                                       ; preds = %if.end136
  %arrayidx143 = getelementptr inbounds [29 x i32]* @base_length, i64 0, i64 %conv62
  %30 = load i32* %arrayidx143, align 4, !tbaa !28
  %sub144 = sub nsw i32 %conv3, %30
  %sub147 = sub nsw i32 16, %28
  %cmp148 = icmp sgt i32 %27, %sub147
  %conv153 = and i32 %sub144, 65535
  %shl155 = shl i32 %conv153, %27
  %conv157 = zext i16 %26 to i32
  %or158 = or i32 %shl155, %conv157
  %conv159 = trunc i32 %or158 to i16
  store i16 %conv159, i16* %bi_buf, align 2, !tbaa !100
  br i1 %cmp148, label %if.then150, label %if.else188

if.then150:                                       ; preds = %if.then141
  %conv163 = trunc i32 %or158 to i8
  %31 = load i32* %pending, align 4, !tbaa !76
  %inc165 = add i32 %31, 1
  store i32 %inc165, i32* %pending, align 4, !tbaa !76
  %idxprom166 = zext i32 %31 to i64
  %32 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx168 = getelementptr inbounds i8* %32, i64 %idxprom166
  store i8 %conv163, i8* %arrayidx168, align 1, !tbaa !5
  %33 = load i16* %bi_buf, align 2, !tbaa !100
  %shr171556 = lshr i16 %33, 8
  %conv172 = trunc i16 %shr171556 to i8
  %34 = load i32* %pending, align 4, !tbaa !76
  %inc174 = add i32 %34, 1
  store i32 %inc174, i32* %pending, align 4, !tbaa !76
  %idxprom175 = zext i32 %34 to i64
  %35 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx177 = getelementptr inbounds i8* %35, i64 %idxprom175
  store i8 %conv172, i8* %arrayidx177, align 1, !tbaa !5
  %36 = load i32* %bi_valid, align 4, !tbaa !99
  %sub181 = sub nsw i32 16, %36
  %shr182 = lshr i32 %conv153, %sub181
  %conv183 = trunc i32 %shr182 to i16
  store i16 %conv183, i16* %bi_buf, align 2, !tbaa !100
  %sub185 = add nsw i32 %28, -16
  %add187 = add nsw i32 %sub185, %36
  store i32 %add187, i32* %bi_valid, align 4, !tbaa !99
  br label %if.end200

if.else188:                                       ; preds = %if.then141
  %add198 = add nsw i32 %27, %28
  store i32 %add198, i32* %bi_valid, align 4, !tbaa !99
  br label %if.end200

if.end200:                                        ; preds = %if.else188, %if.then150, %if.end136
  %37 = phi i16 [ %conv183, %if.then150 ], [ %conv159, %if.else188 ], [ %26, %if.end136 ]
  %38 = phi i32 [ %add187, %if.then150 ], [ %add198, %if.else188 ], [ %27, %if.end136 ]
  %dec = add nsw i32 %conv, -1
  %cmp201 = icmp ult i32 %dec, 256
  br i1 %cmp201, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.end200
  %shr206 = lshr i32 %dec, 7
  %add207 = add nuw nsw i32 %shr206, 256
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end200
  %idxprom203.pn.in = phi i32 [ %add207, %cond.false ], [ %dec, %if.end200 ]
  %idxprom203.pn = zext i32 %idxprom203.pn.in to i64
  %.sink.in = getelementptr inbounds [512 x i8]* @_dist_code, i64 0, i64 %idxprom203.pn
  %.sink = load i8* %.sink.in, align 1
  %idxprom212 = zext i8 %.sink to i64
  %len215 = getelementptr inbounds %struct.ct_data_s* %dtree, i64 %idxprom212, i32 1, i32 0
  %39 = load i16* %len215, align 2, !tbaa !81
  %conv216 = zext i16 %39 to i32
  %sub218 = sub nsw i32 16, %conv216
  %cmp219 = icmp sgt i32 %38, %sub218
  %code226 = getelementptr inbounds %struct.ct_data_s* %dtree, i64 %idxprom212, i32 0, i32 0
  %40 = load i16* %code226, align 2, !tbaa !81
  %conv229 = zext i16 %40 to i32
  %shl231 = shl i32 %conv229, %38
  %conv233 = zext i16 %37 to i32
  %or234 = or i32 %conv233, %shl231
  %conv235 = trunc i32 %or234 to i16
  store i16 %conv235, i16* %bi_buf, align 2, !tbaa !100
  br i1 %cmp219, label %if.then221, label %if.else264

if.then221:                                       ; preds = %cond.end
  %conv239 = trunc i32 %or234 to i8
  %41 = load i32* %pending, align 4, !tbaa !76
  %inc241 = add i32 %41, 1
  store i32 %inc241, i32* %pending, align 4, !tbaa !76
  %idxprom242 = zext i32 %41 to i64
  %42 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx244 = getelementptr inbounds i8* %42, i64 %idxprom242
  store i8 %conv239, i8* %arrayidx244, align 1, !tbaa !5
  %43 = load i16* %bi_buf, align 2, !tbaa !100
  %shr247555 = lshr i16 %43, 8
  %conv248 = trunc i16 %shr247555 to i8
  %44 = load i32* %pending, align 4, !tbaa !76
  %inc250 = add i32 %44, 1
  store i32 %inc250, i32* %pending, align 4, !tbaa !76
  %idxprom251 = zext i32 %44 to i64
  %45 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx253 = getelementptr inbounds i8* %45, i64 %idxprom251
  store i8 %conv248, i8* %arrayidx253, align 1, !tbaa !5
  %46 = load i32* %bi_valid, align 4, !tbaa !99
  %sub257 = sub nsw i32 16, %46
  %shr258 = lshr i32 %conv229, %sub257
  %conv259 = trunc i32 %shr258 to i16
  store i16 %conv259, i16* %bi_buf, align 2, !tbaa !100
  %sub261 = add nsw i32 %conv216, -16
  %add263 = add nsw i32 %sub261, %46
  br label %if.end278

if.else264:                                       ; preds = %cond.end
  %add277 = add nsw i32 %38, %conv216
  br label %if.end278

if.end278:                                        ; preds = %if.else264, %if.then221
  %47 = phi i16 [ %conv235, %if.else264 ], [ %conv259, %if.then221 ]
  %48 = phi i32 [ %add277, %if.else264 ], [ %add263, %if.then221 ]
  store i32 %48, i32* %bi_valid, align 4, !tbaa !99
  %arrayidx280 = getelementptr inbounds [30 x i32]* @extra_dbits, i64 0, i64 %idxprom212
  %49 = load i32* %arrayidx280, align 4, !tbaa !28
  %50 = add nsw i64 %idxprom212, -4
  %cmp281 = icmp ult i64 %50, 26
  br i1 %cmp281, label %if.then283, label %do.cond

if.then283:                                       ; preds = %if.end278
  %arrayidx285 = getelementptr inbounds [30 x i32]* @base_dist, i64 0, i64 %idxprom212
  %51 = load i32* %arrayidx285, align 4, !tbaa !28
  %sub286 = sub i32 %dec, %51
  %sub289 = sub nsw i32 16, %49
  %cmp290 = icmp sgt i32 %48, %sub289
  %conv295 = and i32 %sub286, 65535
  %shl297 = shl i32 %conv295, %48
  %conv299 = zext i16 %47 to i32
  %or300 = or i32 %shl297, %conv299
  %conv301 = trunc i32 %or300 to i16
  store i16 %conv301, i16* %bi_buf, align 2, !tbaa !100
  br i1 %cmp290, label %if.then292, label %if.else330

if.then292:                                       ; preds = %if.then283
  %conv305 = trunc i32 %or300 to i8
  %52 = load i32* %pending, align 4, !tbaa !76
  %inc307 = add i32 %52, 1
  store i32 %inc307, i32* %pending, align 4, !tbaa !76
  %idxprom308 = zext i32 %52 to i64
  %53 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx310 = getelementptr inbounds i8* %53, i64 %idxprom308
  store i8 %conv305, i8* %arrayidx310, align 1, !tbaa !5
  %54 = load i16* %bi_buf, align 2, !tbaa !100
  %shr313554 = lshr i16 %54, 8
  %conv314 = trunc i16 %shr313554 to i8
  %55 = load i32* %pending, align 4, !tbaa !76
  %inc316 = add i32 %55, 1
  store i32 %inc316, i32* %pending, align 4, !tbaa !76
  %idxprom317 = zext i32 %55 to i64
  %56 = load i8** %pending_buf, align 8, !tbaa !66
  %arrayidx319 = getelementptr inbounds i8* %56, i64 %idxprom317
  store i8 %conv314, i8* %arrayidx319, align 1, !tbaa !5
  %57 = load i32* %bi_valid, align 4, !tbaa !99
  %sub323 = sub nsw i32 16, %57
  %shr324 = lshr i32 %conv295, %sub323
  %conv325 = trunc i32 %shr324 to i16
  store i16 %conv325, i16* %bi_buf, align 2, !tbaa !100
  %sub327 = add nsw i32 %49, -16
  %add329 = add nsw i32 %sub327, %57
  store i32 %add329, i32* %bi_valid, align 4, !tbaa !99
  br label %do.cond

if.else330:                                       ; preds = %if.then283
  %add340 = add nsw i32 %48, %49
  store i32 %add340, i32* %bi_valid, align 4, !tbaa !99
  br label %do.cond

do.cond:                                          ; preds = %if.else330, %if.then292, %if.end278, %if.else, %if.then13
  %58 = phi i16 [ %conv22, %if.else ], [ %conv42, %if.then13 ], [ %conv325, %if.then292 ], [ %conv301, %if.else330 ], [ %47, %if.end278 ]
  %59 = phi i32 [ %add58, %if.else ], [ %add, %if.then13 ], [ %add329, %if.then292 ], [ %add340, %if.else330 ], [ %48, %if.end278 ]
  %60 = load i32* %last_lit, align 4, !tbaa !113
  %cmp345 = icmp ult i32 %inc, %60
  br i1 %cmp345, label %do.body, label %if.end347.loopexit

if.end347.loopexit:                               ; preds = %do.cond
  %.lcssa561 = phi i32 [ %59, %do.cond ]
  %.lcssa = phi i16 [ %58, %do.cond ]
  br label %if.end347

if.end347:                                        ; preds = %if.end347.loopexit, %entry.if.end347_crit_edge
  %61 = phi i16 [ %.pre559, %entry.if.end347_crit_edge ], [ %.lcssa, %if.end347.loopexit ]
  %62 = phi i32 [ %.pre, %entry.if.end347_crit_edge ], [ %.lcssa561, %if.end347.loopexit ]
  %len351 = getelementptr inbounds %struct.ct_data_s* %ltree, i64 256, i32 1, i32 0
  %63 = load i16* %len351, align 2, !tbaa !81
  %conv352 = zext i16 %63 to i32
  %bi_valid353 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %sub354 = sub nsw i32 16, %conv352
  %cmp355 = icmp sgt i32 %62, %sub354
  %code361 = getelementptr inbounds %struct.ct_data_s* %ltree, i64 256, i32 0, i32 0
  %64 = load i16* %code361, align 2, !tbaa !81
  %conv364 = zext i16 %64 to i32
  %shl366 = shl i32 %conv364, %62
  %bi_buf367 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %conv368 = zext i16 %61 to i32
  %or369 = or i32 %conv368, %shl366
  %conv370 = trunc i32 %or369 to i16
  store i16 %conv370, i16* %bi_buf367, align 2, !tbaa !100
  br i1 %cmp355, label %if.then357, label %if.else399

if.then357:                                       ; preds = %if.end347
  %conv374 = trunc i32 %or369 to i8
  %pending375 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %65 = load i32* %pending375, align 4, !tbaa !76
  %inc376 = add i32 %65, 1
  store i32 %inc376, i32* %pending375, align 4, !tbaa !76
  %idxprom377 = zext i32 %65 to i64
  %pending_buf378 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %66 = load i8** %pending_buf378, align 8, !tbaa !66
  %arrayidx379 = getelementptr inbounds i8* %66, i64 %idxprom377
  store i8 %conv374, i8* %arrayidx379, align 1, !tbaa !5
  %67 = load i16* %bi_buf367, align 2, !tbaa !100
  %shr382550 = lshr i16 %67, 8
  %conv383 = trunc i16 %shr382550 to i8
  %68 = load i32* %pending375, align 4, !tbaa !76
  %inc385 = add i32 %68, 1
  store i32 %inc385, i32* %pending375, align 4, !tbaa !76
  %idxprom386 = zext i32 %68 to i64
  %69 = load i8** %pending_buf378, align 8, !tbaa !66
  %arrayidx388 = getelementptr inbounds i8* %69, i64 %idxprom386
  store i8 %conv383, i8* %arrayidx388, align 1, !tbaa !5
  %70 = load i32* %bi_valid353, align 4, !tbaa !99
  %sub392 = sub nsw i32 16, %70
  %shr393 = lshr i32 %conv364, %sub392
  %conv394 = trunc i32 %shr393 to i16
  store i16 %conv394, i16* %bi_buf367, align 2, !tbaa !100
  %sub396 = add nsw i32 %conv352, -16
  %add398 = add nsw i32 %sub396, %70
  br label %if.end412

if.else399:                                       ; preds = %if.end347
  %add411 = add nsw i32 %62, %conv352
  br label %if.end412

if.end412:                                        ; preds = %if.else399, %if.then357
  %storemerge = phi i32 [ %add411, %if.else399 ], [ %add398, %if.then357 ]
  store i32 %storemerge, i32* %bi_valid353, align 4, !tbaa !99
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @send_tree(%struct.internal_state.23* %s, %struct.ct_data_s* nocapture readonly %tree, i32 %max_code) #3 {
entry:
  %len = getelementptr inbounds %struct.ct_data_s* %tree, i64 0, i32 1, i32 0
  %0 = load i16* %len, align 2, !tbaa !81
  %conv = zext i16 %0 to i32
  %cmp = icmp eq i16 %0, 0
  %. = select i1 %cmp, i32 3, i32 4
  %.739 = select i1 %cmp, i32 138, i32 7
  %len289 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 17, i32 1, i32 0
  %bi_valid291 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 57
  %code300 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 17, i32 0, i32 0
  %bi_buf306 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 56
  %pending314 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 5
  %pending_buf317 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 2
  %len415 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 18, i32 1, i32 0
  %code426 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 18, i32 0, i32 0
  %len160 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 16, i32 1, i32 0
  %code171 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 16, i32 0, i32 0
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %for.cond.outer.backedge, %entry
  %min_count.1.ph = phi i32 [ %., %entry ], [ %min_count.1.ph.be, %for.cond.outer.backedge ]
  %max_count.1.ph = phi i32 [ %.739, %entry ], [ %max_count.1.ph.be, %for.cond.outer.backedge ]
  %nextlen.0.ph = phi i32 [ %conv, %entry ], [ %conv7.lcssa, %for.cond.outer.backedge ]
  %prevlen.0.ph = phi i32 [ -1, %entry ], [ %nextlen.0.ph, %for.cond.outer.backedge ]
  %n.0.ph = phi i64 [ 0, %entry ], [ %phitmp, %for.cond.outer.backedge ]
  br label %for.cond

for.cond:                                         ; preds = %for.body, %for.cond.outer
  %indvars.iv = phi i64 [ %n.0.ph, %for.cond.outer ], [ %indvars.iv.next, %for.body ]
  %count.0 = phi i32 [ 0, %for.cond.outer ], [ %inc, %for.body ]
  %1 = trunc i64 %indvars.iv to i32
  %cmp2 = icmp sgt i32 %1, %max_code
  br i1 %cmp2, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %len6 = getelementptr inbounds %struct.ct_data_s* %tree, i64 %indvars.iv.next, i32 1, i32 0
  %2 = load i16* %len6, align 2, !tbaa !81
  %conv7 = zext i16 %2 to i32
  %inc = add nsw i32 %count.0, 1
  %cmp8 = icmp slt i32 %inc, %max_count.1.ph
  %cmp10 = icmp eq i32 %nextlen.0.ph, %conv7
  %or.cond = and i1 %cmp8, %cmp10
  br i1 %or.cond, label %for.cond, label %if.else

if.else:                                          ; preds = %for.body
  %cmp10.lcssa = phi i1 [ %cmp10, %for.body ]
  %inc.lcssa = phi i32 [ %inc, %for.body ]
  %conv7.lcssa = phi i32 [ %conv7, %for.body ]
  %.lcssa = phi i16 [ %2, %for.body ]
  %indvars.iv.next.lcssa = phi i64 [ %indvars.iv.next, %for.body ]
  %count.0.lcssa750 = phi i32 [ %count.0, %for.body ]
  %cmp13 = icmp slt i32 %inc.lcssa, %min_count.1.ph
  br i1 %cmp13, label %do.body.preheader, label %if.else76

do.body.preheader:                                ; preds = %if.else
  %idxprom17736 = zext i32 %nextlen.0.ph to i64
  %len20 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom17736, i32 1, i32 0
  %code = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom17736, i32 0, i32 0
  %.pre = load i32* %bi_valid291, align 4, !tbaa !99
  %.pre746 = load i16* %bi_buf306, align 2, !tbaa !100
  br label %do.body

do.body:                                          ; preds = %do.cond, %do.body.preheader
  %3 = phi i16 [ %13, %do.cond ], [ %.pre746, %do.body.preheader ]
  %4 = phi i32 [ %storemerge737, %do.cond ], [ %.pre, %do.body.preheader ]
  %count.1 = phi i32 [ %dec, %do.cond ], [ %inc.lcssa, %do.body.preheader ]
  %5 = load i16* %len20, align 2, !tbaa !81
  %conv21 = zext i16 %5 to i32
  %sub = sub nsw i32 16, %conv21
  %cmp22 = icmp sgt i32 %4, %sub
  %6 = load i16* %code, align 2, !tbaa !81
  %conv30 = zext i16 %6 to i32
  %shl = shl i32 %conv30, %4
  %conv32 = zext i16 %3 to i32
  %or = or i32 %conv32, %shl
  %conv33 = trunc i32 %or to i16
  store i16 %conv33, i16* %bi_buf306, align 2, !tbaa !100
  br i1 %cmp22, label %if.then24, label %if.else58

if.then24:                                        ; preds = %do.body
  %conv36 = trunc i32 %or to i8
  %7 = load i32* %pending314, align 4, !tbaa !76
  %inc37 = add i32 %7, 1
  store i32 %inc37, i32* %pending314, align 4, !tbaa !76
  %idxprom38 = zext i32 %7 to i64
  %8 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx39 = getelementptr inbounds i8* %8, i64 %idxprom38
  store i8 %conv36, i8* %arrayidx39, align 1, !tbaa !5
  %9 = load i16* %bi_buf306, align 2, !tbaa !100
  %shr738 = lshr i16 %9, 8
  %conv42 = trunc i16 %shr738 to i8
  %10 = load i32* %pending314, align 4, !tbaa !76
  %inc44 = add i32 %10, 1
  store i32 %inc44, i32* %pending314, align 4, !tbaa !76
  %idxprom45 = zext i32 %10 to i64
  %11 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx47 = getelementptr inbounds i8* %11, i64 %idxprom45
  store i8 %conv42, i8* %arrayidx47, align 1, !tbaa !5
  %12 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub51 = sub nsw i32 16, %12
  %shr52 = lshr i32 %conv30, %sub51
  %conv53 = trunc i32 %shr52 to i16
  store i16 %conv53, i16* %bi_buf306, align 2, !tbaa !100
  %sub55 = add nsw i32 %conv21, -16
  %add57 = add nsw i32 %sub55, %12
  br label %do.cond

if.else58:                                        ; preds = %do.body
  %add72 = add nsw i32 %4, %conv21
  br label %do.cond

do.cond:                                          ; preds = %if.else58, %if.then24
  %13 = phi i16 [ %conv33, %if.else58 ], [ %conv53, %if.then24 ]
  %storemerge737 = phi i32 [ %add72, %if.else58 ], [ %add57, %if.then24 ]
  store i32 %storemerge737, i32* %bi_valid291, align 4, !tbaa !99
  %dec = add nsw i32 %count.1, -1
  %cmp74 = icmp eq i32 %dec, 0
  br i1 %cmp74, label %if.end539.loopexit, label %do.body

if.else76:                                        ; preds = %if.else
  %cmp77 = icmp eq i32 %nextlen.0.ph, 0
  br i1 %cmp77, label %if.else281, label %if.then79

if.then79:                                        ; preds = %if.else76
  %cmp80 = icmp eq i32 %nextlen.0.ph, %prevlen.0.ph
  br i1 %cmp80, label %if.then79.if.end155_crit_edge, label %if.then82

if.then79.if.end155_crit_edge:                    ; preds = %if.then79
  %.pre747 = load i32* %bi_valid291, align 4, !tbaa !99
  %.pre748 = load i16* %bi_buf306, align 2, !tbaa !100
  br label %if.end155

if.then82:                                        ; preds = %if.then79
  %idxprom84733 = zext i32 %nextlen.0.ph to i64
  %len88 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom84733, i32 1, i32 0
  %14 = load i16* %len88, align 2, !tbaa !81
  %conv89 = zext i16 %14 to i32
  %15 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub91 = sub nsw i32 16, %conv89
  %cmp92 = icmp sgt i32 %15, %sub91
  %code100 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 39, i64 %idxprom84733, i32 0, i32 0
  %16 = load i16* %code100, align 2, !tbaa !81
  %conv103 = zext i16 %16 to i32
  %shl105 = shl i32 %conv103, %15
  %17 = load i16* %bi_buf306, align 2, !tbaa !100
  %conv107 = zext i16 %17 to i32
  %or108 = or i32 %conv107, %shl105
  %conv109 = trunc i32 %or108 to i16
  store i16 %conv109, i16* %bi_buf306, align 2, !tbaa !100
  br i1 %cmp92, label %if.then94, label %if.else138

if.then94:                                        ; preds = %if.then82
  %conv113 = trunc i32 %or108 to i8
  %18 = load i32* %pending314, align 4, !tbaa !76
  %inc115 = add i32 %18, 1
  store i32 %inc115, i32* %pending314, align 4, !tbaa !76
  %idxprom116 = zext i32 %18 to i64
  %19 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx118 = getelementptr inbounds i8* %19, i64 %idxprom116
  store i8 %conv113, i8* %arrayidx118, align 1, !tbaa !5
  %20 = load i16* %bi_buf306, align 2, !tbaa !100
  %shr121735 = lshr i16 %20, 8
  %conv122 = trunc i16 %shr121735 to i8
  %21 = load i32* %pending314, align 4, !tbaa !76
  %inc124 = add i32 %21, 1
  store i32 %inc124, i32* %pending314, align 4, !tbaa !76
  %idxprom125 = zext i32 %21 to i64
  %22 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx127 = getelementptr inbounds i8* %22, i64 %idxprom125
  store i8 %conv122, i8* %arrayidx127, align 1, !tbaa !5
  %23 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub131 = sub nsw i32 16, %23
  %shr132 = lshr i32 %conv103, %sub131
  %conv133 = trunc i32 %shr132 to i16
  store i16 %conv133, i16* %bi_buf306, align 2, !tbaa !100
  %sub135 = add nsw i32 %conv89, -16
  %add137 = add nsw i32 %sub135, %23
  br label %if.end153

if.else138:                                       ; preds = %if.then82
  %add152 = add nsw i32 %15, %conv89
  br label %if.end153

if.end153:                                        ; preds = %if.else138, %if.then94
  %24 = phi i16 [ %conv109, %if.else138 ], [ %conv133, %if.then94 ]
  %storemerge734 = phi i32 [ %add152, %if.else138 ], [ %add137, %if.then94 ]
  store i32 %storemerge734, i32* %bi_valid291, align 4, !tbaa !99
  br label %if.end155

if.end155:                                        ; preds = %if.end153, %if.then79.if.end155_crit_edge
  %25 = phi i16 [ %24, %if.end153 ], [ %.pre748, %if.then79.if.end155_crit_edge ]
  %26 = phi i32 [ %storemerge734, %if.end153 ], [ %.pre747, %if.then79.if.end155_crit_edge ]
  %count.2 = phi i32 [ %count.0.lcssa750, %if.end153 ], [ %inc.lcssa, %if.then79.if.end155_crit_edge ]
  %27 = load i16* %len160, align 2, !tbaa !81
  %conv161 = zext i16 %27 to i32
  %sub163 = sub nsw i32 16, %conv161
  %cmp164 = icmp sgt i32 %26, %sub163
  %28 = load i16* %code171, align 2, !tbaa !81
  %conv174 = zext i16 %28 to i32
  %shl176 = shl i32 %conv174, %26
  %conv178 = zext i16 %25 to i32
  %or179 = or i32 %conv178, %shl176
  %conv180 = trunc i32 %or179 to i16
  store i16 %conv180, i16* %bi_buf306, align 2, !tbaa !100
  br i1 %cmp164, label %if.then166, label %if.else209

if.then166:                                       ; preds = %if.end155
  %conv184 = trunc i32 %or179 to i8
  %29 = load i32* %pending314, align 4, !tbaa !76
  %inc186 = add i32 %29, 1
  store i32 %inc186, i32* %pending314, align 4, !tbaa !76
  %idxprom187 = zext i32 %29 to i64
  %30 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx189 = getelementptr inbounds i8* %30, i64 %idxprom187
  store i8 %conv184, i8* %arrayidx189, align 1, !tbaa !5
  %31 = load i16* %bi_buf306, align 2, !tbaa !100
  %shr192732 = lshr i16 %31, 8
  %conv193 = trunc i16 %shr192732 to i8
  %32 = load i32* %pending314, align 4, !tbaa !76
  %inc195 = add i32 %32, 1
  store i32 %inc195, i32* %pending314, align 4, !tbaa !76
  %idxprom196 = zext i32 %32 to i64
  %33 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx198 = getelementptr inbounds i8* %33, i64 %idxprom196
  store i8 %conv193, i8* %arrayidx198, align 1, !tbaa !5
  %34 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub202 = sub nsw i32 16, %34
  %shr203 = lshr i32 %conv174, %sub202
  %conv204 = trunc i32 %shr203 to i16
  store i16 %conv204, i16* %bi_buf306, align 2, !tbaa !100
  %sub206 = add nsw i32 %conv161, -16
  %add208 = add nsw i32 %sub206, %34
  br label %if.end223

if.else209:                                       ; preds = %if.end155
  %add222 = add nsw i32 %26, %conv161
  br label %if.end223

if.end223:                                        ; preds = %if.else209, %if.then166
  %35 = phi i32 [ %or179, %if.else209 ], [ %shr203, %if.then166 ]
  %36 = phi i32 [ %add222, %if.else209 ], [ %add208, %if.then166 ]
  store i32 %36, i32* %bi_valid291, align 4, !tbaa !99
  %cmp227 = icmp sgt i32 %36, 14
  %sub231 = add nsw i32 %count.2, 65533
  %conv233 = and i32 %sub231, 65535
  %shl235 = shl i32 %conv233, %36
  %conv237 = and i32 %35, 65535
  %or238 = or i32 %conv237, %shl235
  %conv239 = trunc i32 %or238 to i16
  store i16 %conv239, i16* %bi_buf306, align 2, !tbaa !100
  br i1 %cmp227, label %if.then229, label %if.else268

if.then229:                                       ; preds = %if.end223
  %conv243 = trunc i32 %or238 to i8
  %37 = load i32* %pending314, align 4, !tbaa !76
  %inc245 = add i32 %37, 1
  store i32 %inc245, i32* %pending314, align 4, !tbaa !76
  %idxprom246 = zext i32 %37 to i64
  %38 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx248 = getelementptr inbounds i8* %38, i64 %idxprom246
  store i8 %conv243, i8* %arrayidx248, align 1, !tbaa !5
  %39 = load i16* %bi_buf306, align 2, !tbaa !100
  %shr251731 = lshr i16 %39, 8
  %conv252 = trunc i16 %shr251731 to i8
  %40 = load i32* %pending314, align 4, !tbaa !76
  %inc254 = add i32 %40, 1
  store i32 %inc254, i32* %pending314, align 4, !tbaa !76
  %idxprom255 = zext i32 %40 to i64
  %41 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx257 = getelementptr inbounds i8* %41, i64 %idxprom255
  store i8 %conv252, i8* %arrayidx257, align 1, !tbaa !5
  %42 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub261 = sub nsw i32 16, %42
  %shr262 = lshr i32 %conv233, %sub261
  %conv263 = trunc i32 %shr262 to i16
  store i16 %conv263, i16* %bi_buf306, align 2, !tbaa !100
  %add267 = add nsw i32 %42, -14
  store i32 %add267, i32* %bi_valid291, align 4, !tbaa !99
  br label %if.end539

if.else268:                                       ; preds = %if.end223
  %add279 = add nsw i32 %36, 2
  store i32 %add279, i32* %bi_valid291, align 4, !tbaa !99
  br label %if.end539

if.else281:                                       ; preds = %if.else76
  %cmp282 = icmp slt i32 %inc.lcssa, 11
  br i1 %cmp282, label %if.then284, label %if.else410

if.then284:                                       ; preds = %if.else281
  %43 = load i16* %len289, align 2, !tbaa !81
  %conv290 = zext i16 %43 to i32
  %44 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub292 = sub nsw i32 16, %conv290
  %cmp293 = icmp sgt i32 %44, %sub292
  %45 = load i16* %code300, align 2, !tbaa !81
  %conv303 = zext i16 %45 to i32
  %shl305 = shl i32 %conv303, %44
  %46 = load i16* %bi_buf306, align 2, !tbaa !100
  %conv307 = zext i16 %46 to i32
  %or308 = or i32 %conv307, %shl305
  %conv309 = trunc i32 %or308 to i16
  store i16 %conv309, i16* %bi_buf306, align 2, !tbaa !100
  br i1 %cmp293, label %if.then295, label %if.else338

if.then295:                                       ; preds = %if.then284
  %conv313 = trunc i32 %or308 to i8
  %47 = load i32* %pending314, align 4, !tbaa !76
  %inc315 = add i32 %47, 1
  store i32 %inc315, i32* %pending314, align 4, !tbaa !76
  %idxprom316 = zext i32 %47 to i64
  %48 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx318 = getelementptr inbounds i8* %48, i64 %idxprom316
  store i8 %conv313, i8* %arrayidx318, align 1, !tbaa !5
  %49 = load i16* %bi_buf306, align 2, !tbaa !100
  %shr321729 = lshr i16 %49, 8
  %conv322 = trunc i16 %shr321729 to i8
  %50 = load i32* %pending314, align 4, !tbaa !76
  %inc324 = add i32 %50, 1
  store i32 %inc324, i32* %pending314, align 4, !tbaa !76
  %idxprom325 = zext i32 %50 to i64
  %51 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx327 = getelementptr inbounds i8* %51, i64 %idxprom325
  store i8 %conv322, i8* %arrayidx327, align 1, !tbaa !5
  %52 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub331 = sub nsw i32 16, %52
  %shr332 = lshr i32 %conv303, %sub331
  %conv333 = trunc i32 %shr332 to i16
  store i16 %conv333, i16* %bi_buf306, align 2, !tbaa !100
  %sub335 = add nsw i32 %conv290, -16
  %add337 = add nsw i32 %sub335, %52
  br label %if.end352

if.else338:                                       ; preds = %if.then284
  %add351 = add nsw i32 %44, %conv290
  br label %if.end352

if.end352:                                        ; preds = %if.else338, %if.then295
  %53 = phi i32 [ %or308, %if.else338 ], [ %shr332, %if.then295 ]
  %54 = phi i32 [ %add351, %if.else338 ], [ %add337, %if.then295 ]
  store i32 %54, i32* %bi_valid291, align 4, !tbaa !99
  %cmp356 = icmp sgt i32 %54, 13
  %sub360 = add nsw i32 %count.0.lcssa750, 65534
  %conv362 = and i32 %sub360, 65535
  %shl364 = shl i32 %conv362, %54
  %conv366 = and i32 %53, 65535
  %or367 = or i32 %conv366, %shl364
  %conv368 = trunc i32 %or367 to i16
  store i16 %conv368, i16* %bi_buf306, align 2, !tbaa !100
  br i1 %cmp356, label %if.then358, label %if.else397

if.then358:                                       ; preds = %if.end352
  %conv372 = trunc i32 %or367 to i8
  %55 = load i32* %pending314, align 4, !tbaa !76
  %inc374 = add i32 %55, 1
  store i32 %inc374, i32* %pending314, align 4, !tbaa !76
  %idxprom375 = zext i32 %55 to i64
  %56 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx377 = getelementptr inbounds i8* %56, i64 %idxprom375
  store i8 %conv372, i8* %arrayidx377, align 1, !tbaa !5
  %57 = load i16* %bi_buf306, align 2, !tbaa !100
  %shr380728 = lshr i16 %57, 8
  %conv381 = trunc i16 %shr380728 to i8
  %58 = load i32* %pending314, align 4, !tbaa !76
  %inc383 = add i32 %58, 1
  store i32 %inc383, i32* %pending314, align 4, !tbaa !76
  %idxprom384 = zext i32 %58 to i64
  %59 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx386 = getelementptr inbounds i8* %59, i64 %idxprom384
  store i8 %conv381, i8* %arrayidx386, align 1, !tbaa !5
  %60 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub390 = sub nsw i32 16, %60
  %shr391 = lshr i32 %conv362, %sub390
  %conv392 = trunc i32 %shr391 to i16
  store i16 %conv392, i16* %bi_buf306, align 2, !tbaa !100
  %add396 = add nsw i32 %60, -13
  store i32 %add396, i32* %bi_valid291, align 4, !tbaa !99
  br label %if.end539

if.else397:                                       ; preds = %if.end352
  %add408 = add nsw i32 %54, 3
  store i32 %add408, i32* %bi_valid291, align 4, !tbaa !99
  br label %if.end539

if.else410:                                       ; preds = %if.else281
  %61 = load i16* %len415, align 2, !tbaa !81
  %conv416 = zext i16 %61 to i32
  %62 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub418 = sub nsw i32 16, %conv416
  %cmp419 = icmp sgt i32 %62, %sub418
  %63 = load i16* %code426, align 2, !tbaa !81
  %conv429 = zext i16 %63 to i32
  %shl431 = shl i32 %conv429, %62
  %64 = load i16* %bi_buf306, align 2, !tbaa !100
  %conv433 = zext i16 %64 to i32
  %or434 = or i32 %conv433, %shl431
  %conv435 = trunc i32 %or434 to i16
  store i16 %conv435, i16* %bi_buf306, align 2, !tbaa !100
  br i1 %cmp419, label %if.then421, label %if.else464

if.then421:                                       ; preds = %if.else410
  %conv439 = trunc i32 %or434 to i8
  %65 = load i32* %pending314, align 4, !tbaa !76
  %inc441 = add i32 %65, 1
  store i32 %inc441, i32* %pending314, align 4, !tbaa !76
  %idxprom442 = zext i32 %65 to i64
  %66 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx444 = getelementptr inbounds i8* %66, i64 %idxprom442
  store i8 %conv439, i8* %arrayidx444, align 1, !tbaa !5
  %67 = load i16* %bi_buf306, align 2, !tbaa !100
  %shr447726 = lshr i16 %67, 8
  %conv448 = trunc i16 %shr447726 to i8
  %68 = load i32* %pending314, align 4, !tbaa !76
  %inc450 = add i32 %68, 1
  store i32 %inc450, i32* %pending314, align 4, !tbaa !76
  %idxprom451 = zext i32 %68 to i64
  %69 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx453 = getelementptr inbounds i8* %69, i64 %idxprom451
  store i8 %conv448, i8* %arrayidx453, align 1, !tbaa !5
  %70 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub457 = sub nsw i32 16, %70
  %shr458 = lshr i32 %conv429, %sub457
  %conv459 = trunc i32 %shr458 to i16
  store i16 %conv459, i16* %bi_buf306, align 2, !tbaa !100
  %sub461 = add nsw i32 %conv416, -16
  %add463 = add nsw i32 %sub461, %70
  br label %if.end478

if.else464:                                       ; preds = %if.else410
  %add477 = add nsw i32 %62, %conv416
  br label %if.end478

if.end478:                                        ; preds = %if.else464, %if.then421
  %71 = phi i32 [ %or434, %if.else464 ], [ %shr458, %if.then421 ]
  %72 = phi i32 [ %add477, %if.else464 ], [ %add463, %if.then421 ]
  store i32 %72, i32* %bi_valid291, align 4, !tbaa !99
  %cmp482 = icmp sgt i32 %72, 9
  %sub486 = add nsw i32 %count.0.lcssa750, 65526
  %conv488 = and i32 %sub486, 65535
  %shl490 = shl i32 %conv488, %72
  %conv492 = and i32 %71, 65535
  %or493 = or i32 %conv492, %shl490
  %conv494 = trunc i32 %or493 to i16
  store i16 %conv494, i16* %bi_buf306, align 2, !tbaa !100
  br i1 %cmp482, label %if.then484, label %if.else523

if.then484:                                       ; preds = %if.end478
  %conv498 = trunc i32 %or493 to i8
  %73 = load i32* %pending314, align 4, !tbaa !76
  %inc500 = add i32 %73, 1
  store i32 %inc500, i32* %pending314, align 4, !tbaa !76
  %idxprom501 = zext i32 %73 to i64
  %74 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx503 = getelementptr inbounds i8* %74, i64 %idxprom501
  store i8 %conv498, i8* %arrayidx503, align 1, !tbaa !5
  %75 = load i16* %bi_buf306, align 2, !tbaa !100
  %shr506725 = lshr i16 %75, 8
  %conv507 = trunc i16 %shr506725 to i8
  %76 = load i32* %pending314, align 4, !tbaa !76
  %inc509 = add i32 %76, 1
  store i32 %inc509, i32* %pending314, align 4, !tbaa !76
  %idxprom510 = zext i32 %76 to i64
  %77 = load i8** %pending_buf317, align 8, !tbaa !66
  %arrayidx512 = getelementptr inbounds i8* %77, i64 %idxprom510
  store i8 %conv507, i8* %arrayidx512, align 1, !tbaa !5
  %78 = load i32* %bi_valid291, align 4, !tbaa !99
  %sub516 = sub nsw i32 16, %78
  %shr517 = lshr i32 %conv488, %sub516
  %conv518 = trunc i32 %shr517 to i16
  store i16 %conv518, i16* %bi_buf306, align 2, !tbaa !100
  %add522 = add nsw i32 %78, -9
  store i32 %add522, i32* %bi_valid291, align 4, !tbaa !99
  br label %if.end539

if.else523:                                       ; preds = %if.end478
  %add534 = add nsw i32 %72, 7
  store i32 %add534, i32* %bi_valid291, align 4, !tbaa !99
  br label %if.end539

if.end539.loopexit:                               ; preds = %do.cond
  br label %if.end539

if.end539:                                        ; preds = %if.end539.loopexit, %if.else523, %if.then484, %if.else397, %if.then358, %if.else268, %if.then229
  %cmp540 = icmp eq i16 %.lcssa, 0
  br i1 %cmp540, label %for.cond.outer.backedge, label %if.else543

for.cond.outer.backedge:                          ; preds = %if.else543, %if.end539
  %min_count.1.ph.be = phi i32 [ %.740, %if.else543 ], [ 3, %if.end539 ]
  %max_count.1.ph.be = phi i32 [ %.741, %if.else543 ], [ 138, %if.end539 ]
  %sext = shl i64 %indvars.iv.next.lcssa, 32
  %phitmp = ashr exact i64 %sext, 32
  br label %for.cond.outer

if.else543:                                       ; preds = %if.end539
  %.740 = select i1 %cmp10.lcssa, i32 3, i32 4
  %.741 = select i1 %cmp10.lcssa, i32 6, i32 7
  br label %for.cond.outer.backedge

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pqdownheap(%struct.internal_state.23* nocapture %s, %struct.ct_data_s* nocapture readonly %tree, i32 %k) #3 {
entry:
  %idxprom = sext i32 %k to i64
  %arrayidx = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !28
  %idxprom54 = sext i32 %0 to i64
  %arrayidx88 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %idxprom54
  %j.0157 = shl i32 %k, 1
  %heap_len = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 45
  %1 = load i32* %heap_len, align 4, !tbaa !180
  %cmp158 = icmp sgt i32 %j.0157, %1
  br i1 %cmp158, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %freq57 = getelementptr inbounds %struct.ct_data_s* %tree, i64 %idxprom54, i32 0, i32 0
  br label %while.body

while.body:                                       ; preds = %if.end100, %while.body.lr.ph
  %2 = phi i32 [ %1, %while.body.lr.ph ], [ %14, %if.end100 ]
  %j.0160 = phi i32 [ %j.0157, %while.body.lr.ph ], [ %j.0, %if.end100 ]
  %k.addr.0159 = phi i32 [ %k, %while.body.lr.ph ], [ %j.1, %if.end100 ]
  %cmp2 = icmp slt i32 %j.0160, %2
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %add156 = or i32 %j.0160, 1
  %idxprom3 = sext i32 %add156 to i64
  %arrayidx5 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom3
  %3 = load i32* %arrayidx5, align 4, !tbaa !28
  %idxprom6 = sext i32 %3 to i64
  %freq = getelementptr inbounds %struct.ct_data_s* %tree, i64 %idxprom6, i32 0, i32 0
  %4 = load i16* %freq, align 2, !tbaa !81
  %idxprom8 = sext i32 %j.0160 to i64
  %arrayidx10 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom8
  %5 = load i32* %arrayidx10, align 4, !tbaa !28
  %idxprom11 = sext i32 %5 to i64
  %freq14 = getelementptr inbounds %struct.ct_data_s* %tree, i64 %idxprom11, i32 0, i32 0
  %6 = load i16* %freq14, align 2, !tbaa !81
  %cmp16 = icmp ult i16 %4, %6
  br i1 %cmp16, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp35 = icmp eq i16 %4, %6
  br i1 %cmp35, label %land.lhs.true37, label %if.end

land.lhs.true37:                                  ; preds = %lor.lhs.false
  %arrayidx43 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %idxprom6
  %7 = load i8* %arrayidx43, align 1, !tbaa !5
  %arrayidx50 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %idxprom11
  %8 = load i8* %arrayidx50, align 1, !tbaa !5
  %cmp52 = icmp ugt i8 %7, %8
  br i1 %cmp52, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true37, %land.lhs.true
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true37, %lor.lhs.false, %while.body
  %j.1 = phi i32 [ %add156, %if.then ], [ %j.0160, %land.lhs.true37 ], [ %j.0160, %lor.lhs.false ], [ %j.0160, %while.body ]
  %9 = load i16* %freq57, align 2, !tbaa !81
  %idxprom59 = sext i32 %j.1 to i64
  %arrayidx61 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom59
  %10 = load i32* %arrayidx61, align 4, !tbaa !28
  %idxprom62 = sext i32 %10 to i64
  %freq65 = getelementptr inbounds %struct.ct_data_s* %tree, i64 %idxprom62, i32 0, i32 0
  %11 = load i16* %freq65, align 2, !tbaa !81
  %cmp67 = icmp ult i16 %9, %11
  br i1 %cmp67, label %while.end.loopexit, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %if.end
  %cmp83 = icmp eq i16 %9, %11
  br i1 %cmp83, label %land.lhs.true85, label %if.end100

land.lhs.true85:                                  ; preds = %lor.lhs.false69
  %12 = load i8* %arrayidx88, align 1, !tbaa !5
  %arrayidx95 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 47, i64 %idxprom62
  %13 = load i8* %arrayidx95, align 1, !tbaa !5
  %cmp97 = icmp ugt i8 %12, %13
  br i1 %cmp97, label %if.end100, label %while.end.loopexit

if.end100:                                        ; preds = %land.lhs.true85, %lor.lhs.false69
  %idxprom104 = sext i32 %k.addr.0159 to i64
  %arrayidx106 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom104
  store i32 %10, i32* %arrayidx106, align 4, !tbaa !28
  %j.0 = shl i32 %j.1, 1
  %14 = load i32* %heap_len, align 4, !tbaa !180
  %cmp = icmp sgt i32 %j.0, %14
  br i1 %cmp, label %while.end.loopexit, label %while.body

while.end.loopexit:                               ; preds = %if.end100, %land.lhs.true85, %if.end
  %k.addr.0.lcssa.ph = phi i32 [ %k.addr.0159, %land.lhs.true85 ], [ %j.1, %if.end100 ], [ %k.addr.0159, %if.end ]
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %entry
  %k.addr.0.lcssa = phi i32 [ %k, %entry ], [ %k.addr.0.lcssa.ph, %while.end.loopexit ]
  %idxprom108 = sext i32 %k.addr.0.lcssa to i64
  %arrayidx110 = getelementptr inbounds %struct.internal_state.23* %s, i64 0, i32 44, i64 %idxprom108
  store i32 %0, i32* %arrayidx110, align 4, !tbaa !28
  ret void
}

; Function Attrs: nounwind readnone uwtable
define i8* @zlibVersion() #9 {
entry:
  ret i8* getelementptr inbounds ([6 x i8]* @.str9106, i64 0, i64 0)
}

; Function Attrs: nounwind readnone uwtable
define i64 @zlibCompileFlags() #9 {
entry:
  ret i64 169
}

; Function Attrs: nounwind readnone uwtable
define i8* @zError(i32 %err) #9 {
entry:
  %sub = sub nsw i32 2, %err
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [10 x i8*]* @z_errmsg, i64 0, i64 %idxprom
  %0 = load i8** %arrayidx, align 8, !tbaa !1
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define hidden noalias i8* @zcalloc(i8* readnone %opaque, i32 %items, i32 %size) #3 {
entry:
  %mul = mul i32 %size, %items
  %conv = zext i32 %mul to i64
  %call = tail call noalias i8* @malloc(i64 %conv) #4
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define hidden void @zcfree(i8* nocapture readnone %opaque, i8* nocapture %ptr) #3 {
entry:
  tail call void @free(i8* %ptr) #4
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i64 @adler32(i64 %adler, i8* readonly %buf, i32 %len) #6 {
entry:
  %shr = lshr i64 %adler, 16
  %and = and i64 %shr, 65535
  %and1 = and i64 %adler, 65535
  %cmp = icmp eq i32 %len, 1
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %entry
  %0 = load i8* %buf, align 1, !tbaa !5
  %conv = zext i8 %0 to i64
  %add = add nuw nsw i64 %conv, %and1
  %cmp2 = icmp ugt i64 %add, 65520
  %sub = add nsw i64 %add, -65521
  %sub.add = select i1 %cmp2, i64 %sub, i64 %add
  %add5 = add nsw i64 %sub.add, %and
  %cmp6 = icmp ugt i64 %add5, 65520
  %sub9 = add nsw i64 %add5, 281474976645135
  %sum2.0 = select i1 %cmp6, i64 %sub9, i64 %add5
  %shl = shl i64 %sum2.0, 16
  %or = or i64 %shl, %sub.add
  br label %return

if.end11:                                         ; preds = %entry
  %cmp12 = icmp eq i8* %buf, null
  br i1 %cmp12, label %return, label %if.end15

if.end15:                                         ; preds = %if.end11
  %cmp16 = icmp ult i32 %len, 16
  br i1 %cmp16, label %while.cond.preheader, label %while.cond30.preheader

while.cond30.preheader:                           ; preds = %if.end15
  %cmp31378 = icmp ugt i32 %len, 5551
  br i1 %cmp31378, label %while.body33.lr.ph, label %while.body109.lr.ph

while.body33.lr.ph:                               ; preds = %while.cond30.preheader
  %1 = add i32 %len, -5552
  %2 = udiv i32 %1, 5552
  %3 = zext i32 %2 to i64
  %4 = mul i64 %3, 5552
  %5 = add nuw nsw i64 %4, 5552
  br label %while.body33

while.cond.preheader:                             ; preds = %if.end15
  %tobool356 = icmp eq i32 %len, 0
  br i1 %tobool356, label %while.end, label %while.body.preheader

while.body.preheader:                             ; preds = %while.cond.preheader
  %xtraiter = and i32 %len, 3
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %len, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %unr.cmp422, label %while.body.preheader.split

unr.cmp422:                                       ; preds = %while.body.preheader
  %un.tmp423 = icmp eq i32 %xtraiter, 1
  br i1 %un.tmp423, label %while.body.unr411, label %unr.cmp

unr.cmp:                                          ; preds = %unr.cmp422
  %un.tmp = icmp eq i32 %xtraiter, 2
  br i1 %un.tmp, label %while.body.unr404, label %while.body.unr

while.body.unr:                                   ; preds = %unr.cmp
  %dec.unr = add i32 %len, -1
  %incdec.ptr.unr = getelementptr inbounds i8* %buf, i64 1
  %6 = load i8* %buf, align 1, !tbaa !5
  %conv19.unr = zext i8 %6 to i64
  %add20.unr = add i64 %conv19.unr, %and1
  %add21.unr = add i64 %add20.unr, %and
  %tobool.unr = icmp eq i32 %dec.unr, 0
  br label %while.body.unr404

while.body.unr404:                                ; preds = %while.body.unr, %unr.cmp
  %sum2.1360.unr = phi i64 [ %add21.unr, %while.body.unr ], [ %and, %unr.cmp ]
  %len.addr.0359.unr = phi i32 [ %dec.unr, %while.body.unr ], [ %len, %unr.cmp ]
  %buf.addr.0358.unr = phi i8* [ %incdec.ptr.unr, %while.body.unr ], [ %buf, %unr.cmp ]
  %adler.addr.1357.unr = phi i64 [ %add20.unr, %while.body.unr ], [ %and1, %unr.cmp ]
  %dec.unr405 = add i32 %len.addr.0359.unr, -1
  %incdec.ptr.unr406 = getelementptr inbounds i8* %buf.addr.0358.unr, i64 1
  %7 = load i8* %buf.addr.0358.unr, align 1, !tbaa !5
  %conv19.unr407 = zext i8 %7 to i64
  %add20.unr408 = add i64 %conv19.unr407, %adler.addr.1357.unr
  %add21.unr409 = add i64 %add20.unr408, %sum2.1360.unr
  %tobool.unr410 = icmp eq i32 %dec.unr405, 0
  br label %while.body.unr411

while.body.unr411:                                ; preds = %while.body.unr404, %unr.cmp422
  %sum2.1360.unr412 = phi i64 [ %add21.unr409, %while.body.unr404 ], [ %and, %unr.cmp422 ]
  %len.addr.0359.unr413 = phi i32 [ %dec.unr405, %while.body.unr404 ], [ %len, %unr.cmp422 ]
  %buf.addr.0358.unr414 = phi i8* [ %incdec.ptr.unr406, %while.body.unr404 ], [ %buf, %unr.cmp422 ]
  %adler.addr.1357.unr415 = phi i64 [ %add20.unr408, %while.body.unr404 ], [ %and1, %unr.cmp422 ]
  %dec.unr416 = add i32 %len.addr.0359.unr413, -1
  %incdec.ptr.unr417 = getelementptr inbounds i8* %buf.addr.0358.unr414, i64 1
  %8 = load i8* %buf.addr.0358.unr414, align 1, !tbaa !5
  %conv19.unr418 = zext i8 %8 to i64
  %add20.unr419 = add i64 %conv19.unr418, %adler.addr.1357.unr415
  %add21.unr420 = add i64 %add20.unr419, %sum2.1360.unr412
  %tobool.unr421 = icmp eq i32 %dec.unr416, 0
  br label %while.body.preheader.split

while.body.preheader.split:                       ; preds = %while.body.unr411, %while.body.preheader
  %add21.lcssa.unr = phi i64 [ 0, %while.body.preheader ], [ %add21.unr420, %while.body.unr411 ]
  %add20.lcssa.unr = phi i64 [ 0, %while.body.preheader ], [ %add20.unr419, %while.body.unr411 ]
  %sum2.1360.unr424 = phi i64 [ %and, %while.body.preheader ], [ %add21.unr420, %while.body.unr411 ]
  %len.addr.0359.unr425 = phi i32 [ %len, %while.body.preheader ], [ %dec.unr416, %while.body.unr411 ]
  %buf.addr.0358.unr426 = phi i8* [ %buf, %while.body.preheader ], [ %incdec.ptr.unr417, %while.body.unr411 ]
  %adler.addr.1357.unr427 = phi i64 [ %and1, %while.body.preheader ], [ %add20.unr419, %while.body.unr411 ]
  %9 = icmp ult i32 %len, 4
  br i1 %9, label %while.end.loopexit, label %while.body.preheader.split.split

while.body.preheader.split.split:                 ; preds = %while.body.preheader.split
  br label %while.body

while.body:                                       ; preds = %while.body, %while.body.preheader.split.split
  %sum2.1360 = phi i64 [ %sum2.1360.unr424, %while.body.preheader.split.split ], [ %add21.3, %while.body ]
  %len.addr.0359 = phi i32 [ %len.addr.0359.unr425, %while.body.preheader.split.split ], [ %dec.3, %while.body ]
  %buf.addr.0358 = phi i8* [ %buf.addr.0358.unr426, %while.body.preheader.split.split ], [ %incdec.ptr.3, %while.body ]
  %adler.addr.1357 = phi i64 [ %adler.addr.1357.unr427, %while.body.preheader.split.split ], [ %add20.3, %while.body ]
  %dec = add i32 %len.addr.0359, -1
  %incdec.ptr = getelementptr inbounds i8* %buf.addr.0358, i64 1
  %10 = load i8* %buf.addr.0358, align 1, !tbaa !5
  %conv19 = zext i8 %10 to i64
  %add20 = add i64 %conv19, %adler.addr.1357
  %add21 = add i64 %add20, %sum2.1360
  %dec.1 = add i32 %dec, -1
  %incdec.ptr.1 = getelementptr inbounds i8* %incdec.ptr, i64 1
  %11 = load i8* %incdec.ptr, align 1, !tbaa !5
  %conv19.1 = zext i8 %11 to i64
  %add20.1 = add i64 %conv19.1, %add20
  %add21.1 = add i64 %add20.1, %add21
  %dec.2 = add i32 %dec.1, -1
  %incdec.ptr.2 = getelementptr inbounds i8* %incdec.ptr.1, i64 1
  %12 = load i8* %incdec.ptr.1, align 1, !tbaa !5
  %conv19.2 = zext i8 %12 to i64
  %add20.2 = add i64 %conv19.2, %add20.1
  %add21.2 = add i64 %add20.2, %add21.1
  %dec.3 = add i32 %dec.2, -1
  %incdec.ptr.3 = getelementptr inbounds i8* %incdec.ptr.2, i64 1
  %13 = load i8* %incdec.ptr.2, align 1, !tbaa !5
  %conv19.3 = zext i8 %13 to i64
  %add20.3 = add i64 %conv19.3, %add20.2
  %add21.3 = add i64 %add20.3, %add21.2
  %tobool.3 = icmp eq i32 %dec.3, 0
  br i1 %tobool.3, label %while.end.loopexit.unr-lcssa, label %while.body

while.end.loopexit.unr-lcssa:                     ; preds = %while.body
  %add21.lcssa.ph = phi i64 [ %add21.3, %while.body ]
  %add20.lcssa.ph = phi i64 [ %add20.3, %while.body ]
  br label %while.end.loopexit

while.end.loopexit:                               ; preds = %while.end.loopexit.unr-lcssa, %while.body.preheader.split
  %add21.lcssa = phi i64 [ %add21.lcssa.unr, %while.body.preheader.split ], [ %add21.lcssa.ph, %while.end.loopexit.unr-lcssa ]
  %add20.lcssa = phi i64 [ %add20.lcssa.unr, %while.body.preheader.split ], [ %add20.lcssa.ph, %while.end.loopexit.unr-lcssa ]
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %while.cond.preheader
  %sum2.1.lcssa = phi i64 [ %and, %while.cond.preheader ], [ %add21.lcssa, %while.end.loopexit ]
  %adler.addr.1.lcssa = phi i64 [ %and1, %while.cond.preheader ], [ %add20.lcssa, %while.end.loopexit ]
  %cmp22 = icmp ugt i64 %adler.addr.1.lcssa, 65520
  %sub25 = add i64 %adler.addr.1.lcssa, -65521
  %sub25.adler.addr.1 = select i1 %cmp22, i64 %sub25, i64 %adler.addr.1.lcssa
  %rem = urem i64 %sum2.1.lcssa, 65521
  %shl27 = shl nuw nsw i64 %rem, 16
  %or28 = or i64 %shl27, %sub25.adler.addr.1
  br label %return

while.body33:                                     ; preds = %do.end, %while.body33.lr.ph
  %sum2.2382 = phi i64 [ %and, %while.body33.lr.ph ], [ %rem102, %do.end ]
  %len.addr.1381 = phi i32 [ %len, %while.body33.lr.ph ], [ %sub34, %do.end ]
  %buf.addr.1380 = phi i8* [ %buf, %while.body33.lr.ph ], [ %scevgep387, %do.end ]
  %adler.addr.3379 = phi i64 [ %and1, %while.body33.lr.ph ], [ %rem101, %do.end ]
  %sub34 = add i32 %len.addr.1381, -5552
  br label %do.body

do.body:                                          ; preds = %do.body, %while.body33
  %adler.addr.4 = phi i64 [ %adler.addr.3379, %while.body33 ], [ %add97, %do.body ]
  %buf.addr.2 = phi i8* [ %buf.addr.1380, %while.body33 ], [ %add.ptr, %do.body ]
  %sum2.3 = phi i64 [ %sum2.2382, %while.body33 ], [ %add98, %do.body ]
  %n.0 = phi i32 [ 347, %while.body33 ], [ %dec99, %do.body ]
  %14 = load i8* %buf.addr.2, align 1, !tbaa !5
  %conv36 = zext i8 %14 to i64
  %add37 = add i64 %conv36, %adler.addr.4
  %add38 = add i64 %add37, %sum2.3
  %arrayidx39 = getelementptr inbounds i8* %buf.addr.2, i64 1
  %15 = load i8* %arrayidx39, align 1, !tbaa !5
  %conv40 = zext i8 %15 to i64
  %add41 = add i64 %add37, %conv40
  %add42 = add i64 %add38, %add41
  %arrayidx43 = getelementptr inbounds i8* %buf.addr.2, i64 2
  %16 = load i8* %arrayidx43, align 1, !tbaa !5
  %conv44 = zext i8 %16 to i64
  %add45 = add i64 %add41, %conv44
  %add46 = add i64 %add42, %add45
  %arrayidx47 = getelementptr inbounds i8* %buf.addr.2, i64 3
  %17 = load i8* %arrayidx47, align 1, !tbaa !5
  %conv48 = zext i8 %17 to i64
  %add49 = add i64 %add45, %conv48
  %add50 = add i64 %add46, %add49
  %arrayidx51 = getelementptr inbounds i8* %buf.addr.2, i64 4
  %18 = load i8* %arrayidx51, align 1, !tbaa !5
  %conv52 = zext i8 %18 to i64
  %add53 = add i64 %add49, %conv52
  %add54 = add i64 %add50, %add53
  %arrayidx55 = getelementptr inbounds i8* %buf.addr.2, i64 5
  %19 = load i8* %arrayidx55, align 1, !tbaa !5
  %conv56 = zext i8 %19 to i64
  %add57 = add i64 %add53, %conv56
  %add58 = add i64 %add54, %add57
  %arrayidx59 = getelementptr inbounds i8* %buf.addr.2, i64 6
  %20 = load i8* %arrayidx59, align 1, !tbaa !5
  %conv60 = zext i8 %20 to i64
  %add61 = add i64 %add57, %conv60
  %add62 = add i64 %add58, %add61
  %arrayidx63 = getelementptr inbounds i8* %buf.addr.2, i64 7
  %21 = load i8* %arrayidx63, align 1, !tbaa !5
  %conv64 = zext i8 %21 to i64
  %add65 = add i64 %add61, %conv64
  %add66 = add i64 %add62, %add65
  %arrayidx67 = getelementptr inbounds i8* %buf.addr.2, i64 8
  %22 = load i8* %arrayidx67, align 1, !tbaa !5
  %conv68 = zext i8 %22 to i64
  %add69 = add i64 %add65, %conv68
  %add70 = add i64 %add66, %add69
  %arrayidx71 = getelementptr inbounds i8* %buf.addr.2, i64 9
  %23 = load i8* %arrayidx71, align 1, !tbaa !5
  %conv72 = zext i8 %23 to i64
  %add73 = add i64 %add69, %conv72
  %add74 = add i64 %add70, %add73
  %arrayidx75 = getelementptr inbounds i8* %buf.addr.2, i64 10
  %24 = load i8* %arrayidx75, align 1, !tbaa !5
  %conv76 = zext i8 %24 to i64
  %add77 = add i64 %add73, %conv76
  %add78 = add i64 %add74, %add77
  %arrayidx79 = getelementptr inbounds i8* %buf.addr.2, i64 11
  %25 = load i8* %arrayidx79, align 1, !tbaa !5
  %conv80 = zext i8 %25 to i64
  %add81 = add i64 %add77, %conv80
  %add82 = add i64 %add78, %add81
  %arrayidx83 = getelementptr inbounds i8* %buf.addr.2, i64 12
  %26 = load i8* %arrayidx83, align 1, !tbaa !5
  %conv84 = zext i8 %26 to i64
  %add85 = add i64 %add81, %conv84
  %add86 = add i64 %add82, %add85
  %arrayidx87 = getelementptr inbounds i8* %buf.addr.2, i64 13
  %27 = load i8* %arrayidx87, align 1, !tbaa !5
  %conv88 = zext i8 %27 to i64
  %add89 = add i64 %add85, %conv88
  %add90 = add i64 %add86, %add89
  %arrayidx91 = getelementptr inbounds i8* %buf.addr.2, i64 14
  %28 = load i8* %arrayidx91, align 1, !tbaa !5
  %conv92 = zext i8 %28 to i64
  %add93 = add i64 %add89, %conv92
  %add94 = add i64 %add90, %add93
  %arrayidx95 = getelementptr inbounds i8* %buf.addr.2, i64 15
  %29 = load i8* %arrayidx95, align 1, !tbaa !5
  %conv96 = zext i8 %29 to i64
  %add97 = add i64 %add93, %conv96
  %add98 = add i64 %add94, %add97
  %add.ptr = getelementptr inbounds i8* %buf.addr.2, i64 16
  %dec99 = add i32 %n.0, -1
  %tobool100 = icmp eq i32 %dec99, 0
  br i1 %tobool100, label %do.end, label %do.body

do.end:                                           ; preds = %do.body
  %add98.lcssa = phi i64 [ %add98, %do.body ]
  %add97.lcssa = phi i64 [ %add97, %do.body ]
  %scevgep387 = getelementptr i8* %buf.addr.1380, i64 5552
  %rem101 = urem i64 %add97.lcssa, 65521
  %rem102 = urem i64 %add98.lcssa, 65521
  %cmp31 = icmp ugt i32 %sub34, 5551
  br i1 %cmp31, label %while.body33, label %while.end103

while.end103:                                     ; preds = %do.end
  %rem102.lcssa = phi i64 [ %rem102, %do.end ]
  %rem101.lcssa = phi i64 [ %rem101, %do.end ]
  %scevgep388 = getelementptr i8* %buf, i64 %5
  %30 = mul i32 %2, -5552
  %31 = add i32 %1, %30
  %tobool104 = icmp eq i32 %31, 0
  br i1 %tobool104, label %if.end188, label %while.cond106.preheader

while.cond106.preheader:                          ; preds = %while.end103
  %cmp107369 = icmp ugt i32 %31, 15
  br i1 %cmp107369, label %while.body109.lr.ph, label %while.body180.preheader

while.body180.preheader:                          ; preds = %while.cond177.preheader, %while.cond106.preheader
  %sum2.5366.ph = phi i64 [ %add174.lcssa, %while.cond177.preheader ], [ %rem102.lcssa, %while.cond106.preheader ]
  %len.addr.3365.ph = phi i32 [ %42, %while.cond177.preheader ], [ %31, %while.cond106.preheader ]
  %buf.addr.4364.ph = phi i8* [ %scevgep, %while.cond177.preheader ], [ %scevgep388, %while.cond106.preheader ]
  %adler.addr.6363.ph = phi i64 [ %add173.lcssa, %while.cond177.preheader ], [ %rem101.lcssa, %while.cond106.preheader ]
  %xtraiter428 = and i32 %len.addr.3365.ph, 3
  %lcmp.mod429 = icmp ne i32 %xtraiter428, 0
  %lcmp.overflow430 = icmp eq i32 %len.addr.3365.ph, 0
  %lcmp.or431 = or i1 %lcmp.overflow430, %lcmp.mod429
  br i1 %lcmp.or431, label %unr.cmp452, label %while.body180.preheader.split

unr.cmp452:                                       ; preds = %while.body180.preheader
  %un.tmp453 = icmp eq i32 %xtraiter428, 1
  br i1 %un.tmp453, label %while.body180.unr441, label %unr.cmp439

unr.cmp439:                                       ; preds = %unr.cmp452
  %un.tmp440 = icmp eq i32 %xtraiter428, 2
  br i1 %un.tmp440, label %while.body180.unr432, label %while.body180.unr

while.body180.unr:                                ; preds = %unr.cmp439
  %dec178.unr = add i32 %len.addr.3365.ph, -1
  %incdec.ptr181.unr = getelementptr inbounds i8* %buf.addr.4364.ph, i64 1
  %32 = load i8* %buf.addr.4364.ph, align 1, !tbaa !5
  %conv182.unr = zext i8 %32 to i64
  %add183.unr = add i64 %conv182.unr, %adler.addr.6363.ph
  %add184.unr = add i64 %add183.unr, %sum2.5366.ph
  %tobool179.unr = icmp eq i32 %dec178.unr, 0
  br label %while.body180.unr432

while.body180.unr432:                             ; preds = %while.body180.unr, %unr.cmp439
  %sum2.5366.unr = phi i64 [ %add184.unr, %while.body180.unr ], [ %sum2.5366.ph, %unr.cmp439 ]
  %len.addr.3365.unr = phi i32 [ %dec178.unr, %while.body180.unr ], [ %len.addr.3365.ph, %unr.cmp439 ]
  %buf.addr.4364.unr = phi i8* [ %incdec.ptr181.unr, %while.body180.unr ], [ %buf.addr.4364.ph, %unr.cmp439 ]
  %adler.addr.6363.unr = phi i64 [ %add183.unr, %while.body180.unr ], [ %adler.addr.6363.ph, %unr.cmp439 ]
  %dec178.unr433 = add i32 %len.addr.3365.unr, -1
  %incdec.ptr181.unr434 = getelementptr inbounds i8* %buf.addr.4364.unr, i64 1
  %33 = load i8* %buf.addr.4364.unr, align 1, !tbaa !5
  %conv182.unr435 = zext i8 %33 to i64
  %add183.unr436 = add i64 %conv182.unr435, %adler.addr.6363.unr
  %add184.unr437 = add i64 %add183.unr436, %sum2.5366.unr
  %tobool179.unr438 = icmp eq i32 %dec178.unr433, 0
  br label %while.body180.unr441

while.body180.unr441:                             ; preds = %while.body180.unr432, %unr.cmp452
  %sum2.5366.unr442 = phi i64 [ %add184.unr437, %while.body180.unr432 ], [ %sum2.5366.ph, %unr.cmp452 ]
  %len.addr.3365.unr443 = phi i32 [ %dec178.unr433, %while.body180.unr432 ], [ %len.addr.3365.ph, %unr.cmp452 ]
  %buf.addr.4364.unr444 = phi i8* [ %incdec.ptr181.unr434, %while.body180.unr432 ], [ %buf.addr.4364.ph, %unr.cmp452 ]
  %adler.addr.6363.unr445 = phi i64 [ %add183.unr436, %while.body180.unr432 ], [ %adler.addr.6363.ph, %unr.cmp452 ]
  %dec178.unr446 = add i32 %len.addr.3365.unr443, -1
  %incdec.ptr181.unr447 = getelementptr inbounds i8* %buf.addr.4364.unr444, i64 1
  %34 = load i8* %buf.addr.4364.unr444, align 1, !tbaa !5
  %conv182.unr448 = zext i8 %34 to i64
  %add183.unr449 = add i64 %conv182.unr448, %adler.addr.6363.unr445
  %add184.unr450 = add i64 %add183.unr449, %sum2.5366.unr442
  %tobool179.unr451 = icmp eq i32 %dec178.unr446, 0
  br label %while.body180.preheader.split

while.body180.preheader.split:                    ; preds = %while.body180.unr441, %while.body180.preheader
  %add184.lcssa.unr = phi i64 [ 0, %while.body180.preheader ], [ %add184.unr450, %while.body180.unr441 ]
  %add183.lcssa.unr = phi i64 [ 0, %while.body180.preheader ], [ %add183.unr449, %while.body180.unr441 ]
  %sum2.5366.unr454 = phi i64 [ %sum2.5366.ph, %while.body180.preheader ], [ %add184.unr450, %while.body180.unr441 ]
  %len.addr.3365.unr455 = phi i32 [ %len.addr.3365.ph, %while.body180.preheader ], [ %dec178.unr446, %while.body180.unr441 ]
  %buf.addr.4364.unr456 = phi i8* [ %buf.addr.4364.ph, %while.body180.preheader ], [ %incdec.ptr181.unr447, %while.body180.unr441 ]
  %adler.addr.6363.unr457 = phi i64 [ %adler.addr.6363.ph, %while.body180.preheader ], [ %add183.unr449, %while.body180.unr441 ]
  %35 = icmp ult i32 %len.addr.3365.ph, 4
  br i1 %35, label %while.end185.loopexit, label %while.body180.preheader.split.split

while.body180.preheader.split.split:              ; preds = %while.body180.preheader.split
  br label %while.body180

while.body109.lr.ph:                              ; preds = %while.cond106.preheader, %while.cond30.preheader
  %sum2.2.lcssa390398 = phi i64 [ %rem102.lcssa, %while.cond106.preheader ], [ %and, %while.cond30.preheader ]
  %len.addr.1.lcssa391397 = phi i32 [ %31, %while.cond106.preheader ], [ %len, %while.cond30.preheader ]
  %buf.addr.1.lcssa392396 = phi i8* [ %scevgep388, %while.cond106.preheader ], [ %buf, %while.cond30.preheader ]
  %adler.addr.3.lcssa393395 = phi i64 [ %rem101.lcssa, %while.cond106.preheader ], [ %and1, %while.cond30.preheader ]
  %36 = add i32 %len.addr.1.lcssa391397, -16
  %37 = lshr i32 %36, 4
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = add nuw nsw i64 %39, 16
  %41 = shl nuw i32 %37, 4
  br label %while.body109

while.cond177.preheader:                          ; preds = %while.body109
  %add174.lcssa = phi i64 [ %add174, %while.body109 ]
  %add173.lcssa = phi i64 [ %add173, %while.body109 ]
  %scevgep = getelementptr i8* %buf.addr.1.lcssa392396, i64 %40
  %42 = sub i32 %36, %41
  %tobool179362 = icmp eq i32 %36, %41
  br i1 %tobool179362, label %while.end185, label %while.body180.preheader

while.body109:                                    ; preds = %while.body109, %while.body109.lr.ph
  %sum2.4373 = phi i64 [ %sum2.2.lcssa390398, %while.body109.lr.ph ], [ %add174, %while.body109 ]
  %len.addr.2372 = phi i32 [ %len.addr.1.lcssa391397, %while.body109.lr.ph ], [ %sub110, %while.body109 ]
  %buf.addr.3371 = phi i8* [ %buf.addr.1.lcssa392396, %while.body109.lr.ph ], [ %add.ptr175, %while.body109 ]
  %adler.addr.5370 = phi i64 [ %adler.addr.3.lcssa393395, %while.body109.lr.ph ], [ %add173, %while.body109 ]
  %sub110 = add i32 %len.addr.2372, -16
  %43 = load i8* %buf.addr.3371, align 1, !tbaa !5
  %conv112 = zext i8 %43 to i64
  %add113 = add i64 %conv112, %adler.addr.5370
  %add114 = add i64 %add113, %sum2.4373
  %arrayidx115 = getelementptr inbounds i8* %buf.addr.3371, i64 1
  %44 = load i8* %arrayidx115, align 1, !tbaa !5
  %conv116 = zext i8 %44 to i64
  %add117 = add i64 %add113, %conv116
  %add118 = add i64 %add114, %add117
  %arrayidx119 = getelementptr inbounds i8* %buf.addr.3371, i64 2
  %45 = load i8* %arrayidx119, align 1, !tbaa !5
  %conv120 = zext i8 %45 to i64
  %add121 = add i64 %add117, %conv120
  %add122 = add i64 %add118, %add121
  %arrayidx123 = getelementptr inbounds i8* %buf.addr.3371, i64 3
  %46 = load i8* %arrayidx123, align 1, !tbaa !5
  %conv124 = zext i8 %46 to i64
  %add125 = add i64 %add121, %conv124
  %add126 = add i64 %add122, %add125
  %arrayidx127 = getelementptr inbounds i8* %buf.addr.3371, i64 4
  %47 = load i8* %arrayidx127, align 1, !tbaa !5
  %conv128 = zext i8 %47 to i64
  %add129 = add i64 %add125, %conv128
  %add130 = add i64 %add126, %add129
  %arrayidx131 = getelementptr inbounds i8* %buf.addr.3371, i64 5
  %48 = load i8* %arrayidx131, align 1, !tbaa !5
  %conv132 = zext i8 %48 to i64
  %add133 = add i64 %add129, %conv132
  %add134 = add i64 %add130, %add133
  %arrayidx135 = getelementptr inbounds i8* %buf.addr.3371, i64 6
  %49 = load i8* %arrayidx135, align 1, !tbaa !5
  %conv136 = zext i8 %49 to i64
  %add137 = add i64 %add133, %conv136
  %add138 = add i64 %add134, %add137
  %arrayidx139 = getelementptr inbounds i8* %buf.addr.3371, i64 7
  %50 = load i8* %arrayidx139, align 1, !tbaa !5
  %conv140 = zext i8 %50 to i64
  %add141 = add i64 %add137, %conv140
  %add142 = add i64 %add138, %add141
  %arrayidx143 = getelementptr inbounds i8* %buf.addr.3371, i64 8
  %51 = load i8* %arrayidx143, align 1, !tbaa !5
  %conv144 = zext i8 %51 to i64
  %add145 = add i64 %add141, %conv144
  %add146 = add i64 %add142, %add145
  %arrayidx147 = getelementptr inbounds i8* %buf.addr.3371, i64 9
  %52 = load i8* %arrayidx147, align 1, !tbaa !5
  %conv148 = zext i8 %52 to i64
  %add149 = add i64 %add145, %conv148
  %add150 = add i64 %add146, %add149
  %arrayidx151 = getelementptr inbounds i8* %buf.addr.3371, i64 10
  %53 = load i8* %arrayidx151, align 1, !tbaa !5
  %conv152 = zext i8 %53 to i64
  %add153 = add i64 %add149, %conv152
  %add154 = add i64 %add150, %add153
  %arrayidx155 = getelementptr inbounds i8* %buf.addr.3371, i64 11
  %54 = load i8* %arrayidx155, align 1, !tbaa !5
  %conv156 = zext i8 %54 to i64
  %add157 = add i64 %add153, %conv156
  %add158 = add i64 %add154, %add157
  %arrayidx159 = getelementptr inbounds i8* %buf.addr.3371, i64 12
  %55 = load i8* %arrayidx159, align 1, !tbaa !5
  %conv160 = zext i8 %55 to i64
  %add161 = add i64 %add157, %conv160
  %add162 = add i64 %add158, %add161
  %arrayidx163 = getelementptr inbounds i8* %buf.addr.3371, i64 13
  %56 = load i8* %arrayidx163, align 1, !tbaa !5
  %conv164 = zext i8 %56 to i64
  %add165 = add i64 %add161, %conv164
  %add166 = add i64 %add162, %add165
  %arrayidx167 = getelementptr inbounds i8* %buf.addr.3371, i64 14
  %57 = load i8* %arrayidx167, align 1, !tbaa !5
  %conv168 = zext i8 %57 to i64
  %add169 = add i64 %add165, %conv168
  %add170 = add i64 %add166, %add169
  %arrayidx171 = getelementptr inbounds i8* %buf.addr.3371, i64 15
  %58 = load i8* %arrayidx171, align 1, !tbaa !5
  %conv172 = zext i8 %58 to i64
  %add173 = add i64 %add169, %conv172
  %add174 = add i64 %add170, %add173
  %add.ptr175 = getelementptr inbounds i8* %buf.addr.3371, i64 16
  %cmp107 = icmp ugt i32 %sub110, 15
  br i1 %cmp107, label %while.body109, label %while.cond177.preheader

while.body180:                                    ; preds = %while.body180, %while.body180.preheader.split.split
  %sum2.5366 = phi i64 [ %sum2.5366.unr454, %while.body180.preheader.split.split ], [ %add184.3, %while.body180 ]
  %len.addr.3365 = phi i32 [ %len.addr.3365.unr455, %while.body180.preheader.split.split ], [ %dec178.3, %while.body180 ]
  %buf.addr.4364 = phi i8* [ %buf.addr.4364.unr456, %while.body180.preheader.split.split ], [ %incdec.ptr181.3, %while.body180 ]
  %adler.addr.6363 = phi i64 [ %adler.addr.6363.unr457, %while.body180.preheader.split.split ], [ %add183.3, %while.body180 ]
  %dec178 = add i32 %len.addr.3365, -1
  %incdec.ptr181 = getelementptr inbounds i8* %buf.addr.4364, i64 1
  %59 = load i8* %buf.addr.4364, align 1, !tbaa !5
  %conv182 = zext i8 %59 to i64
  %add183 = add i64 %conv182, %adler.addr.6363
  %add184 = add i64 %add183, %sum2.5366
  %dec178.1 = add i32 %dec178, -1
  %incdec.ptr181.1 = getelementptr inbounds i8* %incdec.ptr181, i64 1
  %60 = load i8* %incdec.ptr181, align 1, !tbaa !5
  %conv182.1 = zext i8 %60 to i64
  %add183.1 = add i64 %conv182.1, %add183
  %add184.1 = add i64 %add183.1, %add184
  %dec178.2 = add i32 %dec178.1, -1
  %incdec.ptr181.2 = getelementptr inbounds i8* %incdec.ptr181.1, i64 1
  %61 = load i8* %incdec.ptr181.1, align 1, !tbaa !5
  %conv182.2 = zext i8 %61 to i64
  %add183.2 = add i64 %conv182.2, %add183.1
  %add184.2 = add i64 %add183.2, %add184.1
  %dec178.3 = add i32 %dec178.2, -1
  %incdec.ptr181.3 = getelementptr inbounds i8* %incdec.ptr181.2, i64 1
  %62 = load i8* %incdec.ptr181.2, align 1, !tbaa !5
  %conv182.3 = zext i8 %62 to i64
  %add183.3 = add i64 %conv182.3, %add183.2
  %add184.3 = add i64 %add183.3, %add184.2
  %tobool179.3 = icmp eq i32 %dec178.3, 0
  br i1 %tobool179.3, label %while.end185.loopexit.unr-lcssa, label %while.body180

while.end185.loopexit.unr-lcssa:                  ; preds = %while.body180
  %add184.lcssa.ph = phi i64 [ %add184.3, %while.body180 ]
  %add183.lcssa.ph = phi i64 [ %add183.3, %while.body180 ]
  br label %while.end185.loopexit

while.end185.loopexit:                            ; preds = %while.end185.loopexit.unr-lcssa, %while.body180.preheader.split
  %add184.lcssa = phi i64 [ %add184.lcssa.unr, %while.body180.preheader.split ], [ %add184.lcssa.ph, %while.end185.loopexit.unr-lcssa ]
  %add183.lcssa = phi i64 [ %add183.lcssa.unr, %while.body180.preheader.split ], [ %add183.lcssa.ph, %while.end185.loopexit.unr-lcssa ]
  br label %while.end185

while.end185:                                     ; preds = %while.end185.loopexit, %while.cond177.preheader
  %sum2.5.lcssa = phi i64 [ %add174.lcssa, %while.cond177.preheader ], [ %add184.lcssa, %while.end185.loopexit ]
  %adler.addr.6.lcssa = phi i64 [ %add173.lcssa, %while.cond177.preheader ], [ %add183.lcssa, %while.end185.loopexit ]
  %rem186 = urem i64 %adler.addr.6.lcssa, 65521
  %rem187 = urem i64 %sum2.5.lcssa, 65521
  br label %if.end188

if.end188:                                        ; preds = %while.end185, %while.end103
  %adler.addr.7 = phi i64 [ %rem186, %while.end185 ], [ %rem101.lcssa, %while.end103 ]
  %sum2.6 = phi i64 [ %rem187, %while.end185 ], [ %rem102.lcssa, %while.end103 ]
  %shl189 = shl nuw nsw i64 %sum2.6, 16
  %or190 = or i64 %shl189, %adler.addr.7
  br label %return

return:                                           ; preds = %if.end188, %while.end, %if.end11, %if.then
  %retval.0 = phi i64 [ %or, %if.then ], [ %or28, %while.end ], [ %or190, %if.end188 ], [ 1, %if.end11 ]
  ret i64 %retval.0
}

; Function Attrs: nounwind readnone uwtable
define i64 @adler32_combine(i64 %adler1, i64 %adler2, i64 %len2) #9 {
entry:
  %cmp.i = icmp slt i64 %len2, 0
  br i1 %cmp.i, label %adler32_combine_.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %rem1.i = srem i64 %len2, 65521
  %and.i = and i64 %adler1, 65535
  %conv2.i = and i64 %rem1.i, 4294967295
  %mul.i = mul i64 %conv2.i, %and.i
  %rem3.i = urem i64 %mul.i, 65521
  %and4.i = and i64 %adler2, 65535
  %sub.i = add nuw nsw i64 %and.i, 65520
  %add5.i = add nuw nsw i64 %sub.i, %and4.i
  %shr.i = lshr i64 %adler1, 16
  %and6.i = and i64 %shr.i, 65535
  %shr7.i = lshr i64 %adler2, 16
  %and8.i = and i64 %shr7.i, 65535
  %add9.i = add nuw nsw i64 %and6.i, 65521
  %add10.i = add nuw nsw i64 %add9.i, %and8.i
  %sub12.i = sub i64 %add10.i, %conv2.i
  %add13.i = add nsw i64 %sub12.i, %rem3.i
  %cmp14.i = icmp ugt i64 %add5.i, 65520
  %sub17.i = add nsw i64 %add5.i, -65521
  %sub17.add5.i = select i1 %cmp14.i, i64 %sub17.i, i64 %add5.i
  %cmp19.i = icmp ugt i64 %sub17.add5.i, 65520
  %sub22.i = add nsw i64 %sub17.add5.i, -65521
  %sum1.1.i = select i1 %cmp19.i, i64 %sub22.i, i64 %sub17.add5.i
  %cmp24.i = icmp ugt i64 %add13.i, 131041
  %sub27.i = add nsw i64 %add13.i, -131042
  %sub27.add13.i = select i1 %cmp24.i, i64 %sub27.i, i64 %add13.i
  %cmp29.i = icmp ugt i64 %sub27.add13.i, 65520
  %sub32.i = add i64 %sub27.add13.i, 281474976645135
  %sum2.1.i = select i1 %cmp29.i, i64 %sub32.i, i64 %sub27.add13.i
  %shl.i = shl i64 %sum2.1.i, 16
  %or.i = or i64 %shl.i, %sum1.1.i
  br label %adler32_combine_.exit

adler32_combine_.exit:                            ; preds = %if.end.i, %entry
  %retval.0.i = phi i64 [ %or.i, %if.end.i ], [ 4294967295, %entry ]
  ret i64 %retval.0.i
}

; Function Attrs: nounwind readnone uwtable
define i64 @adler32_combine64(i64 %adler1, i64 %adler2, i64 %len2) #9 {
entry:
  %cmp.i = icmp slt i64 %len2, 0
  br i1 %cmp.i, label %adler32_combine_.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %rem1.i = srem i64 %len2, 65521
  %and.i = and i64 %adler1, 65535
  %conv2.i = and i64 %rem1.i, 4294967295
  %mul.i = mul i64 %conv2.i, %and.i
  %rem3.i = urem i64 %mul.i, 65521
  %and4.i = and i64 %adler2, 65535
  %sub.i = add nuw nsw i64 %and.i, 65520
  %add5.i = add nuw nsw i64 %sub.i, %and4.i
  %shr.i = lshr i64 %adler1, 16
  %and6.i = and i64 %shr.i, 65535
  %shr7.i = lshr i64 %adler2, 16
  %and8.i = and i64 %shr7.i, 65535
  %add9.i = add nuw nsw i64 %and6.i, 65521
  %add10.i = add nuw nsw i64 %add9.i, %and8.i
  %sub12.i = sub i64 %add10.i, %conv2.i
  %add13.i = add nsw i64 %sub12.i, %rem3.i
  %cmp14.i = icmp ugt i64 %add5.i, 65520
  %sub17.i = add nsw i64 %add5.i, -65521
  %sub17.add5.i = select i1 %cmp14.i, i64 %sub17.i, i64 %add5.i
  %cmp19.i = icmp ugt i64 %sub17.add5.i, 65520
  %sub22.i = add nsw i64 %sub17.add5.i, -65521
  %sum1.1.i = select i1 %cmp19.i, i64 %sub22.i, i64 %sub17.add5.i
  %cmp24.i = icmp ugt i64 %add13.i, 131041
  %sub27.i = add nsw i64 %add13.i, -131042
  %sub27.add13.i = select i1 %cmp24.i, i64 %sub27.i, i64 %add13.i
  %cmp29.i = icmp ugt i64 %sub27.add13.i, 65520
  %sub32.i = add i64 %sub27.add13.i, 281474976645135
  %sum2.1.i = select i1 %cmp29.i, i64 %sub32.i, i64 %sub27.add13.i
  %shl.i = shl i64 %sum2.1.i, 16
  %or.i = or i64 %shl.i, %sum1.1.i
  br label %adler32_combine_.exit

adler32_combine_.exit:                            ; preds = %if.end.i, %entry
  %retval.0.i = phi i64 [ %or.i, %if.end.i ], [ 4294967295, %entry ]
  ret i64 %retval.0.i
}

; Function Attrs: nounwind readnone uwtable
define i32* @get_crc_table() #9 {
entry:
  ret i32* getelementptr inbounds ([8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 0)
}

; Function Attrs: nounwind readonly uwtable
define i64 @crc32(i64 %crc, i8* %buf, i32 %len) #6 {
entry:
  %cmp = icmp eq i8* %buf, null
  br i1 %cmp, label %return, label %if.then1

if.then1:                                         ; preds = %entry
  %conv.i = trunc i64 %crc to i32
  %neg.i = xor i32 %conv.i, -1
  %tobool281.i = icmp eq i32 %len, 0
  br i1 %tobool281.i, label %crc32_little.exit, label %land.rhs.i.preheader

land.rhs.i.preheader:                             ; preds = %if.then1
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i, %land.rhs.i.preheader
  %c.0284.i = phi i32 [ %xor4.i, %while.body.i ], [ %neg.i, %land.rhs.i.preheader ]
  %len.addr.0283.i = phi i32 [ %dec.i, %while.body.i ], [ %len, %land.rhs.i.preheader ]
  %buf.addr.0282.i = phi i8* [ %incdec.ptr.i, %while.body.i ], [ %buf, %land.rhs.i.preheader ]
  %0 = ptrtoint i8* %buf.addr.0282.i to i64
  %and.i = and i64 %0, 3
  %tobool1.i = icmp eq i64 %and.i, 0
  br i1 %tobool1.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %incdec.ptr.i = getelementptr inbounds i8* %buf.addr.0282.i, i64 1
  %1 = load i8* %buf.addr.0282.i, align 1, !tbaa !5
  %conv2.i = zext i8 %1 to i32
  %c.0.masked.i = and i32 %c.0284.i, 255
  %and3.i = xor i32 %conv2.i, %c.0.masked.i
  %idxprom.i = zext i32 %and3.i to i64
  %arrayidx.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom.i
  %2 = load i32* %arrayidx.i, align 4, !tbaa !28
  %shr.i = lshr i32 %c.0284.i, 8
  %xor4.i = xor i32 %2, %shr.i
  %dec.i = add i32 %len.addr.0283.i, -1
  %tobool.i = icmp eq i32 %dec.i, 0
  br i1 %tobool.i, label %crc32_little.exit.loopexit15, label %land.rhs.i

while.end.i:                                      ; preds = %land.rhs.i
  %buf.addr.0282.i.lcssa = phi i8* [ %buf.addr.0282.i, %land.rhs.i ]
  %len.addr.0283.i.lcssa = phi i32 [ %len.addr.0283.i, %land.rhs.i ]
  %c.0284.i.lcssa = phi i32 [ %c.0284.i, %land.rhs.i ]
  %3 = bitcast i8* %buf.addr.0282.i.lcssa to i32*
  %cmp274.i = icmp ugt i32 %len.addr.0283.i.lcssa, 31
  br i1 %cmp274.i, label %while.body7.lr.ph.i, label %while.cond161.preheader.i

while.body7.lr.ph.i:                              ; preds = %while.end.i
  %4 = add i32 %len.addr.0283.i.lcssa, -32
  %5 = lshr i32 %4, 5
  %6 = zext i32 %5 to i64
  %7 = shl nuw nsw i64 %6, 5
  %8 = add nuw nsw i64 %7, 32
  br label %while.body7.i

while.cond5.while.cond161.preheader_crit_edge.i:  ; preds = %while.body7.i
  %xor159.i.lcssa = phi i32 [ %xor159.i, %while.body7.i ]
  %9 = shl nuw i32 %5, 5
  %scevgep294.i = getelementptr i8* %buf.addr.0282.i.lcssa, i64 %8
  %10 = sub i32 %4, %9
  %scevgep294295.i = bitcast i8* %scevgep294.i to i32*
  br label %while.cond161.preheader.i

while.cond161.preheader.i:                        ; preds = %while.cond5.while.cond161.preheader_crit_edge.i, %while.end.i
  %buf4.0.lcssa.i = phi i32* [ %scevgep294295.i, %while.cond5.while.cond161.preheader_crit_edge.i ], [ %3, %while.end.i ]
  %c.1.lcssa.i = phi i32 [ %xor159.i.lcssa, %while.cond5.while.cond161.preheader_crit_edge.i ], [ %c.0284.i.lcssa, %while.end.i ]
  %len.addr.1.lcssa.i = phi i32 [ %10, %while.cond5.while.cond161.preheader_crit_edge.i ], [ %len.addr.0283.i.lcssa, %while.end.i ]
  %cmp162268.i = icmp ugt i32 %len.addr.1.lcssa.i, 3
  br i1 %cmp162268.i, label %while.body164.lr.ph.i, label %while.end185.i

while.body164.lr.ph.i:                            ; preds = %while.cond161.preheader.i
  %11 = add i32 %len.addr.1.lcssa.i, -4
  %12 = lshr i32 %11, 2
  %13 = zext i32 %12 to i64
  br label %while.body164.i

while.body7.i:                                    ; preds = %while.body7.i, %while.body7.lr.ph.i
  %buf4.0277.i = phi i32* [ %3, %while.body7.lr.ph.i ], [ %incdec.ptr141.i, %while.body7.i ]
  %c.1276.i = phi i32 [ %c.0284.i.lcssa, %while.body7.lr.ph.i ], [ %xor159.i, %while.body7.i ]
  %len.addr.1275.i = phi i32 [ %len.addr.0283.i.lcssa, %while.body7.lr.ph.i ], [ %sub.i, %while.body7.i ]
  %incdec.ptr8.i = getelementptr inbounds i32* %buf4.0277.i, i64 1
  %14 = load i32* %buf4.0277.i, align 4, !tbaa !28
  %xor9.i = xor i32 %14, %c.1276.i
  %and10.i = and i32 %xor9.i, 255
  %idxprom11.i = zext i32 %and10.i to i64
  %arrayidx12.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom11.i
  %15 = load i32* %arrayidx12.i, align 4, !tbaa !28
  %shr13.i = lshr i32 %xor9.i, 8
  %and14.i = and i32 %shr13.i, 255
  %idxprom15.i = zext i32 %and14.i to i64
  %arrayidx16.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom15.i
  %16 = load i32* %arrayidx16.i, align 4, !tbaa !28
  %xor17.i = xor i32 %16, %15
  %shr18.i = lshr i32 %xor9.i, 16
  %and19.i = and i32 %shr18.i, 255
  %idxprom20.i = zext i32 %and19.i to i64
  %arrayidx21.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom20.i
  %17 = load i32* %arrayidx21.i, align 4, !tbaa !28
  %xor22.i = xor i32 %xor17.i, %17
  %shr23.i = lshr i32 %xor9.i, 24
  %idxprom24.i = zext i32 %shr23.i to i64
  %arrayidx25.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom24.i
  %18 = load i32* %arrayidx25.i, align 4, !tbaa !28
  %xor26.i = xor i32 %xor22.i, %18
  %incdec.ptr27.i = getelementptr inbounds i32* %buf4.0277.i, i64 2
  %19 = load i32* %incdec.ptr8.i, align 4, !tbaa !28
  %xor28.i = xor i32 %xor26.i, %19
  %and29.i = and i32 %xor28.i, 255
  %idxprom30.i = zext i32 %and29.i to i64
  %arrayidx31.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom30.i
  %20 = load i32* %arrayidx31.i, align 4, !tbaa !28
  %shr32.i = lshr i32 %xor28.i, 8
  %and33.i = and i32 %shr32.i, 255
  %idxprom34.i = zext i32 %and33.i to i64
  %arrayidx35.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom34.i
  %21 = load i32* %arrayidx35.i, align 4, !tbaa !28
  %xor36.i = xor i32 %21, %20
  %shr37.i = lshr i32 %xor28.i, 16
  %and38.i = and i32 %shr37.i, 255
  %idxprom39.i = zext i32 %and38.i to i64
  %arrayidx40.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom39.i
  %22 = load i32* %arrayidx40.i, align 4, !tbaa !28
  %xor41.i = xor i32 %xor36.i, %22
  %shr42.i = lshr i32 %xor28.i, 24
  %idxprom43.i = zext i32 %shr42.i to i64
  %arrayidx44.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom43.i
  %23 = load i32* %arrayidx44.i, align 4, !tbaa !28
  %xor45.i = xor i32 %xor41.i, %23
  %incdec.ptr46.i = getelementptr inbounds i32* %buf4.0277.i, i64 3
  %24 = load i32* %incdec.ptr27.i, align 4, !tbaa !28
  %xor47.i = xor i32 %xor45.i, %24
  %and48.i = and i32 %xor47.i, 255
  %idxprom49.i = zext i32 %and48.i to i64
  %arrayidx50.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom49.i
  %25 = load i32* %arrayidx50.i, align 4, !tbaa !28
  %shr51.i = lshr i32 %xor47.i, 8
  %and52.i = and i32 %shr51.i, 255
  %idxprom53.i = zext i32 %and52.i to i64
  %arrayidx54.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom53.i
  %26 = load i32* %arrayidx54.i, align 4, !tbaa !28
  %xor55.i = xor i32 %26, %25
  %shr56.i = lshr i32 %xor47.i, 16
  %and57.i = and i32 %shr56.i, 255
  %idxprom58.i = zext i32 %and57.i to i64
  %arrayidx59.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom58.i
  %27 = load i32* %arrayidx59.i, align 4, !tbaa !28
  %xor60.i = xor i32 %xor55.i, %27
  %shr61.i = lshr i32 %xor47.i, 24
  %idxprom62.i = zext i32 %shr61.i to i64
  %arrayidx63.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom62.i
  %28 = load i32* %arrayidx63.i, align 4, !tbaa !28
  %xor64.i = xor i32 %xor60.i, %28
  %incdec.ptr65.i = getelementptr inbounds i32* %buf4.0277.i, i64 4
  %29 = load i32* %incdec.ptr46.i, align 4, !tbaa !28
  %xor66.i = xor i32 %xor64.i, %29
  %and67.i = and i32 %xor66.i, 255
  %idxprom68.i = zext i32 %and67.i to i64
  %arrayidx69.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom68.i
  %30 = load i32* %arrayidx69.i, align 4, !tbaa !28
  %shr70.i = lshr i32 %xor66.i, 8
  %and71.i = and i32 %shr70.i, 255
  %idxprom72.i = zext i32 %and71.i to i64
  %arrayidx73.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom72.i
  %31 = load i32* %arrayidx73.i, align 4, !tbaa !28
  %xor74.i = xor i32 %31, %30
  %shr75.i = lshr i32 %xor66.i, 16
  %and76.i = and i32 %shr75.i, 255
  %idxprom77.i = zext i32 %and76.i to i64
  %arrayidx78.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom77.i
  %32 = load i32* %arrayidx78.i, align 4, !tbaa !28
  %xor79.i = xor i32 %xor74.i, %32
  %shr80.i = lshr i32 %xor66.i, 24
  %idxprom81.i = zext i32 %shr80.i to i64
  %arrayidx82.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom81.i
  %33 = load i32* %arrayidx82.i, align 4, !tbaa !28
  %xor83.i = xor i32 %xor79.i, %33
  %incdec.ptr84.i = getelementptr inbounds i32* %buf4.0277.i, i64 5
  %34 = load i32* %incdec.ptr65.i, align 4, !tbaa !28
  %xor85.i = xor i32 %xor83.i, %34
  %and86.i = and i32 %xor85.i, 255
  %idxprom87.i = zext i32 %and86.i to i64
  %arrayidx88.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom87.i
  %35 = load i32* %arrayidx88.i, align 4, !tbaa !28
  %shr89.i = lshr i32 %xor85.i, 8
  %and90.i = and i32 %shr89.i, 255
  %idxprom91.i = zext i32 %and90.i to i64
  %arrayidx92.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom91.i
  %36 = load i32* %arrayidx92.i, align 4, !tbaa !28
  %xor93.i = xor i32 %36, %35
  %shr94.i = lshr i32 %xor85.i, 16
  %and95.i = and i32 %shr94.i, 255
  %idxprom96.i = zext i32 %and95.i to i64
  %arrayidx97.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom96.i
  %37 = load i32* %arrayidx97.i, align 4, !tbaa !28
  %xor98.i = xor i32 %xor93.i, %37
  %shr99.i = lshr i32 %xor85.i, 24
  %idxprom100.i = zext i32 %shr99.i to i64
  %arrayidx101.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom100.i
  %38 = load i32* %arrayidx101.i, align 4, !tbaa !28
  %xor102.i = xor i32 %xor98.i, %38
  %incdec.ptr103.i = getelementptr inbounds i32* %buf4.0277.i, i64 6
  %39 = load i32* %incdec.ptr84.i, align 4, !tbaa !28
  %xor104.i = xor i32 %xor102.i, %39
  %and105.i = and i32 %xor104.i, 255
  %idxprom106.i = zext i32 %and105.i to i64
  %arrayidx107.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom106.i
  %40 = load i32* %arrayidx107.i, align 4, !tbaa !28
  %shr108.i = lshr i32 %xor104.i, 8
  %and109.i = and i32 %shr108.i, 255
  %idxprom110.i = zext i32 %and109.i to i64
  %arrayidx111.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom110.i
  %41 = load i32* %arrayidx111.i, align 4, !tbaa !28
  %xor112.i = xor i32 %41, %40
  %shr113.i = lshr i32 %xor104.i, 16
  %and114.i = and i32 %shr113.i, 255
  %idxprom115.i = zext i32 %and114.i to i64
  %arrayidx116.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom115.i
  %42 = load i32* %arrayidx116.i, align 4, !tbaa !28
  %xor117.i = xor i32 %xor112.i, %42
  %shr118.i = lshr i32 %xor104.i, 24
  %idxprom119.i = zext i32 %shr118.i to i64
  %arrayidx120.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom119.i
  %43 = load i32* %arrayidx120.i, align 4, !tbaa !28
  %xor121.i = xor i32 %xor117.i, %43
  %incdec.ptr122.i = getelementptr inbounds i32* %buf4.0277.i, i64 7
  %44 = load i32* %incdec.ptr103.i, align 4, !tbaa !28
  %xor123.i = xor i32 %xor121.i, %44
  %and124.i = and i32 %xor123.i, 255
  %idxprom125.i = zext i32 %and124.i to i64
  %arrayidx126.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom125.i
  %45 = load i32* %arrayidx126.i, align 4, !tbaa !28
  %shr127.i = lshr i32 %xor123.i, 8
  %and128.i = and i32 %shr127.i, 255
  %idxprom129.i = zext i32 %and128.i to i64
  %arrayidx130.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom129.i
  %46 = load i32* %arrayidx130.i, align 4, !tbaa !28
  %xor131.i = xor i32 %46, %45
  %shr132.i = lshr i32 %xor123.i, 16
  %and133.i = and i32 %shr132.i, 255
  %idxprom134.i = zext i32 %and133.i to i64
  %arrayidx135.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom134.i
  %47 = load i32* %arrayidx135.i, align 4, !tbaa !28
  %xor136.i = xor i32 %xor131.i, %47
  %shr137.i = lshr i32 %xor123.i, 24
  %idxprom138.i = zext i32 %shr137.i to i64
  %arrayidx139.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom138.i
  %48 = load i32* %arrayidx139.i, align 4, !tbaa !28
  %xor140.i = xor i32 %xor136.i, %48
  %incdec.ptr141.i = getelementptr inbounds i32* %buf4.0277.i, i64 8
  %49 = load i32* %incdec.ptr122.i, align 4, !tbaa !28
  %xor142.i = xor i32 %xor140.i, %49
  %and143.i = and i32 %xor142.i, 255
  %idxprom144.i = zext i32 %and143.i to i64
  %arrayidx145.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom144.i
  %50 = load i32* %arrayidx145.i, align 4, !tbaa !28
  %shr146.i = lshr i32 %xor142.i, 8
  %and147.i = and i32 %shr146.i, 255
  %idxprom148.i = zext i32 %and147.i to i64
  %arrayidx149.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom148.i
  %51 = load i32* %arrayidx149.i, align 4, !tbaa !28
  %xor150.i = xor i32 %51, %50
  %shr151.i = lshr i32 %xor142.i, 16
  %and152.i = and i32 %shr151.i, 255
  %idxprom153.i = zext i32 %and152.i to i64
  %arrayidx154.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom153.i
  %52 = load i32* %arrayidx154.i, align 4, !tbaa !28
  %xor155.i = xor i32 %xor150.i, %52
  %shr156.i = lshr i32 %xor142.i, 24
  %idxprom157.i = zext i32 %shr156.i to i64
  %arrayidx158.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom157.i
  %53 = load i32* %arrayidx158.i, align 4, !tbaa !28
  %xor159.i = xor i32 %xor155.i, %53
  %sub.i = add i32 %len.addr.1275.i, -32
  %cmp.i = icmp ugt i32 %sub.i, 31
  br i1 %cmp.i, label %while.body7.i, label %while.cond5.while.cond161.preheader_crit_edge.i

while.body164.i:                                  ; preds = %while.body164.i, %while.body164.lr.ph.i
  %buf4.1271.i = phi i32* [ %buf4.0.lcssa.i, %while.body164.lr.ph.i ], [ %incdec.ptr165.i, %while.body164.i ]
  %c.2270.i = phi i32 [ %c.1.lcssa.i, %while.body164.lr.ph.i ], [ %xor183.i, %while.body164.i ]
  %len.addr.2269.i = phi i32 [ %len.addr.1.lcssa.i, %while.body164.lr.ph.i ], [ %sub184.i, %while.body164.i ]
  %incdec.ptr165.i = getelementptr inbounds i32* %buf4.1271.i, i64 1
  %54 = load i32* %buf4.1271.i, align 4, !tbaa !28
  %xor166.i = xor i32 %54, %c.2270.i
  %and167.i = and i32 %xor166.i, 255
  %idxprom168.i = zext i32 %and167.i to i64
  %arrayidx169.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 3, i64 %idxprom168.i
  %55 = load i32* %arrayidx169.i, align 4, !tbaa !28
  %shr170.i = lshr i32 %xor166.i, 8
  %and171.i = and i32 %shr170.i, 255
  %idxprom172.i = zext i32 %and171.i to i64
  %arrayidx173.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 2, i64 %idxprom172.i
  %56 = load i32* %arrayidx173.i, align 4, !tbaa !28
  %xor174.i = xor i32 %56, %55
  %shr175.i = lshr i32 %xor166.i, 16
  %and176.i = and i32 %shr175.i, 255
  %idxprom177.i = zext i32 %and176.i to i64
  %arrayidx178.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 1, i64 %idxprom177.i
  %57 = load i32* %arrayidx178.i, align 4, !tbaa !28
  %xor179.i = xor i32 %xor174.i, %57
  %shr180.i = lshr i32 %xor166.i, 24
  %idxprom181.i = zext i32 %shr180.i to i64
  %arrayidx182.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom181.i
  %58 = load i32* %arrayidx182.i, align 4, !tbaa !28
  %xor183.i = xor i32 %xor179.i, %58
  %sub184.i = add i32 %len.addr.2269.i, -4
  %cmp162.i = icmp ugt i32 %sub184.i, 3
  br i1 %cmp162.i, label %while.body164.i, label %while.cond161.while.end185_crit_edge.i

while.cond161.while.end185_crit_edge.i:           ; preds = %while.body164.i
  %xor183.i.lcssa = phi i32 [ %xor183.i, %while.body164.i ]
  %59 = shl nuw i32 %12, 2
  %60 = add nuw nsw i64 %13, 1
  %61 = sub i32 %11, %59
  %scevgep.i = getelementptr i32* %buf4.0.lcssa.i, i64 %60
  br label %while.end185.i

while.end185.i:                                   ; preds = %while.cond161.while.end185_crit_edge.i, %while.cond161.preheader.i
  %buf4.1.lcssa.i = phi i32* [ %scevgep.i, %while.cond161.while.end185_crit_edge.i ], [ %buf4.0.lcssa.i, %while.cond161.preheader.i ]
  %c.2.lcssa.i = phi i32 [ %xor183.i.lcssa, %while.cond161.while.end185_crit_edge.i ], [ %c.1.lcssa.i, %while.cond161.preheader.i ]
  %len.addr.2.lcssa.i = phi i32 [ %61, %while.cond161.while.end185_crit_edge.i ], [ %len.addr.1.lcssa.i, %while.cond161.preheader.i ]
  %tobool186.i = icmp eq i32 %len.addr.2.lcssa.i, 0
  br i1 %tobool186.i, label %crc32_little.exit, label %do.body.preheader.i

do.body.preheader.i:                              ; preds = %while.end185.i
  %62 = bitcast i32* %buf4.1.lcssa.i to i8*
  %xtraiter = and i32 %len.addr.2.lcssa.i, 1
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %len.addr.2.lcssa.i, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %do.body.i.unr, label %do.body.preheader.i.split

do.body.i.unr:                                    ; preds = %do.body.preheader.i
  %incdec.ptr187.i.unr = getelementptr inbounds i8* %62, i64 1
  %63 = load i8* %62, align 1, !tbaa !5
  %conv188.i.unr = zext i8 %63 to i32
  %c.3.masked.i.unr = and i32 %c.2.lcssa.i, 255
  %and190.i.unr = xor i32 %conv188.i.unr, %c.3.masked.i.unr
  %idxprom191.i.unr = zext i32 %and190.i.unr to i64
  %arrayidx192.i.unr = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom191.i.unr
  %64 = load i32* %arrayidx192.i.unr, align 4, !tbaa !28
  %shr193.i.unr = lshr i32 %c.2.lcssa.i, 8
  %xor194.i.unr = xor i32 %64, %shr193.i.unr
  %dec195.i.unr = add i32 %len.addr.2.lcssa.i, -1
  %tobool196.i.unr = icmp eq i32 %dec195.i.unr, 0
  br label %do.body.preheader.i.split

do.body.preheader.i.split:                        ; preds = %do.body.i.unr, %do.body.preheader.i
  %xor194.i.lcssa.unr = phi i32 [ 0, %do.body.preheader.i ], [ %xor194.i.unr, %do.body.i.unr ]
  %buf.addr.1.i.unr = phi i8* [ %62, %do.body.preheader.i ], [ %incdec.ptr187.i.unr, %do.body.i.unr ]
  %len.addr.3.i.unr = phi i32 [ %len.addr.2.lcssa.i, %do.body.preheader.i ], [ %dec195.i.unr, %do.body.i.unr ]
  %c.3.i.unr = phi i32 [ %c.2.lcssa.i, %do.body.preheader.i ], [ %xor194.i.unr, %do.body.i.unr ]
  %65 = icmp ult i32 %len.addr.2.lcssa.i, 2
  br i1 %65, label %crc32_little.exit.loopexit, label %do.body.preheader.i.split.split

do.body.preheader.i.split.split:                  ; preds = %do.body.preheader.i.split
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %do.body.preheader.i.split.split
  %buf.addr.1.i = phi i8* [ %buf.addr.1.i.unr, %do.body.preheader.i.split.split ], [ %incdec.ptr187.i.1, %do.body.i ]
  %len.addr.3.i = phi i32 [ %len.addr.3.i.unr, %do.body.preheader.i.split.split ], [ %dec195.i.1, %do.body.i ]
  %c.3.i = phi i32 [ %c.3.i.unr, %do.body.preheader.i.split.split ], [ %xor194.i.1, %do.body.i ]
  %incdec.ptr187.i = getelementptr inbounds i8* %buf.addr.1.i, i64 1
  %66 = load i8* %buf.addr.1.i, align 1, !tbaa !5
  %conv188.i = zext i8 %66 to i32
  %c.3.masked.i = and i32 %c.3.i, 255
  %and190.i = xor i32 %conv188.i, %c.3.masked.i
  %idxprom191.i = zext i32 %and190.i to i64
  %arrayidx192.i = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom191.i
  %67 = load i32* %arrayidx192.i, align 4, !tbaa !28
  %shr193.i = lshr i32 %c.3.i, 8
  %xor194.i = xor i32 %67, %shr193.i
  %dec195.i = add i32 %len.addr.3.i, -1
  %incdec.ptr187.i.1 = getelementptr inbounds i8* %incdec.ptr187.i, i64 1
  %68 = load i8* %incdec.ptr187.i, align 1, !tbaa !5
  %conv188.i.1 = zext i8 %68 to i32
  %c.3.masked.i.1 = and i32 %xor194.i, 255
  %and190.i.1 = xor i32 %conv188.i.1, %c.3.masked.i.1
  %idxprom191.i.1 = zext i32 %and190.i.1 to i64
  %arrayidx192.i.1 = getelementptr inbounds [8 x [256 x i32]]* @crc_table, i64 0, i64 0, i64 %idxprom191.i.1
  %69 = load i32* %arrayidx192.i.1, align 4, !tbaa !28
  %shr193.i.1 = lshr i32 %xor194.i, 8
  %xor194.i.1 = xor i32 %69, %shr193.i.1
  %dec195.i.1 = add i32 %dec195.i, -1
  %tobool196.i.1 = icmp eq i32 %dec195.i.1, 0
  br i1 %tobool196.i.1, label %crc32_little.exit.loopexit.unr-lcssa, label %do.body.i

crc32_little.exit.loopexit.unr-lcssa:             ; preds = %do.body.i
  %xor194.i.lcssa.ph = phi i32 [ %xor194.i.1, %do.body.i ]
  br label %crc32_little.exit.loopexit

crc32_little.exit.loopexit:                       ; preds = %crc32_little.exit.loopexit.unr-lcssa, %do.body.preheader.i.split
  %xor194.i.lcssa = phi i32 [ %xor194.i.lcssa.unr, %do.body.preheader.i.split ], [ %xor194.i.lcssa.ph, %crc32_little.exit.loopexit.unr-lcssa ]
  br label %crc32_little.exit

crc32_little.exit.loopexit15:                     ; preds = %while.body.i
  %xor4.i.lcssa = phi i32 [ %xor4.i, %while.body.i ]
  br label %crc32_little.exit

crc32_little.exit:                                ; preds = %crc32_little.exit.loopexit15, %crc32_little.exit.loopexit, %while.end185.i, %if.then1
  %c.4.i = phi i32 [ %c.2.lcssa.i, %while.end185.i ], [ %neg.i, %if.then1 ], [ %xor194.i.lcssa, %crc32_little.exit.loopexit ], [ %xor4.i.lcssa, %crc32_little.exit.loopexit15 ]
  %neg197.i = xor i32 %c.4.i, -1
  %conv198.i = zext i32 %neg197.i to i64
  br label %return

return:                                           ; preds = %crc32_little.exit, %entry
  %retval.0 = phi i64 [ %conv198.i, %crc32_little.exit ], [ 0, %entry ]
  ret i64 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i64 @crc32_combine(i64 %crc1, i64 %crc2, i64 %len2) #6 {
entry:
  %call = tail call fastcc i64 @crc32_combine_(i64 %crc1, i64 %crc2, i64 %len2)
  ret i64 %call
}

; Function Attrs: nounwind readonly uwtable
define i64 @crc32_combine64(i64 %crc1, i64 %crc2, i64 %len2) #6 {
entry:
  %call = tail call fastcc i64 @crc32_combine_(i64 %crc1, i64 %crc2, i64 %len2)
  ret i64 %call
}

; Function Attrs: nounwind readonly uwtable
define internal fastcc i64 @crc32_combine_(i64 %crc1, i64 %crc2, i64 %len2) #6 {
entry:
  %even = alloca [32 x i64], align 16
  %odd = alloca [32 x i64], align 16
  %0 = bitcast [32 x i64]* %even to i8*
  call void @llvm.lifetime.start(i64 256, i8* %0) #4
  %1 = bitcast [32 x i64]* %odd to i8*
  call void @llvm.lifetime.start(i64 256, i8* %1) #4
  %cmp = icmp slt i64 %len2, 1
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [32 x i64]* %odd, i64 0, i64 0
  store i64 3988292384, i64* %arrayidx, align 16, !tbaa !186
  br label %for.body

for.body:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ 1, %if.end ], [ %indvars.iv.next, %for.body ]
  %row.0124 = phi i64 [ 1, %if.end ], [ %shl, %for.body ]
  %arrayidx2 = getelementptr inbounds [32 x i64]* %odd, i64 0, i64 %indvars.iv
  store i64 %row.0124, i64* %arrayidx2, align 8, !tbaa !186
  %shl = shl i64 %row.0124, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv, 31
  br i1 %exitcond, label %for.body.i.preheader, label %for.body

for.body.i.preheader:                             ; preds = %for.body
  br label %for.body.i

for.body.i:                                       ; preds = %gf2_matrix_times.exit.i, %for.body.i.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %gf2_matrix_times.exit.i ], [ 0, %for.body.i.preheader ]
  %arrayidx.i = getelementptr inbounds [32 x i64]* %odd, i64 0, i64 %indvars.iv.i
  %2 = load i64* %arrayidx.i, align 8, !tbaa !186
  %tobool6.i.i = icmp eq i64 %2, 0
  br i1 %tobool6.i.i, label %gf2_matrix_times.exit.i, label %while.body.i.i.preheader

while.body.i.i.preheader:                         ; preds = %for.body.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.end.i.i, %while.body.i.i.preheader
  %sum.09.i.i = phi i64 [ %sum.1.i.i, %if.end.i.i ], [ 0, %while.body.i.i.preheader ]
  %vec.addr.08.i.i = phi i64 [ %shr.i.i, %if.end.i.i ], [ %2, %while.body.i.i.preheader ]
  %mat.addr.07.i.i = phi i64* [ %incdec.ptr.i.i, %if.end.i.i ], [ %arrayidx, %while.body.i.i.preheader ]
  %and.i.i = and i64 %vec.addr.08.i.i, 1
  %tobool1.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool1.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body.i.i
  %3 = load i64* %mat.addr.07.i.i, align 8, !tbaa !186
  %xor.i.i = xor i64 %3, %sum.09.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i.i
  %sum.1.i.i = phi i64 [ %xor.i.i, %if.then.i.i ], [ %sum.09.i.i, %while.body.i.i ]
  %shr.i.i = lshr i64 %vec.addr.08.i.i, 1
  %incdec.ptr.i.i = getelementptr inbounds i64* %mat.addr.07.i.i, i64 1
  %tobool.i.i = icmp eq i64 %shr.i.i, 0
  br i1 %tobool.i.i, label %gf2_matrix_times.exit.i.loopexit, label %while.body.i.i

gf2_matrix_times.exit.i.loopexit:                 ; preds = %if.end.i.i
  %sum.1.i.i.lcssa = phi i64 [ %sum.1.i.i, %if.end.i.i ]
  br label %gf2_matrix_times.exit.i

gf2_matrix_times.exit.i:                          ; preds = %gf2_matrix_times.exit.i.loopexit, %for.body.i
  %sum.0.lcssa.i.i = phi i64 [ 0, %for.body.i ], [ %sum.1.i.i.lcssa, %gf2_matrix_times.exit.i.loopexit ]
  %arrayidx2.i = getelementptr inbounds [32 x i64]* %even, i64 0, i64 %indvars.iv.i
  store i64 %sum.0.lcssa.i.i, i64* %arrayidx2.i, align 8, !tbaa !186
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.i, 31
  br i1 %exitcond.i, label %for.body.i103.preheader, label %for.body.i

for.body.i103.preheader:                          ; preds = %gf2_matrix_times.exit.i
  %arraydecay = getelementptr inbounds [32 x i64]* %even, i64 0, i64 0
  br label %for.body.i103

for.body.i103:                                    ; preds = %gf2_matrix_times.exit.i121, %for.body.i103.preheader
  %indvars.iv.i100 = phi i64 [ %indvars.iv.next.i119, %gf2_matrix_times.exit.i121 ], [ 0, %for.body.i103.preheader ]
  %arrayidx.i101 = getelementptr inbounds [32 x i64]* %even, i64 0, i64 %indvars.iv.i100
  %4 = load i64* %arrayidx.i101, align 8, !tbaa !186
  %tobool6.i.i102 = icmp eq i64 %4, 0
  br i1 %tobool6.i.i102, label %gf2_matrix_times.exit.i121, label %while.body.i.i109.preheader

while.body.i.i109.preheader:                      ; preds = %for.body.i103
  br label %while.body.i.i109

while.body.i.i109:                                ; preds = %if.end.i.i116, %while.body.i.i109.preheader
  %sum.09.i.i104 = phi i64 [ %sum.1.i.i112, %if.end.i.i116 ], [ 0, %while.body.i.i109.preheader ]
  %vec.addr.08.i.i105 = phi i64 [ %shr.i.i113, %if.end.i.i116 ], [ %4, %while.body.i.i109.preheader ]
  %mat.addr.07.i.i106 = phi i64* [ %incdec.ptr.i.i114, %if.end.i.i116 ], [ %arraydecay, %while.body.i.i109.preheader ]
  %and.i.i107 = and i64 %vec.addr.08.i.i105, 1
  %tobool1.i.i108 = icmp eq i64 %and.i.i107, 0
  br i1 %tobool1.i.i108, label %if.end.i.i116, label %if.then.i.i111

if.then.i.i111:                                   ; preds = %while.body.i.i109
  %5 = load i64* %mat.addr.07.i.i106, align 8, !tbaa !186
  %xor.i.i110 = xor i64 %5, %sum.09.i.i104
  br label %if.end.i.i116

if.end.i.i116:                                    ; preds = %if.then.i.i111, %while.body.i.i109
  %sum.1.i.i112 = phi i64 [ %xor.i.i110, %if.then.i.i111 ], [ %sum.09.i.i104, %while.body.i.i109 ]
  %shr.i.i113 = lshr i64 %vec.addr.08.i.i105, 1
  %incdec.ptr.i.i114 = getelementptr inbounds i64* %mat.addr.07.i.i106, i64 1
  %tobool.i.i115 = icmp eq i64 %shr.i.i113, 0
  br i1 %tobool.i.i115, label %gf2_matrix_times.exit.i121.loopexit, label %while.body.i.i109

gf2_matrix_times.exit.i121.loopexit:              ; preds = %if.end.i.i116
  %sum.1.i.i112.lcssa = phi i64 [ %sum.1.i.i112, %if.end.i.i116 ]
  br label %gf2_matrix_times.exit.i121

gf2_matrix_times.exit.i121:                       ; preds = %gf2_matrix_times.exit.i121.loopexit, %for.body.i103
  %sum.0.lcssa.i.i117 = phi i64 [ 0, %for.body.i103 ], [ %sum.1.i.i112.lcssa, %gf2_matrix_times.exit.i121.loopexit ]
  %arrayidx2.i118 = getelementptr inbounds [32 x i64]* %odd, i64 0, i64 %indvars.iv.i100
  store i64 %sum.0.lcssa.i.i117, i64* %arrayidx2.i118, align 8, !tbaa !186
  %indvars.iv.next.i119 = add nuw nsw i64 %indvars.iv.i100, 1
  %exitcond.i120 = icmp eq i64 %indvars.iv.i100, 31
  br i1 %exitcond.i120, label %do.body.preheader, label %for.body.i103

do.body.preheader:                                ; preds = %gf2_matrix_times.exit.i121
  br label %do.body

do.body:                                          ; preds = %if.end21, %do.body.preheader
  %crc1.addr.0 = phi i64 [ %crc1.addr.2, %if.end21 ], [ %crc1, %do.body.preheader ]
  %len2.addr.0 = phi i64 [ %shr22, %if.end21 ], [ %len2, %do.body.preheader ]
  br label %for.body.i80

for.body.i80:                                     ; preds = %gf2_matrix_times.exit.i98, %do.body
  %indvars.iv.i77 = phi i64 [ 0, %do.body ], [ %indvars.iv.next.i96, %gf2_matrix_times.exit.i98 ]
  %arrayidx.i78 = getelementptr inbounds [32 x i64]* %odd, i64 0, i64 %indvars.iv.i77
  %6 = load i64* %arrayidx.i78, align 8, !tbaa !186
  %tobool6.i.i79 = icmp eq i64 %6, 0
  br i1 %tobool6.i.i79, label %gf2_matrix_times.exit.i98, label %while.body.i.i86.preheader

while.body.i.i86.preheader:                       ; preds = %for.body.i80
  br label %while.body.i.i86

while.body.i.i86:                                 ; preds = %if.end.i.i93, %while.body.i.i86.preheader
  %sum.09.i.i81 = phi i64 [ %sum.1.i.i89, %if.end.i.i93 ], [ 0, %while.body.i.i86.preheader ]
  %vec.addr.08.i.i82 = phi i64 [ %shr.i.i90, %if.end.i.i93 ], [ %6, %while.body.i.i86.preheader ]
  %mat.addr.07.i.i83 = phi i64* [ %incdec.ptr.i.i91, %if.end.i.i93 ], [ %arrayidx, %while.body.i.i86.preheader ]
  %and.i.i84 = and i64 %vec.addr.08.i.i82, 1
  %tobool1.i.i85 = icmp eq i64 %and.i.i84, 0
  br i1 %tobool1.i.i85, label %if.end.i.i93, label %if.then.i.i88

if.then.i.i88:                                    ; preds = %while.body.i.i86
  %7 = load i64* %mat.addr.07.i.i83, align 8, !tbaa !186
  %xor.i.i87 = xor i64 %7, %sum.09.i.i81
  br label %if.end.i.i93

if.end.i.i93:                                     ; preds = %if.then.i.i88, %while.body.i.i86
  %sum.1.i.i89 = phi i64 [ %xor.i.i87, %if.then.i.i88 ], [ %sum.09.i.i81, %while.body.i.i86 ]
  %shr.i.i90 = lshr i64 %vec.addr.08.i.i82, 1
  %incdec.ptr.i.i91 = getelementptr inbounds i64* %mat.addr.07.i.i83, i64 1
  %tobool.i.i92 = icmp eq i64 %shr.i.i90, 0
  br i1 %tobool.i.i92, label %gf2_matrix_times.exit.i98.loopexit, label %while.body.i.i86

gf2_matrix_times.exit.i98.loopexit:               ; preds = %if.end.i.i93
  %sum.1.i.i89.lcssa = phi i64 [ %sum.1.i.i89, %if.end.i.i93 ]
  br label %gf2_matrix_times.exit.i98

gf2_matrix_times.exit.i98:                        ; preds = %gf2_matrix_times.exit.i98.loopexit, %for.body.i80
  %sum.0.lcssa.i.i94 = phi i64 [ 0, %for.body.i80 ], [ %sum.1.i.i89.lcssa, %gf2_matrix_times.exit.i98.loopexit ]
  %arrayidx2.i95 = getelementptr inbounds [32 x i64]* %even, i64 0, i64 %indvars.iv.i77
  store i64 %sum.0.lcssa.i.i94, i64* %arrayidx2.i95, align 8, !tbaa !186
  %indvars.iv.next.i96 = add nuw nsw i64 %indvars.iv.i77, 1
  %exitcond.i97 = icmp eq i64 %indvars.iv.i77, 31
  br i1 %exitcond.i97, label %gf2_matrix_square.exit99, label %for.body.i80

gf2_matrix_square.exit99:                         ; preds = %gf2_matrix_times.exit.i98
  %and = and i64 %len2.addr.0, 1
  %tobool = icmp eq i64 %and, 0
  br i1 %tobool, label %if.end10, label %if.then8

if.then8:                                         ; preds = %gf2_matrix_square.exit99
  %tobool6.i61 = icmp eq i64 %crc1.addr.0, 0
  br i1 %tobool6.i61, label %if.end10, label %while.body.i67.preheader

while.body.i67.preheader:                         ; preds = %if.then8
  br label %while.body.i67

while.body.i67:                                   ; preds = %if.end.i74, %while.body.i67.preheader
  %sum.09.i62 = phi i64 [ %sum.1.i70, %if.end.i74 ], [ 0, %while.body.i67.preheader ]
  %vec.addr.08.i63 = phi i64 [ %shr.i71, %if.end.i74 ], [ %crc1.addr.0, %while.body.i67.preheader ]
  %mat.addr.07.i64 = phi i64* [ %incdec.ptr.i72, %if.end.i74 ], [ %arraydecay, %while.body.i67.preheader ]
  %and.i65 = and i64 %vec.addr.08.i63, 1
  %tobool1.i66 = icmp eq i64 %and.i65, 0
  br i1 %tobool1.i66, label %if.end.i74, label %if.then.i69

if.then.i69:                                      ; preds = %while.body.i67
  %8 = load i64* %mat.addr.07.i64, align 8, !tbaa !186
  %xor.i68 = xor i64 %8, %sum.09.i62
  br label %if.end.i74

if.end.i74:                                       ; preds = %if.then.i69, %while.body.i67
  %sum.1.i70 = phi i64 [ %xor.i68, %if.then.i69 ], [ %sum.09.i62, %while.body.i67 ]
  %shr.i71 = lshr i64 %vec.addr.08.i63, 1
  %incdec.ptr.i72 = getelementptr inbounds i64* %mat.addr.07.i64, i64 1
  %tobool.i73 = icmp eq i64 %shr.i71, 0
  br i1 %tobool.i73, label %if.end10.loopexit, label %while.body.i67

if.end10.loopexit:                                ; preds = %if.end.i74
  %sum.1.i70.lcssa = phi i64 [ %sum.1.i70, %if.end.i74 ]
  br label %if.end10

if.end10:                                         ; preds = %if.end10.loopexit, %if.then8, %gf2_matrix_square.exit99
  %crc1.addr.1 = phi i64 [ %crc1.addr.0, %gf2_matrix_square.exit99 ], [ 0, %if.then8 ], [ %sum.1.i70.lcssa, %if.end10.loopexit ]
  %shr = ashr i64 %len2.addr.0, 1
  %cmp11 = icmp eq i64 %shr, 0
  br i1 %cmp11, label %do.end, label %for.body.i41.preheader

for.body.i41.preheader:                           ; preds = %if.end10
  br label %for.body.i41

for.body.i41:                                     ; preds = %gf2_matrix_times.exit.i59, %for.body.i41.preheader
  %indvars.iv.i38 = phi i64 [ %indvars.iv.next.i57, %gf2_matrix_times.exit.i59 ], [ 0, %for.body.i41.preheader ]
  %arrayidx.i39 = getelementptr inbounds [32 x i64]* %even, i64 0, i64 %indvars.iv.i38
  %9 = load i64* %arrayidx.i39, align 8, !tbaa !186
  %tobool6.i.i40 = icmp eq i64 %9, 0
  br i1 %tobool6.i.i40, label %gf2_matrix_times.exit.i59, label %while.body.i.i47.preheader

while.body.i.i47.preheader:                       ; preds = %for.body.i41
  br label %while.body.i.i47

while.body.i.i47:                                 ; preds = %if.end.i.i54, %while.body.i.i47.preheader
  %sum.09.i.i42 = phi i64 [ %sum.1.i.i50, %if.end.i.i54 ], [ 0, %while.body.i.i47.preheader ]
  %vec.addr.08.i.i43 = phi i64 [ %shr.i.i51, %if.end.i.i54 ], [ %9, %while.body.i.i47.preheader ]
  %mat.addr.07.i.i44 = phi i64* [ %incdec.ptr.i.i52, %if.end.i.i54 ], [ %arraydecay, %while.body.i.i47.preheader ]
  %and.i.i45 = and i64 %vec.addr.08.i.i43, 1
  %tobool1.i.i46 = icmp eq i64 %and.i.i45, 0
  br i1 %tobool1.i.i46, label %if.end.i.i54, label %if.then.i.i49

if.then.i.i49:                                    ; preds = %while.body.i.i47
  %10 = load i64* %mat.addr.07.i.i44, align 8, !tbaa !186
  %xor.i.i48 = xor i64 %10, %sum.09.i.i42
  br label %if.end.i.i54

if.end.i.i54:                                     ; preds = %if.then.i.i49, %while.body.i.i47
  %sum.1.i.i50 = phi i64 [ %xor.i.i48, %if.then.i.i49 ], [ %sum.09.i.i42, %while.body.i.i47 ]
  %shr.i.i51 = lshr i64 %vec.addr.08.i.i43, 1
  %incdec.ptr.i.i52 = getelementptr inbounds i64* %mat.addr.07.i.i44, i64 1
  %tobool.i.i53 = icmp eq i64 %shr.i.i51, 0
  br i1 %tobool.i.i53, label %gf2_matrix_times.exit.i59.loopexit, label %while.body.i.i47

gf2_matrix_times.exit.i59.loopexit:               ; preds = %if.end.i.i54
  %sum.1.i.i50.lcssa = phi i64 [ %sum.1.i.i50, %if.end.i.i54 ]
  br label %gf2_matrix_times.exit.i59

gf2_matrix_times.exit.i59:                        ; preds = %gf2_matrix_times.exit.i59.loopexit, %for.body.i41
  %sum.0.lcssa.i.i55 = phi i64 [ 0, %for.body.i41 ], [ %sum.1.i.i50.lcssa, %gf2_matrix_times.exit.i59.loopexit ]
  %arrayidx2.i56 = getelementptr inbounds [32 x i64]* %odd, i64 0, i64 %indvars.iv.i38
  store i64 %sum.0.lcssa.i.i55, i64* %arrayidx2.i56, align 8, !tbaa !186
  %indvars.iv.next.i57 = add nuw nsw i64 %indvars.iv.i38, 1
  %exitcond.i58 = icmp eq i64 %indvars.iv.i38, 31
  br i1 %exitcond.i58, label %gf2_matrix_square.exit60, label %for.body.i41

gf2_matrix_square.exit60:                         ; preds = %gf2_matrix_times.exit.i59
  %and16 = and i64 %shr, 1
  %tobool17 = icmp eq i64 %and16, 0
  br i1 %tobool17, label %if.end21, label %if.then18

if.then18:                                        ; preds = %gf2_matrix_square.exit60
  %tobool6.i = icmp eq i64 %crc1.addr.1, 0
  br i1 %tobool6.i, label %if.end21, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %if.then18
  br label %while.body.i

while.body.i:                                     ; preds = %if.end.i, %while.body.i.preheader
  %sum.09.i = phi i64 [ %sum.1.i, %if.end.i ], [ 0, %while.body.i.preheader ]
  %vec.addr.08.i = phi i64 [ %shr.i, %if.end.i ], [ %crc1.addr.1, %while.body.i.preheader ]
  %mat.addr.07.i = phi i64* [ %incdec.ptr.i, %if.end.i ], [ %arrayidx, %while.body.i.preheader ]
  %and.i = and i64 %vec.addr.08.i, 1
  %tobool1.i = icmp eq i64 %and.i, 0
  br i1 %tobool1.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i
  %11 = load i64* %mat.addr.07.i, align 8, !tbaa !186
  %xor.i = xor i64 %11, %sum.09.i
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %while.body.i
  %sum.1.i = phi i64 [ %xor.i, %if.then.i ], [ %sum.09.i, %while.body.i ]
  %shr.i = lshr i64 %vec.addr.08.i, 1
  %incdec.ptr.i = getelementptr inbounds i64* %mat.addr.07.i, i64 1
  %tobool.i = icmp eq i64 %shr.i, 0
  br i1 %tobool.i, label %if.end21.loopexit, label %while.body.i

if.end21.loopexit:                                ; preds = %if.end.i
  %sum.1.i.lcssa = phi i64 [ %sum.1.i, %if.end.i ]
  br label %if.end21

if.end21:                                         ; preds = %if.end21.loopexit, %if.then18, %gf2_matrix_square.exit60
  %crc1.addr.2 = phi i64 [ %crc1.addr.1, %gf2_matrix_square.exit60 ], [ 0, %if.then18 ], [ %sum.1.i.lcssa, %if.end21.loopexit ]
  %shr22 = ashr i64 %len2.addr.0, 2
  %cmp23 = icmp eq i64 %shr22, 0
  br i1 %cmp23, label %do.end, label %do.body

do.end:                                           ; preds = %if.end21, %if.end10
  %crc1.addr.3 = phi i64 [ %crc1.addr.1, %if.end10 ], [ %crc1.addr.2, %if.end21 ]
  %xor = xor i64 %crc1.addr.3, %crc2
  br label %cleanup

cleanup:                                          ; preds = %do.end, %entry
  %retval.0 = phi i64 [ %xor, %do.end ], [ %crc1, %entry ]
  call void @llvm.lifetime.end(i64 256, i8* %1) #4
  call void @llvm.lifetime.end(i64 256, i8* %0) #4
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define hidden void @inflate_fast(%struct.z_stream_s* nocapture %strm, i32 %start) #3 {
entry:
  %state1 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 7
  %0 = load %struct.internal_state** %state1, align 8, !tbaa !47
  %1 = bitcast %struct.internal_state* %0 to %struct.inflate_state*
  %next_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 0
  %2 = load i8** %next_in, align 8, !tbaa !37
  %add.ptr = getelementptr inbounds i8* %2, i64 -1
  %avail_in = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 1
  %3 = load i32* %avail_in, align 4, !tbaa !32
  %sub = add i32 %3, -5
  %idx.ext = zext i32 %sub to i64
  %add.ptr.sum = add nsw i64 %idx.ext, -1
  %add.ptr2 = getelementptr inbounds i8* %2, i64 %add.ptr.sum
  %next_out = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 3
  %4 = load i8** %next_out, align 8, !tbaa !34
  %add.ptr3 = getelementptr inbounds i8* %4, i64 -1
  %avail_out = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 4
  %5 = load i32* %avail_out, align 4, !tbaa !33
  %sub4 = sub i32 %start, %5
  %idx.ext5 = zext i32 %sub4 to i64
  %add.ptr3.sum = xor i64 %idx.ext5, -1
  %add.ptr6 = getelementptr inbounds i8* %4, i64 %add.ptr3.sum
  %sub8 = add i32 %5, -257
  %idx.ext9 = zext i32 %sub8 to i64
  %add.ptr3.sum587 = add nsw i64 %idx.ext9, -1
  %add.ptr10 = getelementptr inbounds i8* %4, i64 %add.ptr3.sum587
  %wsize11 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 10
  %6 = load i32* %wsize11, align 4, !tbaa !138
  %whave12 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 11
  %7 = load i32* %whave12, align 4, !tbaa !139
  %wnext13 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 12
  %8 = load i32* %wnext13, align 4, !tbaa !140
  %window14 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 13
  %9 = load i8** %window14, align 8, !tbaa !141
  %hold15 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 14
  %10 = load i64* %hold15, align 8, !tbaa !131
  %bits16 = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 15
  %11 = load i32* %bits16, align 4, !tbaa !132
  %lencode = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 19
  %12 = load %struct.code** %lencode, align 8, !tbaa !135
  %distcode = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 20
  %13 = load %struct.code** %distcode, align 8, !tbaa !134
  %lenbits = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 21
  %14 = load i32* %lenbits, align 4, !tbaa !153
  %shl = shl i32 1, %14
  %sub17 = add i32 %shl, -1
  %distbits = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 22
  %15 = load i32* %distbits, align 4, !tbaa !154
  %shl18 = shl i32 1, %15
  %sub19 = add i32 %shl18, -1
  %conv28 = zext i32 %sub17 to i64
  %conv82 = zext i32 %sub19 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %add.ptr6 to i64
  %sane = getelementptr inbounds %struct.inflate_state* %1, i64 0, i32 31
  %add.ptr138 = getelementptr inbounds i8* %9, i64 -1
  %cmp139 = icmp eq i32 %8, 0
  %add161 = add i32 %8, %6
  %16 = xor i32 %8, -1
  %17 = xor i32 %8, -1
  %18 = xor i32 %8, -1
  %19 = add i32 %8, %6
  br label %do.body

do.body:                                          ; preds = %do.cond303, %entry
  %bits.0 = phi i32 [ %11, %entry ], [ %bits.8, %do.cond303 ]
  %hold.0 = phi i64 [ %10, %entry ], [ %hold.8, %do.cond303 ]
  %out.0 = phi i8* [ %add.ptr3, %entry ], [ %out.7, %do.cond303 ]
  %in.0 = phi i8* [ %add.ptr, %entry ], [ %in.6, %do.cond303 ]
  %cmp = icmp ult i32 %bits.0, 15
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %incdec.ptr = getelementptr inbounds i8* %in.0, i64 1
  %20 = load i8* %incdec.ptr, align 1, !tbaa !5
  %conv = zext i8 %20 to i64
  %sh_prom = zext i32 %bits.0 to i64
  %shl20 = shl i64 %conv, %sh_prom
  %add = add i64 %shl20, %hold.0
  %add21 = add i32 %bits.0, 8
  %incdec.ptr22 = getelementptr inbounds i8* %in.0, i64 2
  %21 = load i8* %incdec.ptr22, align 1, !tbaa !5
  %conv23 = zext i8 %21 to i64
  %sh_prom24 = zext i32 %add21 to i64
  %shl25 = shl i64 %conv23, %sh_prom24
  %add26 = add i64 %add, %shl25
  %add27 = add i32 %bits.0, 16
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  %bits.1 = phi i32 [ %add27, %if.then ], [ %bits.0, %do.body ]
  %hold.1 = phi i64 [ %add26, %if.then ], [ %hold.0, %do.body ]
  %in.1 = phi i8* [ %incdec.ptr22, %if.then ], [ %in.0, %do.body ]
  %and = and i64 %hold.1, %conv28
  %here.sroa.0.0.in615 = getelementptr inbounds %struct.code* %12, i64 %and, i32 0
  %here.sroa.6.0.in616 = getelementptr inbounds %struct.code* %12, i64 %and, i32 1
  %here.sroa.8.0.in617 = getelementptr inbounds %struct.code* %12, i64 %and, i32 2
  %here.sroa.0.0618 = load i8* %here.sroa.0.0.in615, align 2
  %here.sroa.6.0619 = load i8* %here.sroa.6.0.in616, align 1
  %here.sroa.8.0620 = load i16* %here.sroa.8.0.in617, align 2
  %conv30621 = zext i8 %here.sroa.6.0619 to i32
  %sh_prom31622 = zext i8 %here.sroa.6.0619 to i64
  %shr623 = lshr i64 %hold.1, %sh_prom31622
  %sub32624 = sub i32 %bits.1, %conv30621
  %cmp35626 = icmp eq i8 %here.sroa.0.0618, 0
  br i1 %cmp35626, label %if.then37, label %if.else.preheader

if.else.preheader:                                ; preds = %if.end
  br label %if.else

if.then37.loopexit:                               ; preds = %if.then284
  %sub32.lcssa1758 = phi i32 [ %sub32, %if.then284 ]
  %shr.lcssa1757 = phi i64 [ %shr, %if.then284 ]
  %here.sroa.8.0.lcssa1756 = phi i16 [ %here.sroa.8.0, %if.then284 ]
  br label %if.then37

if.then37:                                        ; preds = %if.then37.loopexit, %if.end
  %sub32.lcssa = phi i32 [ %sub32624, %if.end ], [ %sub32.lcssa1758, %if.then37.loopexit ]
  %shr.lcssa = phi i64 [ %shr623, %if.end ], [ %shr.lcssa1757, %if.then37.loopexit ]
  %here.sroa.8.0.lcssa = phi i16 [ %here.sroa.8.0620, %if.end ], [ %here.sroa.8.0.lcssa1756, %if.then37.loopexit ]
  %conv38 = trunc i16 %here.sroa.8.0.lcssa to i8
  %incdec.ptr39 = getelementptr inbounds i8* %out.0, i64 1
  store i8 %conv38, i8* %incdec.ptr39, align 1, !tbaa !5
  br label %do.cond303

if.else:                                          ; preds = %if.then284, %if.else.preheader
  %conv34630.in = phi i8 [ %here.sroa.0.0, %if.then284 ], [ %here.sroa.0.0618, %if.else.preheader ]
  %sub32629 = phi i32 [ %sub32, %if.then284 ], [ %sub32624, %if.else.preheader ]
  %shr628 = phi i64 [ %shr, %if.then284 ], [ %shr623, %if.else.preheader ]
  %here.sroa.8.0627 = phi i16 [ %here.sroa.8.0, %if.then284 ], [ %here.sroa.8.0620, %if.else.preheader ]
  %conv34630 = zext i8 %conv34630.in to i32
  %and40 = and i32 %conv34630, 16
  %tobool = icmp eq i32 %and40, 0
  br i1 %tobool, label %if.else280, label %if.then41

if.then41:                                        ; preds = %if.else
  %conv34630.lcssa = phi i32 [ %conv34630, %if.else ]
  %here.sroa.8.0627.lcssa = phi i16 [ %here.sroa.8.0627, %if.else ]
  %shr628.lcssa = phi i64 [ %shr628, %if.else ]
  %sub32629.lcssa = phi i32 [ %sub32629, %if.else ]
  %conv43 = zext i16 %here.sroa.8.0627.lcssa to i32
  %and44 = and i32 %conv34630.lcssa, 15
  %tobool45 = icmp eq i32 %and44, 0
  br i1 %tobool45, label %if.end65, label %if.then46

if.then46:                                        ; preds = %if.then41
  %cmp47 = icmp ult i32 %sub32629.lcssa, %and44
  br i1 %cmp47, label %if.then49, label %if.end56

if.then49:                                        ; preds = %if.then46
  %incdec.ptr50 = getelementptr inbounds i8* %in.1, i64 1
  %22 = load i8* %incdec.ptr50, align 1, !tbaa !5
  %conv51 = zext i8 %22 to i64
  %sh_prom52 = zext i32 %sub32629.lcssa to i64
  %shl53 = shl i64 %conv51, %sh_prom52
  %add54 = add i64 %shl53, %shr628.lcssa
  %add55 = add i32 %sub32629.lcssa, 8
  br label %if.end56

if.end56:                                         ; preds = %if.then49, %if.then46
  %bits.3 = phi i32 [ %add55, %if.then49 ], [ %sub32629.lcssa, %if.then46 ]
  %hold.3 = phi i64 [ %add54, %if.then49 ], [ %shr628.lcssa, %if.then46 ]
  %in.2 = phi i8* [ %incdec.ptr50, %if.then49 ], [ %in.1, %if.then46 ]
  %conv57 = trunc i64 %hold.3 to i32
  %shl58 = shl i32 1, %and44
  %sub59 = add i32 %shl58, -1
  %and60 = and i32 %conv57, %sub59
  %add61 = add i32 %and60, %conv43
  %sh_prom62 = zext i32 %and44 to i64
  %shr63 = lshr i64 %hold.3, %sh_prom62
  %sub64 = sub i32 %bits.3, %and44
  br label %if.end65

if.end65:                                         ; preds = %if.end56, %if.then41
  %bits.4 = phi i32 [ %sub64, %if.end56 ], [ %sub32629.lcssa, %if.then41 ]
  %hold.4 = phi i64 [ %shr63, %if.end56 ], [ %shr628.lcssa, %if.then41 ]
  %in.3 = phi i8* [ %in.2, %if.end56 ], [ %in.1, %if.then41 ]
  %len.0 = phi i32 [ %add61, %if.end56 ], [ %conv43, %if.then41 ]
  %cmp66 = icmp ult i32 %bits.4, 15
  br i1 %cmp66, label %if.then68, label %if.end81

if.then68:                                        ; preds = %if.end65
  %incdec.ptr69 = getelementptr inbounds i8* %in.3, i64 1
  %23 = load i8* %incdec.ptr69, align 1, !tbaa !5
  %conv70 = zext i8 %23 to i64
  %sh_prom71 = zext i32 %bits.4 to i64
  %shl72 = shl i64 %conv70, %sh_prom71
  %add73 = add i64 %shl72, %hold.4
  %add74 = add i32 %bits.4, 8
  %incdec.ptr75 = getelementptr inbounds i8* %in.3, i64 2
  %24 = load i8* %incdec.ptr75, align 1, !tbaa !5
  %conv76 = zext i8 %24 to i64
  %sh_prom77 = zext i32 %add74 to i64
  %shl78 = shl i64 %conv76, %sh_prom77
  %add79 = add i64 %add73, %shl78
  %add80 = add i32 %bits.4, 16
  br label %if.end81

if.end81:                                         ; preds = %if.then68, %if.end65
  %bits.5 = phi i32 [ %add80, %if.then68 ], [ %bits.4, %if.end65 ]
  %hold.5 = phi i64 [ %add79, %if.then68 ], [ %hold.4, %if.end65 ]
  %in.4 = phi i8* [ %incdec.ptr75, %if.then68 ], [ %in.3, %if.end65 ]
  %and83 = and i64 %hold.5, %conv82
  %here.sroa.0.1.in633 = getelementptr inbounds %struct.code* %13, i64 %and83, i32 0
  %here.sroa.6.1.in634 = getelementptr inbounds %struct.code* %13, i64 %and83, i32 1
  %here.sroa.8.1.in635 = getelementptr inbounds %struct.code* %13, i64 %and83, i32 2
  %here.sroa.0.1636 = load i8* %here.sroa.0.1.in633, align 2
  %here.sroa.6.1637 = load i8* %here.sroa.6.1.in634, align 1
  %here.sroa.8.1638 = load i16* %here.sroa.8.1.in635, align 2
  %conv86639 = zext i8 %here.sroa.6.1637 to i32
  %sh_prom87640 = zext i8 %here.sroa.6.1637 to i64
  %shr88641 = lshr i64 %hold.5, %sh_prom87640
  %sub89642 = sub i32 %bits.5, %conv86639
  %conv91643 = zext i8 %here.sroa.0.1636 to i32
  %and92644 = and i32 %conv91643, 16
  %tobool93645 = icmp eq i32 %and92644, 0
  br i1 %tobool93645, label %if.else263.preheader, label %if.then94

if.else263.preheader:                             ; preds = %if.end81
  br label %if.else263

if.then94.loopexit:                               ; preds = %if.then267
  %conv91.lcssa1764 = phi i32 [ %conv91, %if.then267 ]
  %sub89.lcssa1763 = phi i32 [ %sub89, %if.then267 ]
  %shr88.lcssa1762 = phi i64 [ %shr88, %if.then267 ]
  %here.sroa.8.1.lcssa1761 = phi i16 [ %here.sroa.8.1, %if.then267 ]
  br label %if.then94

if.then94:                                        ; preds = %if.then94.loopexit, %if.end81
  %conv91.lcssa = phi i32 [ %conv91643, %if.end81 ], [ %conv91.lcssa1764, %if.then94.loopexit ]
  %sub89.lcssa = phi i32 [ %sub89642, %if.end81 ], [ %sub89.lcssa1763, %if.then94.loopexit ]
  %shr88.lcssa = phi i64 [ %shr88641, %if.end81 ], [ %shr88.lcssa1762, %if.then94.loopexit ]
  %here.sroa.8.1.lcssa = phi i16 [ %here.sroa.8.1638, %if.end81 ], [ %here.sroa.8.1.lcssa1761, %if.then94.loopexit ]
  %conv96 = zext i16 %here.sroa.8.1.lcssa to i32
  %and97 = and i32 %conv91.lcssa, 15
  %cmp98 = icmp ult i32 %sub89.lcssa, %and97
  br i1 %cmp98, label %if.then100, label %if.end117

if.then100:                                       ; preds = %if.then94
  %incdec.ptr101 = getelementptr inbounds i8* %in.4, i64 1
  %25 = load i8* %incdec.ptr101, align 1, !tbaa !5
  %conv102 = zext i8 %25 to i64
  %sh_prom103 = zext i32 %sub89.lcssa to i64
  %shl104 = shl i64 %conv102, %sh_prom103
  %add105 = add i64 %shl104, %shr88.lcssa
  %add106 = add i32 %sub89.lcssa, 8
  %cmp107 = icmp ult i32 %add106, %and97
  br i1 %cmp107, label %if.then109, label %if.end117

if.then109:                                       ; preds = %if.then100
  %incdec.ptr110 = getelementptr inbounds i8* %in.4, i64 2
  %26 = load i8* %incdec.ptr110, align 1, !tbaa !5
  %conv111 = zext i8 %26 to i64
  %sh_prom112 = zext i32 %add106 to i64
  %shl113 = shl i64 %conv111, %sh_prom112
  %add114 = add i64 %shl113, %add105
  %add115 = add i32 %sub89.lcssa, 16
  br label %if.end117

if.end117:                                        ; preds = %if.then109, %if.then100, %if.then94
  %bits.7 = phi i32 [ %add115, %if.then109 ], [ %add106, %if.then100 ], [ %sub89.lcssa, %if.then94 ]
  %hold.7 = phi i64 [ %add114, %if.then109 ], [ %add105, %if.then100 ], [ %shr88.lcssa, %if.then94 ]
  %in.5 = phi i8* [ %incdec.ptr110, %if.then109 ], [ %incdec.ptr101, %if.then100 ], [ %in.4, %if.then94 ]
  %conv118 = trunc i64 %hold.7 to i32
  %shl119 = shl i32 1, %and97
  %sub120 = add i32 %shl119, -1
  %and121 = and i32 %conv118, %sub120
  %add122 = add i32 %and121, %conv96
  %sh_prom123 = zext i32 %and97 to i64
  %shr124 = lshr i64 %hold.7, %sh_prom123
  %sub125 = sub i32 %bits.7, %and97
  %sub.ptr.lhs.cast = ptrtoint i8* %out.0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv126 = trunc i64 %sub.ptr.sub to i32
  %cmp127 = icmp ugt i32 %add122, %conv126
  br i1 %cmp127, label %if.then129, label %if.else235

if.then129:                                       ; preds = %if.end117
  %sub130 = sub i32 %add122, %conv126
  %cmp131 = icmp ugt i32 %sub130, %7
  br i1 %cmp131, label %if.then133, label %if.end137

if.then133:                                       ; preds = %if.then129
  %27 = load i32* %sane, align 4, !tbaa !136
  %tobool134 = icmp eq i32 %27, 0
  br i1 %tobool134, label %if.end137, label %if.then135

if.then135:                                       ; preds = %if.then133
  %sub125.lcssa = phi i32 [ %sub125, %if.then133 ]
  %shr124.lcssa = phi i64 [ %shr124, %if.then133 ]
  %in.5.lcssa = phi i8* [ %in.5, %if.then133 ]
  %out.0.lcssa1765 = phi i8* [ %out.0, %if.then133 ]
  %msg = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 6
  store i8* getelementptr inbounds ([30 x i8]* @.str115, i64 0, i64 0), i8** %msg, align 8, !tbaa !38
  %mode = bitcast %struct.internal_state* %0 to i32*
  store i32 29, i32* %mode, align 4, !tbaa !126
  br label %do.end308

if.end137:                                        ; preds = %if.then133, %if.then129
  br i1 %cmp139, label %if.then141, label %if.else157

if.then141:                                       ; preds = %if.end137
  %sub142 = sub i32 %6, %sub130
  %idx.ext143 = zext i32 %sub142 to i64
  %add.ptr138.sum591 = add nsw i64 %idx.ext143, -1
  %add.ptr144 = getelementptr inbounds i8* %9, i64 %add.ptr138.sum591
  %cmp145 = icmp ugt i32 %len.0, %sub130
  br i1 %cmp145, label %if.then147, label %while.cond.preheader

if.then147:                                       ; preds = %if.then141
  %28 = add i32 %and121, -1
  %29 = add i32 %28, %conv96
  %30 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %31 = trunc i64 %30 to i32
  %32 = sub i32 %29, %31
  %33 = zext i32 %32 to i64
  %scevgep696.sum = add nuw nsw i64 %33, 1
  %scevgep697 = getelementptr i8* %out.0, i64 %scevgep696.sum
  %34 = add i32 %and121, -1
  %35 = zext i16 %here.sroa.8.1.lcssa to i32
  %36 = add i32 %34, %35
  %37 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %38 = trunc i64 %37 to i32
  %39 = sub i32 %36, %38
  %40 = zext i32 %39 to i64
  %41 = add nuw nsw i64 %40, 1
  %end.idx = add nuw nsw i64 %40, 1
  %n.vec = and i64 %41, 8589934560
  %cmp.zero = icmp eq i64 %n.vec, 0
  %42 = add i32 %and121, -1
  %43 = zext i16 %here.sroa.8.1.lcssa to i32
  %44 = add i32 %42, %43
  %45 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %46 = trunc i64 %45 to i32
  %47 = sub i32 %44, %46
  %48 = zext i32 %47 to i64
  %49 = add i32 %6, %46
  %50 = sub i32 %49, %and121
  %51 = sub i32 %50, %43
  %52 = zext i32 %51 to i64
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %if.then147
  %scevgep = getelementptr i8* %out.0, i64 1
  %53 = add nuw nsw i64 %52, %48
  %scevgep733 = getelementptr i8* %9, i64 %53
  %bound0 = icmp ule i8* %scevgep, %scevgep733
  %scevgep732 = getelementptr i8* %9, i64 %52
  %scevgep730.sum = add nuw nsw i64 %48, 1
  %scevgep731 = getelementptr i8* %out.0, i64 %scevgep730.sum
  %bound1 = icmp ule i8* %scevgep732, %scevgep731
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %out.0, i64 %n.vec
  %cast.crd = trunc i64 %n.vec to i32
  %rev.ind.end = sub i32 %sub130, %cast.crd
  %add.ptr144.sum = add nsw i64 %add.ptr138.sum591, %n.vec
  %ptr.ind.end738 = getelementptr i8* %9, i64 %add.ptr144.sum
  br i1 %memcheck.conflict, label %middle.block, label %vector.body.preheader

vector.body.preheader:                            ; preds = %vector.memcheck
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.body.preheader
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.body.preheader ]
  %next.gep836.sum = add i64 %idx.ext143, %index
  %54 = getelementptr inbounds i8* %9, i64 %next.gep836.sum
  %55 = bitcast i8* %54 to <16 x i8>*
  %wide.load = load <16 x i8>* %55, align 1, !tbaa !5
  %.sum1729 = add i64 %next.gep836.sum, 16
  %56 = getelementptr i8* %9, i64 %.sum1729
  %57 = bitcast i8* %56 to <16 x i8>*
  %wide.load931 = load <16 x i8>* %57, align 1, !tbaa !5
  %next.gep.sum1730 = or i64 %index, 1
  %58 = getelementptr inbounds i8* %out.0, i64 %next.gep.sum1730
  %59 = bitcast i8* %58 to <16 x i8>*
  store <16 x i8> %wide.load, <16 x i8>* %59, align 1, !tbaa !5
  %.sum17461747 = or i64 %index, 17
  %60 = getelementptr i8* %out.0, i64 %.sum17461747
  %61 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %wide.load931, <16 x i8>* %61, align 1, !tbaa !5
  %index.next = add i64 %index, 32
  %62 = icmp eq i64 %index.next, %n.vec
  br i1 %62, label %middle.block.loopexit, label %vector.body, !llvm.loop !187

middle.block.loopexit:                            ; preds = %vector.body
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %vector.memcheck, %if.then147
  %resume.val = phi i8* [ %out.0, %if.then147 ], [ %out.0, %vector.memcheck ], [ %ptr.ind.end, %middle.block.loopexit ]
  %resume.val734 = phi i32 [ %sub130, %if.then147 ], [ %sub130, %vector.memcheck ], [ %rev.ind.end, %middle.block.loopexit ]
  %resume.val736 = phi i8* [ %add.ptr144, %if.then147 ], [ %add.ptr144, %vector.memcheck ], [ %ptr.ind.end738, %middle.block.loopexit ]
  %new.indc.resume.val = phi i64 [ 0, %if.then147 ], [ 0, %vector.memcheck ], [ %n.vec, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %end.idx, %new.indc.resume.val
  br i1 %cmp.n, label %do.end, label %do.body149.preheader

do.body149.preheader:                             ; preds = %middle.block
  %xtraiter1843 = and i32 %resume.val734, 3
  %lcmp.mod1844 = icmp ne i32 %xtraiter1843, 0
  %lcmp.overflow1845 = icmp eq i32 %resume.val734, 0
  %lcmp.or1846 = or i1 %lcmp.overflow1845, %lcmp.mod1844
  br i1 %lcmp.or1846, label %unr.cmp1862, label %do.body149.preheader.split

unr.cmp1862:                                      ; preds = %do.body149.preheader
  %un.tmp1863 = icmp eq i32 %xtraiter1843, 1
  br i1 %un.tmp1863, label %do.body149.unr1854, label %unr.cmp1852

unr.cmp1852:                                      ; preds = %unr.cmp1862
  %un.tmp1853 = icmp eq i32 %xtraiter1843, 2
  br i1 %un.tmp1853, label %do.body149.unr1847, label %do.body149.unr

do.body149.unr:                                   ; preds = %unr.cmp1852
  %incdec.ptr150.unr = getelementptr inbounds i8* %resume.val736, i64 1
  %63 = load i8* %incdec.ptr150.unr, align 1, !tbaa !5
  %incdec.ptr151.unr = getelementptr inbounds i8* %resume.val, i64 1
  store i8 %63, i8* %incdec.ptr151.unr, align 1, !tbaa !5
  %dec.unr = add i32 %resume.val734, -1
  %tobool152.unr = icmp eq i32 %dec.unr, 0
  br label %do.body149.unr1847

do.body149.unr1847:                               ; preds = %do.body149.unr, %unr.cmp1852
  %out.1.unr = phi i8* [ %incdec.ptr151.unr, %do.body149.unr ], [ %resume.val, %unr.cmp1852 ]
  %op.0.unr = phi i32 [ %dec.unr, %do.body149.unr ], [ %resume.val734, %unr.cmp1852 ]
  %from.0.unr = phi i8* [ %incdec.ptr150.unr, %do.body149.unr ], [ %resume.val736, %unr.cmp1852 ]
  %incdec.ptr150.unr1848 = getelementptr inbounds i8* %from.0.unr, i64 1
  %64 = load i8* %incdec.ptr150.unr1848, align 1, !tbaa !5
  %incdec.ptr151.unr1849 = getelementptr inbounds i8* %out.1.unr, i64 1
  store i8 %64, i8* %incdec.ptr151.unr1849, align 1, !tbaa !5
  %dec.unr1850 = add i32 %op.0.unr, -1
  %tobool152.unr1851 = icmp eq i32 %dec.unr1850, 0
  br label %do.body149.unr1854

do.body149.unr1854:                               ; preds = %do.body149.unr1847, %unr.cmp1862
  %out.1.unr1855 = phi i8* [ %incdec.ptr151.unr1849, %do.body149.unr1847 ], [ %resume.val, %unr.cmp1862 ]
  %op.0.unr1856 = phi i32 [ %dec.unr1850, %do.body149.unr1847 ], [ %resume.val734, %unr.cmp1862 ]
  %from.0.unr1857 = phi i8* [ %incdec.ptr150.unr1848, %do.body149.unr1847 ], [ %resume.val736, %unr.cmp1862 ]
  %incdec.ptr150.unr1858 = getelementptr inbounds i8* %from.0.unr1857, i64 1
  %65 = load i8* %incdec.ptr150.unr1858, align 1, !tbaa !5
  %incdec.ptr151.unr1859 = getelementptr inbounds i8* %out.1.unr1855, i64 1
  store i8 %65, i8* %incdec.ptr151.unr1859, align 1, !tbaa !5
  %dec.unr1860 = add i32 %op.0.unr1856, -1
  %tobool152.unr1861 = icmp eq i32 %dec.unr1860, 0
  br label %do.body149.preheader.split

do.body149.preheader.split:                       ; preds = %do.body149.unr1854, %do.body149.preheader
  %out.1.unr1864 = phi i8* [ %resume.val, %do.body149.preheader ], [ %incdec.ptr151.unr1859, %do.body149.unr1854 ]
  %op.0.unr1865 = phi i32 [ %resume.val734, %do.body149.preheader ], [ %dec.unr1860, %do.body149.unr1854 ]
  %from.0.unr1866 = phi i8* [ %resume.val736, %do.body149.preheader ], [ %incdec.ptr150.unr1858, %do.body149.unr1854 ]
  %66 = icmp ult i32 %resume.val734, 4
  br i1 %66, label %do.end.loopexit, label %do.body149.preheader.split.split

do.body149.preheader.split.split:                 ; preds = %do.body149.preheader.split
  br label %do.body149

do.body149:                                       ; preds = %do.body149, %do.body149.preheader.split.split
  %out.1 = phi i8* [ %out.1.unr1864, %do.body149.preheader.split.split ], [ %incdec.ptr151.3, %do.body149 ]
  %op.0 = phi i32 [ %op.0.unr1865, %do.body149.preheader.split.split ], [ %dec.3, %do.body149 ]
  %from.0 = phi i8* [ %from.0.unr1866, %do.body149.preheader.split.split ], [ %incdec.ptr150.3, %do.body149 ]
  %incdec.ptr150 = getelementptr inbounds i8* %from.0, i64 1
  %67 = load i8* %incdec.ptr150, align 1, !tbaa !5
  %incdec.ptr151 = getelementptr inbounds i8* %out.1, i64 1
  store i8 %67, i8* %incdec.ptr151, align 1, !tbaa !5
  %dec = add i32 %op.0, -1
  %incdec.ptr150.1 = getelementptr inbounds i8* %incdec.ptr150, i64 1
  %68 = load i8* %incdec.ptr150.1, align 1, !tbaa !5
  %incdec.ptr151.1 = getelementptr inbounds i8* %incdec.ptr151, i64 1
  store i8 %68, i8* %incdec.ptr151.1, align 1, !tbaa !5
  %dec.1 = add i32 %dec, -1
  %incdec.ptr150.2 = getelementptr inbounds i8* %incdec.ptr150.1, i64 1
  %69 = load i8* %incdec.ptr150.2, align 1, !tbaa !5
  %incdec.ptr151.2 = getelementptr inbounds i8* %incdec.ptr151.1, i64 1
  store i8 %69, i8* %incdec.ptr151.2, align 1, !tbaa !5
  %dec.2 = add i32 %dec.1, -1
  %incdec.ptr150.3 = getelementptr inbounds i8* %incdec.ptr150.2, i64 1
  %70 = load i8* %incdec.ptr150.3, align 1, !tbaa !5
  %incdec.ptr151.3 = getelementptr inbounds i8* %incdec.ptr151.2, i64 1
  store i8 %70, i8* %incdec.ptr151.3, align 1, !tbaa !5
  %dec.3 = add i32 %dec.2, -1
  %tobool152.3 = icmp eq i32 %dec.3, 0
  br i1 %tobool152.3, label %do.end.loopexit.unr-lcssa, label %do.body149, !llvm.loop !188

do.end.loopexit.unr-lcssa:                        ; preds = %do.body149
  br label %do.end.loopexit

do.end.loopexit:                                  ; preds = %do.end.loopexit.unr-lcssa, %do.body149.preheader.split
  br label %do.end

do.end:                                           ; preds = %do.end.loopexit, %middle.block
  %sub148 = sub i32 %len.0, %sub130
  %idx.ext153 = zext i32 %add122 to i64
  %incdec.ptr151.sum = sub i64 1, %idx.ext153
  %scevgep698.sum = add nsw i64 %33, %incdec.ptr151.sum
  %add.ptr155 = getelementptr inbounds i8* %out.0, i64 %scevgep698.sum
  br label %while.cond.preheader

if.else157:                                       ; preds = %if.end137
  %cmp158 = icmp ult i32 %8, %sub130
  br i1 %cmp158, label %if.then160, label %if.else194

if.then160:                                       ; preds = %if.else157
  %sub162 = sub i32 %add161, %sub130
  %idx.ext163 = zext i32 %sub162 to i64
  %add.ptr138.sum590 = add nsw i64 %idx.ext163, -1
  %add.ptr164 = getelementptr inbounds i8* %9, i64 %add.ptr138.sum590
  %sub165 = sub i32 %sub130, %8
  %cmp166 = icmp ugt i32 %len.0, %sub165
  br i1 %cmp166, label %if.then168, label %while.cond.preheader

if.then168:                                       ; preds = %if.then160
  %71 = add i32 %and121, %16
  %72 = add i32 %71, %conv96
  %73 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %74 = trunc i64 %73 to i32
  %75 = sub i32 %72, %74
  %76 = zext i32 %75 to i64
  %scevgep692.sum = add nuw nsw i64 %76, 1
  %scevgep693 = getelementptr i8* %out.0, i64 %scevgep692.sum
  %77 = add i32 %and121, %17
  %78 = zext i16 %here.sroa.8.1.lcssa to i32
  %79 = add i32 %77, %78
  %80 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %81 = trunc i64 %80 to i32
  %82 = sub i32 %79, %81
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %83, 1
  %end.idx939 = add nuw nsw i64 %83, 1
  %n.vec941 = and i64 %84, 8589934560
  %cmp.zero943 = icmp eq i64 %n.vec941, 0
  %85 = add i32 %and121, %18
  %86 = zext i16 %here.sroa.8.1.lcssa to i32
  %87 = add i32 %85, %86
  %88 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %89 = trunc i64 %88 to i32
  %90 = sub i32 %87, %89
  %91 = zext i32 %90 to i64
  %92 = add i32 %19, %89
  %93 = sub i32 %92, %and121
  %94 = sub i32 %93, %86
  %95 = zext i32 %94 to i64
  br i1 %cmp.zero943, label %middle.block936, label %vector.memcheck954

vector.memcheck954:                               ; preds = %if.then168
  %scevgep945 = getelementptr i8* %out.0, i64 1
  %96 = add nuw nsw i64 %95, %91
  %scevgep949 = getelementptr i8* %9, i64 %96
  %bound0950 = icmp ule i8* %scevgep945, %scevgep949
  %scevgep948 = getelementptr i8* %9, i64 %95
  %scevgep946.sum = add nuw nsw i64 %91, 1
  %scevgep947 = getelementptr i8* %out.0, i64 %scevgep946.sum
  %bound1951 = icmp ule i8* %scevgep948, %scevgep947
  %memcheck.conflict953 = and i1 %bound0950, %bound1951
  %ptr.ind.end957 = getelementptr i8* %out.0, i64 %n.vec941
  %cast.crd960 = trunc i64 %n.vec941 to i32
  %rev.ind.end961 = sub i32 %sub165, %cast.crd960
  %add.ptr164.sum = add nsw i64 %add.ptr138.sum590, %n.vec941
  %ptr.ind.end964 = getelementptr i8* %9, i64 %add.ptr164.sum
  br i1 %memcheck.conflict953, label %middle.block936, label %vector.body935.preheader

vector.body935.preheader:                         ; preds = %vector.memcheck954
  br label %vector.body935

vector.body935:                                   ; preds = %vector.body935, %vector.body935.preheader
  %index938 = phi i64 [ %index.next967, %vector.body935 ], [ 0, %vector.body935.preheader ]
  %next.gep1074.sum = add i64 %idx.ext163, %index938
  %97 = getelementptr inbounds i8* %9, i64 %next.gep1074.sum
  %98 = bitcast i8* %97 to <16 x i8>*
  %wide.load1169 = load <16 x i8>* %98, align 1, !tbaa !5
  %.sum1616 = add i64 %next.gep1074.sum, 16
  %99 = getelementptr i8* %9, i64 %.sum1616
  %100 = bitcast i8* %99 to <16 x i8>*
  %wide.load1170 = load <16 x i8>* %100, align 1, !tbaa !5
  %next.gep970.sum1617 = or i64 %index938, 1
  %101 = getelementptr inbounds i8* %out.0, i64 %next.gep970.sum1617
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %wide.load1169, <16 x i8>* %102, align 1, !tbaa !5
  %.sum16331634 = or i64 %index938, 17
  %103 = getelementptr i8* %out.0, i64 %.sum16331634
  %104 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %wide.load1170, <16 x i8>* %104, align 1, !tbaa !5
  %index.next967 = add i64 %index938, 32
  %105 = icmp eq i64 %index.next967, %n.vec941
  br i1 %105, label %middle.block936.loopexit, label %vector.body935, !llvm.loop !189

middle.block936.loopexit:                         ; preds = %vector.body935
  br label %middle.block936

middle.block936:                                  ; preds = %middle.block936.loopexit, %vector.memcheck954, %if.then168
  %resume.val955 = phi i8* [ %out.0, %if.then168 ], [ %out.0, %vector.memcheck954 ], [ %ptr.ind.end957, %middle.block936.loopexit ]
  %resume.val958 = phi i32 [ %sub165, %if.then168 ], [ %sub165, %vector.memcheck954 ], [ %rev.ind.end961, %middle.block936.loopexit ]
  %resume.val962 = phi i8* [ %add.ptr164, %if.then168 ], [ %add.ptr164, %vector.memcheck954 ], [ %ptr.ind.end964, %middle.block936.loopexit ]
  %new.indc.resume.val965 = phi i64 [ 0, %if.then168 ], [ 0, %vector.memcheck954 ], [ %n.vec941, %middle.block936.loopexit ]
  %cmp.n966 = icmp eq i64 %end.idx939, %new.indc.resume.val965
  br i1 %cmp.n966, label %do.end176, label %do.body170.preheader

do.body170.preheader:                             ; preds = %middle.block936
  %xtraiter1795 = and i32 %resume.val958, 3
  %lcmp.mod1796 = icmp ne i32 %xtraiter1795, 0
  %lcmp.overflow1797 = icmp eq i32 %resume.val958, 0
  %lcmp.or1798 = or i1 %lcmp.overflow1797, %lcmp.mod1796
  br i1 %lcmp.or1798, label %unr.cmp1814, label %do.body170.preheader.split

unr.cmp1814:                                      ; preds = %do.body170.preheader
  %un.tmp1815 = icmp eq i32 %xtraiter1795, 1
  br i1 %un.tmp1815, label %do.body170.unr1806, label %unr.cmp1804

unr.cmp1804:                                      ; preds = %unr.cmp1814
  %un.tmp1805 = icmp eq i32 %xtraiter1795, 2
  br i1 %un.tmp1805, label %do.body170.unr1799, label %do.body170.unr

do.body170.unr:                                   ; preds = %unr.cmp1804
  %incdec.ptr171.unr = getelementptr inbounds i8* %resume.val962, i64 1
  %106 = load i8* %incdec.ptr171.unr, align 1, !tbaa !5
  %incdec.ptr172.unr = getelementptr inbounds i8* %resume.val955, i64 1
  store i8 %106, i8* %incdec.ptr172.unr, align 1, !tbaa !5
  %dec174.unr = add i32 %resume.val958, -1
  %tobool175.unr = icmp eq i32 %dec174.unr, 0
  br label %do.body170.unr1799

do.body170.unr1799:                               ; preds = %do.body170.unr, %unr.cmp1804
  %out.2.unr = phi i8* [ %incdec.ptr172.unr, %do.body170.unr ], [ %resume.val955, %unr.cmp1804 ]
  %op.1.unr = phi i32 [ %dec174.unr, %do.body170.unr ], [ %resume.val958, %unr.cmp1804 ]
  %from.1.unr = phi i8* [ %incdec.ptr171.unr, %do.body170.unr ], [ %resume.val962, %unr.cmp1804 ]
  %incdec.ptr171.unr1800 = getelementptr inbounds i8* %from.1.unr, i64 1
  %107 = load i8* %incdec.ptr171.unr1800, align 1, !tbaa !5
  %incdec.ptr172.unr1801 = getelementptr inbounds i8* %out.2.unr, i64 1
  store i8 %107, i8* %incdec.ptr172.unr1801, align 1, !tbaa !5
  %dec174.unr1802 = add i32 %op.1.unr, -1
  %tobool175.unr1803 = icmp eq i32 %dec174.unr1802, 0
  br label %do.body170.unr1806

do.body170.unr1806:                               ; preds = %do.body170.unr1799, %unr.cmp1814
  %out.2.unr1807 = phi i8* [ %incdec.ptr172.unr1801, %do.body170.unr1799 ], [ %resume.val955, %unr.cmp1814 ]
  %op.1.unr1808 = phi i32 [ %dec174.unr1802, %do.body170.unr1799 ], [ %resume.val958, %unr.cmp1814 ]
  %from.1.unr1809 = phi i8* [ %incdec.ptr171.unr1800, %do.body170.unr1799 ], [ %resume.val962, %unr.cmp1814 ]
  %incdec.ptr171.unr1810 = getelementptr inbounds i8* %from.1.unr1809, i64 1
  %108 = load i8* %incdec.ptr171.unr1810, align 1, !tbaa !5
  %incdec.ptr172.unr1811 = getelementptr inbounds i8* %out.2.unr1807, i64 1
  store i8 %108, i8* %incdec.ptr172.unr1811, align 1, !tbaa !5
  %dec174.unr1812 = add i32 %op.1.unr1808, -1
  %tobool175.unr1813 = icmp eq i32 %dec174.unr1812, 0
  br label %do.body170.preheader.split

do.body170.preheader.split:                       ; preds = %do.body170.unr1806, %do.body170.preheader
  %out.2.unr1816 = phi i8* [ %resume.val955, %do.body170.preheader ], [ %incdec.ptr172.unr1811, %do.body170.unr1806 ]
  %op.1.unr1817 = phi i32 [ %resume.val958, %do.body170.preheader ], [ %dec174.unr1812, %do.body170.unr1806 ]
  %from.1.unr1818 = phi i8* [ %resume.val962, %do.body170.preheader ], [ %incdec.ptr171.unr1810, %do.body170.unr1806 ]
  %109 = icmp ult i32 %resume.val958, 4
  br i1 %109, label %do.end176.loopexit, label %do.body170.preheader.split.split

do.body170.preheader.split.split:                 ; preds = %do.body170.preheader.split
  br label %do.body170

do.body170:                                       ; preds = %do.body170, %do.body170.preheader.split.split
  %out.2 = phi i8* [ %out.2.unr1816, %do.body170.preheader.split.split ], [ %incdec.ptr172.3, %do.body170 ]
  %op.1 = phi i32 [ %op.1.unr1817, %do.body170.preheader.split.split ], [ %dec174.3, %do.body170 ]
  %from.1 = phi i8* [ %from.1.unr1818, %do.body170.preheader.split.split ], [ %incdec.ptr171.3, %do.body170 ]
  %incdec.ptr171 = getelementptr inbounds i8* %from.1, i64 1
  %110 = load i8* %incdec.ptr171, align 1, !tbaa !5
  %incdec.ptr172 = getelementptr inbounds i8* %out.2, i64 1
  store i8 %110, i8* %incdec.ptr172, align 1, !tbaa !5
  %dec174 = add i32 %op.1, -1
  %incdec.ptr171.1 = getelementptr inbounds i8* %incdec.ptr171, i64 1
  %111 = load i8* %incdec.ptr171.1, align 1, !tbaa !5
  %incdec.ptr172.1 = getelementptr inbounds i8* %incdec.ptr172, i64 1
  store i8 %111, i8* %incdec.ptr172.1, align 1, !tbaa !5
  %dec174.1 = add i32 %dec174, -1
  %incdec.ptr171.2 = getelementptr inbounds i8* %incdec.ptr171.1, i64 1
  %112 = load i8* %incdec.ptr171.2, align 1, !tbaa !5
  %incdec.ptr172.2 = getelementptr inbounds i8* %incdec.ptr172.1, i64 1
  store i8 %112, i8* %incdec.ptr172.2, align 1, !tbaa !5
  %dec174.2 = add i32 %dec174.1, -1
  %incdec.ptr171.3 = getelementptr inbounds i8* %incdec.ptr171.2, i64 1
  %113 = load i8* %incdec.ptr171.3, align 1, !tbaa !5
  %incdec.ptr172.3 = getelementptr inbounds i8* %incdec.ptr172.2, i64 1
  store i8 %113, i8* %incdec.ptr172.3, align 1, !tbaa !5
  %dec174.3 = add i32 %dec174.2, -1
  %tobool175.3 = icmp eq i32 %dec174.3, 0
  br i1 %tobool175.3, label %do.end176.loopexit.unr-lcssa, label %do.body170, !llvm.loop !190

do.end176.loopexit.unr-lcssa:                     ; preds = %do.body170
  br label %do.end176.loopexit

do.end176.loopexit:                               ; preds = %do.end176.loopexit.unr-lcssa, %do.body170.preheader.split
  br label %do.end176

do.end176:                                        ; preds = %do.end176.loopexit, %middle.block936
  %sub169 = sub i32 %len.0, %sub165
  %cmp178 = icmp ugt i32 %sub169, %8
  br i1 %cmp178, label %if.then180, label %while.cond.preheader

if.then180:                                       ; preds = %do.end176
  %scevgep694 = getelementptr i8* %out.0, i64 %76
  %xtraiter1819 = and i32 %8, 3
  %lcmp.mod1820 = icmp ne i32 %xtraiter1819, 0
  %lcmp.overflow1821 = icmp eq i32 %8, 0
  %lcmp.or1822 = or i1 %lcmp.overflow1821, %lcmp.mod1820
  br i1 %lcmp.or1822, label %unr.cmp1838, label %if.then180.split

unr.cmp1838:                                      ; preds = %if.then180
  %un.tmp1839 = icmp eq i32 %xtraiter1819, 1
  br i1 %un.tmp1839, label %do.body182.unr1830, label %unr.cmp1828

unr.cmp1828:                                      ; preds = %unr.cmp1838
  %un.tmp1829 = icmp eq i32 %xtraiter1819, 2
  br i1 %un.tmp1829, label %do.body182.unr1823, label %do.body182.unr

do.body182.unr:                                   ; preds = %unr.cmp1828
  %incdec.ptr183.unr = getelementptr inbounds i8* %add.ptr138, i64 1
  %114 = load i8* %incdec.ptr183.unr, align 1, !tbaa !5
  %incdec.ptr184.unr = getelementptr inbounds i8* %scevgep694, i64 2
  store i8 %114, i8* %incdec.ptr184.unr, align 1, !tbaa !5
  %dec186.unr = add i32 %8, -1
  %tobool187.unr = icmp eq i32 %dec186.unr, 0
  br label %do.body182.unr1823

do.body182.unr1823:                               ; preds = %do.body182.unr, %unr.cmp1828
  %115 = phi i8* [ %scevgep694, %unr.cmp1828 ], [ %scevgep693, %do.body182.unr ]
  %out.3.unr = phi i8* [ %scevgep693, %unr.cmp1828 ], [ %incdec.ptr184.unr, %do.body182.unr ]
  %op.2.unr = phi i32 [ %8, %unr.cmp1828 ], [ %dec186.unr, %do.body182.unr ]
  %from.2.unr = phi i8* [ %add.ptr138, %unr.cmp1828 ], [ %incdec.ptr183.unr, %do.body182.unr ]
  %incdec.ptr183.unr1824 = getelementptr inbounds i8* %from.2.unr, i64 1
  %116 = load i8* %incdec.ptr183.unr1824, align 1, !tbaa !5
  %incdec.ptr184.unr1825 = getelementptr inbounds i8* %115, i64 2
  store i8 %116, i8* %incdec.ptr184.unr1825, align 1, !tbaa !5
  %dec186.unr1826 = add i32 %op.2.unr, -1
  %tobool187.unr1827 = icmp eq i32 %dec186.unr1826, 0
  br label %do.body182.unr1830

do.body182.unr1830:                               ; preds = %do.body182.unr1823, %unr.cmp1838
  %117 = phi i8* [ %scevgep694, %unr.cmp1838 ], [ %out.3.unr, %do.body182.unr1823 ]
  %out.3.unr1831 = phi i8* [ %scevgep693, %unr.cmp1838 ], [ %incdec.ptr184.unr1825, %do.body182.unr1823 ]
  %op.2.unr1832 = phi i32 [ %8, %unr.cmp1838 ], [ %dec186.unr1826, %do.body182.unr1823 ]
  %from.2.unr1833 = phi i8* [ %add.ptr138, %unr.cmp1838 ], [ %incdec.ptr183.unr1824, %do.body182.unr1823 ]
  %incdec.ptr183.unr1834 = getelementptr inbounds i8* %from.2.unr1833, i64 1
  %118 = load i8* %incdec.ptr183.unr1834, align 1, !tbaa !5
  %incdec.ptr184.unr1835 = getelementptr inbounds i8* %117, i64 2
  store i8 %118, i8* %incdec.ptr184.unr1835, align 1, !tbaa !5
  %dec186.unr1836 = add i32 %op.2.unr1832, -1
  %tobool187.unr1837 = icmp eq i32 %dec186.unr1836, 0
  br label %if.then180.split

if.then180.split:                                 ; preds = %do.body182.unr1830, %if.then180
  %incdec.ptr184.lcssa.unr = phi i8* [ null, %if.then180 ], [ %incdec.ptr184.unr1835, %do.body182.unr1830 ]
  %.lcssa.unr = phi i8* [ null, %if.then180 ], [ %117, %do.body182.unr1830 ]
  %.unr = phi i8* [ %scevgep694, %if.then180 ], [ %out.3.unr1831, %do.body182.unr1830 ]
  %out.3.unr1840 = phi i8* [ %scevgep693, %if.then180 ], [ %incdec.ptr184.unr1835, %do.body182.unr1830 ]
  %op.2.unr1841 = phi i32 [ %8, %if.then180 ], [ %dec186.unr1836, %do.body182.unr1830 ]
  %from.2.unr1842 = phi i8* [ %add.ptr138, %if.then180 ], [ %incdec.ptr183.unr1834, %do.body182.unr1830 ]
  %119 = icmp ult i32 %8, 4
  br i1 %119, label %do.end188, label %if.then180.split.split

if.then180.split.split:                           ; preds = %if.then180.split
  br label %do.body182

do.body182:                                       ; preds = %do.body182, %if.then180.split.split
  %120 = phi i8* [ %.unr, %if.then180.split.split ], [ %incdec.ptr184.2, %do.body182 ]
  %out.3 = phi i8* [ %out.3.unr1840, %if.then180.split.split ], [ %incdec.ptr184.3, %do.body182 ]
  %op.2 = phi i32 [ %op.2.unr1841, %if.then180.split.split ], [ %dec186.3, %do.body182 ]
  %from.2 = phi i8* [ %from.2.unr1842, %if.then180.split.split ], [ %incdec.ptr183.3, %do.body182 ]
  %incdec.ptr183 = getelementptr inbounds i8* %from.2, i64 1
  %121 = load i8* %incdec.ptr183, align 1, !tbaa !5
  %incdec.ptr184 = getelementptr inbounds i8* %120, i64 2
  store i8 %121, i8* %incdec.ptr184, align 1, !tbaa !5
  %dec186 = add i32 %op.2, -1
  %incdec.ptr183.1 = getelementptr inbounds i8* %incdec.ptr183, i64 1
  %122 = load i8* %incdec.ptr183.1, align 1, !tbaa !5
  %incdec.ptr184.1 = getelementptr inbounds i8* %out.3, i64 2
  store i8 %122, i8* %incdec.ptr184.1, align 1, !tbaa !5
  %dec186.1 = add i32 %dec186, -1
  %incdec.ptr183.2 = getelementptr inbounds i8* %incdec.ptr183.1, i64 1
  %123 = load i8* %incdec.ptr183.2, align 1, !tbaa !5
  %incdec.ptr184.2 = getelementptr inbounds i8* %incdec.ptr184, i64 2
  store i8 %123, i8* %incdec.ptr184.2, align 1, !tbaa !5
  %dec186.2 = add i32 %dec186.1, -1
  %incdec.ptr183.3 = getelementptr inbounds i8* %incdec.ptr183.2, i64 1
  %124 = load i8* %incdec.ptr183.3, align 1, !tbaa !5
  %incdec.ptr184.3 = getelementptr inbounds i8* %incdec.ptr184.1, i64 2
  store i8 %124, i8* %incdec.ptr184.3, align 1, !tbaa !5
  %dec186.3 = add i32 %dec186.2, -1
  %tobool187.3 = icmp eq i32 %dec186.3, 0
  br i1 %tobool187.3, label %do.end188.unr-lcssa, label %do.body182

do.end188.unr-lcssa:                              ; preds = %do.body182
  %incdec.ptr184.lcssa.ph = phi i8* [ %incdec.ptr184.3, %do.body182 ]
  %.lcssa.ph = phi i8* [ %incdec.ptr184.1, %do.body182 ]
  br label %do.end188

do.end188:                                        ; preds = %do.end188.unr-lcssa, %if.then180.split
  %incdec.ptr184.lcssa = phi i8* [ %incdec.ptr184.lcssa.unr, %if.then180.split ], [ %incdec.ptr184.lcssa.ph, %do.end188.unr-lcssa ]
  %.lcssa = phi i8* [ %.lcssa.unr, %if.then180.split ], [ %.lcssa.ph, %do.end188.unr-lcssa ]
  %sub181 = sub i32 %sub169, %8
  %idx.ext189 = zext i32 %add122 to i64
  %incdec.ptr184.sum = sub i64 2, %idx.ext189
  %add.ptr191 = getelementptr inbounds i8* %.lcssa, i64 %incdec.ptr184.sum
  br label %while.cond.preheader

if.else194:                                       ; preds = %if.else157
  %sub195 = sub i32 %8, %sub130
  %idx.ext196 = zext i32 %sub195 to i64
  %add.ptr138.sum = add nsw i64 %idx.ext196, -1
  %add.ptr197 = getelementptr inbounds i8* %9, i64 %add.ptr138.sum
  %cmp198 = icmp ugt i32 %len.0, %sub130
  br i1 %cmp198, label %if.then200, label %while.cond.preheader

if.then200:                                       ; preds = %if.else194
  %125 = add i32 %and121, -1
  %126 = add i32 %125, %conv96
  %127 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %128 = trunc i64 %127 to i32
  %129 = sub i32 %126, %128
  %130 = zext i32 %129 to i64
  %scevgep688.sum = add nuw nsw i64 %130, 1
  %scevgep689 = getelementptr i8* %out.0, i64 %scevgep688.sum
  %131 = add i32 %and121, -1
  %132 = zext i16 %here.sroa.8.1.lcssa to i32
  %133 = add i32 %131, %132
  %134 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %135 = trunc i64 %134 to i32
  %136 = sub i32 %133, %135
  %137 = zext i32 %136 to i64
  %138 = add nuw nsw i64 %137, 1
  %end.idx1178 = add nuw nsw i64 %137, 1
  %n.vec1180 = and i64 %138, 8589934560
  %cmp.zero1182 = icmp eq i64 %n.vec1180, 0
  %139 = add i32 %and121, -1
  %140 = zext i16 %here.sroa.8.1.lcssa to i32
  %141 = add i32 %139, %140
  %142 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %143 = trunc i64 %142 to i32
  %144 = sub i32 %141, %143
  %145 = zext i32 %144 to i64
  %146 = add i32 %8, %143
  %147 = sub i32 %146, %and121
  %148 = sub i32 %147, %140
  %149 = zext i32 %148 to i64
  br i1 %cmp.zero1182, label %middle.block1175, label %vector.memcheck1193

vector.memcheck1193:                              ; preds = %if.then200
  %scevgep1184 = getelementptr i8* %out.0, i64 1
  %150 = add nuw nsw i64 %149, %145
  %scevgep1188 = getelementptr i8* %9, i64 %150
  %bound01189 = icmp ule i8* %scevgep1184, %scevgep1188
  %scevgep1187 = getelementptr i8* %9, i64 %149
  %scevgep1185.sum = add nuw nsw i64 %145, 1
  %scevgep1186 = getelementptr i8* %out.0, i64 %scevgep1185.sum
  %bound11190 = icmp ule i8* %scevgep1187, %scevgep1186
  %memcheck.conflict1192 = and i1 %bound01189, %bound11190
  %ptr.ind.end1196 = getelementptr i8* %out.0, i64 %n.vec1180
  %cast.crd1199 = trunc i64 %n.vec1180 to i32
  %rev.ind.end1200 = sub i32 %sub130, %cast.crd1199
  %add.ptr197.sum = add nsw i64 %add.ptr138.sum, %n.vec1180
  %ptr.ind.end1203 = getelementptr i8* %9, i64 %add.ptr197.sum
  br i1 %memcheck.conflict1192, label %middle.block1175, label %vector.body1174.preheader

vector.body1174.preheader:                        ; preds = %vector.memcheck1193
  br label %vector.body1174

vector.body1174:                                  ; preds = %vector.body1174, %vector.body1174.preheader
  %index1177 = phi i64 [ %index.next1206, %vector.body1174 ], [ 0, %vector.body1174.preheader ]
  %next.gep1313.sum = add i64 %idx.ext196, %index1177
  %151 = getelementptr inbounds i8* %9, i64 %next.gep1313.sum
  %152 = bitcast i8* %151 to <16 x i8>*
  %wide.load1408 = load <16 x i8>* %152, align 1, !tbaa !5
  %.sum = add i64 %next.gep1313.sum, 16
  %153 = getelementptr i8* %9, i64 %.sum
  %154 = bitcast i8* %153 to <16 x i8>*
  %wide.load1409 = load <16 x i8>* %154, align 1, !tbaa !5
  %next.gep1209.sum1504 = or i64 %index1177, 1
  %155 = getelementptr inbounds i8* %out.0, i64 %next.gep1209.sum1504
  %156 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %wide.load1408, <16 x i8>* %156, align 1, !tbaa !5
  %.sum15201521 = or i64 %index1177, 17
  %157 = getelementptr i8* %out.0, i64 %.sum15201521
  %158 = bitcast i8* %157 to <16 x i8>*
  store <16 x i8> %wide.load1409, <16 x i8>* %158, align 1, !tbaa !5
  %index.next1206 = add i64 %index1177, 32
  %159 = icmp eq i64 %index.next1206, %n.vec1180
  br i1 %159, label %middle.block1175.loopexit, label %vector.body1174, !llvm.loop !191

middle.block1175.loopexit:                        ; preds = %vector.body1174
  br label %middle.block1175

middle.block1175:                                 ; preds = %middle.block1175.loopexit, %vector.memcheck1193, %if.then200
  %resume.val1194 = phi i8* [ %out.0, %if.then200 ], [ %out.0, %vector.memcheck1193 ], [ %ptr.ind.end1196, %middle.block1175.loopexit ]
  %resume.val1197 = phi i32 [ %sub130, %if.then200 ], [ %sub130, %vector.memcheck1193 ], [ %rev.ind.end1200, %middle.block1175.loopexit ]
  %resume.val1201 = phi i8* [ %add.ptr197, %if.then200 ], [ %add.ptr197, %vector.memcheck1193 ], [ %ptr.ind.end1203, %middle.block1175.loopexit ]
  %new.indc.resume.val1204 = phi i64 [ 0, %if.then200 ], [ 0, %vector.memcheck1193 ], [ %n.vec1180, %middle.block1175.loopexit ]
  %cmp.n1205 = icmp eq i64 %end.idx1178, %new.indc.resume.val1204
  br i1 %cmp.n1205, label %do.end208, label %do.body202.preheader

do.body202.preheader:                             ; preds = %middle.block1175
  %xtraiter1773 = and i32 %resume.val1197, 3
  %lcmp.mod1774 = icmp ne i32 %xtraiter1773, 0
  %lcmp.overflow1775 = icmp eq i32 %resume.val1197, 0
  %lcmp.or1776 = or i1 %lcmp.overflow1775, %lcmp.mod1774
  br i1 %lcmp.or1776, label %unr.cmp1790, label %do.body202.preheader.split

unr.cmp1790:                                      ; preds = %do.body202.preheader
  %un.tmp1791 = icmp eq i32 %xtraiter1773, 1
  br i1 %un.tmp1791, label %do.body202.unr1782, label %unr.cmp

unr.cmp:                                          ; preds = %unr.cmp1790
  %un.tmp = icmp eq i32 %xtraiter1773, 2
  br i1 %un.tmp, label %do.body202.unr1777, label %do.body202.unr

do.body202.unr:                                   ; preds = %unr.cmp
  %incdec.ptr203.unr = getelementptr inbounds i8* %resume.val1201, i64 1
  %160 = load i8* %incdec.ptr203.unr, align 1, !tbaa !5
  %incdec.ptr204.unr = getelementptr inbounds i8* %resume.val1194, i64 1
  store i8 %160, i8* %incdec.ptr204.unr, align 1, !tbaa !5
  %dec206.unr = add i32 %resume.val1197, -1
  %tobool207.unr = icmp eq i32 %dec206.unr, 0
  br label %do.body202.unr1777

do.body202.unr1777:                               ; preds = %do.body202.unr, %unr.cmp
  %out.4.unr = phi i8* [ %incdec.ptr204.unr, %do.body202.unr ], [ %resume.val1194, %unr.cmp ]
  %op.3.unr = phi i32 [ %dec206.unr, %do.body202.unr ], [ %resume.val1197, %unr.cmp ]
  %from.3.unr = phi i8* [ %incdec.ptr203.unr, %do.body202.unr ], [ %resume.val1201, %unr.cmp ]
  %incdec.ptr203.unr1778 = getelementptr inbounds i8* %from.3.unr, i64 1
  %161 = load i8* %incdec.ptr203.unr1778, align 1, !tbaa !5
  %incdec.ptr204.unr1779 = getelementptr inbounds i8* %out.4.unr, i64 1
  store i8 %161, i8* %incdec.ptr204.unr1779, align 1, !tbaa !5
  %dec206.unr1780 = add i32 %op.3.unr, -1
  %tobool207.unr1781 = icmp eq i32 %dec206.unr1780, 0
  br label %do.body202.unr1782

do.body202.unr1782:                               ; preds = %do.body202.unr1777, %unr.cmp1790
  %out.4.unr1783 = phi i8* [ %incdec.ptr204.unr1779, %do.body202.unr1777 ], [ %resume.val1194, %unr.cmp1790 ]
  %op.3.unr1784 = phi i32 [ %dec206.unr1780, %do.body202.unr1777 ], [ %resume.val1197, %unr.cmp1790 ]
  %from.3.unr1785 = phi i8* [ %incdec.ptr203.unr1778, %do.body202.unr1777 ], [ %resume.val1201, %unr.cmp1790 ]
  %incdec.ptr203.unr1786 = getelementptr inbounds i8* %from.3.unr1785, i64 1
  %162 = load i8* %incdec.ptr203.unr1786, align 1, !tbaa !5
  %incdec.ptr204.unr1787 = getelementptr inbounds i8* %out.4.unr1783, i64 1
  store i8 %162, i8* %incdec.ptr204.unr1787, align 1, !tbaa !5
  %dec206.unr1788 = add i32 %op.3.unr1784, -1
  %tobool207.unr1789 = icmp eq i32 %dec206.unr1788, 0
  br label %do.body202.preheader.split

do.body202.preheader.split:                       ; preds = %do.body202.unr1782, %do.body202.preheader
  %out.4.unr1792 = phi i8* [ %resume.val1194, %do.body202.preheader ], [ %incdec.ptr204.unr1787, %do.body202.unr1782 ]
  %op.3.unr1793 = phi i32 [ %resume.val1197, %do.body202.preheader ], [ %dec206.unr1788, %do.body202.unr1782 ]
  %from.3.unr1794 = phi i8* [ %resume.val1201, %do.body202.preheader ], [ %incdec.ptr203.unr1786, %do.body202.unr1782 ]
  %163 = icmp ult i32 %resume.val1197, 4
  br i1 %163, label %do.end208.loopexit, label %do.body202.preheader.split.split

do.body202.preheader.split.split:                 ; preds = %do.body202.preheader.split
  br label %do.body202

do.body202:                                       ; preds = %do.body202, %do.body202.preheader.split.split
  %out.4 = phi i8* [ %out.4.unr1792, %do.body202.preheader.split.split ], [ %incdec.ptr204.3, %do.body202 ]
  %op.3 = phi i32 [ %op.3.unr1793, %do.body202.preheader.split.split ], [ %dec206.3, %do.body202 ]
  %from.3 = phi i8* [ %from.3.unr1794, %do.body202.preheader.split.split ], [ %incdec.ptr203.3, %do.body202 ]
  %incdec.ptr203 = getelementptr inbounds i8* %from.3, i64 1
  %164 = load i8* %incdec.ptr203, align 1, !tbaa !5
  %incdec.ptr204 = getelementptr inbounds i8* %out.4, i64 1
  store i8 %164, i8* %incdec.ptr204, align 1, !tbaa !5
  %dec206 = add i32 %op.3, -1
  %incdec.ptr203.1 = getelementptr inbounds i8* %incdec.ptr203, i64 1
  %165 = load i8* %incdec.ptr203.1, align 1, !tbaa !5
  %incdec.ptr204.1 = getelementptr inbounds i8* %incdec.ptr204, i64 1
  store i8 %165, i8* %incdec.ptr204.1, align 1, !tbaa !5
  %dec206.1 = add i32 %dec206, -1
  %incdec.ptr203.2 = getelementptr inbounds i8* %incdec.ptr203.1, i64 1
  %166 = load i8* %incdec.ptr203.2, align 1, !tbaa !5
  %incdec.ptr204.2 = getelementptr inbounds i8* %incdec.ptr204.1, i64 1
  store i8 %166, i8* %incdec.ptr204.2, align 1, !tbaa !5
  %dec206.2 = add i32 %dec206.1, -1
  %incdec.ptr203.3 = getelementptr inbounds i8* %incdec.ptr203.2, i64 1
  %167 = load i8* %incdec.ptr203.3, align 1, !tbaa !5
  %incdec.ptr204.3 = getelementptr inbounds i8* %incdec.ptr204.2, i64 1
  store i8 %167, i8* %incdec.ptr204.3, align 1, !tbaa !5
  %dec206.3 = add i32 %dec206.2, -1
  %tobool207.3 = icmp eq i32 %dec206.3, 0
  br i1 %tobool207.3, label %do.end208.loopexit.unr-lcssa, label %do.body202, !llvm.loop !192

do.end208.loopexit.unr-lcssa:                     ; preds = %do.body202
  br label %do.end208.loopexit

do.end208.loopexit:                               ; preds = %do.end208.loopexit.unr-lcssa, %do.body202.preheader.split
  br label %do.end208

do.end208:                                        ; preds = %do.end208.loopexit, %middle.block1175
  %sub201 = sub i32 %len.0, %sub130
  %idx.ext209 = zext i32 %add122 to i64
  %incdec.ptr204.sum = sub i64 1, %idx.ext209
  %scevgep690.sum = add nsw i64 %130, %incdec.ptr204.sum
  %add.ptr211 = getelementptr inbounds i8* %out.0, i64 %scevgep690.sum
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %do.end208, %if.else194, %do.end188, %do.end176, %if.then160, %do.end, %if.then141
  %out.5.ph = phi i8* [ %out.0, %if.else194 ], [ %scevgep689, %do.end208 ], [ %out.0, %if.then160 ], [ %scevgep693, %do.end176 ], [ %incdec.ptr184.lcssa, %do.end188 ], [ %out.0, %if.then141 ], [ %scevgep697, %do.end ]
  %len.1.ph = phi i32 [ %len.0, %if.else194 ], [ %sub201, %do.end208 ], [ %len.0, %if.then160 ], [ %sub169, %do.end176 ], [ %sub181, %do.end188 ], [ %len.0, %if.then141 ], [ %sub148, %do.end ]
  %from.4.ph = phi i8* [ %add.ptr197, %if.else194 ], [ %add.ptr211, %do.end208 ], [ %add.ptr164, %if.then160 ], [ %add.ptr138, %do.end176 ], [ %add.ptr191, %do.end188 ], [ %add.ptr144, %if.then141 ], [ %add.ptr155, %do.end ]
  %cmp215654 = icmp ugt i32 %len.1.ph, 2
  br i1 %cmp215654, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %168 = add i32 %len.1.ph, -3
  %169 = udiv i32 %168, 3
  %170 = mul i32 %169, -3
  %171 = add i32 %168, %170
  %172 = zext i32 %169 to i64
  %173 = mul i64 %172, 3
  %174 = add i32 %169, 1
  %xtraiter1867 = and i32 %174, 1
  %lcmp.mod1868 = icmp ne i32 %xtraiter1867, 0
  %lcmp.overflow1869 = icmp eq i32 %174, 0
  %lcmp.or1870 = or i1 %lcmp.overflow1869, %lcmp.mod1868
  br i1 %lcmp.or1870, label %while.body.unr, label %while.body.lr.ph.split

while.body.unr:                                   ; preds = %while.body.lr.ph
  %incdec.ptr217.unr = getelementptr inbounds i8* %from.4.ph, i64 1
  %175 = load i8* %incdec.ptr217.unr, align 1, !tbaa !5
  %incdec.ptr218.unr = getelementptr inbounds i8* %out.5.ph, i64 1
  store i8 %175, i8* %incdec.ptr218.unr, align 1, !tbaa !5
  %incdec.ptr219.unr = getelementptr inbounds i8* %from.4.ph, i64 2
  %176 = load i8* %incdec.ptr219.unr, align 1, !tbaa !5
  %incdec.ptr220.unr = getelementptr inbounds i8* %out.5.ph, i64 2
  store i8 %176, i8* %incdec.ptr220.unr, align 1, !tbaa !5
  %incdec.ptr221.unr = getelementptr inbounds i8* %from.4.ph, i64 3
  %177 = load i8* %incdec.ptr221.unr, align 1, !tbaa !5
  %incdec.ptr222.unr = getelementptr inbounds i8* %out.5.ph, i64 3
  store i8 %177, i8* %incdec.ptr222.unr, align 1, !tbaa !5
  %sub223.unr = add i32 %len.1.ph, -3
  %cmp215.unr = icmp ugt i32 %sub223.unr, 2
  br label %while.body.lr.ph.split

while.body.lr.ph.split:                           ; preds = %while.body.unr, %while.body.lr.ph
  %from.4657.unr = phi i8* [ %from.4.ph, %while.body.lr.ph ], [ %incdec.ptr221.unr, %while.body.unr ]
  %len.1656.unr = phi i32 [ %len.1.ph, %while.body.lr.ph ], [ %sub223.unr, %while.body.unr ]
  %out.5655.unr = phi i8* [ %out.5.ph, %while.body.lr.ph ], [ %incdec.ptr222.unr, %while.body.unr ]
  %178 = icmp ult i32 %174, 2
  br i1 %178, label %while.cond.while.end_crit_edge, label %while.body.lr.ph.split.split

while.body.lr.ph.split.split:                     ; preds = %while.body.lr.ph.split
  br label %while.body

while.body:                                       ; preds = %while.body, %while.body.lr.ph.split.split
  %from.4657 = phi i8* [ %from.4657.unr, %while.body.lr.ph.split.split ], [ %incdec.ptr221.1, %while.body ]
  %len.1656 = phi i32 [ %len.1656.unr, %while.body.lr.ph.split.split ], [ %sub223.1, %while.body ]
  %out.5655 = phi i8* [ %out.5655.unr, %while.body.lr.ph.split.split ], [ %incdec.ptr222.1, %while.body ]
  %incdec.ptr217 = getelementptr inbounds i8* %from.4657, i64 1
  %179 = load i8* %incdec.ptr217, align 1, !tbaa !5
  %incdec.ptr218 = getelementptr inbounds i8* %out.5655, i64 1
  store i8 %179, i8* %incdec.ptr218, align 1, !tbaa !5
  %incdec.ptr219 = getelementptr inbounds i8* %from.4657, i64 2
  %180 = load i8* %incdec.ptr219, align 1, !tbaa !5
  %incdec.ptr220 = getelementptr inbounds i8* %out.5655, i64 2
  store i8 %180, i8* %incdec.ptr220, align 1, !tbaa !5
  %incdec.ptr221 = getelementptr inbounds i8* %from.4657, i64 3
  %181 = load i8* %incdec.ptr221, align 1, !tbaa !5
  %incdec.ptr222 = getelementptr inbounds i8* %out.5655, i64 3
  store i8 %181, i8* %incdec.ptr222, align 1, !tbaa !5
  %sub223 = add i32 %len.1656, -3
  %incdec.ptr217.1 = getelementptr inbounds i8* %incdec.ptr221, i64 1
  %182 = load i8* %incdec.ptr217.1, align 1, !tbaa !5
  %incdec.ptr218.1 = getelementptr inbounds i8* %incdec.ptr222, i64 1
  store i8 %182, i8* %incdec.ptr218.1, align 1, !tbaa !5
  %incdec.ptr219.1 = getelementptr inbounds i8* %incdec.ptr221, i64 2
  %183 = load i8* %incdec.ptr219.1, align 1, !tbaa !5
  %incdec.ptr220.1 = getelementptr inbounds i8* %incdec.ptr222, i64 2
  store i8 %183, i8* %incdec.ptr220.1, align 1, !tbaa !5
  %incdec.ptr221.1 = getelementptr inbounds i8* %incdec.ptr221, i64 3
  %184 = load i8* %incdec.ptr221.1, align 1, !tbaa !5
  %incdec.ptr222.1 = getelementptr inbounds i8* %incdec.ptr222, i64 3
  store i8 %184, i8* %incdec.ptr222.1, align 1, !tbaa !5
  %sub223.1 = add i32 %sub223, -3
  %cmp215.1 = icmp ugt i32 %sub223.1, 2
  br i1 %cmp215.1, label %while.body, label %while.cond.while.end_crit_edge.unr-lcssa

while.cond.while.end_crit_edge.unr-lcssa:         ; preds = %while.body
  br label %while.cond.while.end_crit_edge

while.cond.while.end_crit_edge:                   ; preds = %while.cond.while.end_crit_edge.unr-lcssa, %while.body.lr.ph.split
  %scevgep700.sum = add nuw nsw i64 %173, 3
  %scevgep701 = getelementptr i8* %out.5.ph, i64 %scevgep700.sum
  %scevgep702.sum = add nuw nsw i64 %173, 3
  %scevgep703 = getelementptr i8* %from.4.ph, i64 %scevgep702.sum
  br label %while.end

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %while.cond.preheader
  %from.4.lcssa = phi i8* [ %scevgep703, %while.cond.while.end_crit_edge ], [ %from.4.ph, %while.cond.preheader ]
  %len.1.lcssa = phi i32 [ %171, %while.cond.while.end_crit_edge ], [ %len.1.ph, %while.cond.preheader ]
  %out.5.lcssa = phi i8* [ %scevgep701, %while.cond.while.end_crit_edge ], [ %out.5.ph, %while.cond.preheader ]
  %tobool224 = icmp eq i32 %len.1.lcssa, 0
  br i1 %tobool224, label %do.cond303, label %if.then225

if.then225:                                       ; preds = %while.end
  %incdec.ptr226 = getelementptr inbounds i8* %from.4.lcssa, i64 1
  %185 = load i8* %incdec.ptr226, align 1, !tbaa !5
  %incdec.ptr227 = getelementptr inbounds i8* %out.5.lcssa, i64 1
  store i8 %185, i8* %incdec.ptr227, align 1, !tbaa !5
  %cmp228 = icmp ugt i32 %len.1.lcssa, 1
  br i1 %cmp228, label %if.then230, label %do.cond303

if.then230:                                       ; preds = %if.then225
  %incdec.ptr231 = getelementptr inbounds i8* %from.4.lcssa, i64 2
  %186 = load i8* %incdec.ptr231, align 1, !tbaa !5
  %incdec.ptr232 = getelementptr inbounds i8* %out.5.lcssa, i64 2
  store i8 %186, i8* %incdec.ptr232, align 1, !tbaa !5
  br label %do.cond303

if.else235:                                       ; preds = %if.end117
  %idx.ext236 = zext i32 %add122 to i64
  %idx.neg237 = sub i64 0, %idx.ext236
  %add.ptr238 = getelementptr inbounds i8* %out.0, i64 %idx.neg237
  %187 = add i32 %len.0, -3
  %188 = sub i32 2, %len.0
  %189 = icmp ugt i32 %188, -3
  %umax = select i1 %189, i32 %188, i32 -3
  %190 = add i32 %len.0, %umax
  %191 = udiv i32 %190, 3
  %192 = mul i32 %191, -3
  %193 = add i32 %187, %192
  %194 = zext i32 %191 to i64
  %195 = mul i64 %194, 3
  %196 = sub i64 %195, %idx.ext236
  %197 = sub i32 2, %len.0
  %198 = icmp ugt i32 %197, -3
  %umax1772 = select i1 %198, i32 %197, i32 -3
  %199 = add i32 %len.0, %umax1772
  %200 = udiv i32 %199, 3
  %201 = add i32 %200, 1
  %xtraiter = and i32 %201, 1
  %lcmp.mod = icmp ne i32 %xtraiter, 0
  %lcmp.overflow = icmp eq i32 %201, 0
  %lcmp.or = or i1 %lcmp.overflow, %lcmp.mod
  br i1 %lcmp.or, label %do.body239.unr, label %if.else235.split

do.body239.unr:                                   ; preds = %if.else235
  %incdec.ptr240.unr = getelementptr inbounds i8* %add.ptr238, i64 1
  %202 = load i8* %incdec.ptr240.unr, align 1, !tbaa !5
  %incdec.ptr241.unr = getelementptr inbounds i8* %out.0, i64 1
  store i8 %202, i8* %incdec.ptr241.unr, align 1, !tbaa !5
  %incdec.ptr242.unr = getelementptr inbounds i8* %add.ptr238, i64 2
  %203 = load i8* %incdec.ptr242.unr, align 1, !tbaa !5
  %incdec.ptr243.unr = getelementptr inbounds i8* %out.0, i64 2
  store i8 %203, i8* %incdec.ptr243.unr, align 1, !tbaa !5
  %incdec.ptr244.unr = getelementptr inbounds i8* %add.ptr238, i64 3
  %204 = load i8* %incdec.ptr244.unr, align 1, !tbaa !5
  %incdec.ptr245.unr = getelementptr inbounds i8* %out.0, i64 3
  store i8 %204, i8* %incdec.ptr245.unr, align 1, !tbaa !5
  %sub246.unr = add i32 %len.0, -3
  %cmp248.unr = icmp ugt i32 %sub246.unr, 2
  br label %if.else235.split

if.else235.split:                                 ; preds = %do.body239.unr, %if.else235
  %out.6.unr = phi i8* [ %out.0, %if.else235 ], [ %incdec.ptr245.unr, %do.body239.unr ]
  %len.2.unr = phi i32 [ %len.0, %if.else235 ], [ %sub246.unr, %do.body239.unr ]
  %from.5.unr = phi i8* [ %add.ptr238, %if.else235 ], [ %incdec.ptr244.unr, %do.body239.unr ]
  %205 = icmp ult i32 %201, 2
  br i1 %205, label %do.end250, label %if.else235.split.split

if.else235.split.split:                           ; preds = %if.else235.split
  br label %do.body239

do.body239:                                       ; preds = %do.body239, %if.else235.split.split
  %out.6 = phi i8* [ %out.6.unr, %if.else235.split.split ], [ %incdec.ptr245.1, %do.body239 ]
  %len.2 = phi i32 [ %len.2.unr, %if.else235.split.split ], [ %sub246.1, %do.body239 ]
  %from.5 = phi i8* [ %from.5.unr, %if.else235.split.split ], [ %incdec.ptr244.1, %do.body239 ]
  %incdec.ptr240 = getelementptr inbounds i8* %from.5, i64 1
  %206 = load i8* %incdec.ptr240, align 1, !tbaa !5
  %incdec.ptr241 = getelementptr inbounds i8* %out.6, i64 1
  store i8 %206, i8* %incdec.ptr241, align 1, !tbaa !5
  %incdec.ptr242 = getelementptr inbounds i8* %from.5, i64 2
  %207 = load i8* %incdec.ptr242, align 1, !tbaa !5
  %incdec.ptr243 = getelementptr inbounds i8* %out.6, i64 2
  store i8 %207, i8* %incdec.ptr243, align 1, !tbaa !5
  %incdec.ptr244 = getelementptr inbounds i8* %from.5, i64 3
  %208 = load i8* %incdec.ptr244, align 1, !tbaa !5
  %incdec.ptr245 = getelementptr inbounds i8* %out.6, i64 3
  store i8 %208, i8* %incdec.ptr245, align 1, !tbaa !5
  %sub246 = add i32 %len.2, -3
  %incdec.ptr240.1 = getelementptr inbounds i8* %incdec.ptr244, i64 1
  %209 = load i8* %incdec.ptr240.1, align 1, !tbaa !5
  %incdec.ptr241.1 = getelementptr inbounds i8* %incdec.ptr245, i64 1
  store i8 %209, i8* %incdec.ptr241.1, align 1, !tbaa !5
  %incdec.ptr242.1 = getelementptr inbounds i8* %incdec.ptr244, i64 2
  %210 = load i8* %incdec.ptr242.1, align 1, !tbaa !5
  %incdec.ptr243.1 = getelementptr inbounds i8* %incdec.ptr245, i64 2
  store i8 %210, i8* %incdec.ptr243.1, align 1, !tbaa !5
  %incdec.ptr244.1 = getelementptr inbounds i8* %incdec.ptr244, i64 3
  %211 = load i8* %incdec.ptr244.1, align 1, !tbaa !5
  %incdec.ptr245.1 = getelementptr inbounds i8* %incdec.ptr245, i64 3
  store i8 %211, i8* %incdec.ptr245.1, align 1, !tbaa !5
  %sub246.1 = add i32 %sub246, -3
  %cmp248.1 = icmp ugt i32 %sub246.1, 2
  br i1 %cmp248.1, label %do.body239, label %do.end250.unr-lcssa

do.end250.unr-lcssa:                              ; preds = %do.body239
  br label %do.end250

do.end250:                                        ; preds = %do.end250.unr-lcssa, %if.else235.split
  %scevgep.sum = add nuw nsw i64 %195, 3
  %scevgep685 = getelementptr i8* %out.0, i64 %scevgep.sum
  %tobool251 = icmp eq i32 %193, 0
  br i1 %tobool251, label %do.cond303, label %if.then252

if.then252:                                       ; preds = %do.end250
  %scevgep686.sum = add nsw i64 %196, 4
  %incdec.ptr253 = getelementptr inbounds i8* %out.0, i64 %scevgep686.sum
  %212 = load i8* %incdec.ptr253, align 1, !tbaa !5
  %scevgep687.sum = add nuw nsw i64 %195, 4
  %incdec.ptr254 = getelementptr inbounds i8* %out.0, i64 %scevgep687.sum
  store i8 %212, i8* %incdec.ptr254, align 1, !tbaa !5
  %cmp255 = icmp ugt i32 %193, 1
  br i1 %cmp255, label %if.then257, label %do.cond303

if.then257:                                       ; preds = %if.then252
  %scevgep686.sum704 = add nsw i64 %196, 5
  %incdec.ptr258 = getelementptr inbounds i8* %out.0, i64 %scevgep686.sum704
  %213 = load i8* %incdec.ptr258, align 1, !tbaa !5
  %scevgep687.sum705 = add nuw nsw i64 %195, 5
  %incdec.ptr259 = getelementptr inbounds i8* %out.0, i64 %scevgep687.sum705
  store i8 %213, i8* %incdec.ptr259, align 1, !tbaa !5
  br label %do.cond303

if.else263:                                       ; preds = %if.then267, %if.else263.preheader
  %conv91649 = phi i32 [ %conv91, %if.then267 ], [ %conv91643, %if.else263.preheader ]
  %sub89648 = phi i32 [ %sub89, %if.then267 ], [ %sub89642, %if.else263.preheader ]
  %shr88647 = phi i64 [ %shr88, %if.then267 ], [ %shr88641, %if.else263.preheader ]
  %here.sroa.8.1646 = phi i16 [ %here.sroa.8.1, %if.then267 ], [ %here.sroa.8.1638, %if.else263.preheader ]
  %and264 = and i32 %conv91649, 64
  %cmp265 = icmp eq i32 %and264, 0
  br i1 %cmp265, label %if.then267, label %if.else276

if.then267:                                       ; preds = %if.else263
  %conv269 = zext i16 %here.sroa.8.1646 to i64
  %shl270 = shl i32 1, %conv91649
  %sub271 = add i32 %shl270, -1
  %conv272 = zext i32 %sub271 to i64
  %and273 = and i64 %conv272, %shr88647
  %add274 = add nuw nsw i64 %and273, %conv269
  %here.sroa.0.1.in = getelementptr inbounds %struct.code* %13, i64 %add274, i32 0
  %here.sroa.6.1.in = getelementptr inbounds %struct.code* %13, i64 %add274, i32 1
  %here.sroa.8.1.in = getelementptr inbounds %struct.code* %13, i64 %add274, i32 2
  %here.sroa.0.1 = load i8* %here.sroa.0.1.in, align 2
  %here.sroa.6.1 = load i8* %here.sroa.6.1.in, align 1
  %here.sroa.8.1 = load i16* %here.sroa.8.1.in, align 2
  %conv86 = zext i8 %here.sroa.6.1 to i32
  %sh_prom87 = zext i8 %here.sroa.6.1 to i64
  %shr88 = lshr i64 %shr88647, %sh_prom87
  %sub89 = sub i32 %sub89648, %conv86
  %conv91 = zext i8 %here.sroa.0.1 to i32
  %and92 = and i32 %conv91, 16
  %tobool93 = icmp eq i32 %and92, 0
  br i1 %tobool93, label %if.else263, label %if.then94.loopexit

if.else276:                                       ; preds = %if.else263
  %in.4.lcssa = phi i8* [ %in.4, %if.else263 ]
  %out.0.lcssa = phi i8* [ %out.0, %if.else263 ]
  %shr88647.lcssa = phi i64 [ %shr88647, %if.else263 ]
  %sub89648.lcssa = phi i32 [ %sub89648, %if.else263 ]
  %msg277 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 6
  store i8* getelementptr inbounds ([22 x i8]* @.str1116, i64 0, i64 0), i8** %msg277, align 8, !tbaa !38
  %mode278 = bitcast %struct.internal_state* %0 to i32*
  store i32 29, i32* %mode278, align 4, !tbaa !126
  br label %do.end308

if.else280:                                       ; preds = %if.else
  %and281 = and i32 %conv34630, 64
  %cmp282 = icmp eq i32 %and281, 0
  br i1 %cmp282, label %if.then284, label %if.else293

if.then284:                                       ; preds = %if.else280
  %conv286 = zext i16 %here.sroa.8.0627 to i64
  %shl287 = shl i32 1, %conv34630
  %sub288 = add i32 %shl287, -1
  %conv289 = zext i32 %sub288 to i64
  %and290 = and i64 %conv289, %shr628
  %add291 = add nuw nsw i64 %and290, %conv286
  %here.sroa.0.0.in = getelementptr inbounds %struct.code* %12, i64 %add291, i32 0
  %here.sroa.6.0.in = getelementptr inbounds %struct.code* %12, i64 %add291, i32 1
  %here.sroa.8.0.in = getelementptr inbounds %struct.code* %12, i64 %add291, i32 2
  %here.sroa.0.0 = load i8* %here.sroa.0.0.in, align 2
  %here.sroa.6.0 = load i8* %here.sroa.6.0.in, align 1
  %here.sroa.8.0 = load i16* %here.sroa.8.0.in, align 2
  %conv30 = zext i8 %here.sroa.6.0 to i32
  %sh_prom31 = zext i8 %here.sroa.6.0 to i64
  %shr = lshr i64 %shr628, %sh_prom31
  %sub32 = sub i32 %sub32629, %conv30
  %cmp35 = icmp eq i8 %here.sroa.0.0, 0
  br i1 %cmp35, label %if.then37.loopexit, label %if.else

if.else293:                                       ; preds = %if.else280
  %in.1.lcssa1769 = phi i8* [ %in.1, %if.else280 ]
  %out.0.lcssa1766 = phi i8* [ %out.0, %if.else280 ]
  %conv34630.lcssa1754 = phi i32 [ %conv34630, %if.else280 ]
  %shr628.lcssa1750 = phi i64 [ %shr628, %if.else280 ]
  %sub32629.lcssa1748 = phi i32 [ %sub32629, %if.else280 ]
  %and294 = and i32 %conv34630.lcssa1754, 32
  %tobool295 = icmp eq i32 %and294, 0
  br i1 %tobool295, label %if.else298, label %if.then296

if.then296:                                       ; preds = %if.else293
  %mode297 = bitcast %struct.internal_state* %0 to i32*
  store i32 11, i32* %mode297, align 4, !tbaa !126
  br label %do.end308

if.else298:                                       ; preds = %if.else293
  %msg299 = getelementptr inbounds %struct.z_stream_s* %strm, i64 0, i32 6
  store i8* getelementptr inbounds ([28 x i8]* @.str2117, i64 0, i64 0), i8** %msg299, align 8, !tbaa !38
  %mode300 = bitcast %struct.internal_state* %0 to i32*
  store i32 29, i32* %mode300, align 4, !tbaa !126
  br label %do.end308

do.cond303:                                       ; preds = %if.then257, %if.then252, %do.end250, %if.then230, %if.then225, %while.end, %if.then37
  %bits.8 = phi i32 [ %sub32.lcssa, %if.then37 ], [ %sub125, %if.then230 ], [ %sub125, %if.then225 ], [ %sub125, %while.end ], [ %sub125, %if.then257 ], [ %sub125, %if.then252 ], [ %sub125, %do.end250 ]
  %hold.8 = phi i64 [ %shr.lcssa, %if.then37 ], [ %shr124, %if.then230 ], [ %shr124, %if.then225 ], [ %shr124, %while.end ], [ %shr124, %if.then257 ], [ %shr124, %if.then252 ], [ %shr124, %do.end250 ]
  %out.7 = phi i8* [ %incdec.ptr39, %if.then37 ], [ %incdec.ptr232, %if.then230 ], [ %incdec.ptr227, %if.then225 ], [ %out.5.lcssa, %while.end ], [ %incdec.ptr259, %if.then257 ], [ %incdec.ptr254, %if.then252 ], [ %scevgep685, %do.end250 ]
  %in.6 = phi i8* [ %in.1, %if.then37 ], [ %in.5, %if.then230 ], [ %in.5, %if.then225 ], [ %in.5, %while.end ], [ %in.5, %if.then257 ], [ %in.5, %if.then252 ], [ %in.5, %do.end250 ]
  %cmp304 = icmp ult i8* %in.6, %add.ptr2
  %cmp306 = icmp ult i8* %out.7, %add.ptr10
  %or.cond = and i1 %cmp304, %cmp306
  br i1 %or.cond, label %do.body, label %do.end308.loopexit

do.end308.loopexit:                               ; preds = %do.cond303
  %in.6.lcssa = phi i8* [ %in.6, %do.cond303 ]
  %out.7.lcssa = phi i8* [ %out.7, %do.cond303 ]
  %hold.8.lcssa = phi i64 [ %hold.8, %do.cond303 ]
  %bits.8.lcssa = phi i32 [ %bits.8, %do.cond303 ]
  br label %do.end308

do.end308:                                        ; preds = %do.end308.loopexit, %if.else298, %if.then296, %if.else276, %if.then135
  %bits.9 = phi i32 [ %sub125.lcssa, %if.then135 ], [ %sub89648.lcssa, %if.else276 ], [ %sub32629.lcssa1748, %if.then296 ], [ %sub32629.lcssa1748, %if.else298 ], [ %bits.8.lcssa, %do.end308.loopexit ]
  %hold.9 = phi i64 [ %shr124.lcssa, %if.then135 ], [ %shr88647.lcssa, %if.else276 ], [ %shr628.lcssa1750, %if.then296 ], [ %shr628.lcssa1750, %if.else298 ], [ %hold.8.lcssa, %do.end308.loopexit ]
  %out.8 = phi i8* [ %out.0.lcssa1765, %if.then135 ], [ %out.0.lcssa, %if.else276 ], [ %out.0.lcssa1766, %if.then296 ], [ %out.0.lcssa1766, %if.else298 ], [ %out.7.lcssa, %do.end308.loopexit ]
  %in.7 = phi i8* [ %in.5.lcssa, %if.then135 ], [ %in.4.lcssa, %if.else276 ], [ %in.1.lcssa1769, %if.then296 ], [ %in.1.lcssa1769, %if.else298 ], [ %in.6.lcssa, %do.end308.loopexit ]
  %shr309 = lshr i32 %bits.9, 3
  %idx.ext310 = zext i32 %shr309 to i64
  %idx.neg311 = sub i64 0, %idx.ext310
  %add.ptr312 = getelementptr inbounds i8* %in.7, i64 %idx.neg311
  %shl313 = shl nuw i32 %shr309, 3
  %sub314 = sub i32 %bits.9, %shl313
  %shl315 = shl i32 1, %sub314
  %sub316 = add i32 %shl315, -1
  %conv317 = zext i32 %sub316 to i64
  %and318 = and i64 %conv317, %hold.9
  %add.ptr312.sum = sub i64 1, %idx.ext310
  %add.ptr319 = getelementptr inbounds i8* %in.7, i64 %add.ptr312.sum
  store i8* %add.ptr319, i8** %next_in, align 8, !tbaa !37
  %add.ptr321 = getelementptr inbounds i8* %out.8, i64 1
  store i8* %add.ptr321, i8** %next_out, align 8, !tbaa !34
  %cmp323 = icmp ult i8* %add.ptr312, %add.ptr2
  br i1 %cmp323, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end308
  %sub.ptr.lhs.cast325 = ptrtoint i8* %add.ptr2 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i8* %add.ptr312 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  br label %cond.end

cond.false:                                       ; preds = %do.end308
  %sub.ptr.lhs.cast329 = ptrtoint i8* %add.ptr312 to i64
  %sub.ptr.rhs.cast330 = ptrtoint i8* %add.ptr2 to i64
  %sub.ptr.sub331588 = sub i64 %sub.ptr.rhs.cast330, %sub.ptr.lhs.cast329
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i64 [ %sub.ptr.sub327, %cond.true ], [ %sub.ptr.sub331588, %cond.false ]
  %cond = add i64 %cond.in, 5
  %conv333 = trunc i64 %cond to i32
  store i32 %conv333, i32* %avail_in, align 4, !tbaa !32
  %cmp335 = icmp ult i8* %out.8, %add.ptr10
  br i1 %cmp335, label %cond.true337, label %cond.false342

cond.true337:                                     ; preds = %cond.end
  %sub.ptr.lhs.cast338 = ptrtoint i8* %add.ptr10 to i64
  %sub.ptr.rhs.cast339 = ptrtoint i8* %out.8 to i64
  %sub.ptr.sub340 = sub i64 %sub.ptr.lhs.cast338, %sub.ptr.rhs.cast339
  br label %cond.end347

cond.false342:                                    ; preds = %cond.end
  %sub.ptr.lhs.cast343 = ptrtoint i8* %out.8 to i64
  %sub.ptr.rhs.cast344 = ptrtoint i8* %add.ptr10 to i64
  %sub.ptr.sub345589 = sub i64 %sub.ptr.rhs.cast344, %sub.ptr.lhs.cast343
  br label %cond.end347

cond.end347:                                      ; preds = %cond.false342, %cond.true337
  %cond348.in = phi i64 [ %sub.ptr.sub340, %cond.true337 ], [ %sub.ptr.sub345589, %cond.false342 ]
  %cond348 = add i64 %cond348.in, 257
  %conv349 = trunc i64 %cond348 to i32
  store i32 %conv349, i32* %avail_out, align 4, !tbaa !33
  store i64 %and318, i64* %hold15, align 8, !tbaa !131
  store i32 %sub314, i32* %bits16, align 4, !tbaa !132
  ret void
}

attributes #0 = { noreturn nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind readnone }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"clang version 3.5.2 (branches/release_35 229013) (llvm/branches/release_35 229009)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !3, metadata !3, i64 0}
!6 = metadata !{metadata !7, metadata !9, i64 24}
!7 = metadata !{metadata !"", metadata !8, i64 0, metadata !9, i64 24, metadata !9, i64 28, metadata !2, i64 32, metadata !9, i64 40, metadata !9, i64 44, metadata !2, i64 48, metadata !2, i64 56, metadata !9, i64 64, metadata !9, i64 68, metadata !10, i64 72, metadata !9, i64 80, metadata !9, i64 84, metadata !9, i64 88, metadata !9, i64 92, metadata !10, i64 96, metadata !9, i64 104, metadata !9, i64 108, metadata !2, i64 112, metadata !11, i64 120}
!8 = metadata !{metadata !"gzFile_s", metadata !9, i64 0, metadata !2, i64 8, metadata !10, i64 16}
!9 = metadata !{metadata !"int", metadata !3, i64 0}
!10 = metadata !{metadata !"long", metadata !3, i64 0}
!11 = metadata !{metadata !"z_stream_s", metadata !2, i64 0, metadata !9, i64 8, metadata !10, i64 16, metadata !2, i64 24, metadata !9, i64 32, metadata !10, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !9, i64 88, metadata !10, i64 96, metadata !10, i64 104}
!12 = metadata !{metadata !7, metadata !9, i64 40}
!13 = metadata !{metadata !7, metadata !9, i64 44}
!14 = metadata !{metadata !7, metadata !9, i64 108}
!15 = metadata !{metadata !7, metadata !9, i64 28}
!16 = metadata !{metadata !7, metadata !10, i64 72}
!17 = metadata !{metadata !7, metadata !9, i64 0}
!18 = metadata !{metadata !7, metadata !9, i64 80}
!19 = metadata !{metadata !7, metadata !9, i64 84}
!20 = metadata !{metadata !7, metadata !9, i64 68}
!21 = metadata !{metadata !7, metadata !9, i64 104}
!22 = metadata !{metadata !7, metadata !2, i64 112}
!23 = metadata !{metadata !7, metadata !10, i64 16}
!24 = metadata !{metadata !7, metadata !9, i64 128}
!25 = metadata !{metadata !7, metadata !10, i64 96}
!26 = metadata !{metadata !7, metadata !2, i64 8}
!27 = metadata !{metadata !7, metadata !2, i64 32}
!28 = metadata !{metadata !9, metadata !9, i64 0}
!29 = metadata !{metadata !7, metadata !9, i64 88}
!30 = metadata !{metadata !7, metadata !9, i64 92}
!31 = metadata !{metadata !7, metadata !9, i64 64}
!32 = metadata !{metadata !11, metadata !9, i64 8}
!33 = metadata !{metadata !11, metadata !9, i64 32}
!34 = metadata !{metadata !11, metadata !2, i64 24}
!35 = metadata !{metadata !7, metadata !2, i64 56}
!36 = metadata !{metadata !7, metadata !2, i64 48}
!37 = metadata !{metadata !11, metadata !2, i64 0}
!38 = metadata !{metadata !11, metadata !2, i64 48}
!39 = metadata !{metadata !7, metadata !2, i64 120}
!40 = metadata !{metadata !40, metadata !41, metadata !42}
!41 = metadata !{metadata !"llvm.loop.vectorize.width", i32 1}
!42 = metadata !{metadata !"llvm.loop.interleave.count", i32 1}
!43 = metadata !{metadata !43, metadata !41, metadata !42}
!44 = metadata !{metadata !11, metadata !2, i64 64}
!45 = metadata !{metadata !11, metadata !2, i64 80}
!46 = metadata !{metadata !11, metadata !2, i64 72}
!47 = metadata !{metadata !11, metadata !2, i64 56}
!48 = metadata !{metadata !49, metadata !2, i64 0}
!49 = metadata !{metadata !"internal_state", metadata !2, i64 0, metadata !9, i64 8, metadata !2, i64 16, metadata !10, i64 24, metadata !2, i64 32, metadata !9, i64 40, metadata !9, i64 44, metadata !2, i64 48, metadata !9, i64 56, metadata !3, i64 60, metadata !9, i64 64, metadata !9, i64 68, metadata !9, i64 72, metadata !9, i64 76, metadata !2, i64 80, metadata !10, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !9, i64 112, metadata !9, i64 116, metadata !9, i64 120, metadata !9, i64 124, metadata !9, i64 128, metadata !10, i64 136, metadata !9, i64 144, metadata !9, i64 148, metadata !9, i64 152, metadata !9, i64 156, metadata !9, i64 160, metadata !9, i64 164, metadata !9, i64 168, metadata !9, i64 172, metadata !9, i64 176, metadata !9, i64 180, metadata !9, i64 184, metadata !9, i64 188, metadata !9, i64 192, metadata !3, i64 196, metadata !3, i64 2488, metadata !3, i64 2732, metadata !50, i64 2888, metadata !50, i64 2912, metadata !50, i64 2936, metadata !3, i64 2960, metadata !3, i64 2992, metadata !9, i64 5284, metadata !9, i64 5288, metadata !3, i64 5292, metadata !2, i64 5872, metadata !9, i64 5880, metadata !9, i64 5884, metadata !2, i64 5888, metadata !10, i64 5896, metadata !10, i64 5904, metadata !9, i64 5912, metadata !9, i64 5916, metadata !51, i64 5920, metadata !9, i64 5924, metadata !10, i64 5928}
!50 = metadata !{metadata !"tree_desc_s", metadata !2, i64 0, metadata !9, i64 8, metadata !2, i64 16}
!51 = metadata !{metadata !"short", metadata !3, i64 0}
!52 = metadata !{metadata !49, metadata !9, i64 44}
!53 = metadata !{metadata !49, metadata !2, i64 48}
!54 = metadata !{metadata !49, metadata !9, i64 72}
!55 = metadata !{metadata !49, metadata !9, i64 68}
!56 = metadata !{metadata !49, metadata !9, i64 76}
!57 = metadata !{metadata !49, metadata !9, i64 120}
!58 = metadata !{metadata !49, metadata !9, i64 116}
!59 = metadata !{metadata !49, metadata !9, i64 124}
!60 = metadata !{metadata !49, metadata !9, i64 128}
!61 = metadata !{metadata !49, metadata !2, i64 80}
!62 = metadata !{metadata !49, metadata !2, i64 96}
!63 = metadata !{metadata !49, metadata !2, i64 104}
!64 = metadata !{metadata !49, metadata !10, i64 5928}
!65 = metadata !{metadata !49, metadata !9, i64 5880}
!66 = metadata !{metadata !49, metadata !2, i64 16}
!67 = metadata !{metadata !49, metadata !10, i64 24}
!68 = metadata !{metadata !49, metadata !9, i64 8}
!69 = metadata !{metadata !49, metadata !2, i64 5888}
!70 = metadata !{metadata !49, metadata !2, i64 5872}
!71 = metadata !{metadata !49, metadata !9, i64 180}
!72 = metadata !{metadata !49, metadata !9, i64 184}
!73 = metadata !{metadata !49, metadata !3, i64 60}
!74 = metadata !{metadata !11, metadata !10, i64 16}
!75 = metadata !{metadata !11, metadata !9, i64 88}
!76 = metadata !{metadata !49, metadata !9, i64 40}
!77 = metadata !{metadata !49, metadata !2, i64 32}
!78 = metadata !{metadata !11, metadata !10, i64 96}
!79 = metadata !{metadata !49, metadata !9, i64 64}
!80 = metadata !{metadata !49, metadata !10, i64 88}
!81 = metadata !{metadata !51, metadata !51, i64 0}
!82 = metadata !{metadata !83, metadata !51, i64 2}
!83 = metadata !{metadata !"config_s", metadata !51, i64 0, metadata !51, i64 2, metadata !51, i64 4, metadata !51, i64 6, metadata !2, i64 8}
!84 = metadata !{metadata !49, metadata !9, i64 176}
!85 = metadata !{metadata !83, metadata !51, i64 0}
!86 = metadata !{metadata !49, metadata !9, i64 188}
!87 = metadata !{metadata !83, metadata !51, i64 4}
!88 = metadata !{metadata !49, metadata !9, i64 192}
!89 = metadata !{metadata !83, metadata !51, i64 6}
!90 = metadata !{metadata !49, metadata !9, i64 172}
!91 = metadata !{metadata !49, metadata !9, i64 156}
!92 = metadata !{metadata !49, metadata !10, i64 136}
!93 = metadata !{metadata !49, metadata !9, i64 164}
!94 = metadata !{metadata !49, metadata !9, i64 5916}
!95 = metadata !{metadata !49, metadata !9, i64 168}
!96 = metadata !{metadata !49, metadata !9, i64 144}
!97 = metadata !{metadata !49, metadata !9, i64 152}
!98 = metadata !{metadata !49, metadata !9, i64 112}
!99 = metadata !{metadata !49, metadata !9, i64 5924}
!100 = metadata !{metadata !49, metadata !51, i64 5920}
!101 = metadata !{metadata !83, metadata !2, i64 8}
!102 = metadata !{metadata !103, metadata !9, i64 0}
!103 = metadata !{metadata !"gz_header_s", metadata !9, i64 0, metadata !10, i64 8, metadata !9, i64 16, metadata !9, i64 20, metadata !2, i64 24, metadata !9, i64 32, metadata !9, i64 36, metadata !2, i64 40, metadata !9, i64 48, metadata !2, i64 56, metadata !9, i64 64, metadata !9, i64 68, metadata !9, i64 72}
!104 = metadata !{metadata !103, metadata !9, i64 68}
!105 = metadata !{metadata !103, metadata !2, i64 24}
!106 = metadata !{metadata !103, metadata !2, i64 40}
!107 = metadata !{metadata !103, metadata !2, i64 56}
!108 = metadata !{metadata !103, metadata !10, i64 8}
!109 = metadata !{metadata !103, metadata !9, i64 20}
!110 = metadata !{metadata !103, metadata !9, i64 32}
!111 = metadata !{metadata !49, metadata !9, i64 56}
!112 = metadata !{metadata !11, metadata !10, i64 40}
!113 = metadata !{metadata !49, metadata !9, i64 5884}
!114 = metadata !{metadata !49, metadata !2, i64 2888}
!115 = metadata !{metadata !49, metadata !2, i64 2912}
!116 = metadata !{metadata !49, metadata !2, i64 2936}
!117 = metadata !{metadata !49, metadata !9, i64 160}
!118 = metadata !{metadata !118, metadata !41, metadata !42}
!119 = metadata !{metadata !119, metadata !41, metadata !42}
!120 = metadata !{metadata !120, metadata !41, metadata !42}
!121 = metadata !{metadata !121, metadata !41, metadata !42}
!122 = metadata !{metadata !49, metadata !9, i64 148}
!123 = metadata !{metadata !124, metadata !10, i64 32}
!124 = metadata !{metadata !"inflate_state", metadata !3, i64 0, metadata !9, i64 4, metadata !9, i64 8, metadata !9, i64 12, metadata !9, i64 16, metadata !9, i64 20, metadata !10, i64 24, metadata !10, i64 32, metadata !2, i64 40, metadata !9, i64 48, metadata !9, i64 52, metadata !9, i64 56, metadata !9, i64 60, metadata !2, i64 64, metadata !10, i64 72, metadata !9, i64 80, metadata !9, i64 84, metadata !9, i64 88, metadata !9, i64 92, metadata !2, i64 96, metadata !2, i64 104, metadata !9, i64 112, metadata !9, i64 116, metadata !9, i64 120, metadata !9, i64 124, metadata !9, i64 128, metadata !9, i64 132, metadata !2, i64 136, metadata !3, i64 144, metadata !3, i64 784, metadata !3, i64 1360, metadata !9, i64 7136, metadata !9, i64 7140, metadata !9, i64 7144}
!125 = metadata !{metadata !124, metadata !9, i64 8}
!126 = metadata !{metadata !124, metadata !3, i64 0}
!127 = metadata !{metadata !124, metadata !9, i64 4}
!128 = metadata !{metadata !124, metadata !9, i64 12}
!129 = metadata !{metadata !124, metadata !9, i64 20}
!130 = metadata !{metadata !124, metadata !2, i64 40}
!131 = metadata !{metadata !124, metadata !10, i64 72}
!132 = metadata !{metadata !124, metadata !9, i64 80}
!133 = metadata !{metadata !124, metadata !2, i64 136}
!134 = metadata !{metadata !124, metadata !2, i64 104}
!135 = metadata !{metadata !124, metadata !2, i64 96}
!136 = metadata !{metadata !124, metadata !9, i64 7136}
!137 = metadata !{metadata !124, metadata !9, i64 7140}
!138 = metadata !{metadata !124, metadata !9, i64 52}
!139 = metadata !{metadata !124, metadata !9, i64 56}
!140 = metadata !{metadata !124, metadata !9, i64 60}
!141 = metadata !{metadata !124, metadata !2, i64 64}
!142 = metadata !{metadata !124, metadata !9, i64 48}
!143 = metadata !{metadata !124, metadata !9, i64 92}
!144 = metadata !{metadata !124, metadata !9, i64 132}
!145 = metadata !{metadata !124, metadata !10, i64 24}
!146 = metadata !{metadata !124, metadata !9, i64 16}
!147 = metadata !{metadata !103, metadata !9, i64 72}
!148 = metadata !{metadata !103, metadata !9, i64 16}
!149 = metadata !{metadata !124, metadata !9, i64 84}
!150 = metadata !{metadata !103, metadata !9, i64 36}
!151 = metadata !{metadata !103, metadata !9, i64 48}
!152 = metadata !{metadata !103, metadata !9, i64 64}
!153 = metadata !{metadata !124, metadata !9, i64 112}
!154 = metadata !{metadata !124, metadata !9, i64 116}
!155 = metadata !{metadata !124, metadata !9, i64 124}
!156 = metadata !{metadata !124, metadata !9, i64 128}
!157 = metadata !{metadata !124, metadata !9, i64 120}
!158 = metadata !{metadata !124, metadata !9, i64 7144}
!159 = metadata !{metadata !124, metadata !9, i64 88}
!160 = metadata !{metadata !160, metadata !41, metadata !42}
!161 = metadata !{metadata !161, metadata !41, metadata !42}
!162 = metadata !{metadata !163, metadata !3, i64 0}
!163 = metadata !{metadata !"", metadata !3, i64 0, metadata !3, i64 1, metadata !51, i64 2}
!164 = metadata !{metadata !163, metadata !3, i64 1}
!165 = metadata !{metadata !163, metadata !51, i64 2}
!166 = metadata !{metadata !49, metadata !2, i64 2904}
!167 = metadata !{metadata !49, metadata !2, i64 2928}
!168 = metadata !{metadata !49, metadata !2, i64 2952}
!169 = metadata !{metadata !49, metadata !9, i64 2896}
!170 = metadata !{metadata !49, metadata !9, i64 2920}
!171 = metadata !{metadata !49, metadata !10, i64 5896}
!172 = metadata !{metadata !49, metadata !10, i64 5904}
!173 = metadata !{metadata !49, metadata !9, i64 5912}
!174 = metadata !{metadata !174, metadata !41, metadata !42}
!175 = metadata !{metadata !50, metadata !2, i64 0}
!176 = metadata !{metadata !50, metadata !2, i64 16}
!177 = metadata !{metadata !178, metadata !2, i64 0}
!178 = metadata !{metadata !"static_tree_desc_s", metadata !2, i64 0, metadata !2, i64 8, metadata !9, i64 16, metadata !9, i64 20, metadata !9, i64 24}
!179 = metadata !{metadata !178, metadata !9, i64 20}
!180 = metadata !{metadata !49, metadata !9, i64 5284}
!181 = metadata !{metadata !49, metadata !9, i64 5288}
!182 = metadata !{metadata !50, metadata !9, i64 8}
!183 = metadata !{metadata !178, metadata !2, i64 8}
!184 = metadata !{metadata !178, metadata !9, i64 16}
!185 = metadata !{metadata !178, metadata !9, i64 24}
!186 = metadata !{metadata !10, metadata !10, i64 0}
!187 = metadata !{metadata !187, metadata !41, metadata !42}
!188 = metadata !{metadata !188, metadata !41, metadata !42}
!189 = metadata !{metadata !189, metadata !41, metadata !42}
!190 = metadata !{metadata !190, metadata !41, metadata !42}
!191 = metadata !{metadata !191, metadata !41, metadata !42}
!192 = metadata !{metadata !192, metadata !41, metadata !42}
